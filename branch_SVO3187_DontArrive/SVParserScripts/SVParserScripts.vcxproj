<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{F9C47D53-F085-4218-8A2D-A6D6F2FC02E3}</ProjectGuid>
    <RootNamespace>SVParserScripts</RootNamespace>
    <Keyword>MakeFileProj</Keyword>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>NotSet</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>NotSet</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\SVOGlobalProperties.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\SVOGlobalProperties.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.40219.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)$(Configuration)\$(Platform)\bin\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)$(Configuration)\$(Platform)\bin\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <Midl>
      <TypeLibraryName>.\../SVParserScripts.tlb</TypeLibraryName>
      <HeaderFileName>
      </HeaderFileName>
    </Midl>
    <ClCompile>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <Midl>
      <TypeLibraryName>.\../SVParserScripts.tlb</TypeLibraryName>
      <HeaderFileName>
      </HeaderFileName>
    </Midl>
    <ClCompile>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="FlexLexer.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="readme.txt" />
    <CustomBuild Include="SVEquation.lex">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">echo flex SVEquation.lex
flex -oflex.cc SVEquation.lex
move flex.cc "$(IntDir)"
echo Using ssed to comment out invalid istream definition and remove register variables
ssed -e "s/class istream%3b/\/\/class istream%3b/" -e "s/register //" "$(IntDir)flex.cc" &gt; "$(IntDir)lex.yy.cc"
call CopyIfDifferent.bat "$(IntDir)lex.yy.cc" lex.yy.cc      </Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)lex.yy.cc;%(Outputs)</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">echo flex SVEquation.lex
flex -oflex.cc SVEquation.lex
move flex.cc "$(IntDir)"
echo Using ssed to comment out invalid istream definition and remove register variables
ssed -e "s/class istream%3b/\/\/class istream%3b/" -e "s/register //" "$(IntDir)flex.cc" &gt; "$(IntDir)lex.yy.cc"
call CopyIfDifferent.bat "$(IntDir)lex.yy.cc" lex.yy.cc      </Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)lex.yy.cc;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="SVEquation.y">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">echo Create tmp If Missing
if not exist \tmp mkdir \tmp
echo byacc -dv SVEquation.y
byacc -dv -bt SVEquation.y
move t.tab.h "$(IntDir)"
move t.tab.c "$(IntDir)"
move t.output "$(IntDir)"
call CopyIfDifferent.bat "$(IntDir)t.tab.h" y.tab.h
call CopyIfDifferent.bat "$(IntDir)t.tab.c" y.tab.c
call CopyIfDifferent.bat "$(IntDir)t.output" y.output</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(IntDir)t.tab.h;$(IntDir)t.tab.c;$(IntDir)t.output;%(Outputs)</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">echo Create tmp If Missing
if not exist \tmp mkdir \tmp
echo byacc -dv SVEquation.y
byacc -dv -bt SVEquation.y
move t.tab.h "$(IntDir)"
move t.tab.c "$(IntDir)"
move t.output "$(IntDir)"
call CopyIfDifferent.bat "$(IntDir)t.tab.h" y.tab.h
call CopyIfDifferent.bat "$(IntDir)t.tab.c" y.tab.c
call CopyIfDifferent.bat "$(IntDir)t.output" y.output</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(IntDir)t.tab.h;$(IntDir)t.tab.c;$(IntDir)t.output;%(Outputs)</Outputs>
    </CustomBuild>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>