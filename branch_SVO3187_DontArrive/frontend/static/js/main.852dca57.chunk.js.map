{"version":3,"sources":["protobuf/Observable.js","protobuf/Protobuf.js","assets/icons/edit.svg","components/MenuList/index.js","utils/env.js","assets/icons/close.svg","assets/icons/clear.svg","views/HelpView/index.js","components/typo/Heading.js","views/HelpView/viewMappings.js","utils/permissions.js","utils/authentication.js","utils/downloader.js","assets/icons/play.svg","assets/icons/pause.svg","protobuf/Configuration.js","assets/icons/show.svg","assets/icons/info.svg","assets/icons/help.svg","assets/icons/save.svg","assets/icons/plus.svg","components/OutlinedSelection/index.js","utils/jsonMapper.js","protobuf/Product.js","components/OutsideClickHandler/index.js","components/layout/Logo/index.js","assets/logo/logo.svg","protobuf/Mapper.js","assets/icons/overlay-list.svg","components/Protobuf/ProxyType.js","components/ObjectSelector/index.js","views/ListView/components/List/AliasEditor.js","assets/icons/drag.svg","components/DraggableTable/index.js","assets/icons/show-off.svg","views/ListView/index.js","assets/icons/one.svg","assets/icons/download.svg","assets/icons/fit-to-width.svg","assets/icons/fit-to-height.svg","assets/icons/downloadWithOverlays.svg","views/ImageView/components/ImageInfo.js","utils/propHelper.js","utils/OverlayRenderer.js","views/ImageView/components/ImageEditor.js","utils/reduxHelper.js","components/OverlayList/index.js","views/ImageView/index.js","assets/icons/before.svg","components/layout/ScrollContainer/index.js","views/RecipeView/index.js","assets/icons/take-over.svg","assets/icons/delete-dustbin.svg","assets/icons/down.svg","assets/icons/up.svg","views/ParameterView/components/Filter/index.js","views/ParameterView/components/Filter/types/AvailableFilterListType.js","views/ToolsetView/components/ToolSetup.js","views/ToolsetView/components/TreebeardStyle.js","views/ToolsetView/index.js","views/ParameterView/components/Overlay/OverlayPropertyList.js","views/ParameterView/components/Overlay/VariableSelection.js","views/ParameterView/components/Overlay/index.js","components/layout/Container/index.js","views/ParameterView/index.js","views/ImageStripView/components/FilmStrip/index.js","views/ImageStripView/index.js","views/ViewSetFactory.js","assets/icons/run.svg","assets/icons/stop.svg","assets/icons/test.svg","assets/icons/regression.svg","utils/modes.js","components/buttons/ToggleButton/index.js","components/ActionBar/index.js","protobuf/ProtobufConnector.js","protobuf/WebsocketConnector.js","protobuf/Proxy.js","utils/defaultPermissions.js","utils/stringChunker.js","views/TopNavigation/components/UserInfo/index.js","assets/icons/user.svg","assets/icons/shortcut-help.svg","assets/icons/logout.svg","assets/icons/permissions.svg","views/AboutView/index.js","views/ShortcutView/shortcuts.js","views/ShortcutView/components/ShortcutListItem/index.js","views/ShortcutView/components/ShortcutList/index.js","views/ShortcutView/index.js","protobuf/ProductHistory.js","protobuf/ProductHistoryManager.js","protobuf/InspectionSubscription.js","protobuf/SubscriptionManager.js","types/ActionBarType.js","components/buttons/IconButton/index.js","components/Dialog/index.js","utils/localStorage.js","protobuf/Utils.js","utils/clientChunkManager.js","redux/actions/index.js","utils/objectValidator.js","utils/logger.js","assets/icons/back.svg","translations/de.js","translations/en.js","translations/index.js","redux/reducers/appReducer.js","redux/reducers/viewSetReducer.js","redux/reducers/toolsetReducer.js","redux/reducers/viewDataReducer.js","redux/reducers/index.js","pages/HmiLoginPage.js","pages/LogoutPage.js","views/ViewSet/types.js","components/ConfirmDialog/index.js","components/KeyHandler.js","components/ListSelection/index.js","views/ViewSelection/components/InspectionSelection/index.js","assets/icons/image.svg","assets/icons/parameter.svg","assets/icons/filmstrip.svg","assets/icons/list.svg","assets/icons/toolset.svg","views/ViewSelection/components/ViewTypeSelection/index.js","views/ViewSelection/index.js","views/NoSVOConfigurationLoadedView/index.js","views/ViewSet/SVOView.js","views/ViewSet/index.js","components/NavigationItem/index.js","views/TopNavigation/components/DateTime/index.js","views/TopNavigation/components/ModeSwitch/index.js","assets/icons/description.svg","views/TopNavigation/components/StatusReport/index.js","assets/icons/play-multiple.svg","views/TopNavigation/components/InspectionStateSwitch/index.js","assets/icons/language.svg","views/TopNavigation/components/LanguageChooser/index.js","views/TopNavigation/index.js","assets/icons/view-manager.svg","views/BottomNavigation/components/PresetSlider/components/PresetButton/index.js","views/BottomNavigation/components/PresetSlider/index.js","assets/icons/delete.svg","assets/icons/export.svg","assets/icons/import.svg","assets/icons/check.svg","components/InformationDialog/index.js","views/ViewSetManager/index.js","views/BottomNavigation/index.js","components/ModalNotification.js/index.js","components/Protobuf/ProtobufType.js","pages/SVObserver.js","components/PermissionManagement/index.js","pages/PermissionPage.js","components/RequestParameter/generic/SingleParameter/index.js","components/RequestParameter/specialized/TextParameter/index.js","components/RequestParameter/generic/ArrayParameter/index.js","components/RequestParameter/specialized/TextArrayParameter/index.js","components/RequestParameter/generic/SelectParameter/index.js","components/RequestParameter/specialized/BoolParameter/index.js","components/RequestParameter/specialized/BoolArrayParameter/index.js","components/RequestParameter/specialized/IntegerParameter/index.js","components/RequestParameter/specialized/IntegerArrayParameter/index.js","components/RequestParameter/specialized/DecimalParameter/index.js","components/RequestParameter/specialized/DecimalArrayParameter/index.js","components/RequestParameter/specialized/BytesParameter/index.js","components/RequestParameter/specialized/EnumParameter/index.js","components/RequestParameter/specialized/EnumArrayParameter/index.js","components/RequestParameter/index.js","components/RequestedResponseVisualizer/index.js","components/RequestsList/index.js","components/Debugger/index.js","pages/DebuggerPage.js","App.js","pages/LoginPage.js","PreLogin.js","theme.js","reportWebVitals.ts","index.tsx"],"names":["Observer","observable","this","closed","v","onNext","err","onError","onComplete","Observable","onSubscribe","_onSubscribe","_next","_error","_complete","desc","next","error","complete","observer","tearDownCb","unsubscribe","Protobuf","pendingRequests","Map","openStreams","socket","prevSocket","cancelAllPendingRequests","Error","data","a","SvPenv","Envelope","decode","Uint8Array","env","type","MessageType","response","errorResponse","streamResponse","streamErrorResponse","streamFinish","streamCancel","onResponse","onErrorResponse","onStreamResponse","onStreamErrorResponse","onStreamFinish","onStreamCancel","logger","txId","transactionId","hdl","get","res","unwrapResponse","delete","handled","clearTimeout","timeout","resolve","unwrapErrorResponse","onErrorResponseImpl","reject","keys","streamId","info","ackStreamResponse","req","Promise","nextTxId","wrapMessage","request","buf","serializeEnvelope","setTimeout","onRequestTimeout","bind","set","send","create","nextStreamId","streamRequest","cancelStream","params","fromObject","ackEnv","sequenceNumber","streamAck","message","wrapOneOf","envelope","payloadType","getPayloadTypeForOneOfMessage","payload","packToAny","unpackFromAny","unwrapOneOf","code","errorCode","fieldName","getFieldNameForSVRCMessage","SvPb","SVRCMessages","name","$type","substr","toLowerCase","fields","id","typeName","fullName","slice","encoded","encode","finish","type_url","value","any","slashIdx","indexOf","lookup","buffer","byteOffset","length","loadProto","SvAuth","initialized","path","namespace","ProtoJs","load","root","MenuList","state","openMenu","renderMenuItems","props","menuItems","onClose","classes","enabled","map","menuItem","disabled","onClick","closeMenu","className","caption","img","src","alt","key","handleClick","setState","buttonIcon","buttonCaption","tooltip","open","showBottomArrow","title","onOutsideClick","rootMenu","Component","defaultProps","withStyles","theme","overflow","backgroundColor","position","padding","cursor","display","justifyContent","borderBottom","color","palette","common","black","alignItems","fontSize","marginRight","maxWidth","authEndpoint","url","parsedUrl","parse","window","location","protocol","replace","host","getEndpoint","process","REACT_APP_WEBSOCKET_SERVER_URL","websocketServerUrl","getDefaultWebsocketUrl","enableAutoSave","HelpView","helpUrl","focusedViewType","locale","isFullscreen","style","width","height","connect","app","Heading","intlId","React","createElement","Views","PARAMETER_VIEW","LIST_VIEW","IMAGE_VIEW","PERMISSIONS","DEBUGGER","flattenProtobuf","oldObject","permissions","Set","flattenProtobufRec","currentObject","parentPath","nested","currKey","currPath","viewTypeProtobuf","i","Object","values","viewPath","getViewName","addFieldValues","forEach","field","add","flattenPermissionsRec","Array","isArray","entry","createObjectFromFlattenedPermissions","obj","k","shift","startsWith","getViewId","substring","view","index","findIndex","push","getGroupPermissionsFromFlattenedPermissions","flattenedPermissions","result","groupEntry","permissionForUser","groupPermissions","permission","split","viewType","canSaveConfig","myPermissions","has","canReadLogs","canReadViewSet","canEditViewSet","canDeleteViewSet","canAddImageView","canReadImageView","canEditImageView","canDeleteImageView","canAddListView","canReadListView","canEditListView","canDeleteListView","canAddImageStripView","canReadImageStripView","canEditImageStripView","canDeleteImageStripView","canAddParameterView","canReadParameterView","canEditParameterView","canDeleteParameterView","canAddToolSetView","canReadToolSetView","canEditToolSetView","canDeleteToolSetView","canReadSVOMode","canEditSVOMode","canReadInspectionState","canEditInspectionState","canReadUserManagement","canEditUserManagement","logIn","username","password","axios","post","loginRes","accessToken","authenticate","authRes","authToken","claims","jwtDecode","user","pick","logOut","notifyGateway","removeProxy","warn","forceDownload","fileName","link","document","download","href","body","appendChild","click","removeChild","extractConfigName","filename","lastIndexOf","dotIdx","getConfigName","protobuf","GetConfigurationInfoRequest","getListNames","listNames","monitorListReq","QueryMonitorListNamesRequest","monitorListRes","listNamesStr","names","item","strVal","getInspections","inspectionsReq","GetInspectionsRequest","inspectionsRes","inspections","inspection","getInspectionIds","getInspectionNames","getInspectionMappings","inspectionMappings","imageNames","valueNames","listItemReq","QueryListItemRequest","listName","queryValues","queryImages","ListType","all","listItemRes","imageDefList","image","valueDefList","inspectionImages","filter","inspectionValues","images","cleanObjectSelectorNodeRecursively","node","objectIDIndex","children","selected","cleanedChildren","str","endIdx","parseInt","parseObjectIdIndex","getIdNameMappingForInspection","inspectionId","inspectionName","GetObjectSelectorItemsRequest","areas","SearchArea","toolsetItems","inspectionID","instanceID","attribute","ObjectAttributes","viewable","wholeArray","ObjectSelectorType","allValueObjects","attributesAllowed","tree","entries","queue","head","fullLocation","getObjectSelectorItemsForInspection","getObjectSelectorImagesForInspection","allImageObjects","archivableImage","getVersion","requestClass","version","getVersions","GetSVObserverVersionRequest","svObserverVersion","GetGatewayVersionRequest","gatewayVersion","GetWebAppVersionRequest","webAppVersion","getPerInspection","inspectionIds","inspectionNames","fn","itemsByInspectionId","getConfigurationTree","GetConfigurationTreeRequest","mapInspectionIdtoToolset","inspectionToolsetMappings","configurationTree","isObjectValid","objectID","Configuration","configuration","filterArrayValuesFromTree","ii","stack","pop","firstChildId","assign","versions","find","mappings","idNameMappings","mapping","objectSelectorItems","objectSelectorImages","isConnected","chunksString","localStorage","getItem","CONFIGURATION_CHUNK_LIST","chunkList","configString","join","decompressedConfig","LZString","decompress","config","JSON","reviverJsonToMap","OutlinedSelection","labelWidth","renderOptions","labels","counter","InputLabelRef","offsetWidth","selectedValue","variant","htmlFor","ref","outlined","label","native","onChange","e","onSelectionChanged","target","input","select","paddingTop","paddingBottom","transform","replacerMapToJson","originalObject","dataType","Product","history","trigger","isReject","useCount","imageId","checkNotReleasedYet","imageIds","valueId","valueIds","undefined","toString","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","byteNumbers","charCodeAt","byteArray","blob","Blob","URL","createObjectURL","imagePromises","overlays","rgbData","initImage","valueStr","getValueFromVariant","buildImage","domImage","initOverlayImages","overlayImages","arrayBufferView","domURL","self","webkitURL","Image","onload","onerror","revokeObjectURL","overlaysDesc","promises","overlay","shapeGroups","shapeGroup","shapes","shape","then","releaseProduct","releaseImages","clear","released","releaseImage","overlayImage","remove","OutsideClickHandler","onClickOutside","wrappedNode","contains","addEventListener","removeEventListener","Logo","mapProtobufDeviceModeToWebAppMode","deviceMode","DeviceModeType","available","modes","unknownMode","runMode","stopMode","regressionMode","testMode","editMode","modeChanging","mapWebAppModeToProtobufDeviceMode","mode","mapLogLevelNameToProtobufLogSeverity","levelName","LogSeverity","trace","debug","warning","PropTypes","NUMBER_OF_SELECTABLE_VALUES","ObjectSelector","expandedKeys","expandedFilteredKeys","checkedKeys","filteredCheckedKeys","inputValue","filteredLocations","filteredTree","countedVisibleValues","countedPossibleValues","selectionLimitReached","halfChecked","setSelection","selection","setExpandedKeys","onExpand","onCheck","checkProps","limitedCheckedKeys","limitCheckedKeys","checkUnselectingAll","updateCheckedKeys","ensureSingleSelection","setChangedIds","limit","condition","Math","abs","checkedNode","includes","newSelectedKeys","newDeselectedKeys","union","singleSelect","ids","filteredIds","checkedLocation","getSelectedLocation","onChangeFilter","event","initialChars","cutFilterIgnoreWords","ctx","abortRecursion","filteredKeys","countSelection","countCtx","countMatches","copy","filterNodesRecursively","countMatchingNodesRecursively","filteredInput","filterIgnore","chars","shadowChildren","positions","remainingChars","consumeChars","childMatches","child","isMatchingSubtree","shadowNode","createFilteredShadowNode","prevIdx","idx","styledText","highlightAtPositions","word","charAt","shortId","generate","createTreeNodes","loop","disableCheckbox","childProps","prevProps","expanded","rootNode","visibleCheckedKeys","treeNodes","TextField","InputLabelProps","checkable","showLine","showIcon","selectable","injectIntl","selectedAlias","intl","alias","oldState","useRef","useState","setAlias","Dialog","isInView","isPopup","messages","current","fullWidth","languages","language","defaultValue","renderLanguageAliases","Button","DraggableContainer","sortableContainer","DraggableElement","sortableElement","DraggableHandle","sortableHandle","Row","draggable","rest","DragIcon","DraggableTable","table","createRef","getContainer","getDOMNode","querySelector","getHelperContainer","rowProps","args","extraProps","callOrReturn","tagName","rowIndex","handleSortEnd","oldIndex","newIndex","onSequenceChange","splice","removed","useDragHandle","helperContainer","onSortEnd","PureComponent","ListView","setAliasColumnVisibility","visibility","updateListViewShowAliases","setSaveFlag","showAliases","saveNewOrdner","before","after","setViewData","renderValueSelector","getInspectionName","selectedIds","renderList","getListData","columns","dataKey","flexGrow","tableData","row","editAlias","IconButton","isAliasEditorOpen","iconUrl","EditIcon","headerHeight","rowHeight","renderAliasEditor","listValues","currentValueObject","isSaved","closeAliasEditor","aliases","dottedName","isEmpty","newAlias","objectId","unsubscribeFromProductStream","isSelectionMode","subscribeToProductStream","showAliasesInList","nextProps","productSub","startAtTriggerCount","proxy","onProduct","product","createListValues","getValuesAsString","getValueNameForId","viewActions","canEdit","ActionBar","isViewAction","actions","listView","iconList","onClickHandler","TOGGLE_BUTTON","iconShow","intlIdAlternative","iconUrlAlternative","iconShowOff","onClickHandlerAlternative","showAlternative","currentMode","initState","initSharedState","ownProps","viewId","views","sharedState","listViewAliases","dispatch","initViewState","setSharedStateData","show","hasChanges","ImageInfo","imageInfoClass","cursorPosition","rgbValues","imageDimensions","R","G","B","x","y","reduce","acc","getPropsFromInspection","drawInspectionOverlays","drawTarget","zoomFactor","boundingCoordinates","targetContext","getContext","setLineDash","colorInt","colorString","getRgbaString","fillStyle","lineWidth","font","strokeStyle","boundingShape","OverlayBoundingShape","rect","renderRectangleTool","renderSliceTool","perspective","renderPerspectiveTool","boundingBoxX","minX","boundingBoxY","minY","boundingBoxWidth","w","boundingBoxHeight","h","displayBounding","overlayTitle","angle","fillText","detailLevel","shapeColor","shapeColorString","shapeType","useRotation","OverlayShape","arrow","rotateContextByAngleAroundPoint","x1","y1","x2","y2","angleBetweenP1andP2","atan2","PI","calcAngleDegrees","beginPath","moveTo","lineTo","theta1","cos","sin","theta2","stroke","closePath","rectArray","rAngle","restore","graph","maxValueX","maxValueY","marker","orientationType","sizeType","strokeHeight","maxValue","strokeWidth","markers","blockMarker","colors","changePos","currentPos","drawImage","save","maxOverlayTextX","measureText","updateBoundingCoordinates","max","translate","rotate","centerX","centerY","innerRadius","outerRadius","startRadian","calculateRadiansFromAngle","endAngle","endRadian","startAngle","arc","textWidth","orientation","isNaN","green","blue","setBoundingCoordinatesForCustomOverlays","coords","setCustomOverlayCoordinates","getTextWidth","setBoundingCoordinatesForInspectionOverlays","setInspectionOverlayCoordinates","text","coordinates","offsetLeft","Number","getValueById","offsetLeftVariable","xVariable","offsetTop","offsetTopVariable","yVariable","widthVariable","heightVariable","maxHeightFallback","maxWidthFallback","minHeightFallback","minWidthFallback","addVariableValueShouldBeInTheRangeNotification","correctCoordsWithBoundingCoordinates","actualCoordinates","maxX","maxY","valueObj","getValue","extractInspectionOverlays","getImage","ImageEditor","left","top","currentCursorPosition","canvasDimension","setBoundingCoordinates","getBoundingCoordinatesFromCustomOverlays","getBoundingCoordinatesFromInspectionOverlays","setCanvasDimensions","canvas","ceil","customOverlays","imageWidth","imageHeight","isActive","setImageInfo","isImageInfoOpen","setRgbValues","handleScroll","evt","delta","wheelDelta","detail","offsetX","offsetY","zoom","preventDefault","handleMouseDown","dragStart","pageX","pageY","dragStartPos","dragging","handleMouseUp","handleDrag","diffX","diffY","handleMouseMove","getMouseCoordinatesOnElement","setCursorPosition","element","containerRef","parentNode","trunc","getImageData","red","cursorPositionOnImage","trimPositionsOnImageSize","loadViewSettings","lock","bindEventListeners","prevState","productChanged","modeChanged","zoomFactorChanged","customOverlaysChanged","isEqual","imageMoved","release","saveImageSettings","viewSettings","imagePosition","onImageLoaded","initCanvas","draw","webkitImageSmoothingEnabled","msImageSmoothingEnabled","imageSmoothingEnabled","clearRect","scale","drawOverlays","console","activeOverlays","colorVariable","lineStyle","drawCustomOverlays","offX","offY","scaleFactor","pow","leftDiff","topDiff","min","getViewSize","getBoundingClientRect","toBlob","compose","forwardRef","updateOverlayList","updatedOverlay","overlayList","OverlayList","selectAll","selectedRowIndex","checkAndUpdateAllSelected","handleSelectAll","checked","onSelectAll","handleSingleSelect","updatedOverlayList","getTableDataFromOverlays","checkbox","getCheckboxDefinition4Cell","getColumnDefinition4OverlayTable","currentId","Checkbox","getSelectedRowClass","currendId","currentOverlay","headerRenderer","cells","columnHeaders","column","columnIndex","rowEventHandlers","rowData","updateCurrentOverlay","setRowClassName","canSelectRow","hasActionBar","rowClassName","ImageView","viewSizeChangeCounter","isOverlayInfoOpen","canvasInitResize","subscribedSource","updateViewSize","newViewSizeChangeCounter","resubscribeToProductStream","getUsedVariablesFromOverlay","variables","setAllOverlaysActive","updatedOverlays","createActiveOverlayList","createActiveOverlayIdList","sourceImage","toggleOverlayInfo","toggleImageInfo","setSourceImageId","setTitleFromConfig","renderObjectSelector","selectedId","renderImageView","renderImageViewImpl","oldVariables","newVariables","isBrowserWindowVisible","renderImageEditor","renderImageInfo","renderOverlayList","imageEditor","classNames","imageView","iconOne","resetZoom","iconFitToWidth","fitToWidth","iconFitToHeight","fitToHeight","SEPARATOR","iconDownload","downloadOriginalImage","iconDownloadWithOverlays","downloadOriginalImageWithOverlays","iconOverlayList","iconInfo","overlayActions","inRunMode","viewSet","addImageNotAvailableNotification","ScrollContainer","RecipeView","renderConfiguration","options","option","configurations","iconBack","iconBefore","iconSave","iconClose","SortableItem","arrayOf","string","func","SortableElement","SortableList","SortableContainer","items","Filter","CurrentFilterListItems","arrayMove","AvailableFilterListItems","AvailableFilterListActions","CurrentFilterListActions","helperClass","iconTakeOver","iconDown","iconUp","iconDeleteDustbin","ToolSetup","setup","setupParameterView","component","viewSetFactory","ViewSetFactory","currentViewSet","parameter","setParameter","setViewSet","TreebeardStyle","base","whiteSpace","listStyle","margin","fontFamily","activeLink","background","toggle","verticalAlign","marginLeft","wrapper","fill","header","connector","borderLeft","lineHeight","subtree","paddingLeft","loading","ToolsetView","getToolsetData","treeDataRaw","getConfigTreeByInspectionId","toggled","onNodeClicked","active","buildTreebearViewModel","treeModel","onToggle","mappedConnect","createMuiTheme","typography","useNextVariants","htmlFontSize","OverlayPropertyList","changedValue","renderTextField","InputProps","renderNumberField","inputProps","valueNumber","trimToMinMax","renderSelection","endAdornment","InputAdornment","edge","aria-label","ClearIcon","onFocus","openSelection","minWidth","minHeight","maxHeight","fontWeight","marginBottom","VariableSelection","Overlay","isObjectSelectorOpen","variableName","variableId","selectedVariables","setInitialOverlay","addNewOverlay","newOverlay","floor","random","deleteCurrentOverlay","newCurrentOverlay","getNeighborOverlayId","renderPlaceholder","setVariableSelection","selectedVariable","saveChangeToOverlays","defaultPropTypes","iconPlus","array","ActionBarType","object","editingViewId","Container","ParameterView","doSomething","toolSet","FilmStrip","onImageClick","combinedSrc","ImageStripView","updateImageDimensions","drawImageAndOverlaysToCanvas","sort","b","productsToRelease","imageStripLength","releaseProducts","imageHeigt","setSourceImageIndex","drawTargetContext","toDataURL","selectedIid","showPause","pausedInspections","renderFilmStrip","iconPlay","resumeStream","iconPause","pauseStream","selectProduct","products","rejectImageIds","allowOldTrigger","manualRelease","replayProduct","resumeRejectStream","pauseRejectStream","imageData","mapViewSetArray","CONFIG_VIEW","TOOLSET_VIEW","IMAGE_STRIP_VIEW","DEFAULT_RECIPE_VIEWSET","DEFAULT_VIEWSET","DEFAULT_VIEWSET_NAME","getViewSet","buildEmptyViewSet","createViewInstance","viewDesc","meta","getViewById","viewComponentClassId","passedProps","titleId","buildRecipeViewSet","initialValue","first","direction","splitPercentage","second","emptyViewId","buildEditViewSet","createNewViewSet","iconSrc","unknownIcon","runIcon","stopIcon","regressionIcon","testIcon","editIcon","ToggleButton","action","ProtobufConnector","disconnect","websocketConnector","WebsocketConnector","onConnect","onMessage","connectWithToken","token","closeSocket","readMessage","connectionLost","setImmediate","origin","setProtobuf","ReconnectingWebSocket","binaryType","onopen","onmessage","onclose","onconnecting","log","close","Proxy","sendLogsToServer","logs","mapLogEntry","StoreClientLogsRequest","client","loadProject","loadProjectRequested","showLoadingSplashScreen","getMyPermissions","discoverConfiguration","discoverDeviceMode","subscribeToNotificationAndMessageStreams","currentConfiguration","setSVOConfigLoaded","loadClientChunk","resetClientChunk","hideLoadingSplashScreen","showLoadingErrorOverlay","modeName","GetDeviceModeRequest","oldMode","newMode","newModeName","addModeSwitchNotification","setCurrentModeDone","protobufInitialized","observerNotificationSubscription","observerMessageSubscription","gatewayNotificationSubscription","gatewayMessageSubscription","nextSubId","productHistoryManager","ProductHistoryManager","subscriptionManager","SubscriptionManager","showConnectingSplashScreen","onCurrentModeChanged","onProtobufChangedImpl","hideConnectingSplashScreen","severity","stringify","showGlobalMessageOverlay","hideGlobalMessageOverlay","lastModified","loadedSince","cachedConfigInfo","getConfigurationInfo","configInfo","CONFIG_INFO","hash","loadFromCache","cachedConfig","setCurrentConfiguration","setUpProductHistories","discover","currConfig","stringifiedConfig","compress","configChunks","chunkSubstr","configChunkNames","chunk","chunkName","CONFIGURATION_CHUNK_TEMPLATE","setItem","clearCurrentView","SetDeviceModeRequest","hResult","subscribeToObserverNotificationStream","subscribeToObserverMessageStream","subscribeToGatewayNotificationStream","subscribeToGatewayMessageStream","unsubscribeFromObserverNotificationStream","GetNotificationStreamRequest","stream","subscribe","onObserverNotification","onObserverNotificationError","configName","NotifyType","getVariantValue","timestamp","Date","addProjectModifiedNotification","configLoaded","extractConfigNameFromFileName","addProjectLoadedNotification","configUnloaded","addProjectUnloadedNotification","messageText","errorNumber","unsubscribeFromObserverMessageStream","GetMessageStreamRequest","onObserverMessage","onObserverMessageError","messageList","startMsgBox","firstMessage","formatMessageNotification","messageCode","endMsgBox","msgLog","addServerMessageNotification","unsubscribeFromGatewayNotificationStream","GetGatewayNotificationStreamRequest","onGatewayNotification","onGatewayNotificationError","pausedInspectionIds","onPauseNotification","unsubscribeFromGatewayMessageStream","GetGatewayMessageStreamRequest","GatewayMessageSubscription","onGatewayMessage","onGatewayMessageError","cb","_getNextSubId","addSubscription","removeSubscription","init","fetchMissingProductData","missingImageIds","getMissingProductImages","missingValueIds","getMissingProductValues","GetProductDataRequest","includeOverlays","addData","getSubscribedImages","getSubscribedValues","addRejectStreamPausedNotification","updatePausedInspections","setPausedInspections","pauseRejectStreamImpl","pause","SetRejectStreamPauseStateRequest","GetMyPermissionsRequest","defaultPermissions","setMyPermissions","getGroupPermissions","GetGroupDetailsRequest","groupDetails","flattenPermissions","setGroupPermissions","groupDetail","users","UpdateGroupPermissionsRequest","webapp","read","viewset","edit","svobserver","inspectionstate","tool","write","notifications","clientlogs","store","file","machinestate","command","execute","usermanagement","userpermissions","size","numChunks","chunks","o","UserInfo","shortcutViewOpen","isHelpViewOpen","isAboutViewOpen","gotoPermissions","HelpIcon","ShortcutHelpIcon","AboutIcon","LogoutIcon","unshift","PermissionsIcon","to","UserIcon","fullname","withRouter","AboutView","getSvObserverVersion","getGatewayVersion","svwepAppVersion","getWebAppVersion","require","KoerberLogo","shortcuts","description","ShortcutListItem","isRequired","ShortcutList","shortcut","ShortcutView","ProductHistory","productData","releaseImpl","productHistories","productHistory","addProductData","InspectionSubscription","paused","lastTrigger","subsById","selectedTrigger","baseSub","emitProductToAllSubscriptions","subscription","resubscribeToStream","swapLastProduct","uniqueIds","unsubscribeFromStream","subscribeToStream","buildReqParams","GetProductStreamRequest","onStreamEvent","onStreamError","getStartAtTriggerCount","includeFailStatusValues","rejectValueIds","rejectsOnly","isRejectsOnly","imageFormat","ImageFormatEnum","bmp","sub","each","from","rawEvent","gatherImages","gatherValues","rejectImages","overlaysList","rejectOverlays","rejectValues","emitProductToSubscription","hasRequestedData","hasAllRequestedDataForSubscription","isInterestedIn","isInterestedInNewPorduct","hasDataForSubscriptionInList","lastProduct","requestedIds","arr","inspectionIdBySubId","subsByInspectionId","resume","isPaused","actionList","oneOfType","duration","delay","backgroundImage","backgroundPosition","backgroundSize","dialogActions","isHeight100","dialogClass","dialog","dialogWrapperClass","dialogContentWrapperClass","closeIcon","AUTH_TOKEN_KEY","USER_KEY","loadState","userStr","resetState","removeItem","saveState","utf8StringToBuffer","len","protobufjs","util","utf8","bufferToUtf8String","WEBAPP_CHUNK_FILENAME","WEBAPP_IDMAPPING_FILENAME","WEBAPP_CHUNK_VERSION","WEBAPP_CHUNK_PARAMETERS","VERSION","SV_OBSERVER_VERSION","GATEWAY_VERSION","WEBAPP_VERSION","CREATED_VIEW_SETS","CURRENT_VIEW_SETS","INSPECTION_OVERLAYS","INSPECTION_LIST_SELECTION","INSPECTION_EDITING_VIEW_IDS","INSPECTION_LIST_ALIASES","INSPECTION_IMAGE_VIEW_SETTINGS","saveChunk","currentState","setSaveOperationInProcess","inspectionOverlays","inspectionIdStr","inspectionListSelection","listSelection","inspectionEditingViewIds","inspectionListAliases","convertAliasesToJson","showInList","inspectionImageViewSettings","imageViewSettings","createdViewSets","json","PutFileRequest","destinationPath","fileData","saveInConfig","loadChunk","setClientChunk","setEditingFocus","addIncompatibilityDetectedNotification","setListViewAliases","GetFileRequest","sourcePath","updateConfigWithGuidToIntMapping","semver","coerce","configVersion","satisfies","receivedConfigParameters","expectedConfigParameters","currentParameterName","valid","diff","gt","setting","resetChunk","emptyViewset","emptyViewSets","idMappingChunk","idMapping","parseGuidToObjectIdMapping","guidToObjectIdMapping","recursivlyUpdateConfigWithGuidToIntMapping","hasError","patchedIds","guid","lookUpKeyInMapping","lowerCaseKey","setLocale","setProtobufStaticInitialized","newProtobuf","addNotification","notification","addConnectionEstablishedNotification","addConnectionLostNotification","addUserSwitchedLanguageNotification","configFile","range","authenticateHelper","logOutHelper","viewSetId","replaceViewInCurrentViewSet","replacementComponentId","switchViewSet","toggleFullscreenMode","componentDescriptor","setFullscreen","increaseViewSizeChangeCounter","setBottomNavHidden","hidden","setTopNavHidden","setDefaultViewSetName","newViewSet","inProcess","saveClientChunk","isLoaded","setViewSetForMode","removeViewSet","renameViewSet","oldName","newName","changeViewSetAfterLoading","setCurrentLayout","layout","setCurrentMode","setFocusedViewType","purgeViewState","openHelpView","closeHelpView","setBrowserWindowVisibility","visible","prop","ProxyStream","opts","pendingMessages","start","throttleInterval","throttleRequests","currentThrottleTimeout","recs","rec","level","msg","sameMessageCount","FormatStream","out","browserStdout","impl","bunyanFormat","outputMode","proxyStream","formatStream","createLogger","streams","setProxy","de","helpView","aboutView","parameterView","viewSetManager","cancel","noConfigName","unknownConfigName","noConfigLoaded","en","translations","getNewNotifications","notification2Add","newNotifications","date","dateOptions","day","month","year","timeOptions","hour","minute","toLocaleString","addTimestampToNotification","currentNotification","equalsLastNotificationCurrentNotification","setCountForNotification","count","appReducer","initalAppState","websocketUrl","connection","navigationHidden","saveOperationInProcess","currentClientChunkRevision","modalNotificationData","createInitialAppState","setMode","revision","initialState","fullscreenMode","fullscreenComponentDescriptor","bottomNavHidden","topNavHidden","defaultViewSetName","isSVOConfigLoaded","unsavedChanges","enterFullScreenMode","leaveFullScreenMode","findCreatedViewSetWithName","cached","targetViewSet","createdViewSet","updateCurrentViewSet","newCreatedViewSets","p","c","viewSetReducer","createdView","currentViewSetId","updatedViewSet","changeViewSetToName","emptyViewSet","viewsetToEdit","renamedViewSet","currentLayout","loadedViewSet","newState","toolsetReducer","findInspectionForView","viewDataReducer","omit","createReducers","combineReducers","routing","parseQueryParams","search","queryParams","part","decodeURIComponent","HmiLoginPage","authenticated","hideTopNavigation","hideBottomNavigation","catch","authError","status","statusText","pathname","viewSetTemplate","LogoutPage","loggedOut","onLogOut","onLoggedOut","viewSetType","ConfirmDialog","KeyHandler","handleKeyEvent","ctrlKey","stopPropagation","editingViewIds","helpSection","tabIndex","ListSelection","headline","selectionItems","onSelection","cancelButtonProps","showCancel","icon","goBack","InspectionSelection","getSelectionItems","InspectionIcon","BackIcon","ViewTypeSelection","inspectionTypes","ImageViewIcon","ParameterViewIcon","ImageStripViewIcon","ListViewIcon","toolsetIcon","ViewSelection","visibleComponent","selectedInspectionId","selectedViewType","setSelectedInspectionId","changeTitle","updateView","setSelectedViewType","goBackToViewTypeSelection","cancelViewSelection","changeContent","viewToShowWithoutInspection","NoSVOConfigurationLoadedView","SVOView","resetView","removeIdsForUnknownInspectionIds","canEditCurrentView","canDeleteCurrentView","getInspectionId","isConfirmOpen","windowName","viewClass","fullscreen","currentInspections","hasInspectionId","toolbarControls","onCloseView","CloseIcon","createNode","formatMessage","ViewSet","increaseChangeCounter","mosaic","viewToClose","setViewToClose","viewSetClass","closeView","confirmed","handleConfirmDialogClose","renderTile","Consumer","mosaicActions","resize","TopNavigationItem","DateTime","NavigationItem","format","ticking","ModeSwitch","changeMode","handleClose","useSelector","selectableModes","m","canRead","allModes","StatusReport","statusListActive","closeStatusList","role","LogIcon","InspectionStateSwitch","allRunning","globalItem","runningInspections","numberOfInspections","iconPlayMultiple","LanguageChooser","changeLocation","changeLocale","dispatchUserSwitchedLanguageNotification","LanguageIcon","TopNavigation","handleChange","openModePopover","anchorEl","currentTarget","handleRequestClose","modeKey","modeId","currentModeKey","mapModeIdToKey","currentModeFormatted","navClass","nav","fontStyle","onChangeUser","activeAppState","appStateConnection","appMode","changeViewSet","PresetButton","presetButtonClass","PresetSlider","InformationDialog","onSave","fileChooser","useDispatch","canDelete","setName","isImportConfirmOpen","setIsImportConfirmOpen","viewsetToDelete","setViewsetToDelete","currentImportedViewSet","setCurrentImportedViewSet","isInformationDialogOpen","setIsInformationDialogOpen","informationDialogTitle","setInformationDialogTitle","informationDialogMessage","setInformationDialogMessage","shouldCloseViewSetManager","setShouldCloseViewSetManager","viewSetToEdit","setViewSetToEdit","fileLoaderVersion","existsName","addViewSet","newViewSetName","nameToTry","getNextFreeName","exportViewSets","dataToSave","getEditingViewIdsPerInspection","createJsonFileFromObject","closeViewSetManager","handleFileData","fileText","equalsViewSetName","setViewSetConfigurationFromFileData","showErrorWhileLoadingFileDialog","handleDeleteConfirmDialogClose","loadViewSetFromFile","loadSuccessfulInformationDialogText","isMajorVersionCompatible","isMinorVersionNewer","loadVersionChangeInformationDialogText","showInformationDialog","showIncompatibleVersionErrorDialog","getViewSetEditingIcon","viewsetName","alert","iconCheck","paddingRight","addIcon","exportIcon","importIcon","getActions","removeIcon","handleImportConfirmDialogClose","files","fileReader","FileReader","readAsText","BottomNav","selectedIndex","viewSetManagerOpen","ViewSetManagerIcon","ModalNotification","SVObserver","throttledWindwResizeHandler","throttle","onWebsocketConnect","onWebsocketDisconnect","returnValue","handleBeforeUnload","setLayout","BottomNavigation","context","getState","contextType","ReactReduxContext","PermissionManagement","loadCurrentPermissions","initiallySelectedPermissions","currentSelectedPermissions","cloneDeep","savePermissions","setUserPermissions","onSaveClicked","onResetClicked","allAvailablePermissions","redirect","Permissions","groupName","newPermissions","am","bm","bs","as","colGroup","permissionsPerGroup","tableheader","dataRow","mapsAreEqual","getColGroup","tablehead","getTableHead","getData","ArrowIcon","PermissionPage","viewMappings","SingleParameter","changeCallback","removeCallback","fieldType","TextParameter","ArrayParameter","SingleParameterComponent","numberOfEntries","newValue","removeArrayEntry","TextArrayParameter","SelectParameter","useEffect","valuesWithLabels","localeCompare","BoolParameter","BoolArrayParameter","IntegerParameter","IntegerArrayParameter","DecimalParameter","DecimalArrayParameter","BytesParameter","EnumParameter","String","EnumArrayParameter","RequestParameter","parameters","setParameters","nestedParamsMap","setNestedParamsMap","currentRequestName","setCurrentRequestName","sendRequest","dir","getControlForField","currentPath","currentValue","changeValue","getStringArrayControl","getStringControl","getBoolArrayControl","getBoolControl","getIntegerArrayControl","getIntegerControl","getDecimalArrayControl","getDecimalControl","getBytesControl","endsWith","getArrayEnumControl","getEnumControl","newPath","getArrayControlsForType","getControlsForType","newParams","controls","fieldKeys","oneofs","oneOfKey","oneof","fieldkey","partOf","rule","required","_","addArrayEntryForType","RequestedResponseVisualizer","imageUrl","setImageUrl","setFileData","buildUrl","copyResponseToClipboard","navigator","clipboard","writeText","constructor","RequestsList","proto","chooseCallback","setFilter","setActive","requests","requestname","placeholder","Debugger","currentRequest","setCurrentRequest","setResponse","filteredProto","Link","DebuggerPage","App","exact","render","paperStyle","LoginPage","onSubmit","onLogin","loginFailed","Paper","elevation","autoComplete","PreLogin","setUser","setAuthToken","setStore","autoSave","createStore","applyMiddleware","thunk","devToolsExtension","f","fromLocalStorage","visibilityState","hibernateTimer","onLoggedIn","muiTheme","primary","main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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yB,+BACzB,wBAAyB,gCACzB,qCAAsC,oCACtC,uCACE,+GACF,uCACE,2DACF,mCAAoC,qBAGpC,qBAAsB,YACtB,+BAAgC,WAChC,qCAAsC,8CACtC,yBAA0B,QAC1B,+BAAgC,0CAGhC,8CAA+C,oCAC/C,gDAAiD,6CACjD,yCAA0C,gCAC1C,qCAAsC,uCACtC,mCAAoC,iCACpC,oCAAqC,kCACrC,gCAAiC,yCACjC,uCACE,uGACF,8BAA+B,6BAC/B,kCAAmC,oDACnC,iCAAkC,sBAClC,uCACE,2DACF,gDAAiD,6BACjD,kDACE,6EACF,sCAAuC,yBACvC,wCACE,kIACF,gDACE,wFAGF,gBAAiB,YAGjB,sCAAuC,mBACvC,oBAAqB,oBACrB,gCAAiC,6CAEjCC,OAAQ,YACRC,aAAc,wBACdC,kBAAmB,6BACnBC,eAAgB,4CAGhB,2BAA4B,uBAC5B,uBACE,oPACF,0BAA2B,SAC3B,mCAAoC,oBACpC,0BAA2B,eAG3B,kDACE,2FACF,yCACE,8EACF,2CAA4C,kDAC5C,4CACE,oHACF,4CACE,yPACF,8CAA+C,oDAC/C,sDACE,0EACF,uDACE,kEACF,uDACE,sFACF,yDACE,sEACF,wDACE,mEACF,yDACE,6JACF,yDACE,iQACF,2DACE,+DACF,uDACE,kEACF,wDAAyD,0DACzD,wDACE,2JACF,0DACE,8DACF,6DACE,4EACF,8DACE,oEACF,8DACE,qIACF,gEACE,wEACF,4DACE,uEACF,6DACE,+DACF,6DACE,oKACF,+DACE,mEACF,0DACE,qEACF,2DACE,6DACF,2DACE,iFACF,6DACE,iEACF,6CACE,uHACF,6CACE,2IACF,wDACE,gHACF,wDACE,sMACF,8CAA+C,oEAC/C,8CAA+C,wEAC/C,4CACE,mFACF,6CAA8C,oEAC9C,6CACE,wFACF,+CACE,wEACF,sDACE,iGACF,uDACE,qGACF,2DACE,2FACF,oDACE,yGACF,6CACE,qGACF,8CACE,yGACF,oDACE,gJACF,mDACE,+EACF,4DACE,gNACF,4DACE,oOAGF,iBAAkB,WAClB,wBAAyB,uBACzB,8BAA+B,eAC/B,+BAA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","file":"static/js/main.852dca57.chunk.js","sourcesContent":["class Observer {\n  constructor(observable) {\n    this.closed = false;\n    this.observable = observable;\n  }\n\n  next(v) {\n    return this.observable.onNext(v);\n  }\n\n  error(err) {\n    return this.observable.onError(err);\n  }\n\n  complete() {\n    return this.observable.onComplete();\n  }\n}\n\nexport class Observable {\n  static create(onSubscribe) {\n    return new Observable(onSubscribe);\n  }\n\n  constructor(onSubscribe) {\n    this._onSubscribe = onSubscribe;\n    this._next = () => {};\n    this._error = () => {};\n    this._complete = () => {};\n  }\n\n  subscribe(desc) {\n    if (typeof desc.next === 'function') {\n      this._next = desc.next;\n    }\n    if (typeof desc.error === 'function') {\n      this._error = desc.error;\n    }\n    if (typeof desc.complete === 'function') {\n      this._complete = desc.complete;\n    }\n    const observer = new Observer(this);\n    // TODO use of tearDownCb\n    const tearDownCb = this._onSubscribe(observer);\n    return {\n      unsubscribe: () => {\n        if (typeof tearDownCb === 'function') {\n          tearDownCb();\n        }\n        // TODO support multiple subscriber?\n        this._next = () => {};\n        this._error = () => {};\n        this._complete = () => {};\n      },\n    };\n  }\n\n  onNext(v) {\n    return this._next(v);\n  }\n\n  onError(err) {\n    return this._error(err);\n  }\n\n  onComplete() {\n    return this._complete();\n  }\n}\n","import ProtoJs from 'protobufjs';\nimport { Observable } from './Observable';\nimport logger from '../utils/logger';\n\nexport default class Protobuf {\n  // will be initialized with Protobuf.init()\n  static SvPenv = {};\n  static SvPb = {};\n  static nextTxId = 0;\n  static nextStreamId = 0;\n  static initialized = false;\n\n  static async init() {\n    Protobuf.SvPenv = await Protobuf.loadProto('/res/proto/Envelope.proto', 'SvPenv');\n    Protobuf.SvPb = await Protobuf.loadProto('/res/proto/SVRC.proto', 'SvPb');\n    Protobuf.SvAuth = await Protobuf.loadProto('/res/proto/SVRC.proto', 'SvAuth');\n    Protobuf.initialized = true;\n  }\n\n  static async loadProto(path, namespace) {\n    const root = await ProtoJs.load(path);\n    return root.lookup(namespace);\n  }\n\n  constructor() {\n    this.pendingRequests = new Map();\n    this.openStreams = new Map();\n    this.socket = null;\n  }\n\n  isConnected() {\n    return !!this.socket;\n  }\n\n  onConnect(socket) {\n    const prevSocket = this.socket;\n    this.socket = socket;\n    if (prevSocket !== socket) {\n      this.cancelAllPendingRequests(new Error('Connection changed'));\n    }\n  }\n\n  async readMessage(data) {\n    const env = await Protobuf.SvPenv.Envelope.decode(new Uint8Array(data));\n\n    switch (env.type) {\n      case Protobuf.SvPenv.MessageType.response:\n        this.onResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.errorResponse:\n        this.onErrorResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamResponse:\n        this.onStreamResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamErrorResponse:\n        this.onStreamErrorResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamFinish:\n        this.onStreamFinish(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamCancel:\n        this.onStreamCancel(env);\n        break;\n      default:\n        logger.error({ type: env.type }, 'Received message with unexpected type');\n    }\n  }\n\n  onResponse(env) {\n    const txId = env.transactionId;\n    const hdl = this.pendingRequests.get(txId);\n    if (!hdl) {\n      logger.error({ txId }, 'Received response for unknown transaction id');\n      return;\n    }\n    const res = this.unwrapResponse(env);\n    this.pendingRequests.delete(txId);\n    if (hdl.handled) {\n      return;\n    }\n\n    clearTimeout(hdl.timeout);\n    hdl.resolve(res);\n  }\n\n  onErrorResponse(env) {\n    const txId = env.transactionId;\n    const err = this.unwrapErrorResponse(env);\n    return this.onErrorResponseImpl(txId, err);\n  }\n\n  onErrorResponseImpl(txId, err) {\n    const hdl = this.pendingRequests.get(txId);\n    if (!hdl) {\n      logger.error({ txId }, 'Received response for unknown transaction id');\n      return;\n    }\n\n    this.pendingRequests.delete(txId);\n    if (hdl.handled) {\n      return;\n    }\n\n    clearTimeout(hdl.timeout);\n    hdl.reject(err);\n  }\n\n  cancelAllPendingRequests(err) {\n    for (let txId of this.pendingRequests.keys()) {\n      this.onErrorResponseImpl(txId, err);\n    }\n  }\n\n  onRequestTimeout(txId) {\n    const hdl = this.pendingRequests.get(txId);\n    if (!hdl) {\n      logger.error({ txId }, 'Received response for unknown transaction id');\n      return;\n    }\n\n    hdl.handled = true;\n    hdl.reject(new Error('Request timed out'));\n  }\n\n  async onStreamResponse(env) {\n    const streamId = env.transactionId;\n    const hdl = this.openStreams.get(streamId);\n    if (!hdl) {\n      logger.info({ streamId }, 'Received update for unknown stream id');\n      return;\n    }\n    const res = this.unwrapResponse(env);\n    await hdl.observer.next(res);\n    this.ackStreamResponse(env);\n  }\n\n  onStreamErrorResponse(env) {\n    const streamId = env.transactionId;\n    const hdl = this.openStreams.get(streamId);\n    if (!hdl) {\n      logger.error({ streamId }, 'Received error for unknown stream id');\n      return;\n    }\n    const err = this.unwrapErrorResponse(env);\n    this.openStreams.delete(streamId);\n    hdl.observer.error(err);\n  }\n\n  onStreamFinish(env) {\n    const streamId = env.transactionId;\n    const hdl = this.openStreams.get(streamId);\n    if (!hdl) {\n      logger.error({ streamId }, 'Received finish for unknown stream id');\n      return;\n    }\n\n    this.openStreams.delete(streamId);\n    hdl.observer.complete();\n  }\n\n  onStreamCancel(env) {\n    // ignore cancel envelopes. they should\n    // be sent from client to server only.\n  }\n\n  request(req) {\n    return new Promise((resolve, reject) => {\n      if (!this.socket) {\n        return reject(new Error('No socket available'));\n      }\n      Protobuf.nextTxId += 1;\n      const txId = Protobuf.nextTxId;\n      const env = this.wrapMessage(req, txId, Protobuf.SvPenv.MessageType.request);\n      const buf = this.serializeEnvelope(env);\n      const timeout = setTimeout(this.onRequestTimeout.bind(this, txId), 30 * 1000);\n      this.pendingRequests.set(txId, { resolve, reject, timeout });\n      this.socket.send(buf);\n    });\n  }\n\n  stream(req) {\n    return Observable.create((observer) => {\n      if (!this.socket) {\n        return observer.error(new Error('No socket available'));\n      }\n      Protobuf.nextStreamId += 1;\n      const streamId = Protobuf.nextStreamId;\n      const env = this.wrapMessage(req, streamId, Protobuf.SvPenv.MessageType.streamRequest);\n      const buf = this.serializeEnvelope(env);\n      this.openStreams.set(streamId, { observer });\n      this.socket.send(buf);\n\n      return () => {\n        this.openStreams.delete(streamId);\n        this.cancelStream(streamId);\n      };\n    });\n  }\n\n  cancelStream(transactionId) {\n    if (!this.socket) {\n      return;\n    }\n    const type = Protobuf.SvPenv.MessageType.streamCancel;\n    const params = { transactionId, type };\n    const env = Protobuf.SvPenv.Envelope.fromObject(params);\n    const buf = this.serializeEnvelope(env);\n    this.socket.send(buf);\n  }\n\n  ackStreamResponse(env) {\n    const ackEnv = Protobuf.SvPenv.Envelope.fromObject({\n      transactionId: env.transactionId,\n      sequenceNumber: env.sequenceNumber,\n      type: Protobuf.SvPenv.MessageType.streamAck,\n    });\n    const buf = this.serializeEnvelope(ackEnv);\n    this.socket.send(buf);\n  }\n\n  wrapMessage(req, transactionId, type = Protobuf.SvPenv.MessageType.request) {\n    const message = this.wrapOneOf(req);\n    const envelope = Protobuf.SvPenv.Envelope.fromObject({\n      payloadType: this.getPayloadTypeForOneOfMessage(message),\n      payload: this.packToAny(message),\n      transactionId,\n      type,\n    });\n    return envelope;\n  }\n\n  // NOTE: ignoring payload_type as we want to unpack anyways\n  //       so no need to dispatch the message before unpacking\n  unwrapResponse(env) {\n    const message = this.unpackFromAny(env.payload);\n    const res = this.unwrapOneOf(message);\n    return res;\n  }\n\n  unwrapErrorResponse(env) {\n    const error = new Error(env.error.message);\n    error.code = env.error.errorCode;\n\n    if (env.error.payload) {\n      const payload = this.unpackFromAny(env.error.payload);\n      error.payload = payload;\n    }\n    return error;\n  }\n\n  wrapOneOf(req) {\n    const fieldName = this.getFieldNameForSVRCMessage(req);\n    return Protobuf.SvPb.SVRCMessages.create({ [fieldName]: req });\n  }\n\n  unwrapOneOf(message) {\n    return message[message.message];\n  }\n\n  // by convention, the field name of the SVRCMessages oneof is\n  // equal to the type name, except that first letter is lower-case.\n  getFieldNameForSVRCMessage(message) {\n    const name = message.$type.name;\n    return name.substr(0, 1).toLowerCase() + name.substr(1);\n  }\n\n  getPayloadTypeForOneOfMessage(message) {\n    const fieldName = message.message;\n    const type = message.$type.fields[fieldName];\n    return type.id;\n  }\n\n  packToAny(message) {\n    const type = message.$type;\n    const typeName = type.fullName.slice(1); // remove leading dot\n    // the c++ protobuf library uses this as the default prefix\n    const typeUrlPrefix = 'type.googleapis.com';\n    const encoded = type.encode(message).finish();\n    return {\n      type_url: `${typeUrlPrefix}/${typeName}`,\n      value: encoded,\n    };\n  }\n\n  unpackFromAny(any) {\n    let typeName = any.type_url;\n    const slashIdx = typeName.indexOf('/');\n    if (slashIdx !== -1) {\n      typeName = typeName.slice(slashIdx + 1);\n    }\n    const type = Protobuf.SvPb.lookup(typeName);\n    if (!type) {\n      logger.error({ type: any.type_url }, 'Received message with unknown payload type');\n      return;\n    }\n    return type.decode(any.value);\n  }\n\n  serializeEnvelope(envelope) {\n    const buf = Protobuf.SvPenv.Envelope.encode(envelope).finish();\n    const raw = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n    return raw;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/edit.962e7af9.svg\";","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport MuiMenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './style.scss';\nimport OutsideClickHandler from '../../../src/components/OutsideClickHandler';\n\nconst styles = (theme) => ({\n  rootMenu: {\n    overflow: 'visible',\n    backgroundColor: '#f3f3f3',\n    position: 'absolute',\n    '& ul': {\n      padding: 0,\n    },\n  },\n  menuItem: {\n    cursor: 'pointer',\n    display: 'flex',\n    justifyContent: 'space-between',\n    overflow: 'visible',\n    position: 'relative',\n    borderBottom: '0.1rem #cccccc solid',\n    '& a': {\n      color: theme.palette.common.black,\n    },\n  },\n  caption: {\n    alignItems: 'center',\n    display: 'flex',\n    fontSize: '1.4rem',\n    '& img': {\n      marginRight: '0.5rem',\n      maxWidth: '24px',\n    },\n  },\n});\nclass MenuList extends Component {\n  state = {\n    openMenu: false,\n  };\n  renderMenuItems = () => {\n    const { menuItems, onClose, classes, enabled } = this.props;\n    return menuItems.map((menuItem) => {\n      return (\n        <MenuItem\n          disabled={!enabled}\n          key={menuItem.key}\n          onClick={() => {\n            if (enabled) {\n              onClose();\n              this.closeMenu();\n              menuItem.onClick();\n            }\n          }}\n          className={\n            menuItem.className ? classes.menuItem + ' ' + menuItem.className : classes.menuItem\n          }\n        >\n          <div className={classes.caption}>\n            {menuItem.img ? <img src={menuItem.img} alt={menuItem.caption} /> : null}\n            {menuItem.caption}\n          </div>\n        </MenuItem>\n      );\n    });\n  };\n\n  handleClick = () => {\n    this.setState({ openMenu: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ openMenu: false });\n    this.props.onClose();\n  };\n\n  render() {\n    const { buttonIcon, buttonCaption, tooltip, open, onClose, showBottomArrow, classes } =\n      this.props;\n    const { openMenu } = this.state;\n\n    return (\n      <div>\n        <button className={'menu-button'} onClick={this.handleClick} title={tooltip}>\n          {buttonIcon && <img src={buttonIcon} alt={buttonCaption} />}\n          {buttonCaption}\n          {showBottomArrow ? <div className=\"bottomArrow\"></div> : null}\n        </button>\n        <OutsideClickHandler\n          onOutsideClick={() => {\n            this.closeMenu();\n          }}\n        >\n          {openMenu ? (\n            <Paper className={classes.rootMenu}>\n              <MuiMenuList open={open} onClose={onClose}>\n                {this.renderMenuItems()}\n              </MuiMenuList>\n            </Paper>\n          ) : (\n            <div></div>\n          )}\n        </OutsideClickHandler>\n      </div>\n    );\n  }\n}\n\nMenuList.defaultProps = {\n  open: false,\n  enabled: true,\n};\n\nMenuList.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles)(MenuList);\n","import { parse } from 'url';\n\nfunction getDefaultWebsocketUrl() {\n  const { host, protocol } = window.location;\n  const wsProtocol = protocol === 'https:' ? 'wss:' : 'ws:';\n  return `${wsProtocol}//${host}`;\n}\n\nfunction getEndpoint(url) {\n  const parsedUrl = url ? parse(url) : window.location;\n  const protocol = parsedUrl.protocol.replace('ws', 'http');\n  return `${protocol}//${parsedUrl.host}`;\n}\n\nconst env = {\n  authEndpoint: getEndpoint(process.env.REACT_APP_WEBSOCKET_SERVER_URL),\n  websocketServerUrl: process.env.REACT_APP_WEBSOCKET_SERVER_URL || getDefaultWebsocketUrl(),\n  enableAutoSave: false,\n};\n\nexport default env;\n","export default __webpack_public_path__ + \"static/media/close.f005b782.svg\";","export default __webpack_public_path__ + \"static/media/clear.1114cb53.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\n\nimport Dialog from '../../components/Dialog';\nimport map from './viewMappings';\n\nclass HelpView extends Component {\n  render() {\n    const { onClose, open, focusedViewType, locale } = this.props;\n    let helpUrl;\n    switch (locale) {\n      case 'en':\n        helpUrl = `/help/en/SVOWebApp_WebHelp.htm#cshid=${map[focusedViewType]}`;\n        break;\n\n      case 'de':\n        helpUrl = `/help/de/SVOWebApp_WebHelp.htm#cshid=${map[focusedViewType]}`;\n        break;\n\n      default:\n        helpUrl = `/help/en/SVOWebApp_WebHelp.htm#cshid=${map[focusedViewType]}`;\n        break;\n    }\n    return (\n      <Dialog isFullscreen title={<FormattedMessage id=\"helpView\" />} onClose={onClose} open={open}>\n        <iframe\n          className=\"help-frame\"\n          title=\"help\"\n          style={{ width: '100%', height: '97%' }}\n          src={helpUrl}\n        />\n      </Dialog>\n    );\n  }\n}\n\nHelpView.defaultProps = {\n  open: false,\n  locale: 'en',\n};\n\nHelpView.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  locale: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  focusedViewType: state.app.focusedViewType,\n  locale: state.app.locale,\n});\n\nexport default connect(mapStateToProps)(HelpView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\n\nconst Heading = ({ type, intlId }) =>\n  React.createElement(\n    type,\n    {\n      className: 'heading',\n    },\n    <FormattedMessage id={`${intlId}` || 'none'} />,\n  );\n\nHeading.defaultProps = {\n  intlId: 'none',\n};\n\nHeading.propTypes = {\n  type: PropTypes.string.isRequired,\n  intlId: PropTypes.string,\n};\n\nexport default Heading;\n","import { IMAGE_VIEW, PARAMETER_VIEW, LIST_VIEW } from '../ViewSetFactory';\n\nexport const PERMISSIONS = 'PERMISSIONS';\nexport const DEBUGGER = 'DEBUGGER';\n\nconst Views = {\n  PARAMETER_VIEW,\n  LIST_VIEW,\n  IMAGE_VIEW,\n  PERMISSIONS,\n  DEBUGGER,\n};\n\nexport default Views;\n","import Protobuf from '../protobuf/Protobuf';\n\nexport const flattenProtobuf = (oldObject) => {\n  const permissions = new Set();\n  flattenProtobufRec(oldObject, permissions, '');\n  return permissions;\n};\n\nconst flattenProtobufRec = (currentObject, permissions, parentPath) => {\n  for (const key in currentObject.nested) {\n    const value = currentObject.nested[key];\n    const currKey = key.toLowerCase();\n    const currPath = parentPath ? `${parentPath}.${currKey}` : currKey;\n    if (!value.nested && value.fields) {\n      if (currPath === 'webapp.view') {\n        const viewTypeProtobuf = Protobuf.SvPb.lookup('ViewType');\n        for (let i = 0; i < Object.keys(viewTypeProtobuf.values).length; i++) {\n          const viewPath = `${currPath}[type=${getViewName(i)}]`;\n          addFieldValues(permissions, viewPath, value.fields);\n        }\n      } else {\n        addFieldValues(permissions, currPath, value.fields);\n      }\n    } else {\n      flattenProtobufRec(value, permissions, currPath);\n    }\n  }\n};\n\nconst addFieldValues = (permissions, path, fields) => {\n  Object.keys(fields).forEach((key) => {\n    const field = fields[key];\n    if (field.type === 'bool') {\n      const name = field.name.toLowerCase();\n      permissions.add(`${path}.${name}`);\n    }\n  });\n};\n\nexport const flattenPermissionsRec = (currentObject, permissions, parentPath) => {\n  for (const key in currentObject) {\n    const value = currentObject[key];\n    if (key.indexOf('$') !== -1) {\n      continue;\n    }\n    const currPath = parentPath ? `${parentPath}.${key}` : key;\n    if (Array.isArray(value)) {\n      if (currPath === 'webapp.view') {\n        for (let i = 0; i < value.length; ++i) {\n          const entry = value[i];\n          const viewPath = `${currPath}[type=${getViewName(entry.type)}]`;\n          flattenPermissionsRec(entry, permissions, viewPath);\n        }\n      }\n    } else if (typeof value === 'object') {\n      flattenPermissionsRec(value, permissions, currPath);\n    } else if (typeof value === 'boolean' && value) {\n      permissions.add(currPath);\n    } else {\n      //boolean = false\n      //another type, p.e. number\n    }\n  }\n};\n\nconst createObjectFromFlattenedPermissions = (a, obj, v) => {\n  var k = a.shift();\n\n  if (a.length > 0) {\n    if (k.startsWith('view[')) {\n      const type = getViewId(k.substring(k.indexOf('[type=') + 6, k.indexOf(']')));\n\n      if (!obj.view) {\n        obj.view = [];\n      }\n      const index = obj.view.findIndex((view) => view.type === type);\n      if (index !== -1) {\n        obj.view[index] = { ...obj.view[index], [a[0]]: true };\n      } else {\n        obj.view.push({ type, [a[0]]: true });\n      }\n    } else {\n      if (Object(obj[k]) !== obj[k]) {\n        obj[k] = {};\n      }\n\n      createObjectFromFlattenedPermissions(a, obj[k], v);\n    }\n  } else {\n    obj[k] = true;\n  }\n};\n\nexport const getGroupPermissionsFromFlattenedPermissions = (flattenedPermissions) => {\n  const result = [];\n  flattenedPermissions.forEach((groupEntry, name) => {\n    const permissionForUser = {};\n    groupEntry.groupPermissions.forEach((permission) => {\n      createObjectFromFlattenedPermissions(\n        permission.split('.'),\n        permissionForUser,\n        permissionForUser[permission],\n      );\n    });\n    result.push({\n      name,\n      permissions: permissionForUser,\n    });\n  });\n\n  return result;\n};\n\nexport const getViewName = (viewType) => {\n  switch (viewType) {\n    case 0:\n      return 'AnyView';\n    case 1:\n      return 'ImageView';\n    case 2:\n      return 'ListView';\n    case 3:\n      return 'ImageStripView';\n    case 4:\n      return 'ParameterView';\n    case 5:\n      return 'ToolSetView';\n    default:\n      return '';\n  }\n};\n\nexport const getViewId = (viewType) => {\n  switch (viewType) {\n    case 'AnyView':\n      return 0;\n    case 'ImageView':\n      return 1;\n    case 'ListView':\n      return 2;\n    case 'ImageStripView':\n      return 3;\n    case 'ParameterView':\n      return 4;\n    case 'ToolSetView':\n      return 5;\n    default:\n      return 0;\n  }\n};\n\nexport const canSaveConfig = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.configuration.save') : false;\n};\n\nexport const canReadLogs = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.logs.read') : false;\n};\n\nexport const canAddViewSet = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.add') : false;\n};\n\nexport const canReadViewSet = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.read') : false;\n};\n\nexport const canEditViewSet = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.edit') : false;\n};\n\nexport const canDeleteViewSet = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.remove') : false;\n};\n\nexport const canAddImageView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadImageView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditImageView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteImageView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddListView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadListView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditListView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteListView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddImageStripView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadImageStripView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditImageStripView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteImageStripView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddParameterView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadParameterView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditParameterView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteParameterView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddToolSetView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadToolSetView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditToolSetView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteToolSetView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canReadSVOMode = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.mode.read') : false;\n};\n\nexport const canEditSVOMode = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.mode.edit') : false;\n};\n\nexport const canReadInspectionState = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.inspectionstate.read') : false;\n};\n\nexport const canEditInspectionState = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.inspectionstate.edit') : false;\n};\n\nexport const canReadValue = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.value.read') : false;\n};\n\nexport const canEditValue = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.value.edit') : false;\n};\n\nexport const canReadTool = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.read') : false;\n};\n\nexport const canEditTool = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.edit') : false;\n};\n\nexport const canAddTool = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.add') : false;\n};\n\nexport const canDeleteTool = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.remove') : false;\n};\n\nexport const canReadUserManagement = (myPermissions) => {\n  return myPermissions ? myPermissions.has('usermanagement.userpermissions.read') : false;\n};\n\nexport const canEditUserManagement = (myPermissions) => {\n  return myPermissions ? myPermissions.has('usermanagement.userpermissions.edit') : false;\n};\n","import axios from 'axios';\nimport pick from 'lodash/pick';\nimport jwtDecode from 'jwt-decode';\nimport env from '../utils/env';\nimport logger from '../utils/logger';\n\nexport const logIn = async (username, password) => {\n  const url = `${env.authEndpoint}/login`;\n  const loginRes = await axios.post(url, { username, password });\n  const { accessToken } = loginRes.data;\n  return await authenticate(accessToken);\n};\n\nexport const authenticate = async (accessToken) => {\n  const url = `${env.authEndpoint}/auth`;\n  const authRes = await axios.post(url, { accessToken });\n  const { authToken } = authRes.data;\n  // TODO verify the token signature\n  const claims = jwtDecode(authToken);\n  const user = pick(claims, ['email', 'fullname', 'username']);\n  return { authToken, user };\n};\n\nexport const logOut =\n  (notifyGateway = true) =>\n  async () => {\n    logger.removeProxy();\n    if (notifyGateway) {\n      const url = `${env.authEndpoint}/logout`;\n      try {\n        await axios.post(url, {});\n      } catch (err) {\n        logger.warn({ err }, 'Error while calling /logout');\n      }\n    }\n  };\n","import logger from './logger';\nexport const forceDownload = (data, fileName) => {\n  if (!data) {\n    logger.info('forceDownload expects data but did not receive');\n    return;\n  }\n  const link = document.createElement('a');\n  link.download = fileName;\n  link.href = data;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n","export default __webpack_public_path__ + \"static/media/play.f6ca6855.svg\";","export default __webpack_public_path__ + \"static/media/pause.ea3fe966.svg\";","import LZString from 'lz-string';\n\nimport logger from '../utils/logger';\nimport { CONFIGURATION_CHUNK_LIST } from '../utils/localStorage';\nimport Protobuf from './Protobuf';\nimport { isObjectValid } from '../utils/objectValidator';\nimport { reviverJsonToMap } from '../utils/jsonMapper';\n\nconst extractConfigName = (filename) => {\n  if (!filename) {\n    return '';\n  }\n  const slashIdx = filename.lastIndexOf('\\\\');\n  if (slashIdx !== -1) {\n    filename = filename.substr(slashIdx + 1);\n  }\n  const dotIdx = filename.lastIndexOf('.');\n  if (dotIdx !== -1) {\n    filename = filename.substr(0, dotIdx);\n  }\n  return filename;\n};\n\nconst getConfigName = async (protobuf) => {\n  const request = Protobuf.SvPb.GetConfigurationInfoRequest.create();\n  const { fileName } = await protobuf.request(request);\n  return extractConfigName(fileName);\n};\n\nconst getListNames = async (protobuf) => {\n  let listNames = [];\n  try {\n    const monitorListReq = Protobuf.SvPb.QueryMonitorListNamesRequest.create({});\n    const monitorListRes = await protobuf.request(monitorListReq);\n    const listNamesStr =\n      monitorListRes &&\n      monitorListRes.names &&\n      monitorListRes.names.item &&\n      monitorListRes.names.item.strVal;\n    listNames = (listNamesStr || '').split(';');\n  } catch (e) {\n    // ignore error. will fall back to empty monitor list.\n    logger.error('Error while fetching monitor list names:', e);\n  }\n\n  return listNames;\n};\n\nconst getInspections = async (protobuf) => {\n  try {\n    const inspectionsReq = Protobuf.SvPb.GetInspectionsRequest.create({});\n    const inspectionsRes = await protobuf.request(inspectionsReq);\n    return (inspectionsRes.inspections || []).map((inspection) => ({\n      id: inspection.id,\n      name: inspection.name,\n    }));\n  } catch (e) {\n    // ignore error. will fall back to empty inspection name list.\n    logger.error('Error while fetching inspection name list:', e);\n    return [];\n  }\n};\n\nconst getInspectionIds = (inspections) => {\n  return (inspections || []).map((inspection) => inspection.id);\n};\n\nconst getInspectionNames = (inspections) => {\n  return (inspections || []).map((inspection) => inspection.name);\n};\n\nconst getInspectionMappings = async (protobuf, listNames, inspections) => {\n  const inspectionMappings = new Map();\n  for (let i = 0; i < listNames.length; ++i) {\n    let imageNames = [];\n    let valueNames = [];\n    try {\n      const listItemReq = Protobuf.SvPb.QueryListItemRequest.create({\n        listName: listNames[i],\n        queryValues: true,\n        queryImages: true,\n        type: Protobuf.SvPb.ListType.all,\n      });\n      const listItemRes = await protobuf.request(listItemReq);\n      imageNames = listItemRes.imageDefList.map((image) => image.name);\n      valueNames = listItemRes.valueDefList.map((value) => value.name);\n    } catch (e) {\n      // ignore error and fall back to empty list\n      logger.error('Error while fetching list item:', e);\n    }\n\n    inspections.forEach((inspection) => {\n      const inspectionImages = imageNames.filter((name) => name.indexOf(inspection.name) !== -1);\n      const inspectionValues = valueNames.filter((name) => name.indexOf(inspection.name) !== -1);\n      if (inspectionImages.length > 0 || inspectionValues.length > 0) {\n        // inspections can be assigned to a single monitor list only\n        inspectionMappings.set(inspection.id, {\n          listName: listNames[i],\n          images: inspectionImages,\n          values: inspectionValues,\n        });\n      }\n    });\n  }\n\n  return inspectionMappings;\n};\n\n// objectIDIndex has the format:\n//   {#123}\n// and sometimes also an index at the end:\n//   {#123}[10]\n// or this for empty arrays\n//   {#123}[ ]\n// except of the index at the end, it is a normal id\nconst parseObjectIdIndex = (str) => {\n  if (!str.startsWith('{#')) {\n    return;\n  }\n  const endIdx = str.indexOf('}');\n  if (endIdx < 0) {\n    return;\n  }\n  // TODO parse array index\n  str = str.substr(2, endIdx);\n  return parseInt(str, 10);\n};\n\nconst cleanObjectSelectorNodeRecursively = (node) => {\n  const { name, type, location, objectIDIndex, children, selected } = node;\n  const cleanedChildren = (children || []).map(cleanObjectSelectorNodeRecursively);\n  const id = (objectIDIndex && parseObjectIdIndex(objectIDIndex)) || null;\n  return {\n    id,\n    name,\n    type,\n    location,\n    selected,\n    children: cleanedChildren,\n  };\n};\n\nconst getIdNameMappingForInspection = async (protobuf, inspectionId, inspectionName) => {\n  const req = Protobuf.SvPb.GetObjectSelectorItemsRequest.create({\n    areas: [Protobuf.SvPb.SearchArea.toolsetItems],\n    inspectionID: inspectionId,\n    instanceID: 0, // InvalidObjectId\n    attribute: Protobuf.SvPb.ObjectAttributes.viewable,\n    wholeArray: true,\n    type: Protobuf.SvPb.ObjectSelectorType.allValueObjects,\n    attributesAllowed: 1,\n  });\n  const res = await protobuf.request(req);\n  if (!res.tree) {\n    logger.error('GetObjectSelectorItemsRequest response does not contain a tree');\n    return null;\n  }\n\n  const tree = cleanObjectSelectorNodeRecursively(res.tree);\n\n  const entries = new Map();\n  const queue = (tree && tree.children && tree.children.slice(0)) || [];\n  while (queue.length > 0) {\n    const head = queue.shift();\n    const { id, name, type, location, children } = head;\n    if (id) {\n      entries.set(id, {\n        id,\n        name,\n        type,\n        location,\n        fullLocation: 'Inspections.' + inspectionName + '.' + location,\n      });\n    }\n    if (children && children.length) {\n      for (let i = 0; i < children.length; ++i) {\n        queue.push(children[i]);\n      }\n    }\n  }\n\n  return entries;\n};\n\nconst getObjectSelectorItemsForInspection = async (protobuf, inspectionId, inspectionName) => {\n  const req = Protobuf.SvPb.GetObjectSelectorItemsRequest.create({\n    areas: [Protobuf.SvPb.SearchArea.toolsetItems],\n    inspectionID: inspectionId,\n    instanceID: 0, // InvalidObjectId\n    attribute: Protobuf.SvPb.ObjectAttributes.viewable,\n    wholeArray: true,\n    type: Protobuf.SvPb.ObjectSelectorType.allValueObjects,\n    attributesAllowed: 1,\n  });\n  let res;\n  try {\n    res = await protobuf.request(req);\n  } catch (error) {\n    logger.error(error);\n    return null;\n  }\n\n  if (!res.tree) {\n    logger.error('GetObjectSelectorItemsRequest response does not contain a tree');\n    return null;\n  }\n\n  const tree = cleanObjectSelectorNodeRecursively(res.tree);\n  return { tree };\n};\n\nconst getObjectSelectorImagesForInspection = async (protobuf, inspectionId, inspectionName) => {\n  const req = Protobuf.SvPb.GetObjectSelectorItemsRequest.create({\n    areas: [Protobuf.SvPb.SearchArea.toolsetItems],\n    inspectionID: inspectionId,\n    type: Protobuf.SvPb.ObjectSelectorType.allImageObjects,\n    attribute: Protobuf.SvPb.ObjectAttributes.archivableImage,\n    attributesAllowed: 1,\n  });\n  let res;\n  try {\n    res = await protobuf.request(req);\n  } catch (error) {\n    logger.error(error);\n    return null;\n  }\n\n  if (!res.tree) {\n    logger.error('GetObjectSelectorItemsRequest response does not contain a tree');\n    return null;\n  }\n  const tree = cleanObjectSelectorNodeRecursively(res.tree);\n\n  return { tree };\n};\n\nconst getVersion = async (protobuf, requestClass) => {\n  const request = requestClass.create();\n  const response = await protobuf.request(request);\n  if (!response.version) {\n    logger.error(`Error while reading version via ${requestClass.name}`);\n    return 'Unknown Version';\n  }\n  return response.version;\n};\n\nconst getVersions = async (protobuf) => {\n  const svObserverVersion = await getVersion(protobuf, Protobuf.SvPb.GetSVObserverVersionRequest);\n  const gatewayVersion = await getVersion(protobuf, Protobuf.SvPb.GetGatewayVersionRequest);\n  const webAppVersion = await getVersion(protobuf, Protobuf.SvPb.GetWebAppVersionRequest);\n  return { svObserverVersion, gatewayVersion, webAppVersion };\n};\n\nconst getPerInspection = async (protobuf, inspectionIds, inspectionNames, fn) => {\n  const itemsByInspectionId = new Map();\n  for (let i = 0; i < inspectionIds.length; ++i) {\n    const inspectionId = inspectionIds[i];\n    const inspectionName = inspectionNames[i];\n    const item = await fn(protobuf, inspectionId, inspectionName);\n    if (item) {\n      itemsByInspectionId.set(inspectionId, item);\n    }\n  }\n  return itemsByInspectionId;\n};\n\nconst getConfigurationTree = async (protobuf) => {\n  const request = Protobuf.SvPb.GetConfigurationTreeRequest.create();\n  const response = await protobuf.request(request);\n  if (!response || !response.tree) {\n    logger.error('Cannot get config tree');\n    return false;\n  }\n  return response;\n};\n\nconst mapInspectionIdtoToolset = async (protobuf) => {\n  const inspectionToolsetMappings = new Map();\n\n  const configurationTree = await getConfigurationTree(protobuf);\n  if (!isObjectValid(() => configurationTree.tree.children)) {\n    logger.error('configTree is not valid');\n    return inspectionToolsetMappings;\n  }\n\n  configurationTree.tree.children.forEach((inspection) => {\n    const inspectionId = inspection.objectID;\n    if (!inspectionId) {\n      logger.error(`Inspection without valid id: ${inspectionId}`);\n      return;\n    }\n    inspectionToolsetMappings.set(inspectionId, { ...inspection });\n  });\n\n  return inspectionToolsetMappings;\n};\n\nexport default class Configuration {\n  static async discover(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      return null;\n    }\n\n    try {\n      const name = await getConfigName(protobuf);\n      const versions = await getVersions(protobuf);\n      const listNames = await getListNames(protobuf);\n      const inspections = await getInspections(protobuf);\n      const inspectionIds = getInspectionIds(inspections);\n      const inspectionNames = getInspectionNames(inspections);\n      const inspectionMappings = await getInspectionMappings(protobuf, listNames, inspections);\n      const idNameMappings = await getPerInspection(\n        protobuf,\n        inspectionIds,\n        inspectionNames,\n        getIdNameMappingForInspection,\n      );\n      const objectSelectorItems = await getPerInspection(\n        protobuf,\n        inspectionIds,\n        inspectionNames,\n        getObjectSelectorItemsForInspection,\n      );\n      const objectSelectorImages = await getPerInspection(\n        protobuf,\n        inspectionIds,\n        inspectionNames,\n        getObjectSelectorImagesForInspection,\n      );\n      const inspectionToolsetMappings = await mapInspectionIdtoToolset(protobuf);\n      return new Configuration({\n        name,\n        listNames,\n        inspections,\n        inspectionIds,\n        inspectionMappings,\n        // TODO create lookup table with id->fullLocation and fullLocation->id\n        idNameMappings,\n        objectSelectorItems,\n        objectSelectorImages,\n        versions,\n        inspectionToolsetMappings,\n      });\n    } catch (err) {\n      logger.error({ err }, 'Error loading configuration');\n      return null;\n    }\n  }\n\n  static async loadFromCache(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      return null;\n    }\n    try {\n      let configString = '';\n      const chunksString = localStorage.getItem(CONFIGURATION_CHUNK_LIST);\n      const chunkList = chunksString.split(',');\n\n      configString = chunkList.map((key) => localStorage.getItem(key)).join();\n      const decompressedConfig = LZString.decompress(configString);\n      const config = JSON.parse(decompressedConfig, reviverJsonToMap);\n\n      return new Configuration({\n        ...config,\n      });\n    } catch (err) {\n      logger.error({ err }, 'Error loading configuration');\n      return null;\n    }\n  }\n\n  static extractConfigNameFromFileName(filename) {\n    return extractConfigName(filename);\n  }\n\n  constructor(configuration) {\n    // copy all provided fields into this.\n    // this allows treating the configuration instance like a\n    // normal json object, but with additional helper functions.\n    Object.assign(this, configuration);\n  }\n\n  getSvObserverVersion() {\n    return this.versions && this.versions.svObserverVersion;\n  }\n\n  getGatewayVersion() {\n    return this.versions && this.versions.gatewayVersion;\n  }\n\n  getWebAppVersion() {\n    return this.versions && this.versions.webAppVersion;\n  }\n\n  getInspections() {\n    return this.inspections;\n  }\n\n  getInspectionName(inspectionId) {\n    const inspection = (this.inspections || []).find((i) => i.id === inspectionId);\n    return inspection && inspection.name;\n  }\n\n  getValueNameForId(inspectionId, id) {\n    if (typeof inspectionId === 'string') {\n      inspectionId = parseInt(inspectionId, 10);\n    }\n    const mappings = this.idNameMappings.get(inspectionId);\n    if (mappings) {\n      if (typeof id === 'string') {\n        id = parseInt(id, 10);\n      }\n      const mapping = mappings.get(id);\n      if (mapping) {\n        return mapping.fullLocation;\n      }\n    }\n    return null;\n  }\n\n  getListNameForInspection(inspectionId) {\n    const inspection = this.inspectionMappings.get(inspectionId);\n    return inspection && inspection.listName;\n  }\n\n  getValueNamesForInspection(inspectionId) {\n    const inspection = this.inspectionMappings.get(inspectionId);\n    return inspection && inspection.values;\n  }\n\n  getImageNamesForInspection(inspectionId) {\n    const inspection = this.inspectionMappings.get(inspectionId);\n    return inspection && inspection.images;\n  }\n\n  getAllListNames() {\n    // we could return this.listNames but we only want to return\n    // the list names that are really in use by an inspection.\n    const listNames = [];\n    for (let value of this.inspectionMappings.values()) {\n      const { listName } = value;\n      if (listNames.indexOf(listName) === -1) {\n        listNames.push(listName);\n      }\n    }\n    return listNames;\n  }\n\n  getObjectSelectorItemsForInspection(inspectionId) {\n    return this.objectSelectorItems.get(inspectionId);\n  }\n\n  getObjectSelectorImagesForInspection(inspectionId) {\n    return this.objectSelectorImages.get(inspectionId);\n  }\n\n  // Currently filters array data from values\n  // TODO: array data should be shown in tree, but id must be changed (all have same id atm)\n  filterArrayValuesFromTree = (tree) => {\n    var stack = [],\n      node,\n      ii;\n    stack.push(tree);\n    while (stack.length > 0) {\n      node = stack.pop();\n      if (!node.id && node.children && node.children.length) {\n        let firstChildId = '';\n        for (ii = 0; ii < node.children.length; ii += 1) {\n          if (firstChildId === node.children[ii].id) {\n            node.children = [];\n            node.id = firstChildId;\n            break;\n          }\n          if (node.children[ii].id) {\n            firstChildId = node.children[ii].id;\n          }\n        }\n        for (ii = 0; ii < node.children.length; ii += 1) {\n          stack.push(node.children[ii]);\n        }\n      }\n    }\n    return tree;\n  };\n\n  getConfigTreeByInspectionId(inspectionId) {\n    if (!inspectionId) {\n      logger.warn('getConfigTreeByInspection did not receive inspection id');\n      return;\n    }\n    return this.inspectionToolsetMappings.get(inspectionId);\n  }\n}\n","export default __webpack_public_path__ + \"static/media/show.6ac709c0.svg\";","export default __webpack_public_path__ + \"static/media/info.6a606506.svg\";","export default __webpack_public_path__ + \"static/media/help.64b70362.svg\";","export default __webpack_public_path__ + \"static/media/save.a6a0528c.svg\";","export default __webpack_public_path__ + \"static/media/plus.72585b6a.svg\";","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Select, OutlinedInput, InputLabel, FormControl } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({\n  input: {\n    height: 37,\n    fontSize: '1.4rem',\n  },\n  select: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    fontSize: '1.4rem',\n  },\n  label: {\n    transform: 'translate(14px, 11px) scale(1)',\n    fontSize: '1.4rem',\n  },\n});\n\nclass OutlinedSelection extends Component {\n  state = {\n    labelWidth: 0,\n  };\n\n  componentDidMount() {\n    this.setState({\n      labelWidth: this.InputLabelRef.offsetWidth,\n    });\n  }\n\n  renderOptions = (values, id, labels) => {\n    labels = labels || values;\n    return values.map((name, counter) => {\n      return (\n        <option value={name} key={id + counter}>\n          {labels[counter]}\n        </option>\n      );\n    });\n  };\n\n  render() {\n    const { values, labels, selectedValue, name, id, classes, disabled } = this.props;\n\n    return (\n      <FormControl variant=\"outlined\" style={{ width: '100%' }} disabled={disabled}>\n        <InputLabel\n          htmlFor={id}\n          ref={(ref) => {\n            this.InputLabelRef = ref;\n          }}\n          classes={{ outlined: classes.label }}\n        >\n          {name}\n        </InputLabel>\n        <Select\n          native\n          value={selectedValue || ''}\n          onChange={(e) => this.props.onSelectionChanged({ [id]: e.target.value })}\n          classes={{ root: classes.input }}\n          input={\n            <OutlinedInput\n              name={name}\n              labelWidth={this.state.labelWidth}\n              id={id}\n              classes={{ input: classes.select }}\n            />\n          }\n        >\n          {!disabled && this.renderOptions(values, id, labels)}\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nOutlinedSelection.defaultProps = {\n  values: [],\n  selectedValue: '',\n  name: '',\n  id: '',\n};\n\nOutlinedSelection.propTypes = {\n  values: PropTypes.array.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n  onSelectionChanged: PropTypes.func,\n  name: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default withStyles(styles)(OutlinedSelection);\n","export function replacerMapToJson(key, value) {\n  const originalObject = this[key];\n  if (originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: [...originalObject],\n    };\n  } else {\n    return value;\n  }\n}\n\nexport function reviverJsonToMap(key, value) {\n  if (typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n","export default class Product {\n  constructor({ history, trigger, isReject }) {\n    this.history = history;\n    this.trigger = trigger;\n    this.isReject = isReject;\n    this.useCount = 0;\n    this.images = new Map();\n    this.values = new Map();\n  }\n\n  getImage(imageId) {\n    this.checkNotReleasedYet();\n    return this.images.get(imageId);\n  }\n\n  getImages(imageIds) {\n    this.checkNotReleasedYet();\n    return (imageIds || []).map((imageId) => this.images.get(imageId));\n  }\n\n  getValue(valueId) {\n    this.checkNotReleasedYet();\n    return this.values.get(valueId);\n  }\n\n  getValuesAsString(valueIds) {\n    this.checkNotReleasedYet();\n    return (valueIds || []).map((valueId) => {\n      let value = this.values.has(valueId) && this.values.get(valueId).value;\n\n      if (value === undefined) {\n        value = '<UNAVAILABLE>';\n      }\n      return {\n        id: valueId,\n        value: value.toString(),\n      };\n    });\n  }\n\n  buildUrl(b64Data, contentType = '', sliceSize = 512) {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n\n    const blob = new Blob(byteArrays, { type: contentType });\n    return URL.createObjectURL(blob);\n  }\n\n  async addData({ images, values }) {\n    this.checkNotReleasedYet();\n\n    const imagePromises = [];\n    images.forEach(({ id, image, overlays }) => {\n      if (!this.images.has(id) && image && image.rgbData) {\n        imagePromises.push(this.initImage(id, image, overlays));\n      }\n    });\n\n    values.forEach(({ id, value }) => {\n      if (!this.values.has(id) && value) {\n        const valueStr = this.getValueFromVariant(value);\n        this.values.set(id, {\n          id,\n          value: valueStr,\n        });\n      }\n    });\n\n    await Promise.all(imagePromises);\n  }\n\n  async initImage(id, image, overlays) {\n    const { domImage, url } = await this.buildImage(image);\n    const overlayImages = await this.initOverlayImages(overlays);\n    this.images.set(id, {\n      id,\n      image,\n      domImage,\n      overlays,\n      overlayImages,\n      url,\n    });\n  }\n\n  buildImage({ rgbData, type }) {\n    return new Promise((resolve, reject) => {\n      const arrayBufferView = new Uint8Array(rgbData);\n      const blob = new Blob([arrayBufferView], { type: type || 'image/bmp' });\n      const domURL = self.URL || self.webkitURL || self; // eslint-disable-line\n      const url = domURL.createObjectURL(blob);\n      const domImage = new Image();\n      domImage.onload = () => {\n        resolve({ domImage, url });\n      };\n      domImage.onerror = (e) => {\n        domURL.revokeObjectURL(url);\n        reject(e);\n      };\n      domImage.src = url;\n    });\n  }\n\n  initOverlayImages(overlaysDesc) {\n    const promises = [];\n    ((overlaysDesc && overlaysDesc.overlays) || []).forEach((overlay) => {\n      (overlay.shapeGroups || []).forEach((shapeGroup) => {\n        (shapeGroup.shapes || []).forEach((shape) => {\n          if (shape && shape.image && shape.image.image && shape.image.image.rgbData) {\n            promises.push(\n              this.buildImage(shape.image.image).then(({ domImage, url }) => {\n                shape.image.domImage = domImage;\n                shape.image.url = url;\n                return shape.image;\n              }),\n            );\n          }\n        });\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  getValueFromVariant(v) {\n    if (!v) {\n      return undefined;\n    }\n    return v[v.data];\n  }\n\n  lock() {\n    this.useCount++;\n  }\n\n  release() {\n    this.history?.releaseProduct(this.trigger);\n  }\n\n  releaseImpl() {\n    if (this.useCount <= 0) {\n      throw new Error(`Invalid use count ${this.useCount} in Product::release()`);\n    }\n\n    this.useCount--;\n    if (this.useCount > 0) {\n      return false;\n    }\n\n    this.releaseImages();\n\n    this.images.clear();\n    this.values.clear();\n    this.history = null;\n    this.released = true;\n\n    return true;\n  }\n\n  releaseImages() {\n    this.images.forEach((image) => {\n      this.releaseImage(image);\n\n      image.overlayImages.forEach((overlayImage) => {\n        this.releaseImage(overlayImage);\n      });\n    });\n  }\n\n  releaseImage(image) {\n    if (image.domImage) {\n      image.domImage.onload = undefined;\n      image.domImage.onerror = undefined;\n      image.domImage.remove(); // explicitly remove the image from the DOM\n      image.domImage = null;\n    }\n\n    if (image.url) {\n      const domURL = self.URL || self.webkitURL || self; // eslint-disable-line\n      domURL.revokeObjectURL(image.url);\n    }\n  }\n\n  checkNotReleasedYet() {\n    if (this.released) {\n      throw new Error('Can not use Product after releasing it!');\n    }\n  }\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass OutsideClickHandler extends Component {\n  componentDidMount() {\n    window.addEventListener('click', this.onClickOutside, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.onClickOutside, true);\n  }\n\n  onClickOutside = (e) => {\n    if (!this.wrappedNode || !this.wrappedNode.contains(e.target)) {\n      this.props.onOutsideClick(e);\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"outside-click-handler-wrapper\"\n        ref={(ref) => {\n          this.wrappedNode = ref;\n        }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nOutsideClickHandler.propTypes = {\n  children: PropTypes.node.isRequired,\n  onOutsideClick: PropTypes.func.isRequired,\n};\n\nexport default OutsideClickHandler;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nconst Logo = ({ src, title }) => (\n  <div className=\"logo-wrapper\">\n    <img src={src} alt={title} />\n  </div>\n);\n\nLogo.propTypes = {\n  src: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Logo;\n","export default __webpack_public_path__ + \"static/media/logo.a5b69c2a.svg\";","import modes from '../utils/modes';\nimport Protobuf from './Protobuf';\n\nexport const mapProtobufDeviceModeToWebAppMode = (deviceMode) => {\n  switch (deviceMode) {\n    case Protobuf.SvPb.DeviceModeType.available:\n      return modes.unknownMode.id;\n    case Protobuf.SvPb.DeviceModeType.runMode:\n      return modes.runMode.id;\n    case Protobuf.SvPb.DeviceModeType.stopMode:\n      return modes.stopMode.id;\n    case Protobuf.SvPb.DeviceModeType.regressionMode:\n      return modes.regressionMode.id;\n    case Protobuf.SvPb.DeviceModeType.testMode:\n      return modes.testMode.id;\n    case Protobuf.SvPb.DeviceModeType.editMode:\n      return modes.editMode.id;\n    case Protobuf.SvPb.DeviceModeType.modeChanging:\n      return modes.unknownMode.id;\n    default:\n      throw new Error(`Unsupported device mode ${deviceMode}`);\n  }\n};\n\nexport const mapWebAppModeToProtobufDeviceMode = (mode) => {\n  switch (mode) {\n    case modes.unknownMode.id:\n      return Protobuf.SvPb.DeviceModeType.available;\n    case modes.runMode.id:\n      return Protobuf.SvPb.DeviceModeType.runMode;\n    case modes.stopMode.id:\n      return Protobuf.SvPb.DeviceModeType.stopMode;\n    case modes.regressionMode.id:\n      return Protobuf.SvPb.DeviceModeType.regressionMode;\n    case modes.testMode.id:\n      return Protobuf.SvPb.DeviceModeType.testMode;\n    case modes.editMode.id:\n      return Protobuf.SvPb.DeviceModeType.editMode;\n    default:\n      throw new Error(`Unsupported mode ${mode}`);\n  }\n};\n\nexport const mapLogLevelNameToProtobufLogSeverity = (levelName) => {\n  switch (levelName) {\n    case 'trace':\n      return Protobuf.SvPb.LogSeverity.trace;\n    case 'debug':\n      return Protobuf.SvPb.LogSeverity.debug;\n    case 'info':\n      return Protobuf.SvPb.LogSeverity.info;\n    case 'warn':\n      return Protobuf.SvPb.LogSeverity.warning;\n    case 'error':\n      return Protobuf.SvPb.LogSeverity.error;\n    default:\n      return Protobuf.SvPb.LogSeverity.error;\n  }\n};\n","export default __webpack_public_path__ + \"static/media/overlay-list.d218d7a4.svg\";","import PropTypes from 'prop-types';\n\nconst ProxyType = PropTypes.shape({});\n\nexport default ProxyType;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tree, { TreeNode } from 'rc-tree';\nimport shortId from 'shortid';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport union from 'lodash/union';\n\nimport { isObjectValid } from '../../utils/objectValidator';\n\nimport './styles.scss';\n\nconst styles = () => ({\n  label: {\n    fontSize: '1.4rem',\n    transform: 'translate(10px, 12px) scale(1)',\n  },\n});\n\nconst NUMBER_FILTER_RESULTS = 100;\nconst NUMBER_OF_SELECTABLE_VALUES = 100;\n\nclass ObjectSelector extends React.Component {\n  state = {\n    expandedKeys: [isObjectValid(() => this.props.data.children[0].location)],\n    expandedFilteredKeys: [],\n    checkedKeys: [],\n    filteredCheckedKeys: [],\n    inputValue: '',\n    filteredLocations: [],\n    filteredTree: undefined,\n    countedVisibleValues: 0,\n    countedPossibleValues: 0,\n    selectionLimitReached: false,\n    halfChecked: [],\n  };\n\n  componentDidMount() {\n    this.setSelection();\n    this.setExpandedKeys();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { selection, expandedKeys } = this.props;\n\n    if (selection && prevProps.selection !== selection && selection.length > 0) {\n      this.setSelection();\n    }\n\n    if (expandedKeys && prevProps.expandedKeys !== expandedKeys && expandedKeys.length > 0) {\n      this.setExpandedKeys();\n    }\n  }\n\n  setSelection = () => {\n    const { selection } = this.props;\n\n    this.setState({\n      checkedKeys: selection,\n    });\n  };\n\n  setExpandedKeys = () => {\n    const { expandedKeys } = this.props;\n    if (expandedKeys) {\n      this.setState({\n        expandedKeys: expandedKeys,\n      });\n    }\n  };\n\n  onExpand = (expandedKeys) => {\n    if (this.state.inputValue) {\n      this.setState({\n        expandedFilteredKeys: expandedKeys,\n      });\n    } else {\n      this.props.onExpand(expandedKeys);\n      this.setState({\n        expandedKeys,\n      });\n    }\n  };\n\n  onCheck = (checkedKeys, checkProps) => {\n    let limitedCheckedKeys = this.limitCheckedKeys(checkedKeys, NUMBER_OF_SELECTABLE_VALUES);\n    limitedCheckedKeys = this.checkUnselectingAll(limitedCheckedKeys, checkProps.node);\n\n    const filteredCheckedKeys = limitedCheckedKeys.slice();\n    if (this.state.inputValue) {\n      limitedCheckedKeys = this.updateCheckedKeys(limitedCheckedKeys);\n    }\n\n    limitedCheckedKeys = this.ensureSingleSelection(limitedCheckedKeys);\n\n    this.setChangedIds(limitedCheckedKeys, checkProps);\n    this.setState({\n      checkedKeys: limitedCheckedKeys,\n      filteredCheckedKeys,\n      selectionLimitReached: limitedCheckedKeys.length === NUMBER_OF_SELECTABLE_VALUES,\n    });\n  };\n\n  limitCheckedKeys = (keys, limit) => {\n    const halfChecked = [];\n    if (!limit || limit > keys.length) {\n      limit = keys.length;\n    }\n    const result = [];\n    let condition = Math.abs(limit);\n    let i = 0;\n    while (condition !== 0 && i < keys.length) {\n      if (parseInt(keys[i], 10)) {\n        result.push(keys[i]);\n        condition--;\n      } else {\n        halfChecked.push(keys[i]);\n      }\n\n      i++;\n    }\n\n    this.setState({ halfChecked });\n\n    return result;\n  };\n\n  checkUnselectingAll = (keys, checkedNode) => {\n    const halfChecked = this.state.halfChecked.slice();\n    if (checkedNode.halfChecked) {\n      if (halfChecked.includes(checkedNode.title)) {\n        this.setState({ halfChecked: [] });\n        keys = [];\n      } else {\n        halfChecked.push(checkedNode.title);\n        this.setState({ halfChecked });\n      }\n    }\n    return keys;\n  };\n\n  updateCheckedKeys = (checkedKeys) => {\n    const newSelectedKeys = checkedKeys.filter(\n      (key) => !this.state.filteredCheckedKeys.includes(key),\n    );\n    const newDeselectedKeys = this.state.filteredCheckedKeys.filter(\n      (key) => !checkedKeys.includes(key),\n    );\n    checkedKeys = union(newSelectedKeys, this.state.checkedKeys);\n    checkedKeys = checkedKeys.filter((key) => !newDeselectedKeys.includes(key));\n\n    return checkedKeys;\n  };\n\n  ensureSingleSelection = (checkedKeys) => {\n    if (this.props.singleSelect) {\n      return [checkedKeys[checkedKeys.length - 1]] || [];\n    } else {\n      return checkedKeys;\n    }\n  };\n\n  setChangedIds = (ids, checkProps) => {\n    const filteredIds = (ids || []).filter((id) => parseInt(id, 10) > 0);\n    if (this.props.singleSelect) {\n      const checkedLocation = this.getSelectedLocation(checkProps);\n      this.props.onChange(filteredIds[filteredIds.length - 1] || 0, checkedLocation);\n    } else {\n      this.props.onChange(filteredIds);\n    }\n  };\n\n  onChangeFilter = (event) => {\n    let { data } = this.props;\n    let filteredTree = undefined;\n\n    const inputValue = event.target.value || '';\n    const filteredInputValue = this.cutFilterIgnoreWords(inputValue.toLowerCase()) || '';\n    const initialChars = filteredInputValue.split('');\n    const ctx = {\n      abortRecursion: false,\n      expandedFilteredKeys: [],\n      filteredLocations: [],\n      filteredKeys: [],\n      countSelection: 0,\n    };\n    const countCtx = {\n      countMatches: 0,\n    };\n\n    if (initialChars.length) {\n      const copy = initialChars.slice();\n      const children = [];\n      this.filterNodesRecursively(data, initialChars, children, ctx);\n      this.countMatchingNodesRecursively(data, copy, countCtx);\n      filteredTree = children.length > 0 ? children[0] : { children: [] };\n    }\n\n    const filteredCheckedKeys = this.state.checkedKeys.filter((key) =>\n      ctx.filteredKeys.includes(key),\n    );\n\n    this.setState({\n      filteredLocations: ctx.filteredLocations,\n      filteredTree,\n      filteredCheckedKeys,\n      expandedFilteredKeys: ctx.expandedFilteredKeys,\n      inputValue,\n      countedVisibleValues: ctx.countSelection,\n      countedPossibleValues: countCtx.countMatches,\n    });\n  };\n\n  cutFilterIgnoreWords = (filteredInput) => {\n    const { filterIgnore } = this.props;\n\n    if (filterIgnore) {\n      filterIgnore.forEach((filter) => {\n        filter = filter.toLowerCase();\n        if (filteredInput.startsWith(filter)) {\n          filteredInput = filteredInput.replace(filter, '');\n\n          if (filteredInput.startsWith('.')) {\n            filteredInput = filteredInput.slice(1);\n          }\n        }\n      });\n    }\n\n    return filteredInput;\n  };\n\n  filterNodesRecursively = (node, chars, shadowChildren, ctx) => {\n    if (!node) {\n      return false;\n    }\n    let positions = [];\n    let remainingChars = [];\n    if (chars.length > 0) {\n      remainingChars = this.consumeChars(node.name, chars, positions);\n    }\n\n    if (remainingChars.length === 0) {\n      ctx.filteredLocations.push(node.location);\n      if (node.id && node.children.length === 0) {\n        ctx.filteredKeys.push(node.id);\n      }\n    }\n\n    if (ctx.filteredKeys.length >= NUMBER_FILTER_RESULTS) {\n      ctx.abortRecursion = true;\n    }\n\n    const children = [];\n    let childMatches = false;\n    if (node.children && !ctx.abortRecursion) {\n      node.children.forEach((child) => {\n        if (\n          !ctx.abortRecursion &&\n          this.filterNodesRecursively(child, remainingChars, children, ctx)\n        ) {\n          childMatches = true;\n        }\n      });\n    }\n\n    if (childMatches) {\n      ctx.expandedFilteredKeys.push(node.location);\n    }\n\n    const isMatchingSubtree = remainingChars.length === 0 || childMatches;\n    if (isMatchingSubtree) {\n      if (node.children.length === 0) {\n        ctx.countSelection++;\n      }\n      const shadowNode = this.createFilteredShadowNode(node, positions, children);\n      shadowChildren.push(shadowNode);\n    }\n    return isMatchingSubtree;\n  };\n\n  countMatchingNodesRecursively = (node, chars, countCtx) => {\n    if (!node) {\n      return false;\n    }\n    let positions = [];\n    let remainingChars = [];\n    if (chars.length > 0) {\n      remainingChars = this.consumeChars(node.name, chars, positions);\n    }\n\n    let childMatches = false;\n    if (node.children) {\n      node.children.forEach((child) => {\n        if (this.countMatchingNodesRecursively(child, remainingChars, countCtx)) {\n          childMatches = true;\n        }\n      });\n    }\n\n    const isMatchingSubtree = remainingChars.length === 0 || childMatches;\n    if (isMatchingSubtree && node.children.length === 0) {\n      countCtx.countMatches++;\n    }\n\n    return isMatchingSubtree;\n  };\n\n  consumeChars = (str, chars, positions) => {\n    str = str.toLowerCase();\n    let prevIdx = 0;\n    while (chars.length) {\n      if (chars[0] === '.') {\n        chars = chars.slice(1);\n        break;\n      }\n\n      const idx = str.indexOf(chars[0], prevIdx);\n      if (idx === -1) {\n        break;\n      }\n      positions.push(idx);\n      chars = chars.slice(1);\n      prevIdx = idx + 1;\n    }\n    return chars;\n  };\n\n  createFilteredShadowNode = (node, positions, children) => {\n    const styledText = this.highlightAtPositions(node.name, positions);\n    const shadowNode = {\n      ...node,\n      children,\n      styledText,\n    };\n    return shadowNode;\n  };\n\n  highlightAtPositions = (word, positions) => {\n    let result = [];\n    for (let i = 0; i < word.length; i++) {\n      if (positions.includes(i)) {\n        result.push([\n          <span className=\"filteredText\" key={`strong${shortId.generate()}`}>\n            {word.charAt(i)}\n          </span>,\n        ]);\n      } else {\n        result.push([word.charAt(i)]);\n      }\n    }\n    return [<div key={`div${shortId.generate()}`}>{result}</div>];\n  };\n\n  createTreeNodes = (node, loop) => {\n    if (node.children && node.children.length > 0) {\n      return (\n        <TreeNode\n          // since nodes don't contain a value to subscribe and also don't have a id, we use the location as key\n          // we'll need to filter invalid ids from checkedKeys\n          key={node.location}\n          title={node.styledText || node.name}\n          disableCheckbox={this.props.singleSelect}\n        >\n          {node.children.map(loop)}\n        </TreeNode>\n      );\n    }\n    return <TreeNode key={node.id} title={node.styledText || node.name} location={node.location} />;\n  };\n\n  getSelectedLocation = (childProps) => {\n    if (isObjectValid(() => childProps.node.location)) {\n      return childProps.node.location;\n    }\n    return '';\n  };\n\n  render() {\n    const {\n      checkedKeys,\n      expandedKeys,\n      expandedFilteredKeys,\n      filteredTree,\n      filteredCheckedKeys,\n      inputValue,\n      countedVisibleValues,\n      countedPossibleValues,\n      selectionLimitReached,\n    } = this.state;\n    const loop = (node) => {\n      if (!node) {\n        return;\n      }\n      return this.createTreeNodes(node, loop);\n    };\n\n    const className = inputValue ? 'unfilteredText' : '';\n    const expanded = inputValue ? expandedFilteredKeys : expandedKeys;\n    const rootNode = inputValue ? filteredTree : this.props.data;\n    const visibleCheckedKeys = inputValue ? filteredCheckedKeys : checkedKeys;\n    const treeNodes = rootNode.name ? loop(rootNode) : rootNode.children.map(loop);\n\n    return (\n      <div className=\"object-selector\">\n        <div className=\"topmenu-wrapper\">\n          <div className=\"w100 text\">\n            <div className=\"infotext\">\n              <div className=\"pr2\">Select objects:</div>\n              {selectionLimitReached ? (\n                <div className=\"warning pr2\">\n                  {`(Selection limit of ${NUMBER_OF_SELECTABLE_VALUES} items reached)`}\n                </div>\n              ) : undefined}\n              {inputValue && treeNodes.length > 0 ? (\n                <div className=\"warning\">\n                  {`(${countedVisibleValues} of ${countedPossibleValues} matches are shown)`}\n                </div>\n              ) : undefined}\n            </div>\n          </div>\n          <div className=\"w100\">\n            <TextField\n              label=\"Filter\"\n              type=\"text\"\n              variant=\"outlined\"\n              style={{ width: '100%' }}\n              onChange={this.onChangeFilter}\n              value={this.state.inputValue}\n              InputLabelProps={{ classes: { root: this.props.classes.label } }}\n            />\n          </div>\n        </div>\n        <div>\n          {treeNodes.length > 0 ? (\n            <Tree\n              checkable\n              showLine\n              showIcon={false}\n              selectable={false}\n              onExpand={this.onExpand}\n              expandedKeys={expanded}\n              checkedKeys={visibleCheckedKeys}\n              onCheck={this.onCheck}\n              className={className}\n            >\n              {treeNodes}\n            </Tree>\n          ) : (\n            <div className=\"text\">No filter results</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nObjectSelector.defaultProps = {\n  singleSelect: false,\n  onChange: () => {},\n  onExpand: () => {},\n  selection: [],\n};\n\nObjectSelector.propTypes = {\n  singleSelect: PropTypes.bool,\n  onChange: PropTypes.func,\n  onExpand: PropTypes.func,\n  selection: PropTypes.array,\n};\n\nexport default withStyles(styles)(ObjectSelector);\n","import React, { useState, useRef } from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { TextField, Button } from '@material-ui/core';\n\nimport Dialog from '../../../../components/Dialog';\nimport { languages } from '../../../../translations';\nimport './styles.scss';\n\nconst AliasEditor = ({ open, onClose, selectedAlias, intl }) => {\n  if (!selectedAlias.alias) {\n    selectedAlias.alias = {};\n  }\n\n  const oldState = useRef({ ...selectedAlias.alias });\n  const [alias, setAlias] = useState(selectedAlias || {});\n\n  if (alias.id !== selectedAlias.id) {\n    setAlias(selectedAlias);\n  }\n\n  const renderLanguageAliases = () => {\n    const result = [];\n    (languages || []).forEach((language) => {\n      result.push(\n        <div className=\"row\" key={`rowDiv${language.locale}${selectedAlias.id}`}>\n          <div className=\"label\">Alias {language.name}:</div>\n          <div className=\"textfield\">\n            <TextField\n              id={`aliasLabel${language.locale}`}\n              fullWidth\n              defaultValue={selectedAlias.alias && selectedAlias.alias[language.locale]}\n              onChange={(e) => {\n                alias.alias[language.locale] = e.target.value;\n              }}\n            />\n          </div>\n        </div>,\n      );\n    });\n    return result;\n  };\n\n  return (\n    <Dialog\n      isInView\n      isPopup\n      title={intl.messages['listView.AliasEditor.title']}\n      onClose={() => {\n        alias.alias = oldState.current;\n        onClose(alias);\n      }}\n      open={open}\n    >\n      <div className=\"alias-editor-wrapper\">\n        <div className=\"row\">\n          <div className=\"label\">\n            <FormattedMessage id=\"listView.AliasEditor.dottedName\" />:\n          </div>\n          <div className=\"textfield\">\n            <TextField id=\"dottedNameLabel\" fullWidth value={selectedAlias.name} disabled />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"label\">\n            <FormattedMessage id=\"listView.AliasEditor.value\" />:\n          </div>\n          <div className=\"textfield\">\n            <TextField id=\"valueLabel\" fullWidth disabled value={selectedAlias.value} />\n          </div>\n        </div>\n        {renderLanguageAliases()}\n        <div className=\"buttons\">\n          <Button variant=\"contained\" color=\"primary\" onClick={() => onClose(alias, true)}>\n            <FormattedMessage id=\"listView.AliasEditor.button\" />\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default injectIntl(AliasEditor);\n","export default __webpack_public_path__ + \"static/media/drag.a4b2fa8c.svg\";","import React from 'react';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport Table, { callOrReturn } from 'react-base-table';\n\nimport DragIcon from '../../assets/icons/drag.svg';\n\nimport './style.css';\n\nconst DraggableContainer = sortableContainer(({ children }) => children);\nconst DraggableElement = sortableElement(({ children }) => children);\nconst DraggableHandle = sortableHandle(({ children }) => children);\n\nconst Row = ({ key, index, children, draggable, ...rest }) => {\n  if (!draggable) {\n    return <div {...rest}>{children}</div>;\n  }\n\n  return (\n    <DraggableElement key={key} index={index}>\n      <div {...rest}>\n        <DraggableHandle>\n          <div className=\"draggable-table-handle\">\n            <img src={DragIcon} alt=\"Drag\" />\n          </div>\n        </DraggableHandle>\n        {children}\n      </div>\n    </DraggableElement>\n  );\n};\n\nclass DraggableTable extends React.PureComponent {\n  state = {\n    data: this.props.data,\n  };\n\n  table = React.createRef();\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      const data = [...this.props.data];\n      this.setState({ data });\n    }\n  }\n\n  getContainer = () => {\n    return this.table.current.getDOMNode().querySelector('.BaseTable__body');\n  };\n\n  getHelperContainer = () => {\n    return this.table.current.getDOMNode().querySelector('.BaseTable__table');\n  };\n\n  rowProps = (args) => {\n    const extraProps = callOrReturn(this.props.rowProps);\n    return {\n      ...extraProps,\n      draggable: this.props.draggable,\n      tagName: Row,\n      index: args.rowIndex,\n    };\n  };\n\n  handleSortEnd = ({ oldIndex, newIndex }) => {\n    this.props.onSequenceChange(oldIndex, newIndex);\n    const data = [...this.state.data];\n    const [removed] = data.splice(oldIndex, 1);\n    data.splice(newIndex, 0, removed);\n    this.setState({ data });\n  };\n\n  render() {\n    if (!this.props.draggable) {\n      return (\n        <Table {...this.props} ref={this.table} data={this.state.data} rowProps={this.rowProps} />\n      );\n    }\n\n    return (\n      <DraggableContainer\n        useDragHandle\n        getContainer={this.getContainer}\n        helperContainer={this.getHelperContainer}\n        onSortEnd={this.handleSortEnd}\n      >\n        <Table\n          {...this.props}\n          ref={this.table}\n          data={this.state.data}\n          rowProps={this.rowProps}\n          className=\"draggable\"\n        />\n      </DraggableContainer>\n    );\n  }\n}\n\nDraggableTable.defaultProps = {\n  draggable: true,\n};\n\nexport default DraggableTable;\n","export default __webpack_public_path__ + \"static/media/show-off.8787321d.svg\";","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { injectIntl } from 'react-intl';\nimport { AutoResizer } from 'react-base-table';\nimport 'react-base-table/styles.css';\n\nimport iconList from '../../assets/icons/overlay-list.svg';\nimport ActionBar from '../../components/ActionBar';\nimport ActionBarType from '../../types/ActionBarType';\nimport ProxyType from '../../components/Protobuf/ProxyType';\nimport ObjectSelector from '../../components/ObjectSelector';\nimport logger from '../../utils/logger';\nimport { canReadListView, canEditListView } from '../../utils/permissions';\n\nimport AliasEditor from './components/List/AliasEditor';\nimport DraggableTable from '../../components/DraggableTable';\nimport IconButton from '../../components/buttons/IconButton';\nimport { TOGGLE_BUTTON } from '../../types/ActionBarType';\n\nimport EditIcon from '../../assets/icons/edit.svg';\nimport iconShow from '../../assets/icons/show.svg';\nimport iconShowOff from '../../assets/icons/show-off.svg';\n\nimport {\n  initViewState,\n  setViewData,\n  setSharedStateData,\n  setSaveFlag,\n  updateListViewShowAliases,\n} from '../../redux/actions/index';\nimport './style.scss';\n\nclass ListView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listValues: [],\n      expandedKeys: [],\n      isAliasEditorOpen: false,\n      selectedAlias: {},\n      showAliases: false,\n    };\n  }\n\n  componentDidMount() {\n    this.unsubscribeFromProductStream();\n    if (!this.props.isSelectionMode && this.props.selection.length > 0) {\n      this.subscribeToProductStream();\n    }\n\n    if (this.props.showAliasesInList) {\n      this.setState({ showAliases: true });\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.unsubscribeFromProductStream();\n    if (!nextProps.isSelectionMode && nextProps.selection.length > 0) {\n      this.subscribeToProductStream();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromProductStream();\n  }\n\n  subscribeToProductStream() {\n    if (!this.productSub) {\n      const { inspectionId, selection } = this.props;\n      const startAtTriggerCount = -1; // list view can only show one item at a time\n      const desc = { inspectionId, valueIds: selection, startAtTriggerCount };\n      this.productSub = this.props.proxy.subscribeToProductStream(desc, this.onProduct.bind(this));\n    }\n  }\n\n  unsubscribeFromProductStream() {\n    if (this.productSub) {\n      this.props.proxy.unsubscribeFromProductStream(this.productSub);\n      this.productSub = null;\n    }\n  }\n\n  onProduct({ product }) {\n    const listValues = this.createListValues(product);\n    this.setState({ listValues });\n    return Promise.resolve();\n  }\n\n  createListValues(product) {\n    const { configuration, inspectionId, selection } = this.props;\n    const values = product.getValuesAsString(selection);\n    return values.map((entry) => ({\n      ...entry,\n      name: configuration.getValueNameForId(inspectionId, entry.id),\n    }));\n  }\n\n  setAliasColumnVisibility = (visibility) => {\n    this.props.updateListViewShowAliases(visibility);\n    this.props.setSaveFlag(true);\n    this.setState({ showAliases: visibility });\n  };\n\n  saveNewOrdner = (before, after) => {\n    const { selection } = this.props;\n    const [removed] = selection.splice(before, 1);\n    selection.splice(after, 0, removed);\n    this.props.setViewData('selection', selection);\n    this.props.setSaveFlag(true);\n  };\n\n  renderValueSelector = () => {\n    const { configuration, inspectionId, selection } = this.props;\n\n    if (!configuration || !inspectionId) {\n      return;\n    }\n\n    let tree = configuration.getObjectSelectorItemsForInspection(inspectionId).tree;\n    tree = configuration.filterArrayValuesFromTree(tree);\n\n    const filterIgnore = [];\n    const name = configuration.getInspectionName(inspectionId);\n\n    filterIgnore.push(`Inspections.${name}`);\n    filterIgnore.push(`Inspections${name}`);\n    filterIgnore.push(name);\n\n    return (\n      <div style={{ width: '100%', overflow: 'auto', height: '100%' }}>\n        <ObjectSelector\n          data={tree}\n          onChange={(selectedIds) => {\n            this.props.setViewData('selection', selectedIds);\n            this.props.setSaveFlag(true);\n          }}\n          onExpand={(expandedKeys) => this.setState({ expandedKeys })}\n          selection={selection}\n          expandedKeys={this.state.expandedKeys}\n          filterIgnore={filterIgnore}\n        />\n      </div>\n    );\n  };\n\n  renderList = () => {\n    const { intl, locale, myPermissions } = this.props;\n    const { showAliases } = this.state;\n    const data = this.getListData();\n    const columns = [\n      {\n        key: showAliases ? 'Alias/Name' : 'Name',\n        dataKey: 'name',\n        title: showAliases ? 'Alias/Name' : 'Name',\n        width: 0,\n        flexGrow: 2,\n      },\n      {\n        key: 'Values',\n        dataKey: 'value',\n        title: 'Values',\n        width: 0,\n        flexGrow: 1,\n      },\n    ];\n\n    if (canEditListView(myPermissions)) {\n      columns.push({\n        key: '',\n        dataKey: 'editAlias',\n        title: '',\n        width: 50,\n      });\n    }\n\n    const tableData = data.map((row) => {\n      row.name = showAliases ? (row.alias && row.alias[locale]) || row.name : row.name;\n      return {\n        ...row,\n        editAlias: (\n          <IconButton\n            tooltip={intl.messages['listView.AliasEditor.title']}\n            onClick={() => this.setState({ selectedAlias: row, isAliasEditorOpen: true })}\n            iconUrl={EditIcon}\n            key=\"editAlias\"\n          />\n        ),\n      };\n    });\n\n    return (\n      <div style={{ height: '100%' }}>\n        <AutoResizer>\n          {({ width, height }) => (\n            <DraggableTable\n              columns={columns}\n              data={tableData}\n              width={width}\n              height={height}\n              headerHeight={30}\n              rowHeight={30}\n              onSequenceChange={(before, after) => this.saveNewOrdner(before, after)}\n            />\n          )}\n        </AutoResizer>\n        {this.renderAliasEditor()}\n      </div>\n    );\n  };\n\n  renderAliasEditor = () => {\n    const { selectedAlias, listValues, isAliasEditorOpen } = this.state;\n    const currentValueObject = (listValues || []).find((value) => value.id === selectedAlias.id);\n\n    if (!currentValueObject || !isAliasEditorOpen) {\n      return;\n    }\n\n    return (\n      <AliasEditor\n        onClose={(alias, isSaved = false) => this.closeAliasEditor(alias, isSaved)}\n        open={this.state.isAliasEditorOpen}\n        selectedAlias={currentValueObject}\n      />\n    );\n  };\n\n  getListData = () => {\n    const { aliases } = this.props;\n    const data = this.state.listValues;\n\n    if (aliases) {\n      (data || []).map((entry) => {\n        if (aliases.has(entry.id)) {\n          const alias = aliases.get(entry.id);\n          if (!alias) {\n            logger.error(`Could not load alias for objectId ${entry.id}`);\n            return entry;\n          }\n\n          if (!alias.alias) {\n            logger.info(`There is no alias value stored for ${alias.dottedName}.`);\n            return entry;\n          }\n\n          entry.alias = alias.alias;\n        }\n        return entry;\n      });\n    }\n    return data;\n  };\n\n  closeAliasEditor = (alias, isSaved) => {\n    if (alias) {\n      const { aliases } = this.props;\n\n      Object.keys(alias.alias).forEach((language) => {\n        if (alias.alias[language] === '') {\n          delete alias.alias[language];\n        }\n      });\n\n      const isEmpty = Object.keys(alias.alias).length === 0;\n      if (aliases.has(alias.id)) {\n        const newAlias = aliases.get(alias.id);\n        newAlias.alias = alias.alias;\n\n        if (isEmpty) {\n          aliases.delete(alias.id);\n        } else {\n          aliases.set(alias.id, newAlias);\n        }\n      } else {\n        if (!isEmpty) {\n          aliases.set(alias.id, { objectId: alias.id, dottedName: alias.name, alias: alias.alias });\n        }\n      }\n    }\n\n    this.setState({ isAliasEditorOpen: false });\n    if (isSaved) {\n      this.props.setSaveFlag(true);\n    }\n  };\n\n  render() {\n    const { viewActions, isSelectionMode, myPermissions } = this.props;\n    const canEdit = canEditListView(myPermissions);\n\n    if (canReadListView(myPermissions) || canEdit) {\n      return (\n        <div className=\"list-view-wrapper\">\n          {isSelectionMode && canEdit ? this.renderValueSelector() : this.renderList()}\n          <ActionBar isViewAction actions={viewActions(this)} />\n        </div>\n      );\n    }\n\n    return <div></div>;\n  }\n}\n\nListView.defaultProps = {\n  viewActions: (listView) => {\n    const actions = [];\n    if (canEditListView(listView.props.myPermissions)) {\n      actions.push({\n        intlId: 'listView.save',\n        iconUrl: iconList,\n        onClickHandler: () => {\n          listView.props.setViewData('isSelectionMode', !listView.props.isSelectionMode);\n          listView.props.setSaveFlag(true);\n        },\n      });\n    }\n\n    actions.push({\n      type: TOGGLE_BUTTON,\n      id: listView.props.inspectionId,\n      intlId: 'listView.Actionbar.showAliases',\n      iconUrl: iconShow,\n      onClickHandler: () => {\n        listView.setAliasColumnVisibility(true);\n      },\n      intlIdAlternative: 'listView.Actionbar.hideAliases',\n      iconUrlAlternative: iconShowOff,\n      onClickHandlerAlternative: () => {\n        listView.setAliasColumnVisibility(false);\n      },\n      showAlternative: listView.props.showAliasesInList,\n    });\n\n    return actions;\n  },\n  currentMode: undefined,\n  proxy: undefined,\n  isSelectionMode: true,\n  inspections: {},\n  selection: [],\n};\n\nListView.propTypes = {\n  viewActions: ActionBarType.isRequired,\n  currentMode: PropTypes.string,\n  proxy: ProxyType,\n  inspections: PropTypes.object,\n  selection: PropTypes.array,\n  isSelectionMode: PropTypes.bool,\n};\n\nconst initState = {\n  selection: [],\n  isSelectionMode: true,\n};\n\nconst initSharedState = {};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  dispatch(initViewState(inspectionId, viewId, initState, initSharedState));\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    setSharedStateData: (key, data) => dispatch(setSharedStateData(inspectionId, key, data)),\n    updateListViewShowAliases: (show) => dispatch(updateListViewShowAliases(inspectionId, show)),\n    setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n  };\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  try {\n    return {\n      proxy: state.app.proxy,\n      configuration: state.app.configuration,\n      currentMode: state.app.currentMode,\n      selection: state.inspections[inspectionId].views[viewId].selection,\n      isSelectionMode: state.inspections[inspectionId].views[viewId].isSelectionMode,\n      aliases: state.inspections[inspectionId].sharedState.listViewAliases,\n      showAliasesInList: state.inspections[inspectionId].sharedState.showAliasesInList,\n      locale: state.app.locale,\n      myPermissions: state.app.myPermissions,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(ListView));\n","export default __webpack_public_path__ + \"static/media/one.0123db23.svg\";","export default __webpack_public_path__ + \"static/media/download.c1bdaf13.svg\";","export default __webpack_public_path__ + \"static/media/fit-to-width.ea508053.svg\";","export default __webpack_public_path__ + \"static/media/fit-to-height.be413aab.svg\";","export default __webpack_public_path__ + \"static/media/downloadWithOverlays.0ec8c060.svg\";","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { getPropsFromInspection } from '../../../utils/propHelper';\n\nclass ImageInfo extends Component {\n  render() {\n    const { imageInfoClass, cursorPosition, rgbValues, imageDimensions } = this.props;\n    return (\n      <div className={imageInfoClass}>\n        <div className=\"info-table\">\n          <div className=\"th\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.info\" />\n            </div>\n          </div>\n\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.width\" />\n            </div>\n            <div className=\"td\">{imageDimensions.width}</div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.height\" />\n            </div>\n            <div className=\"td\">{imageDimensions.height}</div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">{`${rgbValues.R}, ${rgbValues.G}, ${rgbValues.B}`}</div>\n            <div\n              className=\"td\"\n              style={{\n                backgroundColor: `rgb(${rgbValues.R},${rgbValues.G},${rgbValues.B})`,\n              }}\n            />\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.x\" />\n            </div>\n            <div className=\"td\">{cursorPosition.x}</div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.y\" />\n            </div>\n            <div className=\"td\">{cursorPosition.y}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nImageInfo.defaultProps = {\n  imageInfoClass: '',\n  rgbValues: { R: 0, G: 0, B: 0 },\n  cursorPosition: { width: 0, height: 0 },\n  imageDimensions: { width: 0, height: 0 },\n};\n\nImageInfo.propTypes = {\n  imageInfoClass: PropTypes.string,\n  rgbValues: PropTypes.shape({\n    R: PropTypes.number,\n    G: PropTypes.number,\n    B: PropTypes.number,\n  }),\n  imageDimensions: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number,\n  }),\n  cursorPosition: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }),\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  return getPropsFromInspection(state, inspectionId, viewId, {\n    imageDimensions: 'imageDimensions',\n    cursorPosition: 'cursorPosition',\n    rgbValues: 'rgbValues',\n  });\n};\n\nexport default connect(mapStateToProps)(ImageInfo);\n","export const getPropsFromInspection = (state, inspectionId, viewId, props) => {\n  return Object.keys(props).reduce(\n    (acc, key) => ({\n      ...acc,\n      [key]: state.inspections[inspectionId].views[viewId][key],\n    }),\n    {},\n  );\n};\n","import logger from './logger';\nimport Protobuf from '../protobuf/Protobuf';\nimport modes from '../utils/modes';\nimport { addVariableValueShouldBeInTheRangeNotification } from '../redux/actions/index';\n\nconst MID_SHORT_SIZE = 20;\n\nexport const drawInspectionOverlays = ({\n  drawTarget,\n  zoomFactor,\n  overlays,\n  boundingCoordinates,\n  width,\n  height,\n  currentMode,\n}) => {\n  if (!overlays || overlays.length === 0) {\n    logger.error('drawInspectionOverlays expects overlays but did not receive');\n    return;\n  }\n  const targetContext = drawTarget.getContext('2d');\n  zoomFactor = zoomFactor || 1;\n  if (overlays && overlays.length > 0) {\n    targetContext.setLineDash([]);\n    overlays.forEach((overlay) => {\n      const colorInt = (overlay.color && overlay.color.value) || 0;\n      const colorString = getRgbaString(colorInt);\n      targetContext.fillStyle = colorString;\n      const fontSize = 10 / zoomFactor;\n      targetContext.lineWidth = 1 / zoomFactor;\n      targetContext.font = fontSize + 'px Arial';\n      targetContext.strokeStyle = colorString;\n\n      const boundingShape = overlay.boundingShape.shape;\n\n      switch (boundingShape) {\n        case Protobuf.SvPb.OverlayBoundingShape.fields.rect.name:\n          renderRectangleTool(\n            targetContext,\n            zoomFactor,\n            fontSize,\n            colorString,\n            overlay,\n            boundingCoordinates,\n            currentMode,\n          );\n          break;\n        case Protobuf.SvPb.OverlayBoundingShape.fields.slice.name:\n          renderSliceTool(targetContext, overlay, boundingCoordinates);\n          break;\n        case Protobuf.SvPb.OverlayBoundingShape.fields.perspective.name:\n          renderPerspectiveTool(\n            targetContext,\n            zoomFactor,\n            overlay,\n            boundingCoordinates,\n            width,\n            height,\n          );\n          break;\n        default:\n          logger.error('Unknown boundingShape received');\n          return;\n      }\n    });\n  }\n};\n\nconst renderRectangleTool = (\n  targetContext,\n  zoomFactor,\n  fontSize,\n  colorString,\n  overlay,\n  boundingCoordinates,\n  currentMode,\n) => {\n  const boundingBoxX = Math.abs(boundingCoordinates.minX) + overlay.boundingShape.rect.x.value || 0;\n  const boundingBoxY = Math.abs(boundingCoordinates.minY) + overlay.boundingShape.rect.y.value || 0;\n  const boundingBoxWidth = overlay.boundingShape.rect.w.value || 0;\n  const boundingBoxHeight = overlay.boundingShape.rect.h.value || 0;\n  const { displayBounding, shapeGroups, name: overlayTitle } = overlay;\n\n  const angle = overlay.boundingShape.rect.angle && overlay.boundingShape.rect.angle.value;\n\n  targetContext.fillText(overlayTitle, boundingBoxX, boundingBoxY - 10 / zoomFactor);\n\n  shapeGroups &&\n    shapeGroups.forEach((shapeGroup) => {\n      // Do not show detailLevel 2 OverlayShapes in run mode\n      if (shapeGroup.detailLevel === 2 && currentMode === modes.runMode.id) {\n        return;\n      }\n\n      shapeGroup.shapes.forEach((shape) => {\n        const shapeColor = shape.color && shape.color.value;\n        const shapeColorString = getRgbaString(shapeColor);\n        const { shape: shapeType } = shape;\n\n        const useRotation =\n          angle && angle > 0 && shapeType !== Protobuf.SvPb.OverlayShape.fields.arrow.name;\n\n        if (useRotation) {\n          rotateContextByAngleAroundPoint(targetContext, angle, boundingBoxX, boundingBoxY);\n        }\n\n        switch (shapeType) {\n          case Protobuf.SvPb.OverlayShape.fields.arrow.name:\n            const x1 = Math.abs(boundingCoordinates.minX) + shape.arrow.x1.value || 0;\n            const y1 = Math.abs(boundingCoordinates.minY) + shape.arrow.y1.value || 0;\n            const x2 = Math.abs(boundingCoordinates.minX) + shape.arrow.x2.value || 0;\n            const y2 = Math.abs(boundingCoordinates.minY) + shape.arrow.y2.value || 0;\n\n            const calcAngleDegrees = (x, y) => (Math.atan2(y, x) * 180) / Math.PI;\n\n            const angleBetweenP1andP2 = calcAngleDegrees(x2 - x1, y2 - y1);\n\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n\n            // line\n            targetContext.moveTo(x1, y1);\n            targetContext.lineTo(x2, y2);\n\n            // arrow\n            targetContext.moveTo(x2, y2);\n            // arrow length\n            const r = 15;\n            // calculate one side of arrow and convert to deg\n            const theta1 = (Math.PI * (angleBetweenP1andP2 + 135)) / 180.0;\n            targetContext.lineTo(x2 + r * Math.cos(theta1), y2 + r * Math.sin(theta1));\n\n            targetContext.moveTo(x2, y2);\n            // calculate another side of arrow and convert to deg\n            const theta2 = (Math.PI * (angleBetweenP1andP2 - 135)) / 180.0;\n            targetContext.lineTo(x2 + r * Math.cos(theta2), y2 + r * Math.sin(theta2));\n\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.rectArray.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n            shape.rectArray.rectArray.forEach((rect) => {\n              const rAngle = -rect.angle;\n              if (rAngle && rAngle < 0) {\n                rotateContextByAngleAroundPoint(\n                  targetContext,\n                  rAngle,\n                  boundingBoxX + rect.x,\n                  boundingBoxY + rect.y,\n                );\n              }\n              targetContext.rect(\n                boundingBoxX + rect.x || 0,\n                boundingBoxY + rect.y || 0,\n                rect.w || 0,\n                rect.h || 0,\n              );\n              if (rAngle && rAngle < 0) {\n                targetContext.restore();\n              }\n            });\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.graph.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n\n            if (shape.graph.x.length === shape.graph.y.length && shape.graph.x.length > 0) {\n              targetContext.moveTo(\n                boundingBoxX + (shape.graph.x[0] * boundingBoxWidth) / shape.graph.maxValueX,\n                boundingBoxY + (shape.graph.y[0] * boundingBoxHeight) / shape.graph.maxValueY,\n              );\n              for (let i = 0; i < shape.graph.x.length; i++) {\n                targetContext.lineTo(\n                  boundingBoxX + (shape.graph.x[i] * boundingBoxWidth) / shape.graph.maxValueX,\n                  boundingBoxY +\n                    boundingBoxHeight -\n                    (shape.graph.y[i] * boundingBoxHeight) / shape.graph.maxValueY,\n                ); //x\n              }\n            }\n\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.marker.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n\n            if (shape.marker.orientationType === 1) {\n              if (shape.marker.sizeType === 1) {\n                const strokeHeight = MID_SHORT_SIZE;\n                targetContext.moveTo(\n                  boundingBoxX + shape.marker.value.value,\n                  boundingBoxY + boundingBoxHeight / 2 - strokeHeight / 2,\n                );\n                targetContext.lineTo(\n                  boundingBoxX + shape.marker.value.value,\n                  boundingBoxY + boundingBoxHeight / 2 + strokeHeight / 2,\n                );\n              } else {\n                targetContext.moveTo(\n                  boundingBoxX +\n                    (shape.marker.value.value * boundingBoxWidth) / shape.marker.maxValue +\n                    1,\n                  boundingBoxY,\n                );\n                targetContext.lineTo(\n                  boundingBoxX +\n                    (shape.marker.value.value * boundingBoxWidth) / shape.marker.maxValue +\n                    1,\n                  boundingBoxY + boundingBoxHeight,\n                );\n              }\n            } else {\n              if (shape.marker.sizeType === 1) {\n                const strokeWidth = MID_SHORT_SIZE;\n                targetContext.moveTo(\n                  boundingBoxX + boundingBoxWidth / 2 - strokeWidth / 2,\n                  boundingBoxY + shape.marker.value.value,\n                );\n                targetContext.lineTo(\n                  boundingBoxX + boundingBoxWidth / 2 + strokeWidth / 2,\n                  boundingBoxY + shape.marker.value.value,\n                );\n              } else {\n                targetContext.moveTo(\n                  boundingBoxX,\n                  boundingBoxY +\n                    boundingBoxHeight -\n                    (shape.marker.value.value * boundingBoxHeight) / shape.marker.maxValue +\n                    1,\n                );\n                targetContext.lineTo(\n                  boundingBoxX + boundingBoxWidth,\n                  boundingBoxY +\n                    boundingBoxHeight -\n                    (shape.marker.value.value * boundingBoxHeight) / shape.marker.maxValue +\n                    1,\n                );\n              }\n            }\n\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.markers.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n\n            if (shape.markers.orientationType === 1) {\n              if (shape.markers.sizeType === 1) {\n                const strokeWidth = MID_SHORT_SIZE;\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(\n                    boundingBoxX + shape.markers.value[i],\n                    boundingBoxY + boundingBoxHeight / 2 - strokeWidth / 2,\n                  );\n                  targetContext.lineTo(\n                    boundingBoxX + shape.markers.value[i],\n                    boundingBoxY + boundingBoxHeight / 2 + strokeWidth / 2,\n                  );\n                }\n              } else {\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(boundingBoxX + shape.markers.value[i], boundingBoxY);\n                  targetContext.lineTo(\n                    boundingBoxX + shape.markers.value[i],\n                    boundingBoxY + boundingBoxHeight,\n                  );\n                }\n              }\n            } else {\n              if (shape.markers.sizeType === 1) {\n                const strokeHeight = MID_SHORT_SIZE;\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(\n                    boundingBoxX + boundingBoxWidth / 2 - strokeHeight / 2,\n                    boundingBoxY + shape.markers.value[i],\n                  );\n                  targetContext.lineTo(\n                    boundingBoxX + boundingBoxWidth / 2 + strokeHeight / 2,\n                    boundingBoxY + shape.markers.value[i],\n                  );\n                }\n              } else {\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(boundingBoxX, boundingBoxY + shape.markers.value[i]);\n                  targetContext.lineTo(\n                    boundingBoxX + boundingBoxWidth,\n                    boundingBoxY + shape.markers.value[i],\n                  );\n                }\n              }\n            }\n\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.blockMarker.name:\n            const colors = shape.blockMarker.colors;\n            const changePos = shape.blockMarker.changePos;\n            let currentPos = 0;\n\n            for (let i = 0; i <= changePos.length; i++) {\n              targetContext.beginPath();\n              targetContext.lineWidth = 10 / zoomFactor;\n              targetContext.strokeStyle = getRgbaString(colors[i % colors.length]);\n              targetContext.moveTo(boundingBoxX + currentPos, boundingBoxY + boundingBoxHeight / 2);\n\n              if (i < changePos.length) {\n                targetContext.lineTo(\n                  boundingBoxX + changePos[i],\n                  boundingBoxY + boundingBoxHeight / 2,\n                );\n              } else {\n                targetContext.lineTo(\n                  boundingBoxX + boundingBoxWidth,\n                  boundingBoxY + boundingBoxHeight / 2,\n                );\n              }\n\n              currentPos = changePos[i];\n              targetContext.stroke();\n              targetContext.closePath();\n              targetContext.lineWidth = 1 / zoomFactor;\n            }\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.image.name:\n            const { domImage, x, y, w, h } = shape.image;\n            if (domImage) {\n              // TODO incorporate boundingBoxWidth and boundingBoxHeight\n              targetContext.drawImage(\n                domImage,\n                boundingBoxX + ((x && x.value) || 0),\n                boundingBoxY + ((y && y.value) || 0),\n                (w && w.value) || 100, // TODO better fallback than 100!\n                (h && h.value) || 100, // TODO better fallback than 100!\n              );\n            }\n            break;\n\n          default:\n            logger.warn('Received unknown overlay shape', shapeType);\n            break;\n        }\n        if (useRotation) {\n          targetContext.restore();\n        }\n      });\n    });\n\n  if (displayBounding) {\n    if (angle && angle > 0) {\n      rotateContextByAngleAroundPoint(targetContext, angle, boundingBoxX, boundingBoxY);\n    }\n\n    targetContext.save();\n    targetContext.beginPath();\n    targetContext.strokeStyle = colorString;\n    targetContext.rect(boundingBoxX, boundingBoxY, boundingBoxWidth, boundingBoxHeight);\n    targetContext.stroke();\n    targetContext.closePath();\n\n    if (angle && angle > 0) {\n      targetContext.restore();\n    }\n  }\n\n  targetContext.restore();\n  const maxOverlayTextX = boundingBoxX + targetContext.measureText(overlayTitle).width;\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    boundingBoxX,\n    boundingBoxY - fontSize,\n    Math.max(boundingBoxX + boundingBoxWidth, maxOverlayTextX),\n    boundingBoxY + boundingBoxHeight,\n  );\n};\n\nconst rotateContextByAngleAroundPoint = (targetContext, angle, x, y) => {\n  targetContext.save();\n  targetContext.translate(x, y);\n  targetContext.rotate((angle * Math.PI) / 180);\n  targetContext.translate(-x, -y);\n};\n\nconst renderSliceTool = (targetContext, overlay, boundingCoordinates) => {\n  const { name: overlayTitle } = overlay;\n\n  const centerX = Math.abs(boundingCoordinates.minX) + overlay.boundingShape.slice.centerX.value;\n  const centerY = Math.abs(boundingCoordinates.minY) + overlay.boundingShape.slice.centerY.value;\n  const innerRadius = overlay.boundingShape.slice.innerRadius.value;\n  const outerRadius = overlay.boundingShape.slice.outerRadius.value;\n  const startRadian = calculateRadiansFromAngle(overlay.boundingShape.slice.endAngle.value);\n  const endRadian = calculateRadiansFromAngle(overlay.boundingShape.slice.startAngle.value);\n\n  targetContext.fillText(overlayTitle, centerX - 20, centerY + 20);\n\n  targetContext.beginPath();\n\n  // Maximum a full circle\n  if (endRadian - startRadian <= 2 * Math.PI) {\n    targetContext.arc(centerX, centerY, innerRadius, startRadian, endRadian);\n    targetContext.lineTo(centerX, centerY);\n    targetContext.arc(centerX, centerY, outerRadius, startRadian, endRadian);\n    targetContext.lineTo(centerX, centerY);\n  } else {\n    targetContext.arc(centerX, centerY, innerRadius, startRadian, startRadian + 1.99 * Math.PI);\n    targetContext.arc(\n      centerX,\n      centerY,\n      innerRadius + 1,\n      startRadian + 1.99 * Math.PI,\n      startRadian + 2 * Math.PI,\n    );\n    targetContext.arc(\n      centerX,\n      centerY,\n      innerRadius + 2,\n      startRadian + 2 * Math.PI,\n      startRadian + 2.01 * Math.PI,\n    );\n    targetContext.arc(centerX, centerY, innerRadius + 3, startRadian + 2.01 * Math.PI, endRadian);\n    targetContext.lineTo(centerX, centerY);\n    targetContext.arc(centerX, centerY, outerRadius, startRadian, startRadian + 1.99 * Math.PI);\n    targetContext.arc(\n      centerX,\n      centerY,\n      outerRadius + 1,\n      startRadian + 1.99 * Math.PI,\n      startRadian + 2 * Math.PI,\n    );\n    targetContext.arc(\n      centerX,\n      centerY,\n      outerRadius + 2,\n      startRadian + 2 * Math.PI,\n      startRadian + 2.01 * Math.PI,\n    );\n    targetContext.arc(centerX, centerY, outerRadius + 3, startRadian + 2.01 * Math.PI, endRadian);\n    targetContext.lineTo(centerX, centerY);\n  }\n\n  targetContext.stroke();\n  targetContext.closePath();\n\n  const maxOverlayTextX = centerX - 20 + targetContext.measureText(overlayTitle).width;\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    centerX - outerRadius,\n    centerY - outerRadius,\n    Math.max(centerX + outerRadius, maxOverlayTextX),\n    centerY + outerRadius,\n  );\n};\n\nconst calculateRadiansFromAngle = (angle) => {\n  return ((360 - angle) * Math.PI) / 180;\n};\n\nconst renderPerspectiveTool = (\n  targetContext,\n  zoomFactor,\n  overlay,\n  boundingCoordinates,\n  width,\n  height,\n) => {\n  const { name: overlayTitle } = overlay;\n\n  const textWidth = targetContext.measureText(overlayTitle).width;\n\n  targetContext.fillText(overlayTitle, width / 2 - textWidth / 2, 50);\n\n  const boundingBoxX = Math.abs(boundingCoordinates.minX) || 0;\n  const boundingBoxY = Math.abs(boundingCoordinates.minY) || 0;\n  const boundingBoxWidth = width || 0;\n  const boundingBoxHeight = height || 0;\n  const offset =\n    overlay.boundingShape.perspective.offset && overlay.boundingShape.perspective.offset.value;\n  const orientation = overlay.boundingShape.perspective.orientation;\n\n  // Orientation x\n  if (orientation === 0) {\n    targetContext.moveTo(boundingBoxX, boundingBoxY + boundingBoxHeight / 2);\n    targetContext.lineTo(boundingBoxX + offset, boundingBoxY + 1 / zoomFactor);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth - offset, boundingBoxY + 1 / zoomFactor);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth, boundingBoxY + boundingBoxHeight / 2);\n    targetContext.lineTo(\n      boundingBoxX + boundingBoxWidth - offset,\n      boundingBoxY + boundingBoxHeight - 1 / zoomFactor,\n    );\n    targetContext.lineTo(boundingBoxX + offset, boundingBoxY + boundingBoxHeight - 1 / zoomFactor);\n    targetContext.lineTo(boundingBoxX, boundingBoxY + boundingBoxHeight / 2);\n  }\n\n  // Orientation y\n  if (orientation === 1) {\n    targetContext.moveTo(boundingBoxX + 1 / zoomFactor, boundingBoxY + offset);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth / 2, boundingBoxY);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth - 1 / zoomFactor, boundingBoxY + offset);\n    targetContext.lineTo(\n      boundingBoxX + boundingBoxWidth - 1 / zoomFactor,\n      boundingBoxY + boundingBoxHeight - offset,\n    );\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth / 2, boundingBoxY + boundingBoxHeight);\n    targetContext.lineTo(boundingBoxX + 1 / zoomFactor, boundingBoxY + boundingBoxHeight - offset);\n    targetContext.lineTo(boundingBoxX + 1 / zoomFactor, boundingBoxY + offset);\n  }\n\n  targetContext.stroke();\n  targetContext.closePath();\n};\n\nconst getRgbaString = (colorInt) => {\n  if (typeof colorInt !== 'number' || isNaN(colorInt)) {\n    logger.debug('Could not parse value into color.');\n    // fall back to pink when no valid rgba color value provided\n    return 'pink';\n  }\n  const red = colorInt & 0xff;\n  const green = (colorInt >> 8) & 0xff;\n  const blue = (colorInt >> 16) & 0xff;\n  const alpha = 1;\n  return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n};\n\nexport const setBoundingCoordinatesForCustomOverlays = ({\n  overlay,\n  product,\n  fontSize,\n  boundingCoordinates,\n  dispatch,\n}) => {\n  const coords = { x: 0, y: 0, width: 0, height: 0 };\n  setCustomOverlayCoordinates(product, overlay, coords, dispatch);\n  const textWidth = getTextWidth(overlay.label, fontSize);\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    coords.x,\n    coords.y - fontSize * 2,\n    Math.max(coords.x + coords.width, coords.x + textWidth),\n    coords.y + coords.height,\n  );\n};\n\nexport const setBoundingCoordinatesForInspectionOverlays = ({\n  overlay,\n  fontSize,\n  boundingCoordinates,\n}) => {\n  const coords = { x: 0, y: 0, width: 0, height: 0 };\n  setInspectionOverlayCoordinates(overlay, coords);\n  const textWidth = getTextWidth(overlay.name, fontSize);\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    coords.x,\n    coords.y - fontSize * 2,\n    Math.max(coords.x + coords.width, coords.x + textWidth),\n    coords.y + coords.height,\n  );\n};\n\nconst getTextWidth = (text, fontSize) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.font = fontSize + 'px Arial';\n  return ctx.measureText(text).width;\n};\n\nconst setCustomOverlayCoordinates = (product, overlay, coordinates, dispatch = () => {}) => {\n  const offsetLeft =\n    Number(getValueById(product, overlay.offsetLeftVariable)) || overlay.offsetLeft;\n  const x = Number(getValueById(product, overlay.xVariable)) || overlay.x;\n  coordinates.x = x + offsetLeft;\n\n  const offsetTop = Number(getValueById(product, overlay.offsetTopVariable)) || overlay.offsetTop;\n  const y = Number(getValueById(product, overlay.yVariable)) || overlay.y;\n  coordinates.y = y + offsetTop;\n\n  coordinates.width = Number(getValueById(product, overlay.widthVariable)) || overlay.width;\n  coordinates.height = Number(getValueById(product, overlay.heightVariable)) || overlay.height;\n\n  // we need to wait here for the fallback values to initialize\n  if (\n    overlay.maxHeightFallback !== 0 &&\n    overlay.maxWidthFallback !== 0 &&\n    overlay.minHeightFallback !== 0 &&\n    overlay.minWidthFallback !== 0\n  ) {\n    if (coordinates.x < overlay.minWidthFallback) {\n      coordinates.x = overlay.minWidthFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'X',\n          `${overlay.minWidthFallback}  -   ${overlay.maxWidthFallback}`,\n        ),\n      );\n    }\n\n    if (coordinates.x > overlay.maxWidthFallback) {\n      coordinates.x = overlay.maxWidthFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'X',\n          `${overlay.minWidthFallback}  -   ${overlay.maxWidthFallback}`,\n        ),\n      );\n    }\n\n    if (coordinates.y < overlay.minHeightFallback) {\n      coordinates.y = overlay.minHeightFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'Y',\n          `${overlay.minHeightFallback}  -   ${overlay.maxHeightFallback}`,\n        ),\n      );\n    }\n\n    if (coordinates.y > overlay.maxHeightFallback) {\n      coordinates.y = overlay.maxHeightFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'Y',\n          `${overlay.minHeightFallback}  -   ${overlay.maxHeightFallback}`,\n        ),\n      );\n    }\n  }\n};\n\nconst setInspectionOverlayCoordinates = (overlay, coordinates) => {\n  if (overlay.boundingShape.rect) {\n    coordinates.x = overlay.boundingShape.rect.x.value || 0;\n    coordinates.y = overlay.boundingShape.rect.y.value || 0;\n    coordinates.width = overlay.boundingShape.rect.w.value || 0;\n    coordinates.height = overlay.boundingShape.rect.h.value || 0;\n  }\n};\n\nexport const drawCustomOverlays = ({\n  drawTarget,\n  customOverlays,\n  product,\n  zoomFactor,\n  boundingCoordinates,\n}) => {\n  if (!customOverlays || customOverlays.length === 0) {\n    return;\n  }\n\n  const targetContext = drawTarget.getContext('2d');\n  const activeOverlays = customOverlays.filter((overlay) => overlay.isActive);\n  zoomFactor = zoomFactor || 1;\n  activeOverlays.forEach((overlay) => {\n    targetContext.beginPath();\n\n    const coords = { x: 0, y: 0, width: 0, height: 0 };\n    setCustomOverlayCoordinates(product, overlay, coords);\n    correctCoordsWithBoundingCoordinates(coords, boundingCoordinates);\n\n    const colorVariable = getValueById(product, overlay.colorVariable);\n    let color;\n    if (!colorVariable) {\n      color = overlay.color;\n    } else {\n      color = getRgbaString(colorVariable);\n    }\n\n    targetContext.rect(coords.x, coords.y, coords.width, coords.height);\n\n    targetContext.fillStyle = color;\n    targetContext.lineWidth = 1 / zoomFactor;\n    const fontSize = 10 / zoomFactor;\n    targetContext.font = fontSize + 'px Arial';\n    targetContext.fillText(overlay.label, coords.x, coords.y - fontSize);\n\n    switch (overlay.lineStyle) {\n      case 'dashed':\n        targetContext.setLineDash([5]);\n        break;\n\n      case 'dotted':\n        targetContext.setLineDash([2, 5]);\n        break;\n\n      default:\n        targetContext.setLineDash([]);\n    }\n    targetContext.strokeStyle = color;\n    targetContext.stroke();\n\n    targetContext.closePath();\n  });\n};\n\nconst correctCoordsWithBoundingCoordinates = (actualCoordinates, boundingCoordinates) => {\n  actualCoordinates.x += Math.abs(boundingCoordinates.minX);\n  actualCoordinates.y += Math.abs(boundingCoordinates.minY);\n};\n\nconst updateBoundingCoordinates = (boundingCoordinates, minX, minY, maxX, maxY) => {\n  if (minX < boundingCoordinates.minX) {\n    boundingCoordinates.minX = minX;\n  }\n\n  if (minY < boundingCoordinates.minY) {\n    boundingCoordinates.minY = minY;\n  }\n\n  if (maxX > boundingCoordinates.maxX) {\n    boundingCoordinates.maxX = maxX;\n  }\n\n  if (maxY > boundingCoordinates.maxY) {\n    boundingCoordinates.maxY = maxY;\n  }\n};\n\nconst getValueById = (product, id) => {\n  if (!product || !id) {\n    return;\n  }\n  const valueObj = product.getValue(id);\n  return valueObj && valueObj.value;\n};\n\nexport const extractInspectionOverlays = (product, imageId) => {\n  if (!product || product.released) {\n    return undefined;\n  }\n\n  const image = product.getImage(imageId);\n\n  if (!image) {\n    return undefined;\n  }\n\n  return (\n    (image &&\n      image.overlays &&\n      image.overlays.overlays &&\n      image.overlays.overlays.length > 0 &&\n      image.overlays.overlays) ||\n    []\n  );\n};\n","import { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport isEqual from 'lodash/isEqual';\n\nimport { forceDownload } from '../../../utils/downloader';\nimport {\n  drawCustomOverlays,\n  drawInspectionOverlays,\n  setBoundingCoordinatesForCustomOverlays,\n  setBoundingCoordinatesForInspectionOverlays,\n  extractInspectionOverlays,\n} from '../../../utils/OverlayRenderer';\nimport { isObjectValid } from '../../../utils/objectValidator';\nimport { setViewData, saveImageSettings } from '../../../redux/actions';\nimport logger from '../../../utils/logger';\nimport { canEditImageView } from '../../../utils/permissions';\n\nclass ImageEditor extends Component {\n  state = {\n    image: new Image(),\n    left: 0,\n    top: 0,\n    zoomFactor: 1,\n    currentCursorPosition: { x: 0, y: 0 },\n    canvasDimension: { width: 0, height: 0 },\n  };\n\n  componentDidMount() {\n    this.loadViewSettings();\n    this.props.product.lock();\n    this.initImage(this.props);\n    this.bindEventListeners();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { zoomFactor, left, top } = this.state;\n\n    const productChanged = prevProps.product !== this.props.product;\n    const modeChanged = prevProps.currentMode !== this.props.currentMode;\n    const zoomFactorChanged = prevState.zoomFactor !== zoomFactor;\n    const customOverlaysChanged = !isEqual(this.props.customOverlays, prevProps.customOverlays);\n    const imageMoved = prevState.left !== left || prevState.top !== top;\n\n    if (productChanged) {\n      prevProps.product.release();\n      this.props.product.lock();\n    }\n\n    if (productChanged || modeChanged || zoomFactorChanged || customOverlaysChanged) {\n      this.initImage(this.props);\n    }\n\n    if (zoomFactorChanged || imageMoved) {\n      this.props.saveImageSettings(zoomFactor, { left, top });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.product.release();\n  }\n\n  loadViewSettings() {\n    const { zoomFactor, imagePosition } = this.props.viewSettings;\n    if (zoomFactor) {\n      this.setState({ zoomFactor });\n    }\n\n    if (imagePosition && imagePosition.left) {\n      this.setState({ left: imagePosition.left });\n    }\n\n    if (imagePosition && imagePosition.top) {\n      this.setState({ top: imagePosition.top });\n    }\n  }\n\n  initImage(props) {\n    if (props && props.product && props.imageId) {\n      const image = props.product.getImage(props.imageId);\n      if (image && image.domImage) {\n        this.onImageLoaded(image.domImage);\n      }\n    }\n  }\n\n  onImageLoaded(image) {\n    const { zoomFactor, canvasDimension } = this.state;\n    const { height, width } = canvasDimension;\n    this.setState({ image });\n    this.initCanvas({ canvas: this.canvas, height, width, zoomFactor });\n    this.props.setViewData('imageDimensions', { width: image.width, height: image.height });\n    this.draw(this.canvas, image, zoomFactor);\n    this.setImageInfo();\n  }\n\n  initCanvas({ canvas, height, width, zoomFactor }) {\n    canvas.width = Math.ceil(width * zoomFactor);\n    canvas.height = Math.ceil(height * zoomFactor);\n\n    this.props.setViewData('imageDimensions', { width, height });\n  }\n\n  draw(canvas, image, zoomFactor) {\n    if (!canvas || !image) {\n      console.error('Can not draw because we do not have a canvas');\n      return;\n    }\n\n    const boundingCoordinates = this.setBoundingCoordinates(image, zoomFactor);\n\n    this.setCanvasDimensions(canvas, boundingCoordinates, zoomFactor);\n\n    const ctx = canvas.getContext('2d');\n    ctx.webkitImageSmoothingEnabled = false;\n    ctx.msImageSmoothingEnabled = false;\n    ctx.imageSmoothingEnabled = false;\n    ctx.save();\n    ctx.clearRect(\n      0,\n      0,\n      Math.abs(boundingCoordinates.minX) + boundingCoordinates.maxX,\n      Math.abs(boundingCoordinates.minY) + boundingCoordinates.maxY,\n    );\n    ctx.scale(zoomFactor, zoomFactor);\n    ctx.drawImage(image, Math.abs(boundingCoordinates.minX), Math.abs(boundingCoordinates.minY));\n    this.drawOverlays(canvas, zoomFactor, boundingCoordinates, image.width, image.height);\n    ctx.restore();\n  }\n\n  setBoundingCoordinates = (image, zoomFactor) => {\n    const boundingCoordinates = {\n      minX: 0,\n      minY: 0,\n      maxX: image.width || 0,\n      maxY: image.height || 0,\n    };\n    const fontSize = 10 / zoomFactor;\n    this.getBoundingCoordinatesFromCustomOverlays(boundingCoordinates, fontSize);\n    this.getBoundingCoordinatesFromInspectionOverlays(boundingCoordinates, fontSize);\n\n    return boundingCoordinates;\n  };\n\n  setCanvasDimensions = (canvas, boundingCoordinates, zoomFactor) => {\n    const width = Math.abs(boundingCoordinates.minX) + boundingCoordinates.maxX;\n    const height = Math.abs(boundingCoordinates.minY) + boundingCoordinates.maxY;\n\n    canvas.width = Math.ceil(width * zoomFactor);\n    canvas.height = Math.ceil(height * zoomFactor);\n\n    this.setState({ canvasDimension: { width, height }, boundingCoordinates });\n  };\n\n  drawOverlays(drawTarget, zoomFactor, boundingCoordinates, width, height) {\n    const { product, customOverlays, imageId, currentMode } = this.props;\n    const overlays = extractInspectionOverlays(product, imageId);\n\n    drawCustomOverlays({\n      drawTarget,\n      customOverlays,\n      product,\n      zoomFactor,\n      boundingCoordinates,\n    });\n    drawInspectionOverlays({\n      drawTarget,\n      overlays,\n      zoomFactor,\n      boundingCoordinates,\n      width,\n      height,\n      currentMode,\n    });\n  }\n\n  getBoundingCoordinatesFromCustomOverlays = (boundingCoordinates, fontSize) => {\n    const { product, customOverlays } = this.props;\n    const { image } = this.state;\n\n    const imageWidth = image?.width;\n    const imageHeight = image?.height;\n\n    const minWidthFallback = Number(-imageWidth * 2);\n    const maxWidthFallback = Number(imageWidth * 2);\n\n    const minHeightFallback = Number(-imageHeight * 2);\n    const maxHeightFallback = Number(imageHeight * 2);\n\n    let overlays;\n    overlays = customOverlays.filter((overlay) => overlay.isActive);\n    overlays.map((overlay) =>\n      Object.assign(overlay, {\n        minWidthFallback,\n        maxWidthFallback,\n        minHeightFallback,\n        maxHeightFallback,\n      }),\n    );\n\n    overlays.forEach((overlay) => {\n      setBoundingCoordinatesForCustomOverlays({\n        overlay,\n        product,\n        fontSize,\n        boundingCoordinates,\n        dispatch: this.props.dispatch,\n      });\n    });\n  };\n\n  getBoundingCoordinatesFromInspectionOverlays = (boundingCoordinates, fontSize) => {\n    const { product, imageId } = this.props;\n    const overlays = extractInspectionOverlays(product, imageId);\n\n    overlays &&\n      overlays.forEach((overlay) => {\n        setBoundingCoordinatesForInspectionOverlays({ overlay, fontSize, boundingCoordinates });\n      });\n  };\n\n  setImageInfo = () => {\n    const { isImageInfoOpen } = this.props;\n    const { currentCursorPosition } = this.state;\n\n    if (currentCursorPosition && isImageInfoOpen) {\n      const { x, y } = currentCursorPosition;\n      this.setRgbValues(x, y);\n    }\n  };\n\n  bindEventListeners() {\n    if (canEditImageView(this.props.myPermissions)) {\n      this.containerRef.addEventListener('mousewheel', this.handleScroll);\n      this.containerRef.addEventListener('DOMMouseScroll', this.handleScroll);\n      this.containerRef.addEventListener('mousedown', this.handleMouseDown);\n      this.containerRef.addEventListener('mouseup', this.handleMouseUp);\n      this.containerRef.addEventListener('mouseleave', this.handleMouseUp);\n      this.containerRef.addEventListener('mousemove', this.handleDrag);\n    }\n\n    this.containerRef.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  handleScroll = (evt) => {\n    const delta = evt.wheelDelta ? evt.wheelDelta / 40 : evt.detail ? -evt.detail : 0;\n    if (delta) {\n      const { offsetX, offsetY } = evt;\n      this.zoom(delta, offsetX, offsetY);\n    }\n    evt.preventDefault();\n    return false;\n  };\n\n  handleMouseDown = (event) => {\n    const dragStart = { x: event.pageX, y: event.pageY };\n    const { left, top } = this.state;\n    const dragStartPos = { left, top };\n    this.setState({ dragging: true, dragStart, dragStartPos });\n  };\n\n  handleMouseUp = () => {\n    this.setState({ dragging: false, dragStart: null });\n  };\n\n  handleDrag = (event) => {\n    const { dragging, dragStart, dragStartPos } = this.state;\n    if (!dragging) {\n      return;\n    }\n\n    const diffX = event.pageX - dragStart.x;\n    const diffY = event.pageY - dragStart.y;\n    this.setState({\n      left: dragStartPos.left + diffX,\n      top: dragStartPos.top + diffY,\n    });\n  };\n\n  handleMouseMove = (event) => {\n    const { isImageInfoOpen } = this.props;\n\n    if (isImageInfoOpen) {\n      const cursorPosition = this.getMouseCoordinatesOnElement(event, this.canvas);\n\n      this.setCursorPosition(cursorPosition);\n      this.setRgbValues(cursorPosition.x, cursorPosition.y);\n    }\n  };\n\n  getMouseCoordinatesOnElement = (event) => {\n    const { zoomFactor, boundingCoordinates } = this.state;\n    let offsetX = event.offsetX;\n    let offsetY = event.offsetY;\n    let element = event.target;\n\n    while (element !== this.containerRef) {\n      offsetX += element.offsetLeft;\n      offsetY += element.offsetTop;\n      element = element.parentNode;\n    }\n\n    let x = (offsetX - this.canvas.offsetLeft) / zoomFactor;\n    let y = (offsetY - this.canvas.offsetTop) / zoomFactor;\n\n    if (boundingCoordinates) {\n      x += boundingCoordinates.minX;\n      y += boundingCoordinates.minY;\n    }\n\n    return {\n      x: Math.trunc(x),\n      y: Math.trunc(y),\n    };\n  };\n\n  setRgbValues = (x, y) => {\n    const { image } = this.state;\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(image, 0, 0);\n\n    const colors = ctx.getImageData(x, y, 1, 1).data;\n    const red = colors[0];\n    const green = colors[1];\n    const blue = colors[2];\n    this.props.setViewData('rgbValues', { R: red, G: green, B: blue });\n  };\n\n  setCursorPosition = (cursorPosition) => {\n    const { currentCursorPosition } = this.state;\n    const cursorPositionOnImage = this.trimPositionsOnImageSize(cursorPosition);\n    this.props.setViewData('cursorPosition', cursorPositionOnImage);\n\n    if (\n      currentCursorPosition.x !== cursorPositionOnImage.x ||\n      currentCursorPosition.y !== cursorPositionOnImage.y\n    ) {\n      this.setState({ currentCursorPosition: cursorPosition });\n    }\n  };\n\n  trimPositionsOnImageSize = (cursorPosition) => {\n    const { image } = this.state;\n    if (\n      cursorPosition.x < 0 ||\n      cursorPosition.y < 0 ||\n      cursorPosition.x > image.width ||\n      cursorPosition.y > image.height\n    ) {\n      return { x: 0, y: 0 };\n    }\n\n    return cursorPosition;\n  };\n\n  zoom(delta, offX, offY) {\n    const SCALE_BASE = 1.1;\n    const MIN_ZOOM_FACTOR = 0.05;\n    const MAX_ZOOM_FACTOR = 20;\n    const MAX_CANVAS_SIZE = 4096;\n\n    const scaleFactor = Math.pow(SCALE_BASE, delta);\n    const zoomFactor = this.state.zoomFactor * scaleFactor;\n    if (zoomFactor < MIN_ZOOM_FACTOR || zoomFactor > MAX_ZOOM_FACTOR) {\n      return;\n    }\n\n    const { canvasDimension } = this.state;\n    const longestSide = Math.max(\n      canvasDimension.width * zoomFactor,\n      canvasDimension.height * zoomFactor,\n    );\n    if (longestSide > MAX_CANVAS_SIZE) {\n      return;\n    }\n\n    const { left, top } = this.state;\n    const leftDiff = offX * (1 - scaleFactor);\n    const topDiff = offY * (1 - scaleFactor);\n    this.setState({\n      left: left + leftDiff,\n      top: top + topDiff,\n      zoomFactor,\n    });\n  }\n\n  clamp(v, min, max) {\n    return Math.max(Math.min(v, max), min);\n  }\n\n  resetZoom() {\n    const { boundingCoordinates, zoomFactor } = this.state;\n    this.setState({\n      zoomFactor: 1,\n      left: boundingCoordinates.minX * zoomFactor,\n      top: boundingCoordinates.minY * zoomFactor,\n    });\n  }\n\n  fitToHeight() {\n    const { height } = this.getViewSize();\n    const { image, boundingCoordinates, zoomFactor } = this.state;\n    this.setState({\n      zoomFactor: height / image.height,\n      left: boundingCoordinates.minX * zoomFactor,\n      top: boundingCoordinates.minY * zoomFactor,\n    });\n  }\n\n  fitToWidth() {\n    const { width } = this.getViewSize();\n    const { image, boundingCoordinates, zoomFactor } = this.state;\n    this.setState({\n      zoomFactor: width / image.width,\n      left: boundingCoordinates.minX * zoomFactor,\n      top: boundingCoordinates.minY * zoomFactor,\n    });\n  }\n\n  getViewSize() {\n    return {\n      width: (this.containerRef && this.containerRef.getBoundingClientRect().width) || 200,\n      height: (this.containerRef && this.containerRef.getBoundingClientRect().height) || 200,\n    };\n  }\n\n  downloadOriginalImage() {\n    if (!isObjectValid(() => this.state.image.src)) {\n      logger.info('downloadOriginalImage can not find image source');\n      return;\n    }\n    forceDownload(this.state.image.src, 'image.bmp');\n  }\n\n  downloadOriginalImageWithOverlays() {\n    const { canvasDimension, image } = this.state;\n    const canvas = document.createElement('canvas');\n    canvas.width = canvasDimension.width;\n    canvas.height = canvasDimension.height;\n    this.draw(canvas, image, 1);\n\n    canvas.toBlob((blob) => {\n      const domURL = self.URL || self.webkitURL || self; // eslint-disable-line\n      const url = domURL.createObjectURL(blob);\n      forceDownload(url);\n      domURL.revokeObjectURL(url);\n    });\n  }\n\n  render() {\n    const { zoomFactor, canvasDimension, left, top } = this.state;\n    const height = canvasDimension.height * zoomFactor;\n    const width = canvasDimension.width * zoomFactor;\n\n    return (\n      <div\n        style={{ height: '100%', width: '100%' }}\n        ref={(ref) => {\n          this.containerRef = ref;\n        }}\n      >\n        <canvas\n          className=\"imageCanvas\"\n          style={{\n            position: 'absolute',\n            left,\n            top,\n            width,\n            height,\n          }}\n          ref={(canvas) => {\n            this.canvas = canvas;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst propTypes = {\n  imageSrc: PropTypes.string,\n};\n\nImageEditor.propTypes = propTypes;\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  try {\n    return {\n      customOverlays: state.inspections[inspectionId].sharedState.views[viewId].overlays,\n      currentMode: state.app.currentMode,\n      viewSettings: state.inspections[inspectionId].views[viewId],\n      myPermissions: state.app.myPermissions,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    saveImageSettings: (zoomFactor, imagePosition) =>\n      dispatch(saveImageSettings(inspectionId, viewId, zoomFactor, imagePosition)),\n    dispatch: (...args) => dispatch(...args),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(ImageEditor),\n);\n","export const updateOverlayList = (updatedOverlay, overlayList) =>\n  overlayList.map((overlay) => (overlay.id === updatedOverlay.id ? updatedOverlay : overlay));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Table, { AutoResizer } from 'react-base-table';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { updateOverlayList } from '../../utils/reduxHelper';\n\nimport 'react-base-table/styles.css';\nimport './style.scss';\n\nclass OverlayList extends Component {\n  state = {\n    selectAll: false,\n    selectedRowIndex: -1,\n  };\n\n  componentDidMount() {\n    this.checkAndUpdateAllSelected(this.props.overlays);\n\n    if (this.props.canSelectRow) {\n      this.setState({ selectedRowIndex: 0 });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.checkAndUpdateAllSelected(this.props.overlays);\n    }\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  }\n\n  checkAndUpdateAllSelected = () => {\n    const { overlays } = this.props;\n    let selectAll = true;\n    (overlays || []).forEach((overlay) => {\n      if (!overlay.isActive) {\n        selectAll = false;\n      }\n    });\n\n    this.setState({ selectAll });\n  };\n\n  handleSelectAll = (checked) => {\n    this.setState({ selectAll: checked });\n    this.props.onSelectAll(checked);\n  };\n\n  handleSingleSelect = (checked, overlay) => {\n    const { overlays } = this.props;\n    const updatedOverlay = { ...overlay, isActive: checked };\n    const updatedOverlayList = updateOverlayList(updatedOverlay, overlays);\n\n    this.checkAndUpdateAllSelected(updatedOverlayList);\n    this.props.updateOverlayList(updatedOverlayList);\n  };\n\n  getTableDataFromOverlays = () => {\n    const { overlays } = this.props;\n    const data =\n      overlays &&\n      overlays.map((overlay) => {\n        return {\n          checkbox: this.getCheckboxDefinition4Cell(overlay.id),\n          name: overlay.label,\n          id: overlay.id,\n        };\n      });\n    return data;\n  };\n\n  getColumnDefinition4OverlayTable = () => {\n    return [\n      {\n        key: 'checkbox',\n        dataKey: 'checkbox',\n        title: '',\n        width: 40,\n      },\n      {\n        key: 'name',\n        dataKey: 'name',\n        title: 'Overlays',\n        width: 0,\n        flexGrow: 1,\n      },\n    ];\n  };\n\n  getCheckboxDefinition4Cell = (currentId) => {\n    const { overlays } = this.props;\n    const overlay = overlays.filter((item) => item.id === currentId)[0];\n    const isActive = overlay ? overlay.isActive : false;\n    return (\n      <Checkbox\n        checked={isActive}\n        onChange={(e) => this.handleSingleSelect(e.target.checked, overlay)}\n        style={{\n          padding: 0,\n        }}\n        color=\"primary\"\n        key={`checkbox_${currentId}`}\n      />\n    );\n  };\n\n  getSelectedRowClass = (currendId) => {\n    if (this.props.currentOverlay && this.props.currentOverlay.id === currendId) {\n      return 'overlay-table-selected-row';\n    }\n\n    return '';\n  };\n\n  headerRenderer = ({ cells, columns }) => {\n    const columnHeaders = [];\n    columns.forEach((column, columnIndex) => {\n      if (columnIndex === 0) {\n        columnHeaders.push(\n          <div\n            className=\"base-table-header-column\"\n            style={{ width: columns[columnIndex].width }}\n            key={`header_${columnIndex}`}\n          >\n            <Checkbox\n              checked={this.state.selectAll}\n              onChange={(e) => this.handleSelectAll(e.target.checked)}\n              style={{\n                padding: 0,\n              }}\n              color=\"primary\"\n              key=\"select-all-checkbox\"\n            />\n          </div>,\n        );\n      } else {\n        columnHeaders.push(\n          <div\n            className=\"base-table-header-column\"\n            key={`header_${columnIndex}`}\n            style={{ padding: ' 0 7.5px' }}\n          >\n            {columns[columnIndex].title}\n          </div>,\n        );\n      }\n    });\n\n    return columnHeaders;\n  };\n\n  rowEventHandlers = {\n    onClick: ({ rowData, rowIndex }) => {\n      const { overlays, updateCurrentOverlay } = this.props;\n      this.setState({ selectedRowIndex: rowIndex });\n      updateCurrentOverlay(overlays.filter((item) => item.id === overlays[rowIndex].id)[0]);\n    },\n  };\n\n  setRowClassName = ({ rowData, rowIndex }) => {\n    return this.state.selectedRowIndex === rowIndex ? 'overlay-table-selected-row' : '';\n  };\n\n  render() {\n    const { overlays, canSelectRow, hasActionBar } = this.props;\n\n    if (!overlays) return null;\n    const data = this.getTableDataFromOverlays();\n    const columns = this.getColumnDefinition4OverlayTable();\n\n    return (\n      <AutoResizer key={`autoresizer`}>\n        {({ width, height }) => (\n          <Table\n            headerRenderer={this.headerRenderer}\n            columns={columns}\n            data={data}\n            width={width}\n            height={hasActionBar ? height - 30 : height}\n            headerHeight={30}\n            rowHeight={30}\n            key=\"overlay-table\"\n            rowEventHandlers={canSelectRow ? this.rowEventHandlers : {}}\n            rowClassName={this.setRowClassName}\n          />\n        )}\n      </AutoResizer>\n    );\n  }\n}\n\nOverlayList.defaultProps = {\n  overlays: [],\n  hasActionBar: true,\n};\n\nOverlayList.propTypes = {\n  overlays: PropTypes.array,\n  onSelectAll: PropTypes.func.isRequired,\n  hasActionBar: PropTypes.bool,\n};\n\nexport default OverlayList;\n","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport isEqual from 'lodash/isEqual';\n\nimport './style.scss';\nimport iconOne from '../../assets/icons/one.svg';\nimport iconDownload from '../../assets/icons/download.svg';\nimport iconInfo from '../../assets/icons/info.svg';\nimport iconFitToWidth from '../../assets/icons/fit-to-width.svg';\nimport iconOverlayList from '../../assets/icons/overlay-list.svg';\nimport iconFitToHeight from '../../assets/icons/fit-to-height.svg';\nimport iconDownloadWithOverlays from '../../assets/icons/downloadWithOverlays.svg';\n\nimport logger from '../../utils/logger';\nimport { canReadImageView, canEditImageView } from '../../utils/permissions';\nimport ImageInfo from './components/ImageInfo';\nimport ImageEditor from './components/ImageEditor';\nimport ActionBar from '../../components/ActionBar';\nimport ActionBarType, { SEPARATOR } from '../../types/ActionBarType';\nimport OverlayList from '../../components/OverlayList';\nimport ProxyType from '../../components/Protobuf/ProxyType';\nimport ObjectSelector from '../../components/ObjectSelector';\nimport {\n  initViewState,\n  setViewData,\n  setSharedStateData,\n  addImageNotAvailableNotification,\n  setSaveFlag,\n} from '../../redux/actions/index';\n\nclass ImageView extends Component {\n  state = {\n    viewSizeChangeCounter: this.props.viewSizeChangeCounter,\n    isOverlayInfoOpen: false,\n    isImageInfoOpen: false,\n    canvasInitResize: false,\n    subscribedSource: undefined,\n  };\n\n  componentDidMount() {\n    if (this.props.sourceImage) {\n      this.unsubscribeFromProductStream();\n      this.resubscribeToProductStream(this.props.sourceImage, this.props.overlays);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.updateViewSize(nextProps.viewSizeChangeCounter);\n\n    const oldVariables = this.getUsedVariablesFromOverlay(this.props.overlays);\n    const newVariables = this.getUsedVariablesFromOverlay(nextProps.overlays);\n    if (\n      !isEqual(oldVariables, newVariables) ||\n      (this.state.subscribedSource !== nextProps.sourceImage && nextProps.sourceImage)\n    ) {\n      this.resubscribeToProductStream(nextProps.sourceImage, nextProps.overlays);\n    }\n\n    if (this.props.isBrowserWindowVisible !== nextProps.isBrowserWindowVisible) {\n      if (nextProps.isBrowserWindowVisible) {\n        this.resubscribeToProductStream(this.props.sourceImage, this.props.overlays);\n      } else {\n        this.unsubscribeFromProductStream();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromProductStream();\n  }\n\n  updateViewSize = (newViewSizeChangeCounter) => {\n    if (\n      newViewSizeChangeCounter > this.state.viewSizeChangeCounter ||\n      this.state.viewSizeChangeCounter === undefined\n    ) {\n      this.setState({ viewSizeChangeCounter: newViewSizeChangeCounter });\n    }\n  };\n\n  resubscribeToProductStream = (imageId, overlays) => {\n    if (imageId) {\n      this.unsubscribeFromProductStream();\n      this.subscribeToProductStream(imageId, overlays);\n      this.setState({ subscribedSource: imageId });\n    }\n  };\n\n  subscribeToProductStream = (imageId, overlays) => {\n    if (!this.productSub) {\n      const { inspectionId } = this.props;\n      const startAtTriggerCount = -1; // image view can only show one item at a time\n      const imageIds = [imageId];\n      const valueIds = this.getUsedVariablesFromOverlay(overlays);\n      const desc = { inspectionId, imageIds, valueIds, startAtTriggerCount };\n      this.productSub = this.props.proxy.subscribeToProductStream(desc, this.onProduct);\n    }\n  };\n\n  unsubscribeFromProductStream = () => {\n    if (this.productSub) {\n      this.props.proxy.unsubscribeFromProductStream(this.productSub);\n      this.productSub = null;\n    }\n  };\n\n  getUsedVariablesFromOverlay = (overlays) => {\n    const variables = [];\n    overlays &&\n      overlays.forEach((overlay) => {\n        Object.keys(overlay).forEach((key) => {\n          if (key.indexOf('Variable') > -1 && overlay[key] && !variables.includes(overlay[key])) {\n            variables.push(overlay[key]);\n          }\n        });\n      });\n    return variables;\n  };\n\n  setAllOverlaysActive = (isActive) => {\n    const updatedOverlays = this.props.overlays.map((overlay) => ({\n      ...overlay,\n      isActive,\n    }));\n    this.props.setSharedStateData('overlays', updatedOverlays);\n    this.props.setSaveFlag(true);\n  };\n\n  createActiveOverlayList = (overlays) => overlays.filter((overlay) => overlay.isActive);\n\n  createActiveOverlayIdList = (overlays) => {\n    const activeOverlays = overlays.filter((overlay) => overlay.isActive);\n    return activeOverlays.map((overlay) => overlay.id);\n  };\n\n  onProduct = ({ product }) => {\n    const imageId = this.props.sourceImage;\n\n    this.setState({ imageId, product });\n    if (!this.state.canvasInitResize) {\n      this.setState({ canvasInitResize: true });\n    }\n  };\n\n  toggleOverlayInfo = () => {\n    this.setState({\n      isOverlayInfoOpen: !this.state.isOverlayInfoOpen,\n      isImageInfoOpen: false,\n    });\n  };\n\n  toggleImageInfo = () => {\n    this.setState({\n      isImageInfoOpen: !this.state.isImageInfoOpen,\n      isOverlayInfoOpen: false,\n    });\n  };\n\n  setSourceImageId = (id) => {\n    if (!id) {\n      logger.error(`OjectSelector did not return a valid id ${id}.`);\n      return;\n    }\n    this.props.setSharedStateData('sourceImage', id);\n  };\n\n  updateOverlayList = (updatedOverlayList) => {\n    this.props.setSharedStateData('overlays', updatedOverlayList);\n    this.props.setSaveFlag(true);\n  };\n\n  setTitleFromConfig = () => {\n    const { sourceImage, inspectionId, configuration } = this.props;\n    if (configuration) {\n      const path = configuration.getValueNameForId(inspectionId, sourceImage);\n      if (path) {\n        this.props.setViewData('windowName', path);\n      }\n    }\n  };\n\n  renderObjectSelector = () => {\n    const { configuration, inspectionId } = this.props;\n    if (!configuration || !inspectionId) {\n      return;\n    }\n    return (\n      <div style={{ width: '100%', overflow: 'auto' }}>\n        <ObjectSelector\n          singleSelect\n          data={configuration.getObjectSelectorImagesForInspection(inspectionId).tree}\n          onChange={(selectedId, checkedLocation) => {\n            this.setSourceImageId(selectedId);\n            this.props.setViewData('windowName', checkedLocation);\n            this.props.setSaveFlag(true);\n          }}\n        />\n      </div>\n    );\n  };\n\n  renderImageView = () => {\n    const { viewActions } = this.props;\n\n    return (\n      <div style={{ height: '100%', width: '100%' }}>\n        <div style={{ height: '100%', width: '100%' }}>{this.renderImageViewImpl()}</div>\n        <ActionBar isViewAction actions={viewActions(this)} />\n      </div>\n    );\n  };\n\n  renderImageViewImpl() {\n    const { product } = this.state;\n    if (!product || product.released) {\n      return <div>&lt;UNAVAILABLE&gt;</div>;\n    }\n\n    return [this.renderImageEditor(), this.renderImageInfo(), this.renderOverlayList()];\n  }\n\n  renderImageEditor() {\n    const { inspectionId, id } = this.props;\n    const { product, imageId, isImageInfoOpen } = this.state;\n\n    return (\n      <ImageEditor\n        ref={(ref) => {\n          this.imageEditor = ref;\n        }}\n        id={id}\n        inspectionId={inspectionId}\n        imageId={imageId}\n        product={product}\n        key={`ImageEditor${id}`}\n        isImageInfoOpen={isImageInfoOpen}\n      />\n    );\n  }\n\n  renderImageInfo() {\n    const { inspectionId, id } = this.props;\n    const { isImageInfoOpen } = this.state;\n\n    if (!isImageInfoOpen) {\n      return;\n    }\n\n    return (\n      <ImageInfo\n        id={id}\n        key={`ImageInfo${id}`}\n        inspectionId={inspectionId}\n        imageInfoClass={classNames({ 'info-box': true })}\n      />\n    );\n  }\n\n  renderOverlayList() {\n    const { overlays, id } = this.props;\n    const { isOverlayInfoOpen } = this.state;\n\n    if (!isOverlayInfoOpen) {\n      return;\n    }\n\n    return (\n      <div className={classNames({ 'info-box': true })} key={`OverlayList${id}`}>\n        <OverlayList\n          overlays={overlays}\n          updateOverlayList={this.updateOverlayList}\n          canSelectRow={false}\n          onSelectAll={(checked) => this.setAllOverlaysActive(checked)}\n          hasActionBar={false}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { sourceImage, myPermissions } = this.props;\n\n    this.setTitleFromConfig();\n\n    if (canReadImageView(myPermissions) || canEditImageView(myPermissions)) {\n      return (\n        <div className=\"image-view-wrapper\">\n          {sourceImage ? this.renderImageView() : this.renderObjectSelector()}\n        </div>\n      );\n    }\n\n    return <div></div>;\n  }\n}\n\nImageView.defaultProps = {\n  viewActions: (imageView) => {\n    const actions = [];\n    const canEdit = canEditImageView(imageView.props.myPermissions);\n\n    if (canEdit) {\n      actions.push({\n        intlId: 'imageView.zoomOut',\n        iconUrl: iconOne,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.resetZoom();\n          }\n        },\n      });\n      actions.push({\n        intlId: 'imageView.fitToWidth',\n        iconUrl: iconFitToWidth,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.fitToWidth();\n          }\n        },\n      });\n      actions.push({\n        intlId: 'imageView.fitToHeight',\n        iconUrl: iconFitToHeight,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.fitToHeight();\n          }\n        },\n      });\n    }\n\n    if (canReadImageView(imageView.props.myPermissions) || canEdit) {\n      actions.push({\n        type: SEPARATOR,\n      });\n      actions.push({\n        intlId: 'imageView.save',\n        iconUrl: iconDownload,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.downloadOriginalImage();\n          }\n        },\n      });\n      actions.push({\n        intlId: 'imageView.saveWithOverlays',\n        iconUrl: iconDownloadWithOverlays,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.downloadOriginalImageWithOverlays();\n          }\n        },\n      });\n      actions.push({\n        type: SEPARATOR,\n      });\n      actions.push({\n        intlId: 'imageView.overlayListToggle',\n        iconUrl: iconOverlayList,\n        onClickHandler: () => {\n          imageView.toggleOverlayInfo();\n        },\n      });\n      actions.push({\n        intlId: 'imageView.imageInfoToggle',\n        iconUrl: iconInfo,\n        onClickHandler: () => {\n          imageView.toggleImageInfo();\n        },\n      });\n    }\n\n    return actions;\n  },\n  overlayActions: () => [],\n  inRunMode: false,\n  currentMode: undefined,\n  proxy: undefined,\n  rgbValues: { R: 0, G: 0, B: 0 },\n  cursorPosition: { width: 0, height: 0 },\n};\n\nImageView.propTypes = {\n  viewActions: ActionBarType,\n  overlayActions: ActionBarType,\n  currentMode: PropTypes.string,\n  viewSizeChangeCounter: PropTypes.number,\n  overlays: PropTypes.array, //eslint-disable-line\n  proxy: ProxyType,\n  sourceImage: PropTypes.number,\n};\n\nconst initState = {\n  scaleFactor: 0,\n  rgbValues: { R: 0, G: 0, B: 0 },\n  imageDimensions: { width: 0, height: 0 },\n  cursorPosition: { x: 0, y: 0 },\n};\n\nconst initSharedState = {\n  overlays: [],\n  sourceImage: 0,\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  dispatch(initViewState(inspectionId, viewId, initState, initSharedState));\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    setSharedStateData: (key, data) =>\n      dispatch(setSharedStateData(inspectionId, key, data, viewId)),\n    addImageNotAvailableNotification: () => dispatch(addImageNotAvailableNotification()),\n    setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n  };\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  const result = {\n    proxy: state.app.proxy,\n    configuration: state.app.configuration,\n    currentMode: state.app.currentMode,\n    viewSizeChangeCounter: state.viewSet.viewSizeChangeCounter,\n    myPermissions: state.app.myPermissions,\n    isBrowserWindowVisible: state.app.isBrowserWindowVisible,\n  };\n\n  try {\n    return {\n      ...result,\n      overlays: state.inspections[inspectionId].sharedState.views[viewId].overlays,\n      sourceImage: Number(state.inspections[inspectionId].sharedState.views[viewId].sourceImage),\n    };\n  } catch (error) {\n    return result;\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageView);\n","export default __webpack_public_path__ + \"static/media/before.53297893.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScrollContainer = ({ children }) => (\n  <div className=\"overflow-scroll absolute w-100 h-100 pa2 top-0 left-0\">{children}</div>\n);\n\nScrollContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ScrollContainer;\n","import shortId from 'shortid';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport iconBack from '../../assets/icons/back.svg';\nimport iconSave from '../../assets/icons/save.svg';\nimport Heading from '../../components/typo/Heading';\nimport iconClose from '../../assets/icons/close.svg';\nimport iconBefore from '../../assets/icons/before.svg';\nimport ActionBar from '../../components/ActionBar';\nimport ScrollContainer from '../../components/layout/ScrollContainer';\n\nclass RecipeView extends Component {\n  renderConfiguration = (configuration) => (\n    <div className=\"flex\">\n      <span className=\"sans-serif mr2 basis-100\">\n        <FormattedMessage id={configuration.intlId} />:\n      </span>\n      <span className=\"basis-100\">\n        <select className=\"bn w-100 tc\">\n          {configuration.options.map((option) => (\n            <option key={option.title} value={option.value}>\n              {option.title}\n            </option>\n          ))}\n        </select>\n      </span>\n    </div>\n  );\n\n  render() {\n    const { configurations, viewActions } = this.props;\n    return (\n      <div>\n        <ScrollContainer>\n          <div className=\"pa3 flex items-center\">\n            <div className=\"basis-100\">\n              <div>\n                <Heading type=\"h3\" intlId=\"name\" />\n                <input\n                  type=\"text\"\n                  className=\"w-100 bg-near-white mb3 ba b--near-white outline-0 pa1\"\n                />\n              </div>\n              <div>\n                <Heading type=\"h3\" intlId=\"comment\" />\n                <textarea className=\"w-100 h4 bg-near-white ba b--near-white outline-0 pa1\" />\n              </div>\n            </div>\n            <div className=\"basis-100 pa4 pt0 self-baseline\">\n              <Heading type=\"h3\" intlId=\"configuration\" />\n              {configurations.map((configuration) => (\n                <div className=\"bb b--near-white pa1 mb1\" key={shortId.generate()}>\n                  {this.renderConfiguration(configuration)}\n                </div>\n              ))}\n            </div>\n          </div>\n        </ScrollContainer>\n        <ActionBar isViewAction actions={viewActions} />\n      </div>\n    );\n  }\n}\n\nRecipeView.propTypes = {\n  configurations: PropTypes.arrayOf(\n    PropTypes.shape({\n      intlId: PropTypes.string,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string,\n          value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        }),\n      ),\n    }),\n  ).isRequired,\n  viewActions: PropTypes.arrayOf(\n    PropTypes.shape({\n      intlId: PropTypes.string,\n    }),\n  ),\n};\n\nRecipeView.defaultProps = {\n  viewActions: [\n    { intlId: 'back', iconUrl: iconBack },\n    { intlId: 'before', iconUrl: iconBefore },\n    { intlId: 'save', iconUrl: iconSave },\n    { intlId: 'cancel', iconUrl: iconClose },\n  ],\n};\n\nexport default injectIntl(RecipeView);\n","export default __webpack_public_path__ + \"static/media/take-over.e8760b3a.svg\";","export default __webpack_public_path__ + \"static/media/delete-dustbin.8c1d9e0c.svg\";","export default __webpack_public_path__ + \"static/media/down.17f143ff.svg\";","export default __webpack_public_path__ + \"static/media/up.32f62e1a.svg\";","import React, { Component } from 'react';\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\n\nimport './style.scss';\nimport iconTakeOver from '../../../../assets/icons/take-over.svg';\nimport iconDeleteDustbin from '../../../../assets/icons/delete-dustbin.svg';\nimport iconDown from '../../../../assets/icons/down.svg';\nimport iconUp from '../../../../assets/icons/up.svg';\n\nimport ActionBar from '../../../../components/ActionBar';\nimport ActionBarType from '../../../../types/ActionBarType';\nimport AvailableFilterListItemsType from './types/AvailableFilterListType';\n\nconst SortableItem = SortableElement(({ value }) => (\n  <li className=\"filter-list-row\" key={value}>\n    <span className=\"filter-list-row-item\">{value}</span>\n  </li>\n));\n\nconst SortableList = SortableContainer(({ items }) => (\n  <ul>\n    {items.map((item, index) => (\n      <SortableItem key={item.value} index={index} value={item.value} />\n    ))}\n  </ul>\n));\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CurrentFilterListItems: this.props.CurrentFilterListItems,\n    };\n  }\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.setState({\n      CurrentFilterListItems: arrayMove(this.state.CurrentFilterListItems, oldIndex, newIndex),\n    });\n  };\n  render() {\n    const { AvailableFilterListItems, AvailableFilterListActions, CurrentFilterListActions } =\n      this.props;\n    return (\n      <div className=\"parameter-view-filter-wrapper\">\n        <div className=\"available-filters filter-list\">\n          <div className=\"filter-header\">Available Filters</div>\n          <ul className=\"filter-content\">\n            {AvailableFilterListItems.map((item) => (\n              <li className=\"filter-list-row\" key={item.value}>\n                <span className=\"filter-list-row-item\">{item.value}</span>\n              </li>\n            ))}\n          </ul>\n          <div className=\"filter-list-actions\">\n            <ActionBar actions={AvailableFilterListActions} />\n          </div>\n        </div>\n\n        <div className=\"current-filters filter-list\">\n          <div className=\"filter-header\">Available Filters</div>\n          <ul className=\"filter-content\">\n            <SortableList\n              helperClass=\"filter-list-row-item-on-drag\"\n              items={this.state.CurrentFilterListItems}\n              onSortEnd={this.onSortEnd}\n            />\n          </ul>\n          <div className=\"filter-list-actions\">\n            <ActionBar actions={CurrentFilterListActions} />\n          </div>\n        </div>\n\n        <div className=\"property-container\">\n          <div className=\"filter-header\">Properties</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFilter.defaultProps = {\n  AvailableFilterListItems: [\n    { id: '', value: 'Closing Filter', onClick: () => {} },\n    { id: '', value: 'Custom Filter', onClick: () => {} },\n    { id: '', value: 'Custom2 Filter', onClick: () => {} },\n    { id: '', value: 'Dilation Filter', onClick: () => {} },\n    { id: '', value: 'EdgeDetect Filter', onClick: () => {} },\n    { id: '', value: 'EdgeDetect2 Filter', onClick: () => {} },\n    { id: '', value: 'Erosion Filter', onClick: () => {} },\n    { id: '', value: 'HorizonEdge Filter', onClick: () => {} },\n    { id: '', value: 'LaplacianEdge Filter', onClick: () => {} },\n    { id: '', value: 'LaplacianEdge2 Filter', onClick: () => {} },\n    { id: '', value: 'MAX MIN Filter', onClick: () => {} },\n    { id: '', value: 'Opening Filter', onClick: () => {} },\n    { id: '', value: 'Ranking Filter', onClick: () => {} },\n    { id: '', value: 'Sharpen Filter', onClick: () => {} },\n    { id: '', value: 'Sharpen2 Filter', onClick: () => {} },\n    { id: '', value: 'Skeleton Filter', onClick: () => {} },\n    { id: '', value: 'Smooth Filter', onClick: () => {} },\n    { id: '', value: 'Thickening Filter', onClick: () => {} },\n    { id: '', value: 'Thinning Filter', onClick: () => {} },\n    { id: '', value: 'VertEdge Filter', onClick: () => {} },\n    { id: '', value: 'Watershed Filter', onClick: () => {} },\n  ],\n\n  AvailableFilterListActions: [\n    { intlId: 'before', iconUrl: iconTakeOver, onClickHandler: () => {} },\n  ],\n\n  CurrentFilterListActions: [\n    { intlId: 'down', iconUrl: iconDown, onClickHandler: () => {} },\n    { intlId: 'up', iconUrl: iconUp, onClickHandler: () => {} },\n    { intlId: 'delete', iconUrl: iconDeleteDustbin, onClickHandler: () => {} },\n  ],\n\n  CurrentFilterListItems: [\n    { id: '', value: 'Custom Filter', onClick: () => {} },\n    { id: '', value: 'Dilation Filter', onClick: () => {} },\n    { id: '', value: 'Closing Filter', onClick: () => {} },\n  ],\n};\n\nFilter.propTypes = {\n  AvailableFilterListItems: AvailableFilterListItemsType,\n  AvailableFilterListActions: ActionBarType,\n  CurrentFilterListItems: AvailableFilterListItemsType,\n  CurrentFilterListActions: ActionBarType,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\n\nconst AvailableFilterListItemsType = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string,\n    value: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n);\n\nexport default AvailableFilterListItemsType;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport Filter from '../../ParameterView/components/Filter';\nimport ViewSetFactory from '../../ViewSetFactory';\nimport { setParameter, setViewSet } from '../../../redux/actions';\n\nclass ToolSetup extends Component {\n  componentDidUpdate(prevProps) {\n    if (prevProps.node !== this.props.node) {\n      this.setup(this.props.node);\n    }\n  }\n\n  setup = (node) => {\n    switch (node.name) {\n      case 'Equation':\n        this.props.setupParameterView({\n          component: <Filter />,\n        });\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  viewSetFactory = new ViewSetFactory();\n\n  render() {\n    return null;\n  }\n}\n\nToolSetup.defaultProps = {\n  node: undefined,\n};\n\nToolSetup.propTypes = {\n  currentViewSet: PropTypes.shape({\n    id: PropTypes.string,\n    viewSet: PropTypes.shape({ id: PropTypes.string }),\n  }).isRequired,\n  setupParameterView: PropTypes.func.isRequired,\n  setViewSet: PropTypes.func.isRequired,\n  node: PropTypes.shape({\n    uniqueReferenceID: PropTypes.string,\n  }),\n};\n\nconst mapStateToProps = (state) => ({\n  currentViewSet: state.viewSet.currentViewSet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setupParameterView: (parameter) => {\n    dispatch(setParameter(parameter));\n  },\n  setViewSet: (viewSet) => {\n    dispatch(setViewSet(viewSet));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolSetup);\n","const TreebeardStyle = {\n  tree: {\n    base: {\n      whiteSpace: 'nowrap',\n      listStyle: 'none',\n      backgroundColor: 'transparent',\n      margin: 0,\n      padding: 0,\n      color: 'black',\n      fontFamily: 'lucida grande ,tahoma,verdana,arial,sans-serif',\n      fontSize: '14px',\n    },\n    node: {\n      base: {\n        position: 'relative',\n      },\n      link: {\n        cursor: 'pointer',\n        position: 'relative',\n        padding: '0px 5px',\n        display: 'block',\n      },\n      activeLink: {\n        background: 'transparent',\n      },\n      toggle: {\n        base: {\n          position: 'relative',\n          display: 'inline-block',\n          verticalAlign: 'top',\n          marginLeft: '-5px',\n          height: '24px',\n          width: '24px',\n        },\n        wrapper: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          margin: '-7px 0 0 -7px',\n          height: '10px',\n        },\n        height: 10,\n        width: 10,\n        arrow: {\n          fill: '#9DA5AB',\n          strokeWidth: 0,\n        },\n      },\n      header: {\n        base: {\n          display: 'inline-block',\n          verticalAlign: 'top',\n          color: 'black',\n        },\n        connector: {\n          width: '2px',\n          height: '12px',\n          borderLeft: 'solid 2px black',\n          borderBottom: 'solid 2px black',\n          position: 'absolute',\n          top: '0px',\n          left: '-21px',\n        },\n        title: {\n          lineHeight: '24px',\n          verticalAlign: 'middle',\n        },\n      },\n      subtree: {\n        listStyle: 'none',\n        paddingLeft: '10px',\n      },\n      loading: {\n        color: '#E2C089',\n      },\n    },\n  },\n};\n\nexport default TreebeardStyle;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Treebeard } from 'react-treebeard';\n\nimport ToolSetup from './components/ToolSetup';\nimport ActionBar from '../../components/ActionBar';\nimport { setParameter } from '../../redux/actions';\nimport ActionBarType from '../../types/ActionBarType';\nimport TreebeardStyle from './components/TreebeardStyle';\nimport ProxyType from '../../components/Protobuf/ProxyType';\nimport ScrollContainer from '../../components/layout/ScrollContainer';\nimport { canReadToolSetView, canEditToolSetView } from '../../utils/permissions';\n\nclass ToolsetView extends Component {\n  constructor(props) {\n    super(props);\n    this.treeModel = this.buildTreebearViewModel(this.getToolsetData());\n  }\n\n  getToolsetData = () => {\n    const treeDataRaw = this.props.configuration.getConfigTreeByInspectionId(\n      this.props.inspectionId,\n    );\n    let children;\n    const treeData = ((treeDataRaw && treeDataRaw.children) || []).map((node) => {\n      if (!node.children) {\n        return { name: node.name };\n      }\n      children = node.children.map((child) => ({ name: child.name }));\n      return { name: node.name, toggled: false, children };\n    });\n    return treeData;\n  };\n\n  onNodeClicked = (node, toggled) => {\n    if (this.state && this.state.cursor) {\n      this.setState({ cursor: { active: false } });\n    }\n\n    // eslint-disable-next-line\n    node.active = true;\n\n    if (node.children) {\n      // eslint-disable-next-line\n      node.toggled = toggled;\n    }\n    this.setState({\n      cursor: node,\n    });\n  };\n\n  buildTreebearViewModel = (tree) =>\n    tree.map((node) => {\n      if (node.children) {\n        return {\n          name: node.name,\n          children: node.children,\n          toggled: node.toggled,\n        };\n      }\n\n      return {\n        name: node.name,\n      };\n    });\n\n  render() {\n    const { viewActions, myPermissions } = this.props;\n\n    if (canReadToolSetView(myPermissions) || canEditToolSetView(myPermissions)) {\n      return (\n        <div>\n          <ScrollContainer>\n            <div className=\"treebeard\">\n              <ToolSetup node={this.state && this.state.cursor} />\n              <Treebeard\n                data={this.treeModel}\n                onToggle={this.onNodeClicked}\n                style={TreebeardStyle}\n              />\n            </div>\n          </ScrollContainer>\n          <ActionBar isViewAction actions={viewActions} />\n        </div>\n      );\n    }\n    return <div></div>;\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setParameter: (parameter) => dispatch(setParameter(parameter)),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  try {\n    return {\n      proxy: state.app.proxy,\n      configuration: state.app.configuration,\n      myPermissions: state.app.myPermissions,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nToolsetView.defaultProps = {\n  viewActions: [\n    // { intlId: 'back', iconUrl: iconBack, onClickHandler: () => {} },\n    // { intlId: 'before', iconUrl: iconBefore, onClickHandler: () => {} },\n    // { intlId: 'save', iconUrl: iconSave, onClickHandler: () => {} },\n    // { intlId: 'undo', iconUrl: iconUndo, onClickHandler: () => {} },\n  ],\n};\n\nToolsetView.propTypes = {\n  viewActions: ActionBarType.isRequired,\n  proxy: ProxyType,\n  configuration: PropTypes.object,\n};\n\nconst mappedConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default mappedConnect(ToolsetView);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport { setSaveFlag } from '../../../../redux/actions';\nimport { canEditParameterView } from '../../../../utils/permissions';\nimport OutlinedSelection from '../../../../components/OutlinedSelection';\nimport ClearIcon from '../../../../assets/icons/clear.svg';\n\nconst styles = () => ({\n  header: {\n    fontSize: '1.8rem',\n    fontWeight: 'bold',\n    marginBottom: 30,\n  },\n  input: {\n    height: 37,\n    fontSize: '1.4rem',\n  },\n  label: {\n    fontSize: '1.4rem',\n    transform: 'translate(14px, 11px) scale(1)',\n  },\n});\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    htmlFontSize: 10,\n  },\n});\n\nclass OverlayPropertyList extends Component {\n  onChange = (changedValue) => {\n    this.props.setSaveFlag(true);\n    this.props.onChange(changedValue);\n  };\n\n  renderTextField = ({ name, id, disabled }) => {\n    const { currentOverlay, classes } = this.props;\n\n    return (\n      <TextField\n        label={name}\n        style={{ width: '100%' }}\n        id={id}\n        type=\"text\"\n        variant=\"outlined\"\n        disabled={disabled || !currentOverlay}\n        InputProps={{ classes: { input: classes.input } }}\n        InputLabelProps={{ classes: { root: classes.label } }}\n        value={(currentOverlay && currentOverlay[id]) || ''}\n        onChange={(e) => this.onChange({ [id]: e.target.value })}\n      />\n    );\n  };\n\n  renderNumberField = ({ name, id, min, max, disabled }) => {\n    const { currentOverlay, classes } = this.props;\n\n    const value = (currentOverlay && currentOverlay[id]) || '';\n    const trimToMinMax = (min, max, value) => {\n      let valueNumber = Number(value);\n      if (valueNumber > max) {\n        valueNumber = max;\n      }\n      if (valueNumber < min) {\n        valueNumber = min;\n      }\n\n      return valueNumber;\n    };\n    return (\n      <TextField\n        label={name}\n        style={{ width: '100%' }}\n        id={id}\n        type=\"number\"\n        variant=\"outlined\"\n        disabled={disabled || !currentOverlay}\n        InputProps={{\n          classes: { input: classes.input },\n          inputProps: { min, max },\n        }}\n        InputLabelProps={{ classes: { root: classes.label } }}\n        value={value}\n        onChange={(e) => this.onChange({ [id]: trimToMinMax(min, max, e.target.value) })}\n      />\n    );\n  };\n\n  renderSelection = ({ name, id, options, disabled }) => {\n    const { currentOverlay } = this.props;\n\n    return (\n      <OutlinedSelection\n        selectedValue={currentOverlay && currentOverlay[id]}\n        values={options}\n        onSelectionChanged={this.onChange}\n        name={name}\n        id={id}\n        disabled={disabled || !currentOverlay}\n      />\n    );\n  };\n\n  renderObjectSelector = ({ name, id, disabled }) => {\n    const { currentOverlay, classes, inspectionId, configuration } = this.props;\n\n    let value =\n      (currentOverlay &&\n        currentOverlay[id] &&\n        configuration.getValueNameForId(inspectionId, currentOverlay[id])) ||\n      '';\n\n    return (\n      <TextField\n        label={name}\n        style={{ width: '100%' }}\n        id={id}\n        type=\"text\"\n        variant=\"outlined\"\n        disabled={disabled || !currentOverlay}\n        InputProps={{\n          classes: { input: classes.input },\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"clear\"\n                onClick={() => this.onChange({ [id]: '' })}\n                title={id}\n              >\n                <img src={ClearIcon} alt=\"x\" />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{ classes: { root: classes.label } }}\n        value={value}\n        onFocus={() => this.props.openSelection(name, id)}\n      />\n    );\n  };\n\n  render() {\n    const { classes, imageDimensions, myPermissions } = this.props;\n    const imageWidth = imageDimensions?.width;\n    const imageHeight = imageDimensions?.height;\n\n    const minWidth = Number(-imageWidth * 2);\n    const maxWidth = Number(imageWidth * 2);\n\n    const minHeight = Number(-imageHeight * 2);\n    const maxHeight = Number(imageHeight * 2);\n\n    const canEdit = canEditParameterView(myPermissions);\n    return (\n      <div className=\"parameter-view-overlay-overlaypropertylist\">\n        <MuiThemeProvider theme={theme}>\n          <label className={classes.header}>Overlay parameters</label>\n          {this.renderTextField({ name: 'Label', id: 'label', disabled: !canEdit })}\n\n          {this.renderNumberField({\n            name: 'X',\n            id: 'x',\n            min: minWidth,\n            max: maxWidth,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({ name: 'X Variable', id: 'xVariable', disabled: !canEdit })}\n\n          {this.renderNumberField({\n            name: 'Offset Left',\n            id: 'offsetLeft',\n            min: minWidth,\n            max: maxWidth,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({\n            name: 'Offset Left Variable',\n            id: 'offsetLeftVariable',\n            disabled: !canEdit,\n          })}\n\n          {this.renderNumberField({\n            name: 'Y',\n            id: 'y',\n            min: minHeight,\n            max: maxHeight,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({ name: 'Y Variable', id: 'yVariable', disabled: !canEdit })}\n\n          {this.renderNumberField({\n            name: 'Offset Top',\n            id: 'offsetTop',\n            min: minHeight,\n            max: maxHeight,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({\n            name: 'Offset Top Variable',\n            id: 'offsetTopVariable',\n            disabled: !canEdit,\n          })}\n\n          {this.renderNumberField({\n            name: 'Width',\n            id: 'width',\n            min: minWidth,\n            max: maxWidth,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({\n            name: 'Width Variable',\n            id: 'widthVariable',\n            disabled: !canEdit,\n          })}\n\n          {this.renderNumberField({\n            name: 'Height',\n            id: 'height',\n            min: minHeight,\n            max: maxHeight,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({\n            name: 'Height Variable',\n            id: 'heightVariable',\n            disabled: !canEdit,\n          })}\n          {this.renderTextField({ name: 'Color', id: 'color', disabled: !canEdit })}\n          {this.renderObjectSelector({\n            name: 'Color Variable',\n            id: 'colorVariable',\n            disabled: !canEdit,\n          })}\n\n          {this.renderSelection({\n            name: 'Line Style',\n            id: 'lineStyle',\n            options: ['solid', 'dotted', 'dashed'],\n            disabled: !canEdit,\n          })}\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nconst propTypes = {\n  overlay: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n};\n\nOverlayPropertyList.propTypes = propTypes;\n\nconst mapStateToProps = (state) => {\n  return {\n    configuration: state.app.configuration,\n    myPermissions: state.app.myPermissions,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(OverlayPropertyList));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Dialog from '../../../../components/Dialog';\nimport ObjectSelector from '../../../../components/ObjectSelector';\n\nclass VariableSelection extends Component {\n  setSelection = (selectedId) => {\n    this.props.onClose(selectedId);\n  };\n\n  render() {\n    const { open, title, configuration, inspectionId } = this.props;\n\n    if (!configuration || !inspectionId) {\n      return;\n    }\n\n    let tree = configuration.getObjectSelectorItemsForInspection(inspectionId).tree;\n    tree = configuration.filterArrayValuesFromTree(tree);\n\n    const filterIgnore = [];\n    const name = configuration.getInspectionName(inspectionId);\n\n    filterIgnore.push(`Inspections.${name}`);\n    filterIgnore.push(`Inspections${name}`);\n    filterIgnore.push(name);\n\n    return (\n      <Dialog isInView isPopup title={title} onClose={() => this.props.onClose()} open={open}>\n        <div className=\"objectselector-in-dialog-wrapper\">\n          <ObjectSelector\n            singleSelect\n            data={tree}\n            onChange={(selectedId) => this.setSelection(selectedId)}\n            filterIgnore={filterIgnore}\n          />\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nVariableSelection.defaultProps = {\n  open: false,\n  title: '',\n};\n\nVariableSelection.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => {\n  try {\n    return {\n      configuration: state.app.configuration,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport default connect(mapStateToProps)(VariableSelection);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport './style.scss';\nimport iconPlus from '../../../../assets/icons/plus.svg';\nimport iconDeleteDustbin from '../../../../assets/icons/delete-dustbin.svg';\nimport ActionBar from '../../../../components/ActionBar/index';\nimport ActionBarType from '../../../../types/ActionBarType';\nimport OverlayList from '../../../../components/OverlayList';\nimport { initViewState, setSharedStateData, setSaveFlag } from '../../../../redux/actions';\nimport OverlayPropertyList from './OverlayPropertyList';\nimport VariableSelection from './VariableSelection';\nimport { updateOverlayList } from '../../../../utils/reduxHelper';\nimport { canEditParameterView } from '../../../../utils/permissions';\n\nclass Overlay extends Component {\n  state = {\n    currentOverlay: undefined,\n    isObjectSelectorOpen: false,\n    variableName: 'Variables',\n    variableId: '',\n    selectedVariables: [],\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.overlays && this.state.currentOverlay) {\n      const currentOverlay = nextProps.overlays.filter(\n        (item) => item.id === this.state.currentOverlay.id,\n      )[0];\n      this.setState({\n        currentOverlay,\n      });\n    }\n\n    if (nextProps.overlays) {\n      this.setInitialOverlay(nextProps.overlays);\n    }\n  }\n\n  setInitialOverlay = (overlays) => {\n    if (!this.state.currentOverlay && overlays && overlays.length > 0) {\n      this.setState({\n        currentOverlay: overlays[0],\n      });\n    }\n  };\n\n  setAllOverlaysActive = (isActive) => {\n    try {\n      const updatedOverlays = this.props.overlays.map((overlay) => ({\n        ...overlay,\n        isActive,\n      }));\n      this.props.setSharedStateData('overlays', updatedOverlays);\n      this.props.setSaveFlag(true);\n    } catch (error) {}\n  };\n\n  addNewOverlay = () => {\n    const { overlays } = this.props;\n\n    const newOverlay = {\n      color: '#ebfc02',\n      height: 100,\n      id: Math.floor(Math.random() * 10000),\n      isActive: true,\n      label: 'Overlay',\n      lineStyle: 'solid',\n      width: 100,\n      x: 10,\n      y: 20,\n      offsetLeft: null,\n      offsetTop: null,\n    };\n    try {\n      this.props.setSharedStateData('overlays', [...overlays, newOverlay]);\n      this.setState({\n        currentOverlay: newOverlay,\n      });\n    } catch (error) {}\n  };\n\n  deleteCurrentOverlay = () => {\n    if (!this.state.currentOverlay) {\n      return;\n    }\n\n    try {\n      const { overlays } = this.props;\n      const updatedOverlays = overlays.filter(\n        (overlay) => overlay.id !== this.state.currentOverlay.id,\n      );\n      this.props.setSharedStateData('overlays', updatedOverlays);\n\n      const newCurrentOverlay = this.getNeighborOverlayId(this.state.currentOverlay.id, overlays);\n      this.setState({\n        currentOverlay: overlays.filter((item) => item.id === newCurrentOverlay)[0],\n      });\n    } catch (error) {}\n  };\n\n  getNeighborOverlayId = (id, overlays) => {\n    for (let i = 0; i < overlays.length; i++) {\n      if (overlays[i]['id'] === id) {\n        if (overlays[i - 1]) {\n          return overlays[i - 1]['id'];\n        } else if (overlays[i + 1]) {\n          return overlays[i + 1]['id'];\n        }\n      }\n    }\n    return -1;\n  };\n\n  updateCurrentOverlay = (currentOverlay) => {\n    this.setState({\n      currentOverlay: currentOverlay,\n    });\n  };\n\n  updateOverlayList = (updatedOverlayList) => {\n    this.props.setSharedStateData('overlays', updatedOverlayList);\n    this.props.setSaveFlag(true);\n  };\n\n  renderPlaceholder = () => {\n    return (\n      <div className=\"parameter-view-overlay-placeholder\">\n        Please select a source for this parameter view.\n      </div>\n    );\n  };\n\n  setVariableSelection = (selectedVariable) => {\n    if (!selectedVariable) {\n      this.setState({ isObjectSelectorOpen: false });\n      return;\n    }\n    const { overlays } = this.props;\n    const { currentOverlay, variableId, selectedVariables } = this.state;\n    const updatedOverlay = {\n      ...currentOverlay,\n      [variableId]: selectedVariable,\n    };\n\n    if (selectedVariable && !selectedVariables.includes(selectedVariable)) {\n      selectedVariables.push(selectedVariable);\n    }\n\n    const updatedOverlayList = updateOverlayList(updatedOverlay, overlays);\n    this.props.setSharedStateData('overlays', updatedOverlayList);\n    this.setState({ isObjectSelectorOpen: false, selectedVariables });\n    this.props.setSaveFlag(true);\n  };\n\n  saveChangeToOverlays = (changedValue, currentOverlay) => {\n    const { overlays } = this.props;\n    const updatedOverlay = { ...currentOverlay, ...changedValue };\n    const updatedOverlayList = updateOverlayList(updatedOverlay, overlays);\n    this.props.setSharedStateData('overlays', updatedOverlayList);\n  };\n\n  render() {\n    const { overlayActions, overlays, inspectionId, id: viewId, imageDimensions } = this.props;\n    const { currentOverlay } = this.state;\n\n    if (!overlays) return this.renderPlaceholder();\n    return (\n      <div className=\"parameter-view-overlay-wrapper\">\n        <div className=\"parameter-view-overlay-table-wrapper\">\n          <OverlayList\n            overlays={overlays}\n            currentOverlay={currentOverlay}\n            updateCurrentOverlay={this.updateCurrentOverlay}\n            updateOverlayList={this.updateOverlayList}\n            canSelectRow={true}\n            onSelectAll={(checked) => this.setAllOverlaysActive(checked)}\n          />\n          <ActionBar actions={overlayActions(this)} />\n        </div>\n        <OverlayPropertyList\n          inspectionId={inspectionId}\n          viewId={viewId}\n          currentOverlay={currentOverlay}\n          imageDimensions={imageDimensions}\n          onChange={(value) => this.saveChangeToOverlays(value, currentOverlay)}\n          openSelection={(variableName, variableId) => {\n            this.setState({\n              isObjectSelectorOpen: true,\n              variableName,\n              variableId,\n            });\n          }}\n        />\n        <VariableSelection\n          title={this.state.variableName}\n          onClose={(selectedId) => this.setVariableSelection(selectedId)}\n          open={this.state.isObjectSelectorOpen}\n          inspectionId={inspectionId}\n        />\n      </div>\n    );\n  }\n}\n\n/* eslint-disable  */\nconst defaultPropTypes = {\n  overlayActions: (overlay) => {\n    const actions = [];\n    const canEdit = canEditParameterView(overlay.props.myPermissions);\n\n    if (canEdit) {\n      actions.push({\n        intlId: 'parameterview.overlay.add',\n        iconUrl: iconPlus,\n        onClickHandler: () => {\n          overlay.props.setSaveFlag(true);\n          overlay.addNewOverlay();\n        },\n      });\n    }\n\n    if (canEdit) {\n      actions.push({\n        intlId: 'parameterview.overlay.delete',\n        iconUrl: iconDeleteDustbin,\n        onClickHandler: () => {\n          overlay.props.setSaveFlag(true);\n          overlay.deleteCurrentOverlay();\n        },\n      });\n    }\n\n    return actions;\n  },\n};\n\nconst propTypes = {\n  overlays: PropTypes.array,\n  overlayActions: ActionBarType,\n  currentOverlay: PropTypes.object, //TODO: Add overlay type\n};\n\n/* eslint-enable */\n\nOverlay.propTypes = propTypes;\nOverlay.defaultProps = defaultPropTypes;\n\nconst mapStateToProps = (state, ownProps) => {\n  try {\n    const { inspectionId } = ownProps;\n    const editingViewId = state.inspections[inspectionId].sharedState.editingViewId;\n    const overlays = state.inspections[inspectionId].sharedState.views[editingViewId].overlays;\n    const imageDimensions = state.inspections[inspectionId].views[editingViewId].imageDimensions;\n    const myPermissions = state.app.myPermissions;\n\n    return { overlays, proxy: state.app.proxy, imageDimensions, myPermissions };\n  } catch (error) {\n    return {};\n  }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  dispatch(initViewState(inspectionId, viewId, {}, {}));\n  return {\n    setSharedStateData: (key, data) => dispatch(setSharedStateData(inspectionId, key, data)),\n    setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overlay);\nexport { defaultPropTypes, propTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\n\nimport './style.scss';\n\nimport Overlay from './components/Overlay';\nimport ActionBar from '../../components/ActionBar';\nimport ActionBarType from '../../types/ActionBarType';\nimport Container from '../../components/layout/Container';\nimport { canReadParameterView, canEditParameterView } from '../../utils/permissions';\n\nclass ParameterView extends Component {\n  doSomething = () => {}; // Implement some more logic\n\n  render() {\n    const { parameter, myPermissions } = this.props;\n\n    if (canReadParameterView(myPermissions) || canEditParameterView(myPermissions)) {\n      return (\n        <div className=\"parameter-view-wrapper\">\n          <Container>\n            {parameter.component || (\n              <Overlay inspectionId={this.props.inspectionId} id={this.props.id} />\n            )}\n          </Container>\n          <ActionBar isViewAction actions={[]} />\n        </div>\n      );\n    }\n    return <div></div>;\n  }\n}\n\nParameterView.defaultProps = {};\n\nParameterView.propTypes = {\n  viewActions: ActionBarType,\n  parameter: PropTypes.arrayOf(\n    PropTypes.shape({\n      component: PropTypes.element,\n    }),\n  ).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  parameter: state.toolSet.parameter,\n  myPermissions: state.app.myPermissions,\n});\n\nexport default injectIntl(connect(mapStateToProps)(ParameterView));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\n// eslint-disable-next-line\nclass FilmStrip extends Component {\n  render() {\n    const { images, onImageClick } = this.props;\n    return (\n      <div className=\"film-strip-container\">\n        {images.map((image) => (\n          <button\n            key={image.product.trigger}\n            className=\"reject-image\"\n            onClick={() => {\n              onImageClick(image.product);\n            }}\n          >\n            <img src={image.combinedSrc} alt=\"\" />\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\n\nFilmStrip.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.string,\n    }),\n  ).isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n\nexport default FilmStrip;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport './styles.scss';\nimport FilmStrip from './components/FilmStrip';\nimport iconPlay from '../../assets/icons/play.svg';\nimport iconPause from '../../assets/icons/pause.svg';\n\nimport { TOGGLE_BUTTON } from '../../types/ActionBarType';\nimport ActionBar from '../../components/ActionBar';\nimport Container from '../../components/layout/Container';\nimport ProxyType from '../../components/Protobuf/ProxyType';\nimport ObjectSelector from '../../components/ObjectSelector';\nimport { drawInspectionOverlays, extractInspectionOverlays } from '../../utils/OverlayRenderer';\nimport { initViewState, setViewData, setSharedStateData, setSaveFlag } from '../../redux/actions';\nimport logger from '../../utils/logger';\nimport {\n  canReadImageStripView,\n  canEditImageStripView,\n  canEditInspectionState,\n} from '../../utils/permissions';\n\nclass ImageStripView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n      data: null,\n    };\n    this.productSub = null;\n    this.imageStripLength = 10;\n  }\n\n  componentDidMount() {\n    if (this.props.sourceImage) {\n      this.unsubscribeFromProductStream();\n      this.subscribeToProductStream(this.props.sourceImage);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.sourceImage && nextProps.sourceImage !== this.props.sourceImage) {\n      this.unsubscribeFromProductStream();\n      this.subscribeToProductStream(nextProps.sourceImage);\n    }\n\n    if (\n      this.props.isBrowserWindowVisible !== undefined &&\n      this.props.isBrowserWindowVisible !== nextProps.isBrowserWindowVisible\n    ) {\n      if (nextProps.isBrowserWindowVisible) {\n        this.subscribeToProductStream(nextProps.sourceImage);\n      } else {\n        this.unsubscribeFromProductStream();\n      }\n    }\n  }\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {\n    const { images } = this.state;\n    const products = (images || []).map((e) => e.product);\n    this.releaseProducts(products);\n    // TODO resume stream when paused?\n    this.unsubscribeFromProductStream();\n  }\n\n  subscribeToProductStream(sourceImage) {\n    if (!this.productSub) {\n      const { inspectionId } = this.props;\n      const desc = {\n        inspectionId,\n        startAtTriggerCount: -1 * this.imageStripLength,\n        rejectImageIds: [sourceImage],\n        allowOldTrigger: true,\n        manualRelease: true,\n      };\n      this.productSub = this.props.proxy.subscribeToProductStream(desc, this.onProduct);\n    }\n  }\n\n  unsubscribeFromProductStream() {\n    if (this.productSub) {\n      this.props.proxy.unsubscribeFromProductStream(this.productSub);\n      this.productSub = null;\n    }\n\n    (this.state.images || []).forEach((image) => {\n      image.product?.release();\n    });\n    this.setState({ images: [] });\n  }\n\n  onProduct = ({ product }) => {\n    const entry = this.state.images.find((e) => e.product === product);\n    if (entry) {\n      // we can free this reference. the second reference to the\n      // same product will be released in this.releaseProducts().\n      product.release();\n      return;\n    }\n\n    // TODO: Image dimensions won't change for a subscription\n    // better to update `onSubscribed`\n    this.updateImageDimensions(product);\n\n    const combinedSrc = this.drawImageAndOverlaysToCanvas({\n      drawTarget: this.canvas,\n      product,\n    });\n    const images = [{ combinedSrc, product }, ...this.state.images];\n\n    // sort descending by trigger count. can happen at beginning of stream.\n    images.sort((a, b) => b.product.trigger - a.product.trigger);\n\n    let productsToRelease = [];\n    if (images.length > this.imageStripLength) {\n      productsToRelease = images.splice(this.imageStripLength).map((e) => e.product);\n    }\n\n    this.setState({ images });\n\n    this.releaseProducts(productsToRelease);\n  };\n\n  releaseProducts(products) {\n    (products || []).forEach((product) => product.release());\n  }\n\n  updateImageDimensions = (product) => {\n    if (!product) {\n      logger.error(`updateImageDimensions requires product but did not receive.`);\n      return;\n    }\n\n    if (!product.isReject) {\n      logger.error(`updateImageDimensions requires product that is a reject.`);\n      return;\n    }\n\n    const { sourceImage } = this.props;\n    const { image } = product.getImage(sourceImage);\n\n    if (!image) {\n      logger.error(`Product does not contain an Image.`);\n      return;\n    }\n\n    const { height, width } = image;\n\n    if (\n      !this.state.imageWidth ||\n      !this.state.imageHeigt ||\n      this.state.imageWidth !== width ||\n      this.state.imageHeigt !== height\n    ) {\n      this.setState({ imageHeigt: height, imageWidth: width });\n    }\n  };\n\n  setSourceImageIndex = (id) => {\n    if (!id) {\n      logger.error(`OjectSelector did not return a valid id.`);\n      return;\n    }\n    this.props.setSharedStateData('sourceImage', id);\n  };\n\n  drawImageAndOverlaysToCanvas = ({ drawTarget, product }) => {\n    if (!drawTarget || !product) {\n      logger.error(\n        'drawImageAndOverlaysToCanvas expects drawTarget and product but did not receive.',\n      );\n      return;\n    }\n\n    const imageId = this.props.sourceImage;\n    const image = product.getImage(imageId);\n    if (!image || !image.domImage) {\n      logger.warn(`ImageStrip expected an image onReject but didn't receive`);\n      return;\n    }\n\n    const drawTargetContext = drawTarget.getContext('2d');\n    drawTargetContext.clearRect(0, 0, drawTarget.width, drawTarget.height);\n    drawTargetContext.drawImage(image.domImage, 0, 0);\n\n    const overlays = extractInspectionOverlays(product, imageId);\n    const boundingCoordinates = {\n      minX: 0,\n      minY: 0,\n      maxX: image.width || 0,\n      maxY: image.height || 0,\n    };\n\n    drawInspectionOverlays({\n      drawTarget,\n      overlays,\n      zoomFactor: 1,\n      boundingCoordinates,\n      width: image.width,\n      height: image.height,\n    });\n    return this.canvas.toDataURL('image/bmp');\n  };\n\n  renderObjectSelector = () => {\n    const { configuration, inspectionId } = this.props;\n    if (!configuration || !inspectionId) {\n      return;\n    }\n\n    const images = configuration.getObjectSelectorImagesForInspection(inspectionId);\n    const data = images ? images.tree : null;\n\n    return (\n      <div style={{ width: '100%', overflow: 'auto' }}>\n        <ObjectSelector\n          singleSelect\n          data={data}\n          onChange={(selectedIid, checkedLocation) => {\n            this.setSourceImageIndex(selectedIid);\n            this.props.setViewData('windowName', checkedLocation);\n            this.props.setSaveFlag(true);\n          }}\n        />\n      </div>\n    );\n  };\n\n  selectProduct(product) {\n    this.pauseStream();\n    this.props.proxy.replayProduct(this.props.inspectionId, product);\n    // TODO some highlights?\n  }\n\n  resumeStream() {\n    this.props.proxy.resumeRejectStream(this.props.inspectionId);\n    this.props.setSaveFlag(true);\n  }\n\n  pauseStream() {\n    this.props.proxy.pauseRejectStream(this.props.inspectionId);\n    this.props.setSaveFlag(true);\n  }\n\n  setTitleFromConfig = () => {\n    const { sourceImage, inspectionId, configuration } = this.props;\n    if (configuration) {\n      const path = configuration.getValueNameForId(inspectionId, sourceImage);\n      if (path) {\n        this.props.setViewData('windowName', path);\n      }\n    }\n  };\n\n  showPause = () => {\n    const { pausedInspections, inspectionId } = this.props;\n    let showPause = false;\n    if (inspectionId) {\n      if (!pausedInspections.includes(inspectionId)) {\n        showPause = true;\n      }\n    }\n    return showPause;\n  };\n\n  renderFilmStrip = () => {\n    const { inspectionId, myPermissions } = this.props;\n    const { imageWidth, imageHeigt } = this.state;\n    const actions = [];\n\n    if (canEditInspectionState(myPermissions)) {\n      actions.push({\n        type: TOGGLE_BUTTON,\n        id: inspectionId,\n        intlId: 'imageStripView.play',\n        iconUrl: iconPlay,\n        onClickHandler: () => {\n          this.resumeStream();\n        },\n        intlIdAlternative: 'imageStripView.pause',\n        iconUrlAlternative: iconPause,\n        onClickHandlerAlternative: () => {\n          this.pauseStream();\n        },\n        showAlternative: this.showPause(),\n      });\n    }\n    return (\n      <div className=\"reject-view-container\">\n        <Container>\n          <canvas\n            style={{ display: 'none' }}\n            width={imageWidth}\n            height={imageHeigt}\n            className=\"imageCanvas\"\n            ref={(canvas) => {\n              this.canvas = canvas;\n            }}\n          />\n          {this.state.images && this.state.images.length > 0 && (\n            <FilmStrip\n              onImageClick={(product) => this.selectProduct(product)}\n              images={this.state.images}\n            />\n          )}\n          <ActionBar isViewAction actions={actions} />\n        </Container>\n      </div>\n    );\n  };\n\n  render() {\n    const { sourceImage, myPermissions } = this.props;\n\n    this.setTitleFromConfig();\n    const canEdit = canEditImageStripView(myPermissions);\n\n    if (canReadImageStripView(myPermissions) || canEdit) {\n      return (\n        <div className=\"reject-view-container\">\n          {!sourceImage && canEdit ? this.renderObjectSelector() : this.renderFilmStrip()}\n        </div>\n      );\n    }\n\n    return <div></div>;\n  }\n}\n\nImageStripView.defaultProps = {\n  imageData: [],\n  proxy: undefined,\n  configuration: null,\n};\n\nImageStripView.propTypes = {\n  proxy: ProxyType,\n  configuration: PropTypes.object,\n  sourceImage: PropTypes.number,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  try {\n    return {\n      proxy: state.app.proxy,\n      configuration: state.app.configuration,\n      sourceImage: Number(state.inspections[inspectionId].sharedState.views[viewId].sourceImage),\n      pausedInspections: state.app.pausedInspections,\n      myPermissions: state.app.myPermissions,\n      isBrowserWindowVisible: state.app.isBrowserWindowVisible,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nconst initState = {};\n\nconst initSharedState = {\n  sourceImage: 0,\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  dispatch(initViewState(inspectionId, viewId, initState, initSharedState));\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    setSharedStateData: (key, data) =>\n      dispatch(setSharedStateData(inspectionId, key, data, viewId)),\n    setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n  };\n};\n\nconst mappedConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default mappedConnect(ImageStripView);\n","import React from 'react';\nimport shortId from 'shortid';\n\nimport ListView from './ListView';\nimport ImageView from './ImageView';\nimport RecipeView from './RecipeView';\nimport ToolsetView from './ToolsetView';\nimport ParameterView from './ParameterView';\nimport ImageStripView from './ImageStripView';\n\nconst mapViewSetArray = (views) => {\n  return views.reduce((viewSet, view) => ({ ...viewSet, [view.id]: view }), {});\n};\n\nconst configurations = [\n  {\n    title: 'No. of Cameras',\n    intlId: 'noOfCameras',\n    options: [\n      { title: '1', value: 1 },\n      { title: '2', value: 2 },\n      { title: '3', value: 3 },\n      { title: '4', value: 4 },\n    ],\n  },\n  {\n    title: 'No. of Triggers',\n    intlId: 'noOfTriggers',\n    options: [\n      { title: '1', value: 1 },\n      { title: '2', value: 2 },\n      { title: '3', value: 3 },\n      { title: '4', value: 4 },\n    ],\n  },\n  {\n    title: 'No. of MonitorLists',\n    intlId: 'noOfMonitors',\n    options: [\n      { title: '1', value: 1 },\n      { title: '2', value: 2 },\n      { title: '3', value: 3 },\n      { title: '4', value: 4 },\n    ],\n  },\n];\n\nexport const CONFIG_VIEW = 'CONFIG_VIEW';\nexport const TOOLSET_VIEW = 'TOOLSET_VIEW';\nexport const IMAGE_VIEW = 'IMAGE_VIEW';\nexport const PARAMETER_VIEW = 'PARAMETER_VIEW';\nexport const LIST_VIEW = 'LIST_VIEW';\nexport const IMAGE_STRIP_VIEW = 'IMAGE_STRIP_VIEW';\n\nexport const DEFAULT_RECIPE_VIEWSET = 'DEFAULT_RECIPE_VIEWSET';\nexport const DEFAULT_EDIT_VIEWSET = 'DEFAULT_EDIT_VIEWSET';\nexport const DEFAULT_VIEWSET = 'DEFAULT_VIEWSET';\n\nexport const DEFAULT_VIEWSET_NAME = 'Initial';\n\nexport default class ViewSetFactory {\n  getViewSet = (id) => {\n    switch (id) {\n      case DEFAULT_VIEWSET:\n        return this.buildEmptyViewSet();\n      case DEFAULT_EDIT_VIEWSET:\n      case DEFAULT_RECIPE_VIEWSET:\n      default:\n        return null;\n    }\n  };\n\n  createViewInstance = (viewDesc, props) => {\n    const meta = this.getViewById(viewDesc.viewComponentClassId);\n    if (!meta) {\n      return false;\n    }\n\n    const key = `${viewDesc.viewComponentClassId}_${viewDesc.id}_${viewDesc.inspectionId}`;\n\n    const passedProps = {\n      ...meta.passedProps,\n      ...props,\n    };\n    switch (meta.viewComponentClassId) {\n      case CONFIG_VIEW:\n        return <RecipeView {...passedProps} key={key} />;\n      case TOOLSET_VIEW:\n        return <ToolsetView {...passedProps} key={key} />;\n      case IMAGE_VIEW:\n        return <ImageView {...passedProps} key={key} />;\n      case PARAMETER_VIEW:\n        return <ParameterView {...passedProps} key={key} />;\n      case IMAGE_STRIP_VIEW:\n        return <ImageStripView {...passedProps} key={key} />;\n      case LIST_VIEW:\n        return <ListView {...passedProps} key={key} />;\n      default:\n        return <div>Unknown Component {meta.viewComponentClassId}</div>;\n    }\n  };\n\n  getViewById = (id) => {\n    switch (id) {\n      case CONFIG_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'recipeViewInspectionTemplate',\n          viewComponentClassId: CONFIG_VIEW,\n          passedProps: { configurations },\n        };\n      case TOOLSET_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'toolsetView.inspectionTemplate',\n          viewComponentClassId: TOOLSET_VIEW,\n        };\n      case IMAGE_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'imageView.inspectionTemplate',\n          viewComponentClassId: IMAGE_VIEW,\n        };\n      case PARAMETER_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'parameterView.inspectionTemplate',\n          viewComponentClassId: PARAMETER_VIEW,\n        };\n      case IMAGE_STRIP_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'imageStripView.inspectionTemplate',\n          viewComponentClassId: IMAGE_STRIP_VIEW,\n        };\n      case LIST_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'listView.inspectionTemplate',\n          viewComponentClassId: LIST_VIEW,\n        };\n      default:\n        return null;\n    }\n  };\n\n  buildRecipeViewSet = () => {\n    const views = [\n      this.getViewById(IMAGE_VIEW),\n      this.getViewById(LIST_VIEW),\n      this.getViewById(IMAGE_STRIP_VIEW),\n    ];\n    return {\n      id: DEFAULT_RECIPE_VIEWSET,\n      viewSet: mapViewSetArray(views),\n      initialValue: {\n        first: {\n          direction: 'row',\n          splitPercentage: 60,\n          first: views[0].id,\n          second: views[1].id,\n        },\n        direction: 'column',\n        splitPercentage: 75,\n        second: views[2].id,\n      },\n    };\n  };\n\n  buildEmptyViewSet = (name = DEFAULT_VIEWSET_NAME) => {\n    const emptyViewId = shortId.generate();\n    return {\n      id: name,\n      name,\n      viewSet: {\n        [emptyViewId]: {},\n      },\n      initialValue: emptyViewId,\n    };\n  };\n\n  buildEditViewSet = () => {\n    const views = [\n      this.getViewById(TOOLSET_VIEW),\n      this.getViewById(IMAGE_VIEW),\n      this.getViewById(PARAMETER_VIEW),\n    ];\n    return {\n      id: DEFAULT_VIEWSET,\n      viewSet: mapViewSetArray(views),\n      initialValue: {\n        direction: 'row',\n        first: views[0].id,\n        splitPercentage: 30,\n        second: {\n          direction: 'column',\n          splitPercentage: 45,\n          first: views[1].id,\n          second: views[2].id,\n        },\n      },\n    };\n  };\n\n  createNewViewSet = () => {\n    const views = [\n      {\n        id: shortId.generate(),\n        viewComponentClassId: TOOLSET_VIEW,\n        titleId: 'toolsetViewInspectionTemplate',\n      },\n    ];\n    return {\n      id: 'NEW_VIEWSET',\n      viewSet: mapViewSetArray(views),\n      initialValue: views[0].id,\n    };\n  };\n}\n","export default __webpack_public_path__ + \"static/media/run.eb40f6de.svg\";","export default __webpack_public_path__ + \"static/media/stop.44c5645f.svg\";","export default __webpack_public_path__ + \"static/media/test.47d9c7ad.svg\";","export default __webpack_public_path__ + \"static/media/regression.f027695f.svg\";","import runIcon from '../assets/icons/run.svg';\nimport editIcon from '../assets/icons/edit.svg';\nimport stopIcon from '../assets/icons/stop.svg';\nimport testIcon from '../assets/icons/test.svg';\nimport regressionIcon from '../assets/icons/regression.svg';\nimport unknownIcon from '../assets/icons/help.svg';\n\nconst modes = {\n  unknownMode: {\n    id: 'UNKNOWN_MODE',\n    iconSrc: unknownIcon,\n    text: '',\n  },\n  runMode: {\n    id: 'RUN_MODE',\n    iconSrc: runIcon,\n    text: '',\n  },\n  stopMode: {\n    id: 'STOP_MODE',\n    iconSrc: stopIcon,\n    text: '',\n  },\n  regressionMode: {\n    id: 'REGRESSION_MODE',\n    iconSrc: regressionIcon,\n    text: '',\n  },\n  testMode: {\n    id: 'TEST_MODE',\n    iconSrc: testIcon,\n    text: '',\n  },\n  editMode: {\n    id: 'EDIT_MODE',\n    iconSrc: editIcon,\n    text: '',\n  },\n};\n\nexport default modes;\n","import React from 'react';\n\nimport logger from '../../../utils/logger';\nimport IconButton from '../IconButton';\n\nimport './style.scss';\n\nexport const ToggleButton = ({\n  id,\n  intl,\n  intlId,\n  iconUrl,\n  onClickHandler,\n  intlIdAlternative,\n  iconUrlAlternative,\n  onClickHandlerAlternative,\n  showAlternative,\n}) => {\n  if (\n    !intl ||\n    !intlId ||\n    !iconUrl ||\n    !onClickHandler ||\n    !intlIdAlternative ||\n    !iconUrlAlternative ||\n    !onClickHandlerAlternative\n  ) {\n    logger.error('ToggleButton component did not receive required parameters');\n  }\n\n  let button = {};\n  if (showAlternative) {\n    button = (\n      <IconButton\n        key={id}\n        tooltip={intl.messages[`${intlIdAlternative}`]}\n        onClick={() => {\n          onClickHandlerAlternative();\n        }}\n        iconUrl={iconUrlAlternative}\n      />\n    );\n  } else {\n    button = (\n      <IconButton\n        key={intlId}\n        tooltip={intl.messages[`${intlId}`]}\n        onClick={() => {\n          onClickHandler();\n        }}\n        iconUrl={iconUrl}\n      />\n    );\n  }\n\n  return button;\n};\n","import React from 'react';\nimport shortId from 'shortid';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\n\nimport './style.scss';\nimport IconButton from './../buttons/IconButton';\nimport { ToggleButton } from '../buttons/ToggleButton';\nimport { TOGGLE_BUTTON, SEPARATOR } from '../../types/ActionBarType';\n\nconst ActionBar = ({ actions, intl, isViewAction }) => (\n  <div className=\"action-bar-wrapper\" style={{ position: isViewAction ? 'absolute' : 'relative' }}>\n    {actions &&\n      actions.map((action) => {\n        if (action && action.type === SEPARATOR) {\n          return (\n            <div className=\"action-bar-separator\" key={`separator_${shortId.generate()}`}>\n              <div className=\"separator\"></div>\n            </div>\n          );\n        }\n        if (action && action.type === TOGGLE_BUTTON) {\n          return (\n            <ToggleButton\n              key={action.id}\n              id={action.id}\n              intl={intl}\n              intlId={action.intlId}\n              iconUrl={action.iconUrl}\n              onClickHandler={action.onClickHandler}\n              intlIdAlternative={action.intlIdAlternative}\n              iconUrlAlternative={action.iconUrlAlternative}\n              onClickHandlerAlternative={action.onClickHandlerAlternative}\n              showAlternative={action.showAlternative}\n            />\n          );\n        }\n\n        return (\n          <IconButton\n            key={action.intlId}\n            tooltip={intl.messages[`${action.intlId}`]}\n            onClick={() => {\n              action.onClickHandler();\n            }}\n            iconUrl={action.iconUrl}\n          />\n        );\n      })}\n  </div>\n);\n\nActionBar.defaultProps = {\n  isViewAction: false,\n};\n\nActionBar.propTypes = {\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      intlId: PropTypes.string,\n      onClickHandler: PropTypes.func,\n      iconUrl: PropTypes.string,\n    }),\n  ).isRequired,\n  isViewAction: PropTypes.bool,\n};\n\nexport default injectIntl(ActionBar);\n","import Protobuf from './Protobuf';\nimport WebsocketConnector from './WebsocketConnector';\n\nimport logger from '../utils/logger';\nimport { setProtobuf } from '../redux/actions';\n\nexport default class ProtobufConnector {\n  constructor(url, dispatch, authToken) {\n    this.url = url;\n    this.dispatch = dispatch;\n    this.protobuf = new Protobuf();\n    this.websocketConnector = null;\n    this.connectionLost = false;\n    this.authToken = authToken;\n    this.connect();\n  }\n\n  connect = () => {\n    this.disconnect();\n\n    if (!this.authToken) {\n      logger.info('[ProtobufConnector] cannot connect yet. no auth token available');\n      return;\n    }\n\n    this.websocketConnector = new WebsocketConnector(\n      this.onConnect,\n      this.onMessage,\n      this.onClose,\n      this.onError,\n      this.url,\n      this.authToken,\n    );\n  };\n\n  connectWithToken = (token) => {\n    this.authToken = token;\n    this.connect();\n  };\n\n  disconnect = () => {\n    if (this.websocketConnector) {\n      this.websocketConnector.closeSocket();\n      this.websocketConnector = null;\n    }\n  };\n\n  onMessage = (data) => {\n    this.protobuf.readMessage(data);\n  };\n\n  onConnect = async (socket) => {\n    // Force a hard reload on re-conncet to make sure we start fresh\n    if (this.connectionLost) {\n      this.connectionLost = false;\n      setImmediate(() => {\n        window.location.href = `${window.location.origin}/`;\n      });\n      return;\n    }\n\n    // once we have a websocket connection established we publish the protobuf connector via store\n    this.dispatch(setProtobuf(this.protobuf, socket));\n  };\n\n  onClose = () => {\n    this.connectionLost = true;\n    // unsetting the socket will set proxy into disconnected\n    // state and will show the \"Connecting\" screen.\n    this.dispatch(setProtobuf(this.protobuf, /*socket=*/ null));\n  };\n\n  onError = (event) => {\n    console.error('Websocket error: ', event);\n  };\n}\n","import ReconnectingWebSocket from 'reconnecting-websocket';\n\nexport default class WebsocketConnector {\n  constructor(onConnect, onMessage, onClose, onError, url, token) {\n    this.onClose = onClose;\n    const protocol = token ? ['access_token', token] : undefined;\n    const options = { debug: false };\n    this.socket = new ReconnectingWebSocket(url, protocol, options);\n    this.socket.binaryType = 'arraybuffer';\n    this.socket.onopen = () => {\n      onConnect && onConnect(this.socket);\n    };\n    this.socket.onmessage = (e) => onMessage && onMessage(e.data, this.socket);\n    this.socket.onerror = (e) => onError && onError(e);\n    this.socket.onclose = () => onClose && onClose(this.socket);\n    this.socket.onconnecting = (e) => console.log('CONNECTING!', e);\n  }\n\n  closeSocket() {\n    if (this.socket) {\n      this.socket.close();\n    }\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LZString from 'lz-string';\n\nimport logger from '../utils/logger';\nimport modes from '../utils/modes';\nimport {\n  flattenPermissionsRec,\n  canReadUserManagement,\n  canEditUserManagement,\n} from '../utils/permissions';\nimport { defaultPermissions } from '../utils/defaultPermissions';\nimport {\n  CONFIG_INFO,\n  CONFIGURATION_CHUNK_TEMPLATE,\n  CONFIGURATION_CHUNK_LIST,\n} from '../utils/localStorage';\nimport { chunkSubstr } from '../utils/stringChunker';\nimport { replacerMapToJson } from '../utils/jsonMapper';\nimport Configuration from './Configuration';\nimport ProductHistoryManager from './ProductHistoryManager';\nimport Protobuf from './Protobuf';\nimport SubscriptionManager from './SubscriptionManager';\nimport {\n  mapLogLevelNameToProtobufLogSeverity,\n  mapProtobufDeviceModeToWebAppMode,\n  mapWebAppModeToProtobufDeviceMode,\n} from './Mapper';\nimport {\n  addModeSwitchNotification,\n  addProjectLoadedNotification,\n  addProjectUnloadedNotification,\n  addProjectModifiedNotification,\n  addServerMessageNotification,\n  addRejectStreamPausedNotification,\n  loadClientChunk,\n  resetClientChunk,\n  setCurrentModeDone,\n  setCurrentConfiguration,\n  setPausedInspections,\n  showGlobalMessageOverlay,\n  hideGlobalMessageOverlay,\n  setSVOConfigLoaded,\n  setGroupPermissions,\n  setMyPermissions,\n  clearCurrentView,\n} from '../redux/actions';\n\nexport default class Proxy {\n  constructor(dispatch) {\n    this.dispatch = dispatch;\n    this.currentConfiguration = null;\n    this.loading = false;\n    this.mode = null;\n    this.protobuf = null;\n    this.protobufInitialized = false;\n    this.observerNotificationSubscription = null;\n    this.observerMessageSubscription = null;\n    this.gatewayNotificationSubscription = null;\n    this.gatewayMessageSubscription = null;\n    this.nextSubId = 0;\n    this.productHistoryManager = new ProductHistoryManager();\n    this.subscriptionManager = new SubscriptionManager({\n      productHistoryManager: this.productHistoryManager,\n    });\n    this.showConnectingSplashScreen();\n  }\n\n  setMode(mode) {\n    this.onCurrentModeChanged(mode);\n  }\n\n  setProtobufStaticInitialized() {\n    this.protobufInitialized = true;\n    this.onProtobufChangedImpl();\n  }\n\n  setProtobuf(protobuf) {\n    this.protobuf = protobuf;\n    this.subscriptionManager.setProtobuf(protobuf);\n    this.onProtobufChangedImpl();\n  }\n\n  onProtobufChangedImpl() {\n    if (this.protobuf && this.protobuf.isConnected() && this.protobufInitialized) {\n      this.hideConnectingSplashScreen();\n      setImmediate(() => this.loadProject());\n    } else {\n      this.showConnectingSplashScreen();\n    }\n  }\n\n  sendLogsToServer = async (entries) => {\n    const logs = entries.map((e) => this.mapLogEntry(e));\n    const req = Protobuf.SvPb.StoreClientLogsRequest.create({\n      client: 'WebApp',\n      logs,\n    });\n    try {\n      if (this.protobuf) {\n        await this.protobuf.request(req);\n      }\n    } catch (e) {\n      console.error('Error while sending logs to server:', e);\n    }\n  };\n\n  mapLogEntry(entry) {\n    return {\n      severity: mapLogLevelNameToProtobufLogSeverity(entry.levelName),\n      message: JSON.stringify(entry),\n    };\n  }\n\n  loadProject = async () => {\n    if (this.loading) {\n      this.loadProjectRequested = true;\n      return;\n    }\n\n    this.loading = true;\n    this.showLoadingSplashScreen();\n    try {\n      await this.getMyPermissions();\n      await this.discoverConfiguration();\n      await this.discoverDeviceMode();\n      this.subscribeToNotificationAndMessageStreams();\n      // only load the client chunk when we have a valid configuration\n      if (this.currentConfiguration) {\n        this.dispatch(setSVOConfigLoaded(true));\n        await this.loadClientChunk();\n      } else {\n        await this.resetClientChunk();\n        this.dispatch(setSVOConfigLoaded(false));\n      }\n      // TODO: re-subscribe all current subscriptions?\n      // this.scheduleRebuildSubscriptions();\n      this.hideLoadingSplashScreen();\n    } catch (err) {\n      this.showLoadingErrorOverlay(err);\n    }\n    this.loading = false;\n\n    if (this.loadProjectRequested) {\n      this.loadProjectRequested = false;\n      this.loadProject();\n    }\n  };\n\n  showConnectingSplashScreen() {\n    // can not call dispatch right away, because we reach this point\n    // while the store itself is still in initialization phase.\n    setImmediate(() => {\n      this.dispatch(\n        showGlobalMessageOverlay({\n          message: <p>Connecting</p>,\n        }),\n      );\n    });\n  }\n\n  hideConnectingSplashScreen() {\n    // This function might be triggered by a redux event itself.\n    // Use setImmediate to not trigger a redux event inside a\n    // redux event (which is forbidden).\n    setImmediate(() => {\n      this.dispatch(hideGlobalMessageOverlay());\n    });\n  }\n\n  showLoadingSplashScreen() {\n    this.dispatch(\n      showGlobalMessageOverlay({\n        message: <p>Loading Configuration</p>,\n      }),\n    );\n  }\n\n  showLoadingErrorOverlay(err) {\n    this.dispatch(\n      showGlobalMessageOverlay({\n        message: <p>Error while loading Configuration: {`${err}`}</p>,\n      }),\n    );\n  }\n\n  hideLoadingSplashScreen() {\n    this.dispatch(hideGlobalMessageOverlay());\n  }\n\n  async getConfigurationInfo() {\n    try {\n      let res = await this.protobuf.request(Protobuf.SvPb.GetConfigurationInfoRequest.create());\n\n      if (Object.keys(res).length === 0) {\n        logger.warn(\n          'Empty response for GetConfigurationInfoRequest, configuration in SVO not loaded',\n        );\n        return null;\n      }\n\n      if (!res.lastModified) {\n        res = {\n          ...res,\n          lastModified: res.loadedSince,\n        };\n      }\n\n      return res;\n    } catch (err) {\n      logger.error('GetConfigurationInfoRequest ERROR', err);\n    }\n\n    return null;\n  }\n\n  async discoverConfiguration() {\n    let cachedConfigInfo = null;\n    const configInfo = await this.getConfigurationInfo();\n\n    if (!configInfo || !configInfo.loadedSince) {\n      this.currentConfiguration = null;\n      return;\n    }\n\n    try {\n      cachedConfigInfo = await JSON.parse(localStorage.getItem(CONFIG_INFO));\n    } catch (err) {\n      logger.error({ err }, 'Timestamp request failed');\n    }\n\n    // Timestamps should be equal but not null\n    if (\n      configInfo &&\n      cachedConfigInfo &&\n      cachedConfigInfo.hash === configInfo.hash &&\n      Number(cachedConfigInfo.lastModified) === configInfo.lastModified\n    ) {\n      const cachedConfig = await Configuration.loadFromCache(this.protobuf);\n      this.currentConfiguration = cachedConfig;\n      this.dispatch(setCurrentConfiguration(cachedConfig));\n      this.setUpProductHistories(cachedConfig);\n    } else {\n      const currConfig = await Configuration.discover(this.protobuf);\n      if (currConfig) {\n        this.currentConfiguration = currConfig;\n\n        const stringifiedConfig = LZString.compress(JSON.stringify(currConfig, replacerMapToJson));\n        const configChunks = chunkSubstr(stringifiedConfig, 1000000); // 1m chars = 1MB chunks\n        let configChunkNames = [];\n\n        for (let i = 0; i < configChunks.length; i++) {\n          const chunk = configChunks[i];\n          const chunkName = `${CONFIGURATION_CHUNK_TEMPLATE}${i}`;\n          localStorage.setItem(chunkName, chunk);\n          configChunkNames.push(chunkName);\n        }\n\n        localStorage.setItem(CONFIGURATION_CHUNK_LIST, configChunkNames.join(','));\n        localStorage.setItem(CONFIG_INFO, JSON.stringify(configInfo));\n\n        this.setUpProductHistories(currConfig);\n        this.dispatch(setCurrentConfiguration(currConfig));\n\n        this.dispatch(clearCurrentView());\n      } else {\n        this.currentConfiguration = null;\n      }\n    }\n  }\n\n  async onCurrentModeChanged(currentMode) {\n    // set internal mode to unknown while switching the mode to\n    // lower the possibility of running into errors in the\n    // subscription code, e.g. e.g. fetching images which are not\n    // accessible in certain modes\n    this.mode = modes.unknownMode.id;\n\n    const mode = mapWebAppModeToProtobufDeviceMode(currentMode);\n    const req = Protobuf.SvPb.SetDeviceModeRequest.create({ mode });\n    let res = null;\n    try {\n      res = await this.protobuf.request(req);\n    } catch (err) {\n      logger.error({ err }, 'Error while changing the mode');\n      return;\n    }\n\n    if (res.hResult) {\n      logger.error({ hResult: res.hResult }, 'Error while changing the mode');\n      return;\n    }\n\n    // Leaving this here as a safety net in case SVObserver is not\n    // informing us about the new mode via a notification. As we\n    // do nothing when the discovered mode is the one we already,\n    // have in this.mode, it is cheap to do it multiple times.\n    setTimeout(this.discoverDeviceMode, 500);\n  }\n\n  discoverDeviceMode = async () => {\n    let mode = null;\n    let modeName = null;\n    try {\n      const req = Protobuf.SvPb.GetDeviceModeRequest.create({});\n      const res = await this.protobuf.request(req);\n      modeName = res.mode;\n      mode = mapProtobufDeviceModeToWebAppMode(modeName);\n    } catch (err) {\n      logger.error({ err }, 'Error while fetching mode');\n    }\n\n    if (mode === null || this.mode === mode) {\n      return;\n    }\n\n    // Initially we get mode from SVObserver and no change happens\n    if (this.mode === null) {\n      this.mode = mode;\n      return;\n    }\n\n    logger.info(\n      { oldMode: this.mode, newMode: mode, newModeName: modeName },\n      'Discovered new mode',\n    );\n    this.mode = mode;\n\n    this.dispatch(addModeSwitchNotification(mode));\n    return this.dispatch(setCurrentModeDone(mode));\n  };\n\n  loadClientChunk() {\n    return this.dispatch(loadClientChunk(this.protobuf));\n  }\n\n  resetClientChunk() {\n    return this.dispatch(resetClientChunk(this.protobuf));\n  }\n\n  subscribeToNotificationAndMessageStreams() {\n    this.subscribeToObserverNotificationStream();\n    this.subscribeToObserverMessageStream();\n    this.subscribeToGatewayNotificationStream();\n    this.subscribeToGatewayMessageStream();\n  }\n\n  subscribeToObserverNotificationStream() {\n    this.unsubscribeFromObserverNotificationStream();\n    const req = Protobuf.SvPb.GetNotificationStreamRequest.create({});\n    this.observerNotificationSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onObserverNotification(evt),\n      error: (err) => this.onObserverNotificationError(err),\n      complete: () => logger.debug('Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromObserverNotificationStream() {\n    if (this.observerNotificationSubscription) {\n      this.observerNotificationSubscription.unsubscribe();\n    }\n  }\n\n  onObserverNotification({ type, parameter }) {\n    let fileName, configName;\n    switch (type) {\n      case Protobuf.SvPb.NotifyType.currentMode:\n        const mode = this.getVariantValue(parameter);\n        logger.debug({ mode }, 'Notification currentMode');\n        // the notification contains the new mode already, but it might be \"modeChanging\"\n        // so lets just fetch it from the SVObserver so we always have the actual mode.\n        this.discoverDeviceMode();\n        break;\n      case Protobuf.SvPb.NotifyType.lastModified:\n        const timestamp = this.getVariantValue(parameter) * 1000;\n        logger.debug({ timestamp: new Date(timestamp) }, 'Notification lastModified');\n        this.dispatch(addProjectModifiedNotification());\n        this.loadProject();\n        break;\n      case Protobuf.SvPb.NotifyType.configLoaded:\n        fileName = this.getVariantValue(parameter);\n        configName = Configuration.extractConfigNameFromFileName(fileName);\n        logger.debug({ fileName, configName }, 'Notification configLoaded');\n        this.dispatch(addProjectLoadedNotification(fileName));\n        this.loadProject();\n        break;\n      case Protobuf.SvPb.NotifyType.configUnloaded:\n        fileName = this.getVariantValue(parameter);\n        configName = Configuration.extractConfigNameFromFileName(fileName);\n        logger.debug({ fileName, configName }, 'Notification configUnloaded');\n        this.dispatch(addProjectUnloadedNotification(fileName));\n        this.loadProject();\n        break;\n      default:\n        logger.warn({ type, parameter }, 'Unknown notification type');\n        break;\n    }\n  }\n\n  getVariantValue(variant) {\n    return variant && variant[variant.data];\n  }\n\n  formatMessageNotification(messageText, errorNumber) {\n    return (\n      <div>\n        <FormattedMessage id=\"notifications.checkSvimOutput\" />\n        {messageText && (\n          <div>\n            {errorNumber ? `(${errorNumber})` : ' '} {messageText}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  onObserverNotificationError(err) {\n    logger.error({ err }, 'Notification error');\n    this.unsubscribeFromObserverNotificationStream();\n  }\n\n  subscribeToObserverMessageStream() {\n    this.unsubscribeFromObserverMessageStream();\n    const req = Protobuf.SvPb.GetMessageStreamRequest.create({});\n    this.observerMessageSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onObserverMessage(evt),\n      error: (err) => this.onObserverMessageError(err),\n      complete: () => logger.debug('Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromObserverMessageStream() {\n    if (this.observerMessageSubscription) {\n      this.observerMessageSubscription.unsubscribe();\n    }\n  }\n\n  onObserverMessage(evt) {\n    const { type, messageList } = evt;\n    const { messages } = messageList;\n    logger.debug({ ...evt }, 'SVObserver message stream event');\n\n    switch (type) {\n      case Protobuf.SvPb.MessageType.startMsgBox:\n        if (!messages || messages.length !== 1) {\n          logger.warn({ type, messages }, 'Expected exactly one message in the message event');\n          return;\n        }\n        const firstMessage = messages[0];\n        const message = this.formatMessageNotification(\n          firstMessage.messageText,\n          firstMessage.messageCode,\n        );\n        this.dispatch(showGlobalMessageOverlay({ message }));\n        break;\n\n      case Protobuf.SvPb.MessageType.endMsgBox:\n        this.dispatch(hideGlobalMessageOverlay());\n        break;\n\n      case Protobuf.SvPb.MessageType.msgLog:\n        // TODO also handle seveirty\n        (messages || []).forEach(({ messageCode, messageText }) => {\n          this.dispatch(addServerMessageNotification(messageText, messageCode));\n        });\n        break;\n\n      default:\n        logger.warn({ type }, 'Unknown message event type');\n        break;\n    }\n  }\n\n  onObserverMessageError(err) {\n    logger.error({ err }, 'SVObserver message stream error');\n    this.unsubscribeFromObserverMessageStream();\n  }\n\n  subscribeToGatewayNotificationStream() {\n    this.unsubscribeFromGatewayNotificationStream();\n    const req = Protobuf.SvPb.GetGatewayNotificationStreamRequest.create({});\n    this.gatewayNotificationSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onGatewayNotification(evt),\n      error: (err) => this.onGatewayNotificationError(err),\n      complete: () => logger.debug('Gateway Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromGatewayNotificationStream() {\n    if (this.gatewayNotificationSubscription) {\n      this.gatewayNotificationSubscription.unsubscribe();\n    }\n  }\n\n  onGatewayNotification(evt) {\n    const value = evt[evt.message];\n    switch (evt.message) {\n      case 'rejectStreamPaused':\n        const { pausedInspectionIds } = value;\n        logger.debug({ pausedInspectionIds }, 'Notification rejectStreamPaused');\n        this.onPauseNotification(pausedInspectionIds);\n        break;\n      default:\n        logger.warn({ type: evt.message }, 'Unknown gateway notification type');\n        break;\n    }\n  }\n\n  onGatewayNotificationError(err) {\n    logger.error({ err }, 'Gateway Notification error');\n    this.unsubscribeFromGatewayNotificationStream();\n  }\n\n  subscribeToGatewayMessageStream() {\n    this.unsubscribeFromGatewayMessageStream();\n    const req = Protobuf.SvPb.GetGatewayMessageStreamRequest.create({});\n    this.GatewayMessageSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onGatewayMessage(evt),\n      error: (err) => this.onGatewayMessageError(err),\n      complete: () => logger.debug('Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromGatewayMessageStream() {\n    if (this.GatewayMessageSubscription) {\n      this.GatewayMessageSubscription.unsubscribe();\n    }\n  }\n\n  onGatewayMessage(evt) {\n    const {\n      type,\n      messageList: { messages = [] },\n    } = evt;\n    logger.debug({ ...evt }, 'Gateway message stream event');\n\n    switch (type) {\n      case Protobuf.SvPb.MessageType.startMsgBox:\n        if (messages.length !== 1) {\n          logger.warn({ type, messages }, 'Expected exactly one message in the message event');\n          return;\n        }\n        const firstMessage = messages[0];\n        const message = this.formatMessageNotification(\n          firstMessage.messageText,\n          firstMessage.messageCode,\n        );\n        this.dispatch(showGlobalMessageOverlay({ message }));\n        break;\n\n      case Protobuf.SvPb.MessageType.endMsgBox:\n        this.dispatch(hideGlobalMessageOverlay());\n        break;\n\n      case Protobuf.SvPb.MessageType.msgLog:\n        // TODO also handle seveirty\n        messages.forEach(({ messageCode, messageText }) => {\n          this.dispatch(addServerMessageNotification(messageText, messageCode));\n        });\n        break;\n\n      default:\n        logger.warn({ type }, 'Unknown message event type');\n        break;\n    }\n  }\n\n  onGatewayMessageError(err) {\n    logger.error({ err }, 'Gateway message stream error');\n    this.unsubscribeFromGatewayMessageStream();\n  }\n\n  subscribeToProductStream(desc, cb) {\n    const id = this._getNextSubId();\n    this.subscriptionManager.addSubscription(id, desc, cb);\n    return id;\n  }\n\n  unsubscribeFromProductStream(id) {\n    this.subscriptionManager.removeSubscription(id);\n  }\n\n  _getNextSubId() {\n    return `${++this.nextSubId}`;\n  }\n\n  setUpProductHistories(config) {\n    const inspections = config.getInspections();\n    this.productHistoryManager.init(inspections);\n  }\n\n  async replayProduct(inspectionId, product) {\n    await this.fetchMissingProductData(inspectionId, product);\n    this.subscriptionManager.replayProduct(inspectionId, product);\n  }\n\n  async fetchMissingProductData(inspectionId, product) {\n    const missingImageIds = this.getMissingProductImages(inspectionId, product);\n    const missingValueIds = this.getMissingProductValues(inspectionId, product);\n    if (missingImageIds.length === 0 && missingValueIds.length === 0) {\n      return;\n    }\n\n    const req = Protobuf.SvPb.GetProductDataRequest.create({\n      inspectionId,\n      trigger: product.trigger,\n      imageIds: missingImageIds,\n      valueIds: missingValueIds,\n      includeOverlays: true,\n    });\n    try {\n      const res = await this.protobuf.request(req);\n      await product.addData({\n        trigger: res.trigger,\n        imageIds: missingImageIds,\n        images: res.images,\n        overlays: res.overlays,\n        valueIds: missingValueIds,\n        values: res.values,\n      });\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  getMissingProductImages(inspectionId, product) {\n    const imageIds = this.subscriptionManager.getSubscribedImages(inspectionId);\n    return imageIds.filter((imageId) => product.getImage(imageId) === undefined);\n  }\n\n  getMissingProductValues(inspectionId, product) {\n    const valueIds = this.subscriptionManager.getSubscribedValues(inspectionId);\n    return valueIds.filter((valueId) => product.getValue(valueId) === undefined);\n  }\n\n  onPauseNotification(pausedInspectionIds) {\n    this.dispatch(addRejectStreamPausedNotification(pausedInspectionIds));\n    this.subscriptionManager.updatePausedInspections(pausedInspectionIds);\n    this.dispatch(setPausedInspections(pausedInspectionIds));\n  }\n\n  pauseRejectStream(inspectionId) {\n    this.pauseRejectStreamImpl(true, inspectionId);\n  }\n\n  resumeRejectStream(inspectionId) {\n    this.pauseRejectStreamImpl(false, inspectionId);\n  }\n\n  async pauseRejectStreamImpl(pause, inspectionId) {\n    const request = Protobuf.SvPb.SetRejectStreamPauseStateRequest.create({\n      inspectionId: inspectionId || undefined,\n      pause,\n    });\n\n    try {\n      await this.protobuf.request(request);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async getMyPermissions() {\n    let response = {};\n    try {\n      const request = Protobuf.SvPb.GetMyPermissionsRequest.create();\n      response = await this.protobuf.request(request);\n    } catch (err) {\n      logger.error('Cannot get my permissions, fall back to default permissions');\n      response = defaultPermissions;\n    }\n\n    if (!response || !response.permissions) {\n      logger.error('Cannot get my permissions');\n      return false;\n    }\n\n    const myPermissions = new Set();\n    flattenPermissionsRec(response.permissions, myPermissions, '');\n    this.dispatch(setMyPermissions(myPermissions));\n\n    if (canReadUserManagement(myPermissions) || canEditUserManagement(myPermissions)) {\n      await this.getGroupPermissions();\n    }\n  }\n\n  async getGroupPermissions() {\n    const request = Protobuf.SvPb.GetGroupDetailsRequest.create();\n    const response = await this.protobuf.request(request);\n\n    if (!response || !response.groupDetails) {\n      logger.error('Cannot get group permissions');\n      return false;\n    }\n\n    const flattenedPermissions = this.flattenPermissions(response.groupDetails);\n    this.dispatch(setGroupPermissions(flattenedPermissions));\n  }\n\n  flattenPermissions(groupDetails) {\n    const permissions = new Map();\n    (groupDetails || []).forEach((groupDetail) => {\n      const groupPermissions = new Set();\n      flattenPermissionsRec(groupDetail.permissions, groupPermissions, '');\n      permissions.set(groupDetail.name, {\n        groupPermissions,\n        users: groupDetail.users,\n      });\n    });\n    return permissions;\n  }\n\n  async setUserPermissions(groupPermissions) {\n    const request = Protobuf.SvPb.UpdateGroupPermissionsRequest.create({\n      groupPermissions,\n    });\n    try {\n      if (this.protobuf) {\n        await this.protobuf.request(request);\n        await this.getGroupPermissions();\n      }\n    } catch (e) {\n      logger.error({ e }, 'Error while setting user permissions');\n    }\n\n    logger.info('Successfully saved user permissions');\n  }\n}\n","export const defaultPermissions = {\n  permissions: {\n    webapp: {\n      configuration: {\n        save: true,\n      },\n      logs: {\n        read: true,\n      },\n      viewset: {\n        add: true,\n        read: true,\n        edit: true,\n        remove: true,\n      },\n      view: [\n        {\n          type: 0,\n          add: true,\n          read: true,\n          edit: true,\n          remove: true,\n        },\n      ],\n    },\n    svobserver: {\n      mode: {\n        read: true,\n        edit: true,\n      },\n      inspectionstate: {\n        read: true,\n        edit: true,\n      },\n      value: {\n        read: true,\n        edit: true,\n      },\n      tool: {\n        read: true,\n        edit: true,\n        add: true,\n        remove: true,\n      },\n      configuration: {\n        read: true,\n        write: true,\n      },\n      notifications: {\n        subscribe: true,\n      },\n      clientlogs: {\n        store: true,\n      },\n      file: {\n        read: true,\n        write: true,\n      },\n      machinestate: {\n        set: true,\n      },\n      command: {\n        execute: true,\n      },\n    },\n    usermanagement: {\n      userpermissions: {\n        // currently set to false because default permissions are used as fallback if svobserver has not yet implemented permissions\n        read: false,\n        edit: false,\n      },\n    },\n  },\n};\n","export const chunkSubstr = (str, size) => {\n  const numChunks = Math.ceil(str.length / size);\n  const chunks = new Array(numChunks);\n\n  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substr(o, size);\n  }\n\n  return chunks;\n};\n","import { withRouter, Redirect } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { canReadUserManagement, canEditUserManagement } from '../../../../utils/permissions';\nimport UserIcon from '../../../../assets/icons/user.svg';\nimport HelpIcon from '../../../../assets/icons/help.svg';\nimport ShortcutHelpIcon from '../../../../assets/icons/shortcut-help.svg';\nimport AboutIcon from '../../../../assets/icons/info.svg';\nimport LogoutIcon from '../../../../assets/icons/logout.svg';\nimport PermissionsIcon from '../../../../assets/icons/permissions.svg';\nimport MenuList from '../../../../components/MenuList';\nimport ShortcutView from '../../../ShortcutView';\nimport HelpView from '../../../HelpView';\nimport AboutView from '../../../AboutView';\n\nimport './style.scss';\n\nclass UserInfo extends Component {\n  state = {\n    shortcutViewOpen: false,\n    isHelpViewOpen: false,\n    isAboutViewOpen: false,\n    gotoPermissions: false,\n  };\n\n  render() {\n    const { user, myPermissions } = this.props;\n    const menuItems = [\n      {\n        key: 'help',\n        caption: <FormattedMessage id=\"topNavigation.help\" />,\n        img: HelpIcon,\n        onClick: () => {\n          this.setState({ isHelpViewOpen: true });\n        },\n      },\n      {\n        key: 'shortcuthelp',\n        caption: <FormattedMessage id=\"topNavigation.shortcut\" />,\n        img: ShortcutHelpIcon,\n        onClick: () => {\n          this.setState({\n            shortcutViewOpen: !this.state.shortcutViewOpen,\n          });\n        },\n      },\n      {\n        key: 'about',\n        caption: <FormattedMessage id=\"topNavigation.about\" />,\n        img: AboutIcon,\n        onClick: () => {\n          this.setState({ isAboutViewOpen: true });\n        },\n      },\n      {\n        key: 'logout',\n        caption: <FormattedMessage id=\"topNavigation.logout\" />,\n        img: LogoutIcon,\n        onClick: async () => {\n          setImmediate(() => (window.location.href = `${window.location.origin}/logout`));\n        },\n      },\n    ];\n\n    if (canReadUserManagement(myPermissions) || canEditUserManagement(myPermissions)) {\n      menuItems.unshift({\n        key: 'permissions',\n        caption: <FormattedMessage id=\"topNavigation.permissions\" />,\n        img: PermissionsIcon,\n        onClick: () => {\n          this.setState({ gotoPermissions: true });\n        },\n      });\n      if (this.state.gotoPermissions) {\n        return <Redirect to=\"/permissions\" />;\n      }\n    }\n\n    return (\n      <div>\n        <div className=\"flex\">\n          <MenuList\n            buttonIcon={UserIcon}\n            buttonCaption={user.fullname}\n            menuItems={menuItems}\n            showBottomArrow\n            onClose={() => {}}\n            open={false}\n          />\n        </div>\n        <div>\n          <HelpView\n            open={this.state.isHelpViewOpen}\n            onClose={() => this.setState({ isHelpViewOpen: false })}\n          />\n          <ShortcutView\n            open={this.state.shortcutViewOpen}\n            onClose={() => this.setState({ shortcutViewOpen: false })}\n          />\n          <AboutView\n            open={this.state.isAboutViewOpen}\n            onClose={() => this.setState({ isAboutViewOpen: false })}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nUserInfo.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.app.user,\n  myPermissions: state.app.myPermissions,\n});\n\nexport default connect(mapStateToProps, null)(withRouter(UserInfo));\n","export default __webpack_public_path__ + \"static/media/user.71fbff7c.svg\";","export default __webpack_public_path__ + \"static/media/shortcut-help.d16d3001.svg\";","export default __webpack_public_path__ + \"static/media/logout.34533d8e.svg\";","export default __webpack_public_path__ + \"static/media/permissions.ce764429.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport Dialog from '../../components/Dialog';\nimport Logo from '../../components/layout/Logo';\nimport KoerberLogo from '../../assets/logo/logo.svg';\n\nimport './style.scss';\n\nclass AboutView extends Component {\n  render() {\n    const { onClose, open, intl, configuration } = this.props;\n\n    if (!configuration) {\n      return <div />;\n    }\n\n    const svObserverVersion = configuration.getSvObserverVersion();\n    const gatewayVersion = configuration.getGatewayVersion();\n    const svwepAppVersion = configuration.getWebAppVersion();\n\n    const { name } = require('../../../package.json');\n\n    return (\n      <Dialog title={<FormattedMessage id=\"aboutView\" />} onClose={onClose} open={open}>\n        <div className=\"appname\">{name}</div>\n        <div className=\"table\">\n          <div className=\"row\">\n            <div className=\"cell\">{intl.messages['aboutView.applicationVersion']}</div>\n            <div className=\"cell\">{svwepAppVersion}</div>\n          </div>\n          <div className=\"row\">\n            <div className=\"cell\">{intl.messages['aboutView.svoVersion']}</div>\n            <div className=\"cell\">{svObserverVersion}</div>\n          </div>\n          <div className=\"row\">\n            <div className=\"cell\">{intl.messages['aboutView.gatewayVersion']}</div>\n            <div className=\"cell\">{gatewayVersion}</div>\n          </div>\n        </div>\n        <div className=\"logo\">\n          <Logo src={KoerberLogo} title=\"logo\" />\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nAboutView.defaultProps = {\n  open: false,\n};\n\nAboutView.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  try {\n    const { configuration } = state.app;\n    return { configuration };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport default connect(mapStateToProps)(injectIntl(AboutView));\n","const shortcuts = [\n  {\n    title: 'shortcutView.fullscreenTitle',\n    description: 'shortcutView.fullscreenDescription',\n  },\n  {\n    title: 'shortcutView.helpTitle',\n    description: 'shortcutView.helpDescription',\n  },\n];\n\nexport default shortcuts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\nimport Heading from '../../../../components/typo/Heading';\n\nconst ShortcutListItem = ({ title, description }) => (\n  <li className=\"shortcut-list-item\">\n    <Heading type=\"h3\" intlId={title} />\n    <FormattedMessage id={description} />\n  </li>\n);\n\nexport const propTypes = {\n  title: PropTypes.node.isRequired,\n  description: PropTypes.node.isRequired,\n};\nShortcutListItem.propTypes = propTypes;\n\nexport default ShortcutListItem;\n","import React from 'react';\nimport shortId from 'shortid';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\nimport ShortcutListItem, { propTypes as shortcutListItemPropTypes } from '../ShortcutListItem';\n\nconst ShortcutList = ({ shortcuts }) => (\n  <ul className=\"shortcut-list\">\n    {shortcuts.map((shortcut) => (\n      <ShortcutListItem\n        key={shortId.generate()}\n        title={shortcut.title}\n        description={shortcut.description}\n      />\n    ))}\n  </ul>\n);\n\nShortcutList.propTypes = {\n  shortcuts: PropTypes.arrayOf(PropTypes.shape(shortcutListItemPropTypes)).isRequired,\n};\n\nexport default ShortcutList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport shortcuts from './shortcuts';\nimport Dialog from '../../components/Dialog';\nimport ShortcutList from './components/ShortcutList';\n\nconst ShortcutView = ({ open, onClose }) => (\n  <Dialog title={<FormattedMessage id=\"shortcutView.title\" />} onClose={onClose} open={open}>\n    <ShortcutList shortcuts={shortcuts} />\n  </Dialog>\n);\n\nShortcutView.defaultProps = {\n  open: false,\n};\n\nShortcutView.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ShortcutView;\n","import Product from './Product';\n\nexport default class ProductHistory {\n  constructor(inspectionId) {\n    this.inspectionId = inspectionId;\n    this.history = [];\n  }\n\n  async addProductData(productData) {\n    const { trigger, isReject } = productData;\n    const entry = this.history.find((e) => e.trigger === trigger);\n    let product = null;\n    if (entry) {\n      product = entry.product;\n    } else {\n      product = new Product({ trigger, isReject, history: this });\n      this.history.push({\n        trigger,\n        product,\n      });\n    }\n\n    await product.addData(productData);\n\n    return product;\n  }\n\n  releaseProduct(trigger) {\n    const entry = this.history.find((entry) => entry.trigger === trigger);\n    if (!entry) {\n      return;\n    }\n\n    const wasReleased = entry.product.releaseImpl();\n    if (wasReleased) {\n      this.history = this.history.filter((e) => e !== entry);\n    }\n  }\n}\n","import ProductHistory from './ProductHistory';\n\nexport default class ProductHistoryManager {\n  constructor() {\n    this.productHistories = new Map();\n  }\n\n  init(inspections) {\n    this.productHistories.clear();\n\n    (inspections || []).forEach((inspection) => {\n      const inspectionId = inspection.id;\n      const history = new ProductHistory(inspectionId);\n      this.productHistories.set(inspectionId, history);\n    });\n  }\n\n  async addProductData(inspectionId, productData) {\n    const productHistory = this.productHistories.get(inspectionId);\n    if (!productHistory) {\n      return undefined;\n    }\n    return await productHistory.addProductData(productData);\n  }\n}\n","import each from 'lodash/each';\nimport logger from '../utils/logger';\nimport Protobuf from './Protobuf';\n\nexport default class InspectionSubscription {\n  constructor({ inspectionId, productHistoryManager, protobuf, paused }) {\n    this.inspectionId = inspectionId;\n    this.productHistoryManager = productHistoryManager;\n    this.protobuf = protobuf;\n    this.lastTrigger = -1;\n    this.subsById = new Map();\n    this.paused = paused;\n    this.selectedTrigger = null;\n    this.baseSub = null;\n  }\n\n  pause() {\n    this.paused = true;\n  }\n\n  resume() {\n    this.paused = false;\n    this.selectedTrigger = null;\n  }\n\n  replayProduct(product) {\n    this.selectedTrigger = product.trigger;\n    this.emitProductToAllSubscriptions(product);\n  }\n\n  addSubscription(id, desc, cb) {\n    const subscription = { id, desc, cb };\n    this.subsById.set(id, subscription);\n\n    const { inspectionId } = desc;\n    if (this.inspectionId !== inspectionId) {\n      throw new Error('Insection id does not match');\n    }\n\n    this.resubscribeToStream();\n  }\n\n  removeSubscription(id) {\n    const subscription = this.subsById.get(id);\n    if (!subscription) {\n      logger.warn({ id }, 'Unable to unsubscribe listener: unknown id');\n      return;\n    }\n\n    this.swapLastProduct(subscription, null);\n\n    this.subsById.delete(id);\n\n    this.resubscribeToStream();\n  }\n\n  isEmpty() {\n    return this.subsById.size === 0;\n  }\n\n  getSubscribedImages() {\n    return this.uniqueIds('imageIds');\n  }\n\n  getSubscribedValues() {\n    return this.uniqueIds('valueIds');\n  }\n\n  setProtobuf(protobuf) {\n    this.protobuf = protobuf;\n    // TODO re-subscribe!\n  }\n\n  resubscribeToStream() {\n    this.unsubscribeFromStream();\n    if (!this.isEmpty()) {\n      this.subscribeToStream();\n    }\n  }\n\n  subscribeToStream() {\n    // TODO generate nonce per subscription so we know whether we get an event for an old sub\n    const params = this.buildReqParams();\n    const req = Protobuf.SvPb.GetProductStreamRequest.create(params);\n    this.baseSub = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onStreamEvent(req, evt),\n      error: (err) => this.onStreamError(err),\n      // TODO: how do we want to report complete event to the client?\n      //       we could return an event emitter...\n      complete: () => logger.debug('Product observable completed'),\n    });\n  }\n\n  buildReqParams() {\n    return {\n      inspectionId: this.inspectionId,\n      startAtTriggerCount: this.getStartAtTriggerCount(),\n      includeFailStatusValues: true,\n      valueIds: this.uniqueIds('valueIds'),\n      imageIds: this.uniqueIds('imageIds'),\n      rejectValueIds: this.uniqueIds('rejectValueIds'),\n      rejectImageIds: this.uniqueIds('rejectImageIds'),\n      rejectsOnly: this.isRejectsOnly(),\n      imageFormat: Protobuf.SvPb.ImageFormatEnum.bmp,\n      includeOverlays: true,\n    };\n  }\n\n  getStartAtTriggerCount() {\n    let startAtTriggerCount = 0;\n    this.subsById.forEach((sub) => {\n      if (\n        !isNaN(sub.desc.startAtTriggerCount) &&\n        sub.desc.startAtTriggerCount < startAtTriggerCount\n      ) {\n        startAtTriggerCount = sub.desc.startAtTriggerCount;\n      }\n    });\n    if (startAtTriggerCount === -1 && this.trigger > 0) {\n      return this.trigger;\n    }\n    return startAtTriggerCount;\n  }\n\n  isRejectsOnly() {\n    let rejectsOnly = true;\n    this.subsById.forEach((sub) => {\n      if (!sub.desc.rejectsOnly) {\n        rejectsOnly = false;\n      }\n    });\n    return rejectsOnly;\n  }\n\n  uniqueIds(key) {\n    const ids = new Set();\n    this.subsById.forEach((sub) => {\n      each(sub.desc[key], (id) => ids.add(id));\n    });\n    return Array.from(ids);\n  }\n\n  unsubscribeFromStream() {\n    if (this.baseSub && this.baseSub.unsubscribe) {\n      this.baseSub.unsubscribe();\n    }\n    this.baseSub = null;\n  }\n\n  async onStreamEvent(req, rawEvent) {\n    const { trigger, isReject } = rawEvent;\n    const images = this.gatherImages(req, rawEvent);\n    const values = this.gatherValues(req, rawEvent);\n\n    const productData = {\n      trigger,\n      isReject,\n      images,\n      values,\n    };\n\n    const product = await this.productHistoryManager.addProductData(this.inspectionId, productData);\n    this.lastTrigger = trigger;\n    this.emitProductToAllSubscriptions(product);\n  }\n\n  gatherImages(req, rawEvent) {\n    const { imageIds, rejectImageIds } = req;\n    const { isReject, images, rejectImages, overlays: overlaysList, rejectOverlays } = rawEvent;\n\n    const result = new Map();\n\n    imageIds.forEach((id, idx) => {\n      const image = (images || [])[idx];\n      const overlays = (overlaysList || [])[idx];\n      if (image) {\n        result.set(id, {\n          id,\n          image,\n          overlays,\n        });\n      }\n    });\n\n    if (isReject) {\n      rejectImageIds.forEach((id, idx) => {\n        const image = (rejectImages || [])[idx];\n        const overlays = (rejectOverlays || [])[idx];\n        if (image) {\n          result.set(id, {\n            id,\n            image,\n            overlays,\n          });\n        }\n      });\n    }\n\n    return result;\n  }\n\n  gatherValues(req, rawEvent) {\n    const { valueIds, rejectValueIds } = req;\n    const { isReject, values, rejectValues } = rawEvent;\n\n    const result = new Map();\n\n    valueIds.forEach((id, idx) => {\n      const value = (values || [])[idx];\n      if (value) {\n        result.set(id, {\n          id,\n          value,\n        });\n      }\n    });\n\n    if (isReject) {\n      rejectValueIds.forEach((id, idx) => {\n        const value = (rejectValues || [])[idx];\n        if (value) {\n          result.set(id, {\n            id,\n            value,\n          });\n        }\n      });\n    }\n\n    return result;\n  }\n\n  emitProductToAllSubscriptions(product) {\n    this.subsById.forEach((subscription) => {\n      this.emitProductToSubscription(subscription, product);\n    });\n  }\n\n  emitProductToSubscription(subscription, product) {\n    const hasRequestedData = this.hasAllRequestedDataForSubscription(product, subscription);\n    const isInterestedIn = this.isInterestedInNewPorduct(product, subscription);\n    if (hasRequestedData && isInterestedIn) {\n      product.lock();\n      subscription.cb({ product });\n      this.swapLastProduct(subscription, product);\n    }\n  }\n\n  hasAllRequestedDataForSubscription(product, subscription) {\n    // if only reject values requested and product is not a reject\n    if (!subscription.desc.imageIds && !subscription.desc.valueIds && !product.isReject) {\n      return false;\n    }\n    return (\n      this.hasDataForSubscriptionInList(subscription.desc.valueIds, product.values) ||\n      this.hasDataForSubscriptionInList(subscription.desc.rejectValueIds, product.values) ||\n      this.hasDataForSubscriptionInList(subscription.desc.imageIds, product.images) ||\n      this.hasDataForSubscriptionInList(subscription.desc.rejectImageIds, product.images)\n    );\n  }\n\n  isInterestedInNewPorduct(product, subscription) {\n    if (this.selectedTrigger) {\n      return this.selectedTrigger === product.trigger;\n    }\n    if (subscription.lastProduct) {\n      return (\n        subscription.desc.allowOldTrigger || subscription.lastProduct.trigger < product.trigger\n      );\n    }\n    return true;\n  }\n\n  hasDataForSubscriptionInList(requestedIds, map) {\n    const arr = requestedIds || [];\n    for (let i = 0; i < arr.length; ++i) {\n      if (!map.has(arr[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  swapLastProduct(subscription, product) {\n    if (subscription.lastProduct && !subscription.desc.manualRelease) {\n      subscription.lastProduct.release();\n    }\n    subscription.lastProduct = product;\n  }\n\n  onStreamError(err) {\n    // TODO: forward err to callback\n    logger.error({ err }, 'Stream error');\n    // TODO: unsubscribe all in case of error!\n  }\n}\n","import logger from '../utils/logger';\nimport InspectionSubscription from './InspectionSubscription';\n\nexport default class SubscriptionManager {\n  constructor({ productHistoryManager }) {\n    this.productHistoryManager = productHistoryManager;\n    this.inspectionIdBySubId = new Map();\n    this.subsByInspectionId = new Map();\n    this.pausedInspectionIds = [];\n    this.protobuf = null;\n  }\n\n  updatePausedInspections(pausedInspectionIds) {\n    this.pausedInspectionIds = pausedInspectionIds;\n    for (let [key, value] of this.subsByInspectionId.entries()) {\n      if (pausedInspectionIds.includes(key)) {\n        value.pause();\n      } else {\n        value.resume();\n      }\n    }\n  }\n\n  replayProduct(inspectionId, product) {\n    const inspection = this.subsByInspectionId.get(inspectionId);\n    if (inspection) {\n      inspection.replayProduct(product);\n    }\n  }\n\n  addSubscription(id, desc, cb) {\n    const { inspectionId, startAtTriggerCount } = desc;\n    this.inspectionIdBySubId.set(id, inspectionId);\n    const isPaused = this.pausedInspectionIds.includes(inspectionId);\n    let subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      subscription = new InspectionSubscription({\n        inspectionId,\n        startAtTriggerCount,\n        productHistoryManager: this.productHistoryManager,\n        paused: isPaused,\n        protobuf: this.protobuf,\n      });\n      this.subsByInspectionId.set(inspectionId, subscription);\n    }\n    subscription.addSubscription(id, desc, cb);\n  }\n\n  removeSubscription(id) {\n    const inspectionId = this.inspectionIdBySubId.get(id);\n    if (!inspectionId) {\n      logger.warn({ id }, 'Unable to unsubscribe listener: unknown id');\n      return;\n    }\n\n    const subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      logger.warn({ id }, 'Unable to unsubscribe listener: unknown inspection id');\n      return;\n    }\n\n    subscription.removeSubscription(id);\n\n    if (subscription.isEmpty()) {\n      this.subsByInspectionId.delete(inspectionId);\n    }\n  }\n\n  getSubscribedImages(inspectionId) {\n    const subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      return [];\n    }\n    return subscription.getSubscribedImages();\n  }\n\n  getSubscribedValues(inspectionId) {\n    const subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      return [];\n    }\n    return subscription.getSubscribedValues();\n  }\n\n  setProtobuf(protobuf) {\n    this.protobuf = protobuf;\n    this.subsByInspectionId.forEach((subscription) => subscription.setProtobuf(protobuf));\n  }\n}\n","import PropTypes from 'prop-types';\n\nconst actionList = PropTypes.arrayOf(\n  PropTypes.shape({ intlId: PropTypes.string, iconUrl: PropTypes.string }),\n);\nconst ActionBarType = PropTypes.oneOfType([actionList, PropTypes.func]);\n\nexport const TOGGLE_BUTTON = 'TOGGLE_BUTTON';\nexport const SEPARATOR = 'SEPARATOR';\n\nexport default ActionBarType;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'react-tippy';\nimport './style.scss';\n\nconst IconButton = ({ iconUrl, onClick, tooltip, style }) => (\n  <div className=\"icon-button-wrapper\">\n    <Tooltip title={tooltip} trigger=\"mouseenter\" duration={1} delay={1000}>\n      <button\n        style={{\n          ...style,\n          backgroundImage: `url(${iconUrl})`,\n          backgroundPosition: 'center',\n          backgroundSize: '100% 100%',\n        }}\n        onClick={onClick}\n        className=\"icon-button\"\n      />\n    </Tooltip>\n  </div>\n);\n\nIconButton.defaultProps = {\n  tooltip: undefined,\n};\n\nIconButton.propTypes = {\n  iconUrl: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  tooltip: PropTypes.string,\n};\n\nexport default IconButton;\n","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport './style.scss';\nimport closeIcon from '../../assets/icons/close.svg';\n\nimport IconButton from '../buttons/IconButton';\nimport ActionBar from '../../components/ActionBar';\nimport ActionBarType from '../../types/ActionBarType';\n\nclass Dialog extends Component {\n  render() {\n    const {\n      children,\n      onClose,\n      dialogActions,\n      title,\n      intl,\n      open,\n      isInView,\n      isHeight100,\n      isFullscreen,\n      isPopup,\n    } = this.props;\n    const dialogClass = classNames({\n      dialog: true,\n      'dialog--open': open,\n      'is-in-view': isInView,\n      'is-height-100': isHeight100,\n    });\n    const dialogWrapperClass = classNames({\n      'dialog-wrapper': true,\n      'is-height-100': isInView || isFullscreen,\n      'is-width-100': isFullscreen,\n      isPopup: isPopup,\n    });\n\n    const dialogContentWrapperClass = classNames({\n      'dialog-content-wrapper': true,\n      'is-padding-0': isInView,\n      isPopup: isPopup,\n    });\n\n    if (!open) {\n      return false;\n    }\n    return (\n      <div className={dialogClass}>\n        <div className={dialogWrapperClass}>\n          <div className=\"dialog-toolbar\">\n            <div className=\"dialog-title\">{title}</div>\n            <div className=\"dialog-controll-wrapper\">\n              <IconButton\n                tooltip={intl.messages['viewSetManager.close']}\n                iconUrl={closeIcon}\n                onClick={() => {\n                  onClose();\n                }}\n              />\n            </div>\n          </div>\n          <div className={dialogContentWrapperClass}>{children}</div>\n          <div className=\"dialog-action-wrapper\">\n            {dialogActions && <ActionBar isViewAction actions={dialogActions} />}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDialog.defaultProps = {\n  open: false,\n  title: undefined,\n  dialogActions: undefined,\n  isInView: false,\n  isFullscreen: false,\n  isPopup: false,\n};\n\nDialog.propTypes = {\n  children: PropTypes.node.isRequired,\n  open: PropTypes.bool,\n  isInView: PropTypes.bool,\n  dialogActions: ActionBarType,\n  title: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  isFullscreen: PropTypes.bool,\n  isPopup: PropTypes.bool,\n};\n\nexport default injectIntl(Dialog);\n","const AUTH_TOKEN_KEY = 'svAuthToken';\nconst USER_KEY = 'svObserverUser';\nexport const CONFIG_INFO = 'configInfo';\nexport const CONFIGURATION_CHUNK_TEMPLATE = 'configChunk_';\nexport const CONFIGURATION_CHUNK_LIST = 'configChunkList';\n\nexport const loadState = () => {\n  const authToken = localStorage.getItem(AUTH_TOKEN_KEY);\n  if (!authToken) {\n    return {};\n  }\n\n  const userStr = localStorage.getItem(USER_KEY);\n  let user;\n  try {\n    user = JSON.parse(userStr);\n  } catch (e) {\n    return {};\n  }\n\n  if (!user) {\n    return {};\n  }\n\n  return { authToken, user };\n};\n\nexport const resetState = () => {\n  localStorage.removeItem(AUTH_TOKEN_KEY);\n  localStorage.removeItem(USER_KEY);\n  localStorage.removeItem(CONFIG_INFO);\n  localStorage.removeItem(CONFIGURATION_CHUNK_LIST);\n};\n\nexport const saveState = (authToken, user) => {\n  localStorage.setItem(AUTH_TOKEN_KEY, authToken);\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n};\n","import protobufjs from 'protobufjs';\n\nexport const utf8StringToBuffer = (str) => {\n  const len = protobufjs.util.utf8.length(str);\n  const buf = new Uint8Array(len);\n  protobufjs.util.utf8.write(str, buf, 0);\n  return buf;\n};\n\nexport const bufferToUtf8String = (buffer) => {\n  return protobufjs.util.utf8.read(buffer, 0, buffer.length);\n};\n","import semver from 'semver';\n\nimport logger from '../utils/logger';\nimport Protobuf from '../protobuf/Protobuf';\nimport { bufferToUtf8String, utf8StringToBuffer } from '../protobuf/Utils';\n\nimport ViewSetFactory, { DEFAULT_VIEWSET_NAME } from '../views/ViewSetFactory';\n\nconst viewSetFactory = new ViewSetFactory();\n\n/*\n * Version Changelog:\n * 1:   createdViewSets and currentViewSet property as initial state\n * 2:   added inspectionOverlays property\n * 3:   added inspectionListSelection property\n * 3.1: added inspectionEditingViewIds property\n * 4.0.0: breaking change bw 8.10-8.20. Uses GUIDs instead dotted names\n * 5.0.0: breaking change between 8.20 and 10.00. Uses int ids instead of GUIDs\n */\n\nconst WEBAPP_CHUNK_FILENAME = 'WebApp.json';\nconst WEBAPP_IDMAPPING_FILENAME = 'WebAppIds.json';\nconst WEBAPP_CHUNK_VERSION = '5.0.0';\nconst WEBAPP_CHUNK_PARAMETERS = {\n  VERSION: 'version',\n  SV_OBSERVER_VERSION: 'svObserverVersion',\n  GATEWAY_VERSION: 'gatewayVersion',\n  WEBAPP_VERSION: 'webAppVersion',\n  CREATED_VIEW_SETS: 'createdViewSets',\n  CURRENT_VIEW_SETS: 'currentViewSet',\n  INSPECTION_OVERLAYS: 'inspectionOverlays',\n  INSPECTION_LIST_SELECTION: 'inspectionListSelection',\n  INSPECTION_EDITING_VIEW_IDS: 'inspectionEditingViewIds',\n  INSPECTION_LIST_ALIASES: 'inspectionListAliases',\n  INSPECTION_IMAGE_VIEW_SETTINGS: 'inspectionImageViewSettings',\n};\n\nexport const saveChunk = (protobuf, currentState, actions) => async (dispatch) => {\n  const { setSaveOperationInProcess, setSaveFlag } = actions;\n  // extract the saveable information from store\n  const inspectionOverlays = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    const overlays = Object.keys(inspection.sharedState.views).map((viewId) => ({\n      viewId,\n      overlays:\n        inspection.sharedState.views[viewId] && inspection.sharedState.views[viewId].overlays,\n      sourceImage:\n        inspection.sharedState.views[viewId] && inspection.sharedState.views[viewId].sourceImage,\n    }));\n    return { inspectionId, overlays };\n  });\n\n  const inspectionListSelection = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    const listSelection = Object.keys(inspection.views).map((viewId) => ({\n      viewId,\n      selection: inspection.views[viewId] && inspection.views[viewId].selection,\n      isSelectionMode: inspection.views[viewId] && inspection.views[viewId].isSelectionMode,\n      selectAll: inspection.views[viewId] && inspection.views[viewId].selectAll,\n    }));\n    return { inspectionId, listSelection };\n  });\n\n  const inspectionEditingViewIds = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    const editingViewId = inspection.sharedState.editingViewId;\n    return { inspectionId, editingViewId };\n  });\n\n  const inspectionListAliases = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    if (inspection.sharedState.listViewAliases) {\n      const aliases = convertAliasesToJson(inspection.sharedState.listViewAliases);\n      return { inspectionId, aliases, showInList: inspection.sharedState.showAliasesInList };\n    }\n\n    return {};\n  });\n\n  const inspectionImageViewSettings = Object.keys(currentState.inspections).map(\n    (inspectionIdStr) => {\n      const inspectionId = parseInt(inspectionIdStr, 10);\n      const inspection = currentState.inspections[inspectionIdStr];\n      const imageViewSettings = Object.keys(inspection.views).map((viewId) => ({\n        viewId,\n        zoomFactor: inspection.views[viewId] && inspection.views[viewId].zoomFactor,\n        imagePosition: inspection.views[viewId] && inspection.views[viewId].imagePosition,\n      }));\n\n      return { inspectionId, imageViewSettings };\n    },\n  );\n\n  const chunk = {\n    [WEBAPP_CHUNK_PARAMETERS.VERSION]: WEBAPP_CHUNK_VERSION,\n    [WEBAPP_CHUNK_PARAMETERS.SV_OBSERVER_VERSION]:\n      currentState.app.configuration.getSvObserverVersion(),\n    [WEBAPP_CHUNK_PARAMETERS.GATEWAY_VERSION]: currentState.app.configuration.getGatewayVersion(),\n    [WEBAPP_CHUNK_PARAMETERS.WEBAPP_VERSION]: currentState.app.configuration.getWebAppVersion(),\n    [WEBAPP_CHUNK_PARAMETERS.CREATED_VIEW_SETS]: currentState.viewSet.createdViewSets,\n    [WEBAPP_CHUNK_PARAMETERS.CURRENT_VIEW_SETS]: currentState.viewSet.currentViewSet,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_OVERLAYS]: inspectionOverlays,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_SELECTION]: inspectionListSelection,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_EDITING_VIEW_IDS]: inspectionEditingViewIds,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_ALIASES]: inspectionListAliases,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_IMAGE_VIEW_SETTINGS]: inspectionImageViewSettings,\n  };\n  const json = JSON.stringify(chunk);\n\n  await dispatch(setSaveOperationInProcess(true));\n  try {\n    const req = Protobuf.SvPb.PutFileRequest.create({\n      destinationPath: WEBAPP_CHUNK_FILENAME,\n      fileData: utf8StringToBuffer(json),\n      saveInConfig: true,\n    });\n    await protobuf.request(req);\n  } catch (err) {\n    // TODO: report save error to user\n    logger.error({ err }, 'Error while saving client chunk');\n    return;\n  }\n  await dispatch(setSaveOperationInProcess(false));\n  dispatch(setSaveFlag(false));\n};\n\nconst convertAliasesToJson = (map) => {\n  const result = [];\n  map.forEach((entry) => {\n    result.push(entry);\n  });\n  return result;\n};\n\nexport const loadChunk = (protobuf, actions) => async (dispatch) => {\n  const {\n    setSharedStateData,\n    setClientChunk,\n    setViewData,\n    setEditingFocus,\n    addIncompatibilityDetectedNotification,\n    setListViewAliases,\n    saveImageSettings,\n  } = actions;\n\n  const req = Protobuf.SvPb.GetFileRequest.create({\n    sourcePath: WEBAPP_CHUNK_FILENAME,\n  });\n  let response = null;\n  try {\n    response = await protobuf.request(req);\n  } catch (err) {\n    logger.error({ err }, 'Error while loading client chunk');\n  }\n\n  if (response.hResult) {\n    logger.info('There is no web app configuration to restore');\n    return;\n  }\n\n  const chunk = bufferToUtf8String(response.fileData);\n  let config = JSON.parse(chunk.toString());\n\n  // will check whether config contains deprecated string GUIDs and try to convert them if required\n  config = await updateConfigWithGuidToIntMapping(protobuf, config);\n\n  const { version: configVersion } = semver.coerce(config.version);\n  if (semver.satisfies(configVersion, '<5.0.0')) {\n    throw new Error('Unable to load deprecated config file');\n  }\n\n  const receivedConfigParameters = Object.keys(config);\n  const expectedConfigParameters = Object.keys(WEBAPP_CHUNK_PARAMETERS).map(\n    (key) => WEBAPP_CHUNK_PARAMETERS[key],\n  );\n\n  for (let i = 0; i < expectedConfigParameters.length; i++) {\n    const currentParameterName = expectedConfigParameters[i];\n    if (!receivedConfigParameters.includes(currentParameterName)) {\n      logger.warn(`\"${currentParameterName}\" can not be found in loaded config`);\n    }\n  }\n\n  if (!semver.valid(configVersion)) {\n    logger.error('Config version is invalid!');\n    throw new Error('Selected config version is invalid');\n  }\n\n  if (semver.diff(WEBAPP_CHUNK_VERSION, configVersion) === 'major') {\n    logger.error('Selected config is not compatible with the current Web App version');\n    throw new Error('Selected config is not compatible with the current Web App version');\n  }\n\n  // Notify user when a minor change detected and a newer config is loaded on an older webapp\n  if (\n    semver.diff(WEBAPP_CHUNK_VERSION, configVersion) === 'minor' &&\n    semver.gt(configVersion, WEBAPP_CHUNK_VERSION)\n  ) {\n    dispatch(addIncompatibilityDetectedNotification());\n  }\n\n  if (semver.satisfies(configVersion, '>=3.0.0')) {\n    // restore custom overlays\n    config.inspectionOverlays.forEach((inspection) =>\n      inspection.overlays.forEach((view) => {\n        dispatch(\n          setSharedStateData(inspection.inspectionId, 'overlays', view.overlays, view.viewId),\n        );\n        dispatch(\n          setSharedStateData(inspection.inspectionId, 'sourceImage', view.sourceImage, view.viewId),\n        );\n      }),\n    );\n\n    // restore list view data\n    config.inspectionListSelection.forEach((inspection) =>\n      inspection.listSelection.forEach((view) => {\n        dispatch(setViewData(inspection.inspectionId, view.viewId, 'selection', view.selection));\n        dispatch(\n          setViewData(\n            inspection.inspectionId,\n            view.viewId,\n            'isSelectionMode',\n            view.isSelectionMode,\n          ),\n        );\n        dispatch(setViewData(inspection.inspectionId, view.viewId, 'selectAll', view.selectAll));\n      }),\n    );\n  }\n\n  if (semver.satisfies(configVersion, '>=3.1.0')) {\n    // restore editing focus\n    config.inspectionEditingViewIds.forEach((inspection) => {\n      if (inspection.inspectionId && inspection.editingViewId) {\n        dispatch(setEditingFocus(inspection.inspectionId, inspection.editingViewId));\n      }\n    });\n  }\n\n  if (semver.satisfies(configVersion, '>=5.0.0')) {\n    (config.inspectionListAliases || []).forEach((inspection) => {\n      if (inspection.inspectionId && Array.isArray(inspection.aliases)) {\n        const aliases = new Map();\n        inspection.aliases.forEach((alias) => aliases.set(alias.objectId, alias));\n        dispatch(setListViewAliases(inspection.inspectionId, aliases, inspection.showInList));\n      }\n    });\n    (config.inspectionImageViewSettings || []).forEach((inspection) => {\n      (inspection.imageViewSettings || []).forEach((setting) => {\n        dispatch(\n          saveImageSettings(\n            inspection.inspectionId,\n            setting.viewId,\n            setting.zoomFactor,\n            setting.imagePosition,\n          ),\n        );\n      });\n    });\n  }\n\n  //now the views are created with all configurations set before\n  dispatch(setClientChunk(config));\n};\n\nexport const resetChunk = (protobuf, actions) => async (dispatch) => {\n  const { setClientChunk } = actions;\n  const name = DEFAULT_VIEWSET_NAME;\n  const emptyViewset = viewSetFactory.buildEmptyViewSet(name);\n  const emptyViewSets = {\n    [name]: emptyViewset,\n  };\n\n  const emptyChunk = {\n    [WEBAPP_CHUNK_PARAMETERS.VERSION]: WEBAPP_CHUNK_VERSION,\n    [WEBAPP_CHUNK_PARAMETERS.SV_OBSERVER_VERSION]: 'UNDEFINED',\n    [WEBAPP_CHUNK_PARAMETERS.GATEWAY_VERSION]: 'UNDEFINED',\n    [WEBAPP_CHUNK_PARAMETERS.WEBAPP_VERSION]: 'UNDEFINED',\n    [WEBAPP_CHUNK_PARAMETERS.CREATED_VIEW_SETS]: emptyViewSets,\n    [WEBAPP_CHUNK_PARAMETERS.CURRENT_VIEW_SETS]: emptyViewset,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_OVERLAYS]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_SELECTION]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_EDITING_VIEW_IDS]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_ALIASES]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_IMAGE_VIEW_SETTINGS]: [],\n  };\n\n  dispatch(setClientChunk(emptyChunk));\n};\n\nconst updateConfigWithGuidToIntMapping = async (protobuf, config) => {\n  const { version } = semver.coerce(config.version);\n\n  // config is not using GUIDs any more already\n  if (semver.satisfies(version, '>=5.0.0') || semver.satisfies(version, '<4.0.0')) {\n    return config;\n  }\n\n  const sourcePath = WEBAPP_IDMAPPING_FILENAME;\n  const req = Protobuf.SvPb.GetFileRequest.create({ sourcePath });\n\n  let res;\n  try {\n    res = await protobuf.request(req);\n  } catch (err) {\n    logger.error({ err }, 'Error while loading id mapping');\n    throw new Error('Unable to load id mapping file');\n  }\n\n  if (res.hResult) {\n    logger.info(`The file \"${WEBAPP_IDMAPPING_FILENAME}\" does not exist.`);\n    throw new Error('Unable to load id mapping file');\n  }\n\n  let idMapping;\n  try {\n    const idMappingChunk = bufferToUtf8String(res.fileData);\n    idMapping = JSON.parse(idMappingChunk.toString());\n  } catch (err) {\n    logger.error({ err }, `Error while parsing content of ${WEBAPP_IDMAPPING_FILENAME}`);\n    return config;\n  }\n\n  const mapping = parseGuidToObjectIdMapping(idMapping.guidToObjectIdMapping);\n  const error = { hasError: false };\n  recursivlyUpdateConfigWithGuidToIntMapping(config, mapping, error);\n\n  // this is the first version with int ids\n  config.version = '5.0.0';\n  config.patchedIds = true;\n  if (error.hasError) {\n    throw new Error(\n      'Selected config is not compatible with the current Web App version (could not migrate all string GUIDs to int ObjectIds)',\n    );\n  } else {\n    logger.debug('Successfully migrated string GUIDs to int ObjectIds');\n  }\n\n  return config;\n};\n\nconst parseGuidToObjectIdMapping = (mapping) => {\n  const result = new Map();\n  Object.entries(mapping || {}).forEach(([key, value]) => {\n    const guid = key.toLowerCase().replace('{', '').replace('}', '');\n    result.set(guid, value);\n  });\n  return result;\n};\n\nconst lookUpKeyInMapping = (key, mapping) => {\n  if (mapping.has(key)) {\n    return mapping.get(key);\n  }\n  const lowerCaseKey = key.toLowerCase();\n  if (mapping.has(lowerCaseKey)) {\n    return mapping.get(lowerCaseKey);\n  }\n  return undefined;\n};\n\nconst recursivlyUpdateConfigWithGuidToIntMapping = (obj, mapping, error) => {\n  for (const key in obj) {\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      if (key === 'selection') {\n        obj[key] = obj[key]\n          .map((entry) => {\n            const value = lookUpKeyInMapping(entry, mapping);\n            if (value) {\n              return value;\n            } else {\n              error.hasError = true;\n              logger.error(\n                `There is a guid in the config which is not included in the mapping: ${entry}`,\n              );\n              return undefined;\n            }\n          })\n          .filter((entry) => !!entry); // remove undefined entries from selection\n      }\n      recursivlyUpdateConfigWithGuidToIntMapping(obj[key], mapping, error);\n    } else {\n      if (\n        key === 'inspectionId' ||\n        key === 'sourceImage' ||\n        key === 'xVariable' ||\n        key === 'offsetLeftVariable' ||\n        key === 'yVariable' ||\n        key === 'offsetTopVariable' ||\n        key === 'widthVariable' ||\n        key === 'heightVariable' ||\n        key === 'colorVariable'\n      ) {\n        const value = lookUpKeyInMapping(obj[key], mapping);\n        if (value) {\n          obj[key] = value;\n        } else {\n          obj[key] = undefined;\n          error.hasError = true;\n          logger.error(\n            `There is a guid in the config which is not included in the mapping: ${obj[key]}`,\n          );\n        }\n      }\n    }\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  authenticate as authenticateHelper,\n  logOut as logOutHelper,\n} from '../../utils/authentication';\nimport { saveChunk, loadChunk, resetChunk } from '../../utils/clientChunkManager';\n\nexport const setLocale = (locale) => ({\n  type: 'SET_LOCALE',\n  locale,\n});\n\nexport const setProtobufStaticInitialized = () => ({\n  type: 'SET_PROTOBUF_STATIC_INITIALIZED',\n});\n\nexport const setProtobuf = (newProtobuf, socket) => ({\n  type: 'SET_PROTOBUF',\n  protobuf: newProtobuf,\n  socket,\n});\n\nexport const setCurrentConfiguration = (configuration) => ({\n  type: 'SET_CONFIGURATION',\n  configuration,\n});\n\nexport const addNotification = (type, message) => ({\n  type: 'ADD_NOTIFICATION',\n  notification: {\n    type,\n    message,\n  },\n});\n\nexport const addImageNotAvailableNotification = () => {\n  return addNotification('warning', <FormattedMessage id=\"imageNotAvailable\" />);\n};\n\nexport const addConnectionEstablishedNotification = () => {\n  return addNotification(\n    'info',\n    <FormattedMessage id=\"notifications.websocket.connectionEstablished\" />,\n  );\n};\n\nexport const addConnectionLostNotification = () => {\n  return addNotification(\n    'warning',\n    <FormattedMessage id=\"notifications.websocket.connectionLost\" />,\n  );\n};\n\nexport const addModeSwitchNotification = (mode) => {\n  return addNotification(\n    'info',\n    <span>\n      <FormattedMessage id=\"notifications.modeSwitch.userSwitchedModeTo\" /> {mode}\n    </span>,\n  );\n};\n\nexport const addUserSwitchedLanguageNotification = (locale) => {\n  return addNotification(\n    'info',\n    <span>\n      <FormattedMessage id=\"notifications.userSwitchedLanguage\" />\n      {locale}\n    </span>,\n  );\n};\n\nexport const addProjectLoadedNotification = (configFile) => {\n  return addNotification('info', `A new project was loaded: \"${configFile}\"`);\n};\n\nexport const addProjectUnloadedNotification = (configFile) => {\n  return addNotification('info', `The project was unloaded: \"${configFile}\"`);\n};\n\nexport const addProjectModifiedNotification = () => {\n  return addNotification('info', `Project was modified. Reloading.`);\n};\n\nexport const addServerMessageNotification = (messageText, errorNumber) => {\n  return addNotification('info', `Server reported: ${messageText} ${errorNumber}`);\n};\n\nexport const addRejectStreamPausedNotification = (pausedInspectionIds) => {\n  return addNotification(\n    'info',\n    Array.isArray(pausedInspectionIds) && pausedInspectionIds.length > 0 ? (\n      <FormattedMessage id=\"notifications.rejectStreamPaused\" />\n    ) : (\n      <FormattedMessage id=\"notifications.rejectStreamResumed\" />\n    ),\n  );\n};\n\nexport const addRunModePauseNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"runViewSet.runModePaused\" />);\n};\n\nexport const addRunModeContinueNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"runViewSet.runModeContinue\" />);\n};\n\nexport const addStartInspectingNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"runViewSet.runModeStoppedInspecting\" />);\n};\n\nexport const addVariableValueShouldBeInTheRangeNotification = (variableName, range) => {\n  return addNotification(\n    'warning',\n    <FormattedMessage\n      id=\"notifications.variableValueShouldBeInTheRange\"\n      values={{ variableName, range }}\n    />,\n  );\n};\n\nexport const tokenExpired = () => ({\n  type: 'AUTH_TOKEN_EXPIRED',\n});\n\nexport const authenticate = (accessToken) => async (dispatch) => {\n  const { authToken, user } = await authenticateHelper(accessToken);\n  return dispatch({\n    type: 'LOG_IN',\n    authToken,\n    user,\n  });\n};\n\nexport const logOut =\n  (notifyGateway = true) =>\n  async (dispatch) => {\n    await logOutHelper(notifyGateway);\n    return dispatch({\n      type: 'LOG_OUT',\n    });\n  };\n\nexport const onNavigationHidden = () => ({\n  type: 'ON_NAVIGATION_HIDDEN',\n});\n\nexport const showGlobalMessageOverlay = ({ message }) => ({\n  type: 'SHOW_GLOBAL_MESSAGE_OVERLAY',\n  message,\n});\n\nexport const hideGlobalMessageOverlay = () => ({\n  type: 'HIDE_GLOBAL_MESSAGE_OVERLAY',\n});\n\nexport const setViewSet = (viewSet, viewSetId) => ({\n  type: 'SET_VIEWSET',\n  viewSet,\n  viewSetId,\n});\n\nexport const replaceViewInCurrentViewSet = (viewId, replacementComponentId, inspectionId) => ({\n  type: 'REPLACE_VIEW_IN_CURRENT_VIEWSET',\n  viewId,\n  replacementComponentId,\n  inspectionId,\n});\n\nexport const switchViewSet = (viewSet) => ({\n  type: 'SWITCH_VIEWSET',\n  viewSet,\n});\n\nexport const setParameter = (parameter) => ({\n  type: 'SET_PARAMETER',\n  parameter,\n});\n\nexport const enterFullscreenMode = (component) => ({\n  type: 'ENTER_FULLSCREEN_MODE',\n  componentDescriptor: {\n    componentId: component.props.id,\n    setFullscreen: component.setFullscreen,\n  },\n});\n\nexport const leaveFullscreenMode = (component) => ({\n  type: 'LEAVE_FULLSCREEN_MODE',\n  componentDescriptor: {\n    componentId: component.props.id,\n    setFullscreen: component.setFullscreen,\n  },\n});\n\nexport const toggleFullscreenMode = (component) => ({\n  type: 'TOGGLE_FULLSCREEN_MODE',\n  componentDescriptor: {\n    id: component.props.id,\n    setFullscreen: component.setFullscreen,\n  },\n});\n\nexport const increaseViewSizeChangeCounter = () => ({\n  type: 'INCREASE_VIEW_SIZE_CHANGE_COUNTER',\n});\n\nexport const setBottomNavHidden = (hidden) => ({\n  type: 'SET_BOTTOM_NAV_HIDDEN',\n  hidden: !!hidden,\n});\n\nexport const setTopNavHidden = (hidden) => ({\n  type: 'SET_TOP_NAV_HIDDEN',\n  hidden: !!hidden,\n});\n\nexport const setDefaultViewSetName = (name) => ({\n  type: 'SET_DEFAULT_VIEWSET_NAME',\n  name,\n});\n\nexport const newViewSet = (name, mode) => ({\n  type: 'NEW_VIEW_SET',\n  name,\n  mode,\n});\n\nexport const setSaveOperationInProcess = (inProcess) => ({\n  type: 'UPDATE_SAVE_OPERATION_IN_PROCESS',\n  inProcess,\n});\n\nexport const setSaveFlag = (hasChanges) => ({\n  type: 'SET_SAVE_FLAG',\n  hasChanges,\n});\n\nexport const saveClientChunk = (protobuf, currentState) => async (dispatch) => {\n  const actions = {\n    setSaveOperationInProcess,\n    setSaveFlag,\n  };\n  await dispatch(saveChunk(protobuf, currentState, actions));\n};\n\nexport const loadClientChunk = (protobuf) => async (dispatch) => {\n  const actions = {\n    setSharedStateData,\n    setClientChunk,\n    setViewData,\n    setEditingFocus,\n    addIncompatibilityDetectedNotification,\n    setListViewAliases,\n    saveImageSettings,\n    setSVOConfigLoaded,\n  };\n  await dispatch(loadChunk(protobuf, actions));\n};\n\nexport const resetClientChunk = (protobuf) => async (dispatch) => {\n  const actions = {\n    setClientChunk,\n    setSVOConfigLoaded,\n  };\n  await dispatch(resetChunk(protobuf, actions));\n};\n\nexport const setClientChunk = (chunk) => ({\n  type: 'LOAD_CLIENT_CHUNK',\n  chunk,\n});\n\nexport const setSVOConfigLoaded = (isLoaded) => ({\n  type: 'SET_SVO_CONFIG_LOADED',\n  isLoaded,\n});\n\nexport const setViewSetForMode = (mode) => ({\n  type: 'SET_VIEWSET_FOR_MODE',\n  mode,\n});\n\nexport const removeViewSet = (name) => ({\n  type: 'REMOVE_VIEWSET',\n  name,\n});\n\nexport const clearCurrentView = () => ({\n  type: 'CLEAR_CURRENT_VIEW',\n});\n\nexport const renameViewSet = (oldName, newName) => ({\n  type: 'RENAME_VIEWSET',\n  oldName,\n  newName,\n});\n\nexport const changeViewSetAfterLoading = (name) => ({\n  type: 'CHANGE_VIEWSET_AFTER_LOADING',\n  name,\n});\n\nexport const setCurrentLayout = (layout) => ({\n  type: 'SET_CURRENT_LAYOUT',\n  layout,\n});\n\nexport const setCurrentMode = (mode) => ({\n  type: 'SET_CURRENT_MODE',\n  mode,\n});\n\nexport const setCurrentModeDone = (mode) => ({\n  type: 'SET_CURRENT_MODE_DONE',\n  mode,\n});\n\nexport const setPausedInspections = (pausedInspections) => ({\n  type: 'SET_PAUSED_INSPECTIONS',\n  pausedInspections,\n});\n\nexport const initViewState = (inspectionId, viewId, initState, initSharedState) => ({\n  type: 'INIT_VIEW_STATE',\n  inspectionId,\n  viewId,\n  initState,\n  initSharedState,\n});\n\nexport const setViewData = (inspectionId, viewId, key, data) => ({\n  type: 'SET_VIEW_DATA',\n  inspectionId,\n  viewId,\n  key,\n  data,\n});\n\nexport const saveImageSettings = (inspectionId, viewId, zoomFactor, imagePosition) => ({\n  type: 'SAVE_IMAGE_SETTINGS',\n  inspectionId,\n  viewId,\n  zoomFactor,\n  imagePosition,\n});\n\nexport const setSharedStateData = (inspectionId, key, data, viewId) => ({\n  type: 'SET_SHARED_STATE_DATA',\n  inspectionId,\n  key,\n  data,\n  viewId,\n});\n\nexport const setEditingFocus = (inspectionId, viewId) => ({\n  type: 'SET_EDITING_FOCUS',\n  inspectionId,\n  viewId,\n});\n\nexport const setListViewAliases = (inspectionId, aliases, showInList) => ({\n  type: 'SET_LIST_VIEW_ALIASES',\n  inspectionId,\n  aliases,\n  showInList,\n});\n\nexport const updateListViewShowAliases = (inspectionId, showInList) => ({\n  type: 'UPDATE_LIST_VIEW_SHOW_ALIASES',\n  inspectionId,\n  showInList,\n});\n\nexport const setFocusedViewType = (viewType) => ({\n  type: 'SET_FOCUSED_VIEW_TYPE',\n  viewType,\n});\n\nexport const purgeViewState = (inspectionId, viewId) => ({\n  type: 'PURGE_VIEW_STATE',\n  inspectionId,\n  viewId,\n});\n\nexport const openHelpView = () => ({\n  type: 'OPEN_HELP_VIEW',\n  isHelpViewOpen: true,\n});\n\nexport const closeHelpView = () => ({\n  type: 'CLOSE_HELP_VIEW',\n  isHelpViewOpen: false,\n});\n\nexport const addIncompatibilityDetectedNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"incompatibilityNotification\" />);\n};\n\nexport const setGroupPermissions = (groupPermissions) => ({\n  type: 'SET_GROUP_PERMISSIONS',\n  groupPermissions,\n});\n\nexport const setMyPermissions = (myPermissions) => ({\n  type: 'SET_MY_PERMISSIONS',\n  myPermissions,\n});\n\nexport const setBrowserWindowVisibility = (visible) => ({\n  type: 'SET_BROWSER_WINDOW_VISIBILITY',\n  visible,\n});\n","export const isObjectValid = (prop) => {\n  try {\n    return prop();\n  } catch (error) {\n    return undefined;\n  }\n};\n","import browserStdout from 'browser-stdout';\nimport bunyanFormat from 'bunyan-format';\nimport { createLogger } from 'browser-bunyan';\n\nclass ProxyStream {\n  constructor(opts = {}) {\n    this.proxy = null;\n    this.pendingMessages = [];\n    this.opts = opts;\n    this.start();\n  }\n\n  start() {\n    const { throttleInterval } = this.opts;\n\n    const throttleRequests = () => {\n      this.currentThrottleTimeout = setTimeout(() => {\n        const recs = this.pendingMessages;\n        this.pendingMessages = [];\n\n        if (recs.length > 0) {\n          if (!this.proxy) {\n            this.pendingMessages = recs;\n          } else {\n            this.proxy.sendLogsToServer(recs);\n          }\n        }\n        throttleRequests();\n      }, throttleInterval);\n    };\n\n    throttleRequests();\n  }\n\n  setProxy(proxy) {\n    this.proxy = proxy;\n\n    if (this.proxy && this.pendingMessages.length > 0) {\n      this.proxy.sendLogsToServer(this.pendingMessages);\n      this.pendingMessages = [];\n    }\n  }\n\n  removeProxy() {\n    this.proxy = null;\n    this.pendingMessages = [];\n  }\n\n  write(rec) {\n    if (this.currentThrottleTimeout) {\n      const idx = this.pendingMessages.findIndex(\n        (message) => message.level === rec.level && message.msg === rec.msg,\n      );\n\n      if (idx >= 0) {\n        if (!this.pendingMessages[idx].sameMessageCount) {\n          this.pendingMessages[idx] = { ...this.pendingMessages[idx], sameMessageCount: 1 };\n        }\n        this.pendingMessages[idx].sameMessageCount++;\n      } else {\n        this.pendingMessages.push(rec);\n      }\n    }\n  }\n}\n\nclass FormatStream {\n  constructor() {\n    const out = browserStdout({\n      label: false,\n    });\n    this.impl = bunyanFormat(\n      {\n        outputMode: 'short',\n        color: false,\n      },\n      out,\n    );\n  }\n\n  write(rec) {\n    this.impl.write(JSON.stringify(rec));\n  }\n}\n\nconst proxyStream = new ProxyStream({\n  throttleInterval: 3000,\n});\nconst formatStream = new FormatStream();\nconst logger = createLogger({\n  name: 'SvWebApp',\n  streams: [\n    {\n      level: 'warn',\n      stream: proxyStream,\n      type: 'raw',\n    },\n    {\n      level: 'debug',\n      stream: formatStream,\n      type: 'stream',\n    },\n  ],\n});\n\nlogger.setProxy = (proxy) => proxyStream.setProxy(proxy);\nlogger.removeProxy = (proxy) => proxyStream.removeProxy(proxy);\n\nexport default logger;\n","export default __webpack_public_path__ + \"static/media/back.c6197e51.svg\";","const de = {\n  // TopNavigation\n  'topNavigation.language.german': 'Deutsch',\n  'topNavigation.language.english': 'Englisch',\n  'topNavigation.logout': 'Abmelden',\n  'topNavigation.help': 'Hilfe',\n  'topNavigation.about': 'Info',\n  'topNavigation.shortcut': 'Shortcut',\n  'topNavigation.inspectionState':\n    'Inspektionsstatus ({runningInspections} von {numberOfInspections} aktiv)',\n  'topNavigation.permissions': 'Rechte',\n\n  // there is a auto mapping in utils/modes.js\n  editMode: 'Edit Mode',\n  unknownMode: 'Unbekannter Mode',\n  runMode: 'Run Mode',\n  stopMode: 'Stop Mode',\n  regressionMode: 'Regression Mode',\n  testMode: 'Test Mode',\n\n  // ImageStrip\n  'imageStripView.inspectionTemplate': '{inspectionName} Filmstreifen',\n  'imageStripView.play': 'Play',\n  'imageStripView.pause': 'Pause',\n\n  // ListView\n  listView: 'Liste',\n  'listView.inspectionTemplate': '{inspectionName} Liste',\n  'listView.AliasEditor.title': 'Bearbeite Alias für den Pfadnamen',\n  'listView.Actionbar.hideAliases': 'Zeige Namen',\n  'listView.Actionbar.showAliases': 'Zeige Aliase',\n  'listView.AliasEditor.dottedName': 'Pfadname',\n  'listView.AliasEditor.value': 'Wert',\n  'listView.AliasEditor.button': 'Speichern',\n\n  // HelpView\n  helpView: 'Hilfe',\n\n  // AboutView\n  aboutView: 'Über',\n  'aboutView.applicationName': 'Applicationsname:',\n  'aboutView.applicationVersion': 'Applikationsversion:',\n  'aboutView.svoVersion': 'SVObserver-Version:',\n  'aboutView.gatewayVersion': 'Gateway-Version:',\n\n  // ViewTypeSelection\n  'viewTypeSelection.imageStripView': 'Filmstreifen',\n  'viewTypeSelection.imageView': 'Bild',\n  'viewTypeSelection.parameterView': 'Parameter',\n  'viewTypeSelection.ListView': 'Liste',\n  'viewTypeSelection.toolset': 'Toolset',\n  'viewTypeSelection.back': 'Zurück',\n  'viewTypeSelection.cancel': 'Abbrechen',\n  'viewTypeSelection.chooseViewTooltip': 'View-Typ auswählen',\n  'viewTypeSelection.selectViewType': 'Wählen Sie einen Typ für diese View:',\n\n  // InspectionSelection\n  'inspectionSelection.selectInspection': 'Wählen Sie eine Inspektion für diese View:',\n\n  // ParameterView / Overlay\n  'parameterview.overlay.delete': 'Löschen',\n  'parameterview.overlay.add': 'Hinzufügen',\n  'parameterview.overlay.showAll': 'Alle einblenden',\n  'parameterview.overlay.hideAll': 'Alle ausblenden',\n\n  // ImageView\n  'imageView.inspectionTemplate': '{inspectionName} Bild',\n  'imageView.zoomIn': 'Hineinzoomen',\n  'imageView.zoomOut': 'Herauszoomen',\n  'imageView.fitToWidth': 'An Breite anpassen',\n  'imageView.fitToHeight': 'An Höhe anpassen',\n  'imageView.saveWithOverlays': 'Bild mit Overlays herunterladen',\n  'imageView.overlayListToggle': 'Overlay-Liste',\n  'imageView.imageInfoToggle': 'Bildinfo',\n  'imageView.save': 'Bild herunterladen',\n  'imageView.showOverlays': 'Overlays anzeigen',\n  'imageView.hideOverlays': 'Overlays ausblenden',\n  'imageView.info': 'Info',\n  'imageView.width': 'Breite:',\n  'imageView.height': 'Höhe:',\n  'imageView.x': 'X:',\n  'imageView.y': 'Y:',\n\n  // ParameterView\n  parameterView: 'Parameter',\n  'parameterView.inspectionTemplate': '{inspectionName} Parameter',\n\n  // ToolsetView\n  'toolsetView.inspectionTemplate': '{inspectionName} Toolset',\n\n  // AboutView\n  'aboutView.title': 'Über ',\n\n  // ViewSet Manager\n  viewSetManager: 'ViewSet Manager',\n  'viewSetManager.title': 'View Set Manager',\n  'viewSetManager.remove': 'Entfernen',\n  'viewSetManager.viewSetName': 'Name',\n  'viewSetManager.save': 'Alle View Sets speichern',\n  'viewSetManager.close': 'Schließen',\n  'viewSetManager.editViewSetHeadline': 'Viewsets editieren:',\n  'viewSetManager.newViewSet': 'Neues Viewset erstellen',\n  'viewSetManager.editViewSetName': 'Viewset-Namen editieren',\n  'viewSetManager.changeViewSetName': 'Viewset-Namen ändern',\n  'viewSetManager.apply': 'Änderungen übernehmen',\n  'viewSetManager.export': 'Aktuelle Ansicht exportieren',\n  'viewSetManager.import': 'Ansicht aus Datei importieren',\n  'viewSetManager.importConfirm.title': 'Aktuelle Ansicht überschreiben',\n  'viewSetManager.importConfirm.message':\n    'Das Importieren einer Ansicht aus einer Datei überschreibt die aktuelle Ansicht. Wollen Sie das wirklich?',\n  'viewSetManager.deleteConfirm.message':\n    'Wollen Sie das Viewset {viewsetName} wirklich entfernen?',\n  'viewSetManager.deleteIconTooltip': 'Viewset löschen',\n\n  // ShortcutView\n  'shortcutView.title': 'Shortcuts',\n  'shortcutView.fullscreenTitle': 'Vollbild',\n  'shortcutView.fullscreenDescription': 'Drücken Sie in einer aktiven View STRG-F',\n  'shortcutView.helpTitle': 'Hilfe',\n  'shortcutView.helpDescription': 'Drücken Sie in einer aktiven View F1',\n\n  // Notifications\n  'notifications.modeSwitch.userSwitchedModeTo': 'Benutzer hat Mode geändert zu:',\n  'notifications.websocket.connectionEstablished': 'Websocket-Verbindung geöffnet auf Port:',\n  'notifications.websocket.connectionLost': 'Websocket-Verbindung verloren',\n  'notifications.userSwitchedLanguage': 'Benutzer hat Sprache geändert zu:',\n  'notifications.rejectStreamPaused': 'Reject stream wurde angehalten',\n  'notifications.rejectStreamResumed': 'Reject stream wurde fortgesetzt',\n  'notifications.checkSvimOutput': 'Bitte Ausgabe am SVIM überprüfen',\n  'notifications.incompatibilityWarning':\n    'Ausgewählte Konfiguration ist möglicherweise nicht mit der aktuellen WebApp version kompatibel',\n  'notifications.errorOccurred': 'Ein Fehler ist aufgetreten',\n  'notifications.error.loadingFile': 'Daten aus der Datei konnten nicht geladen werden.',\n  'notifications.successfulAction': 'Erfolgreiche Aktion',\n  'notifications.successfullyLoadedFile':\n    'Ansicht konnte erfolgreich aus der Datei geladen werden.',\n  'notifications.viewsetVersionIncompatibleTitle': 'Datei-Version inkompatibel',\n  'notifications.viewsetVersionIncompatibleMessage':\n    'Die Datei-Version ist inkompatibel. Die Ansicht kann nicht geladen werden.',\n  'notifications.minorVersionDiffTitle': 'Unterversion weicht ab',\n  'notifications.minorVersionDiffMessage':\n    'Aufgrund unterschiedlicher Unterversionen zwischen Applikation und Datei kann es zu inkorrekter Darstellung der Ansicht kommen.',\n  'notifications.variableValueShouldBeInTheRange':\n    'Der Wert der eingegebenen Variable {variableName} muss im Bereich von {range} liegen.',\n\n  // ListView\n  'listView.save': 'Speichern',\n\n  // SVOView\n  'svoView.emptyViewInspectionTemplate': '{inspectionName}',\n  'svoView.closeView': 'View schließen',\n  'svoView.closeViewConfirmation': 'Wollen Sie die View wirklich schließen?',\n\n  cancel: 'Abbrechen',\n  noConfigName: '[Keine Konfiguration]',\n  unknownConfigName: '[Unbekannte Konfiguration]',\n  noConfigLoaded: 'Keine Konfiguration geladen im SVObserver',\n\n  // Permissions\n  'permissions.backToWebApp': 'Zurück zur WebApp',\n  'permissions.helpText':\n    'Sie können die aufgelisteten Rechte für die jeweilige Gruppe (Spalte) anpassen. Rechte der Gruppe \"Common\" werden allen anderen Gruppen zugeordnet. Die Rechte haben möglicherweise Auswirkungen auf die WebApp und/oder den SVObserver.',\n  'permissions.permissions': 'Rechte',\n  'permissions.permissionManagement': 'Rechte-Verwaltung',\n  'permissions.description': 'Beschreibung',\n\n  // Permission descriptions\n  'permissionDescription.webapp.configuration.save':\n    'Nutzer kann aktuelle Konfiguration mit allen View Sets speichern',\n  'permissionDescription.webapp.logs.read':\n    'Nutzer kann Logs sehen in der oberen Navigationsleiste',\n  'permissionDescription.webapp.viewset.add': 'Nutzer kann View Sets hinzufügen',\n  'permissionDescription.webapp.viewset.read':\n    'Nutzer kann View Sets sehen(Wechseln zwischen View Sets, ViewSet Manager öffnen)',\n  'permissionDescription.webapp.viewset.edit':\n    'Nutzer kann View Sets sehen und editieren(Größe der Views verändern, neue Views hinzufügen, Wechseln zwischen View Sets, ViewSet Manager öffnen, View Set umbenennen)',\n  'permissionDescription.webapp.viewset.remove': 'Nutzer kann ein View Set entfernen',\n  'permissionDescription.webapp.view[type=AnyView].add':\n    'Nutzer kann Views eines BELIEBIGEN Typs hinzufügen',\n  'permissionDescription.webapp.view[type=AnyView].read':\n    'Nutzer kann Views eines BELIEBIGEN Typs sehen',\n  'permissionDescription.webapp.view[type=AnyView].edit':\n    'Nutzer kann Views eines BELIEBIGEN Typs sehen und editieren',\n  'permissionDescription.webapp.view[type=AnyView].remove':\n    'Nutzer kann Views eines BELIEBIGEN Typs entfernen',\n  'permissionDescription.webapp.view[type=ImageView].add':\n    'Nutzer kann Views des Typs IMAGE hinzufügen',\n  'permissionDescription.webapp.view[type=ImageView].read':\n    'Nutzer kann Views des Typs IMAGE sehen(auch Bilder herunterladen, Liste eigener Overlays sehen, Bildinfos sehen)',\n  'permissionDescription.webapp.view[type=ImageView].edit':\n    'Nutzer kann Views des Typs IMAGE sehen und editieren(Auswahl von Inspektion und Tool, Ändern der Bildgröße, Bilder herunterladen, Liste eigener Overlays sehen, Bildinfos sehen)',\n  'permissionDescription.webapp.view[type=ImageView].remove':\n    'Nutzer kann Views des Typs IMAGE entfernen',\n  'permissionDescription.webapp.view[type=ListView].add':\n    'Nutzer kann Views des Typs LIST hinzufügen',\n  'permissionDescription.webapp.view[type=ListView].read': 'Nutzer kann Views des Typs LIST sehen',\n  'permissionDescription.webapp.view[type=ListView].edit':\n    'Nutzer kann Views des Typs LIST sehen und editieren(Auswahl von Inspektion und Tool, Editieren von Aliasen)',\n  'permissionDescription.webapp.view[type=ListView].remove':\n    'Nutzer kann Views des Typs LIST entfernen',\n  'permissionDescription.webapp.view[type=ImageStripView].add':\n    'Nutzer kann Views des Typs IMAGE STRIP hinzufügen',\n  'permissionDescription.webapp.view[type=ImageStripView].read':\n    'Nutzer kann Views des Typs IMAGE STRIP sehen',\n  'permissionDescription.webapp.view[type=ImageStripView].edit':\n    'Nutzer kann Views des Typs IMAGE STRIP sehen und editieren(Auswahl von Inspektion und Tool)',\n  'permissionDescription.webapp.view[type=ImageStripView].remove':\n    'Nutzer kann Views des Typs IMAGE STRIP entfernen',\n  'permissionDescription.webapp.view[type=ParameterView].add':\n    'Nutzer kann Views des Typs PARAMETER hinzufügen',\n  'permissionDescription.webapp.view[type=ParameterView].read':\n    'Nutzer kann Views des Typs PARAMETER sehen',\n  'permissionDescription.webapp.view[type=ParameterView].edit':\n    'Nutzer kann Views des Typs PARAMETER sehen und editieren(Hinzufügen / editieren / entfernen von eigenen Overlays)',\n  'permissionDescription.webapp.view[type=ParameterView].remove':\n    'Nutzer kann Views des Typs PARAMETER entfernen',\n  'permissionDescription.webapp.view[type=ToolSetView].add':\n    'Nutzer kann Views des Typs TOOLSET hinzufügen',\n  'permissionDescription.webapp.view[type=ToolSetView].read':\n    'Nutzer kann Views des Typs TOOLSET sehen',\n  'permissionDescription.webapp.view[type=ToolSetView].edit':\n    'Nutzer kann Views des Typs TOOLSET sehen und editieren',\n  'permissionDescription.webapp.view[type=ToolSetView].remove':\n    'Nutzer kann Views des Typs TOOLSET entfernen',\n  'permissionDescription.svobserver.mode.read':\n    'Nutzer kann den aktuellen Mode vom SVObserver in der oberen Navigationsleiste sehen',\n  'permissionDescription.svobserver.mode.edit':\n    'Nutzer kann den aktuellen Mode vom SVObserver in der oberen Navigationsleiste sehen und ändern',\n  'permissionDescription.svobserver.inspectionstate.read':\n    'Nutzer kann den Status aller Inspektionen in der oberen Navigationsleiste sehen',\n  'permissionDescription.svobserver.inspectionstate.edit':\n    'Nutzer kann den Status aller Inspektionen in der oberen Navigationsleiste sehen / ändern und den Status im IMAGE STRIP View wechseln',\n  'permissionDescription.svobserver.value.read': 'SVObserver prüft, ob Nutzer Werte sehen darf',\n  'permissionDescription.svobserver.value.edit': 'SVObserver prüft, ob Nutzer Werte editieren darf',\n  'permissionDescription.svobserver.tool.add':\n    'SVObserver prüft, ob Nutzer neue Tool hinzufügen darf',\n  'permissionDescription.svobserver.tool.read': 'SVObserver prüft, ob Nutzer Tools lesen darf',\n  'permissionDescription.svobserver.tool.edit':\n    'SVObserver prüft, ob Nutzer existierende Tools editieren darf',\n  'permissionDescription.svobserver.tool.remove':\n    'SVObserver prüft, ob Nutzer Tools entfernen darf',\n  'permissionDescription.svobserver.configuration.read':\n    'SVObserver prüft, ob Nutzer die SVObserver Konfiguration lesen darf',\n  'permissionDescription.svobserver.configuration.write':\n    'SVObserver prüft, ob Nutzer die SVObserver Konfiguration speichern darf',\n  'permissionDescription.svobserver.notifications.subscribe':\n    'SVObserver prüft, ob Nutzer SVObserver Nachrichten erhalten darf',\n  'permissionDescription.svobserver.clientlogs.store':\n    'SVObserver prüft, ob Nutzer Client Logs an den SVObserver senden darf',\n  'permissionDescription.svobserver.file.read':\n    'SVObserver prüft, ob Nutzer Dateien im SVIM RUN Ordner lesen darf',\n  'permissionDescription.svobserver.file.write':\n    'SVObserver prüft, ob Nutzer Dateien im SVIM RUN Ordner schreiben darf',\n  'permissionDescription.svobserver.machinestate.set':\n    'SVObserver prüft, ob Nutzer den Maschinenstatus setzen darf (Herunterfahren oder Neustarten des SVIMs)',\n  'permissionDescription.svobserver.command.execute':\n    'SVObserver prüft, ob Nutzer Kommandos ausführen darf',\n  'permissionDescription.usermanagement.userpermissions.read':\n    'Nutzer kann Gruppen-Rechte vom SVObserver laden, den Menü-Eintrag zum Wechsel in die Rechte-Verwaltung sehen, alle Rechte in Rechte-Verwaltung sehen',\n  'permissionDescription.usermanagement.userpermissions.edit':\n    'Nutzer kann Gruppen-Rechte vom SVObserver laden, den Menü-Eintrag zum Wechsel in die Rechte-Verwaltung sehen, alle Rechte in Rechte-Verwaltung sehen und editieren',\n\n  // Debugger\n  'debugger.title': 'Debugger',\n  'debugger.backToWebApp': 'Zurück zur WebApp',\n  'debugger.requestsListHeader': 'Request list',\n  'debugger.noParametersMessage': 'This request has no parameters',\n  'debugger.noItemsMessage': '(no items)',\n  'debugger.nothingToConfigureMessage': '(nothing to configure)',\n  'debugger.addItemButtonText': 'Add',\n  'debugger.sendRequest': 'Send request',\n  'debugger.noFilteredResultsMessage': 'No filtered results',\n  'debugger.copyToClipboard': 'Copy to clipboard',\n};\n\nexport default de;\n","const en = {\n  // TopNavigation\n  'topNavigation.language.german': 'German',\n  'topNavigation.language.english': 'English',\n  'topNavigation.logout': 'Logout',\n  'topNavigation.help': 'Help',\n  'topNavigation.about': 'Info',\n  'topNavigation.shortcut': 'Shortcut',\n  'topNavigation.inspectionState':\n    'Inspection state ({runningInspections} of {numberOfInspections} running)',\n  'topNavigation.permissions': 'Permissions',\n\n  // there is a auto mapping in utils/modes.js\n  editMode: 'Edit Mode',\n  unknownMode: 'Unknown mode',\n  runMode: 'Run Mode',\n  stopMode: 'Stop Mode',\n  regressionMode: 'Regression Mode',\n  testMode: 'Test Mode',\n\n  // ImageStrip\n  'imageStripView.inspectionTemplate': '{inspectionName} Image Strip',\n  'imageStripView.play': 'Play',\n  'imageStripView.pause': 'Pause',\n\n  // ListView\n  listView: 'List',\n  'listView.inspectionTemplate': '{inspectionName} List',\n  'listView.AliasEditor.title': 'Set alias for dotted name',\n  'listView.Actionbar.hideAliases': 'Hide aliases',\n  'listView.Actionbar.showAliases': 'Show aliases',\n  'listView.AliasEditor.dottedName': 'Dotted name',\n  'listView.AliasEditor.value': 'Value',\n  'listView.AliasEditor.button': 'Save',\n\n  // HelpView\n  helpView: 'Help',\n\n  // AboutView\n  aboutView: 'About',\n  'aboutView.applicationName': 'Application Name:',\n  'aboutView.applicationVersion': 'Application Version:',\n  'aboutView.svoVersion': 'SVObserver Version:',\n  'aboutView.gatewayVersion': 'Gateway Version:',\n\n  // ViewTypeSelection\n  'viewTypeSelection.imageStripView': 'Image Strip',\n  'viewTypeSelection.imageView': 'Image',\n  'viewTypeSelection.parameterView': 'Parameter',\n  'viewTypeSelection.ListView': 'List',\n  'viewTypeSelection.toolset': 'Toolset',\n  'viewTypeSelection.back': 'Back',\n  'viewTypeSelection.cancel': 'Cancel',\n  'viewTypeSelection.chooseViewTooltip': 'Choose view type',\n  'viewTypeSelection.selectViewType': 'Select a type for this view:',\n\n  // InspectionSelection\n  'inspectionSelection.selectInspection': 'Select an inspection for this view:',\n\n  // ParameterView / Overlay\n  'parameterview.overlay.delete': 'Delete',\n  'parameterview.overlay.add': 'Add',\n  'parameterview.overlay.showAll': 'Show all',\n  'parameterview.overlay.hideAll': 'Hide all',\n\n  // ImageView\n  'imageView.inspectionTemplate': '{inspectionName} Image',\n  'imageView.zoomIn': 'Zoom in',\n  'imageView.zoomOut': 'Zoom out',\n  'imageView.fitToWidth': 'Fit to width',\n  'imageView.fitToHeight': 'Fit to height',\n  'imageView.saveWithOverlays': 'Download image with overlays',\n  'imageView.overlayListToggle': 'Overlay list',\n  'imageView.imageInfoToggle': 'Image info',\n  'imageView.save': 'Download image',\n  'imageView.showOverlays': 'Show overlays',\n  'imageView.hideOverlays': 'Hide overlays',\n  'imageView.info': 'Info',\n  'imageView.width': 'Width:',\n  'imageView.height': 'Height:',\n  'imageView.x': 'X:',\n  'imageView.y': 'Y:',\n\n  // ParameterView\n  parameterView: 'Parameter',\n  'parameterView.inspectionTemplate': '{inspectionName} Parameter',\n\n  // ToolsetView\n  'toolsetView.inspectionTemplate': '{inspectionName} Toolset',\n\n  // AboutView\n  'aboutView.title': 'About ',\n\n  // ViewSet Manager\n  viewSetManager: 'ViewSet Manager',\n  'viewSetManager.title': 'View Set Manager',\n  'viewSetManager.viewSetName': 'Name',\n  'viewSetManager.remove': 'Remove',\n  'viewSetManager.save': 'Save all view sets',\n  'viewSetManager.close': 'Close',\n  'viewSetManager.editViewSetHeadline': 'Edit viewsets:',\n  'viewSetManager.newViewSet': 'Create new viewset',\n  'viewSetManager.editViewSetName': 'Edit view set name',\n  'viewSetManager.changeViewSetName': 'Change view set name',\n  'viewSetManager.apply': 'Apply changes',\n  'viewSetManager.export': 'Export current view layout',\n  'viewSetManager.import': 'Import a view layout from file',\n  'viewSetManager.importConfirm.title': 'Overwriting viewset',\n  'viewSetManager.importConfirm.message':\n    'Importing a viewset from file will overwrite your existing viewset. Do you want to continue?',\n  'viewSetManager.deleteConfirm.message': 'Do you really want to delete viewset \"{viewsetName}\"?',\n  'viewSetManager.deleteIconTooltip': 'Delete view set',\n\n  // ShortcutView\n  'shortcutView.title': 'Shortcuts',\n  'shortcutView.fullscreenTitle': 'Fullscreen',\n  'shortcutView.fullscreenDescription': 'Focus a view and press CTRL-F',\n  'shortcutView.helpTitle': 'Help',\n  'shortcutView.helpDescription': 'Focus a view and press F1',\n\n  // Notifications\n  'notifications.modeSwitch.userSwitchedModeTo': 'User switched mode to:',\n  'notifications.websocket.connectionEstablished': 'Websocket connection established on port:',\n  'notifications.websocket.connectionLost': 'Websocket connection lost',\n  'notifications.userSwitchedLanguage': 'User switched language to: ',\n  'notifications.rejectStreamPaused': 'Reject stream was paused',\n  'notifications.rejectStreamResumed': 'Reject stream was resumed',\n  'notifications.checkSvimOutput': 'Please check output on SVIM',\n  'notifications.incompatibilityWarning':\n    'Selected config might not be compatible with the current WebApp',\n  'notifications.errorOccurred': 'An error occurred',\n  'notifications.error.loadingFile': 'Could not load data from file.',\n  'notifications.successfulAction': 'Successful action',\n  'notifications.successfullyLoadedFile': 'Successfully loaded viewset from file.',\n  'notifications.viewsetVersionIncompatibleTitle': 'File version incompatible',\n  'notifications.viewsetVersionIncompatibleMessage':\n    'The file version is incompatible. Can not load viewset.',\n  'notifications.minorVersionDiffTitle': 'Minor version differs',\n  'notifications.minorVersionDiffMessage':\n    'Minor version differs between application and file. The presentation of the viewset might be incorrect.',\n  'notifications.variableValueShouldBeInTheRange':\n    'Value of the variable {variableName} should be in the range of {range}.',\n\n  // ListView\n  'listView.save': 'Save',\n\n  // SVOView\n  'svoView.emptyViewInspectionTemplate': '{inspectionName}',\n  'svoView.closeView': 'Close view',\n  'svoView.closeViewConfirmation': 'Do you really want to close this view?',\n\n  cancel: 'Cancel',\n  noConfigName: '[No configuration]',\n  unknownConfigName: '[Unknown configuration]',\n  noConfigLoaded: 'No configuration loaded in SVObserver',\n\n  // Permissions\n  'permissions.backToWebApp': 'Back to WebApp',\n  'permissions.helpText':\n    'You can change the listed permissions for each group (column). Common permissions are applied to all other groups. Permissions may have effect on the webapp and/or the SVObserver.',\n  'permissions.permissions': 'Permissions',\n  'permissions.permissionManagement': 'Permission Management',\n  'permissions.description': 'Description',\n\n  // Permission descriptions\n  'permissionDescription.webapp.configuration.save':\n    'User can save the current configuration with all view sets',\n  'permissionDescription.webapp.logs.read': 'User can see logs in top navigation bar',\n  'permissionDescription.webapp.viewset.add': 'User can add new view sets',\n  'permissionDescription.webapp.viewset.read':\n    'User can see view sets (switch between view sets, open view set manager)',\n  'permissionDescription.webapp.viewset.edit':\n    'User can see and edit view sets (change size of views, add new views to view set, switch between view sets, open view set manager, rename view set)',\n  'permissionDescription.webapp.viewset.remove': 'User can remove a view set',\n  'permissionDescription.webapp.view[type=AnyView].add': 'User can add views of ANY type',\n  'permissionDescription.webapp.view[type=AnyView].read': 'User can see views of ANY type',\n  'permissionDescription.webapp.view[type=AnyView].edit': 'User can see and edit views of ANY type',\n  'permissionDescription.webapp.view[type=AnyView].remove': 'User can remove views of ANY type',\n  'permissionDescription.webapp.view[type=ImageView].add': 'User can add views of type IMAGE',\n  'permissionDescription.webapp.view[type=ImageView].read':\n    'User can see views of type IMAGE (also download image, see custom overlay list, see image info)',\n  'permissionDescription.webapp.view[type=ImageView].edit':\n    'User can see and edit views of type IMAGE (choose inspection and tool, change size of image, download image, see custom overlay list, see image info)',\n  'permissionDescription.webapp.view[type=ImageView].remove': 'User can remove views of type IMAGE',\n  'permissionDescription.webapp.view[type=ListView].add': 'User can add views of type LIST',\n  'permissionDescription.webapp.view[type=ListView].read': 'User can see views of type LIST',\n  'permissionDescription.webapp.view[type=ListView].edit':\n    'User can see and edit views of type LIST (choose inspection and tool, edit aliases)',\n  'permissionDescription.webapp.view[type=ListView].remove': 'User can remove views of type LIST',\n  'permissionDescription.webapp.view[type=ImageStripView].add':\n    'User can add views of type IMAGE STRIP',\n  'permissionDescription.webapp.view[type=ImageStripView].read':\n    'User can see views of type IMAGE STRIP',\n  'permissionDescription.webapp.view[type=ImageStripView].edit':\n    'User can see and edit views of type IMAGE STRIP (choose inspection and tool)',\n  'permissionDescription.webapp.view[type=ImageStripView].remove':\n    'User can remove views of type IMAGE STRIP',\n  'permissionDescription.webapp.view[type=ParameterView].add':\n    'User can add views of type PARAMETER',\n  'permissionDescription.webapp.view[type=ParameterView].read':\n    'User can see views of type PARAMETER',\n  'permissionDescription.webapp.view[type=ParameterView].edit':\n    'User can see and edit views of type PARAMETER (add/edit/delete custom overlays)',\n  'permissionDescription.webapp.view[type=ParameterView].remove':\n    'User can remove views of type PARAMETER',\n  'permissionDescription.webapp.view[type=ToolSetView].add': 'User can add views of type TOOLSET',\n  'permissionDescription.webapp.view[type=ToolSetView].read': 'User can see views of type TOOLSET',\n  'permissionDescription.webapp.view[type=ToolSetView].edit':\n    'User can see and edit views of type TOOLSET',\n  'permissionDescription.webapp.view[type=ToolSetView].remove':\n    'User can remove views of type TOOLSET',\n  'permissionDescription.svobserver.mode.read':\n    'User can see the current mode of SVObserver in top navigation bar',\n  'permissionDescription.svobserver.mode.edit':\n    'User can see and change the current mode of SVObserver in top navigation bar',\n  'permissionDescription.svobserver.inspectionstate.read':\n    'User can see the inspection state of all inspections in the top navigation bar',\n  'permissionDescription.svobserver.inspectionstate.edit':\n    'User can see and change the inspection state of all inspections in the top navigation bar and toggle the state in IMAGE STRIP view',\n  'permissionDescription.svobserver.value.read':\n    'SVObserver checks if user is allowed to see values',\n  'permissionDescription.svobserver.value.edit':\n    'SVObserver checks if user is allowed to edit values',\n  'permissionDescription.svobserver.tool.add':\n    'SVObserver checks if user is allowed to add new tools',\n  'permissionDescription.svobserver.tool.read':\n    'SVObserver checks if user is allowed to read tools',\n  'permissionDescription.svobserver.tool.edit':\n    'SVObserver checks if user is allowed to edit existing tools',\n  'permissionDescription.svobserver.tool.remove':\n    'SVObserver checks if user is allowed to remove tools',\n  'permissionDescription.svobserver.configuration.read':\n    'SVObserver checks if user is allowed to read the SVObserver configuration',\n  'permissionDescription.svobserver.configuration.write':\n    'SVObserver checks if user is allowed to save the SVObserver configuration',\n  'permissionDescription.svobserver.notifications.subscribe':\n    'SVObserver checks if user is allowed to subscribe to SVObserver notifications',\n  'permissionDescription.svobserver.clientlogs.store':\n    'SVObserver checks if user is allowed to send client logs to the SVObserver',\n  'permissionDescription.svobserver.file.read':\n    'SVObserver checks if user is allowed to read arbitrary files in SVIM RUN folder',\n  'permissionDescription.svobserver.file.write':\n    'SVObserver checks if user is allowed to write arbitrary files in SVIM RUN folder',\n  'permissionDescription.svobserver.machinestate.set':\n    'SVObserver checks if user is allowed to set the machine state (shut down or restart SVIM)',\n  'permissionDescription.svobserver.command.execute':\n    'SVObserver checks if user is allowed to execute commands',\n  'permissionDescription.usermanagement.userpermissions.read':\n    'User can load group permissions from backend/can see menu entry to switch to permission management page/can see all permissions in permission management',\n  'permissionDescription.usermanagement.userpermissions.edit':\n    'User can load group permissions from backend/can see menu entry to switch to permission management page/can see all permissions in permission management/can edit permissions',\n\n  // Debugger\n  'debugger.title': 'Debugger',\n  'debugger.backToWebApp': 'Back to WebApp',\n  'debugger.requestsListHeader': 'Request list',\n  'debugger.noParametersMessage': 'This request has no parameters',\n  'debugger.noItemsMessage': '(no items)',\n  'debugger.nothingToConfigureMessage': '(nothing to configure)',\n  'debugger.addItemButtonText': 'Add',\n  'debugger.sendRequest': 'Send request',\n  'debugger.noFilteredResultsMessage': 'No filtered results',\n  'debugger.copyToClipboard': 'Copy to clipboard',\n};\n\nexport default en;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport de from './de';\nimport en from './en';\n\nconst translations = {\n  de: {\n    ...de,\n  },\n  en: {\n    ...en,\n  },\n};\n\nexport const languages = [\n  {\n    locale: 'de',\n    name: <FormattedMessage id=\"topNavigation.language.german\" />,\n  },\n  {\n    locale: 'en',\n    name: <FormattedMessage id=\"topNavigation.language.english\" />,\n  },\n];\n\nexport default translations;\n","import isEqual from 'lodash/isEqual';\n\nimport logger from '../../utils/logger';\nimport ProtobufConnector from '../../protobuf/ProtobufConnector';\nimport Proxy from '../../protobuf/Proxy';\nimport { resetState, saveState } from '../../utils/localStorage';\n\nconst NUMBER_OF_NOTIFICATIONS_SHOWN = 50;\n\nfunction createInitialAppState({ websocketUrl, dispatch, user, authToken }) {\n  const connector = new ProtobufConnector(websocketUrl, dispatch, authToken);\n  const proxy = new Proxy(dispatch);\n  const locale = localStorage.getItem('CURRENT_LOCALE');\n  logger.setProxy(proxy);\n  return {\n    connection: null,\n    notifications: [],\n    mode: 0,\n    navigationHidden: false,\n    locale: locale || 'en',\n    authToken,\n    user,\n    currentMode: null,\n    pausedInspections: [],\n    connector,\n    protobuf: undefined,\n    socket: undefined,\n    proxy,\n    saveOperationInProcess: false,\n    currentClientChunkRevision: 0,\n    modalNotificationData: null,\n    focusedViewType: null,\n    isHelpViewOpen: false,\n    configuration: null,\n    isBrowserWindowVisible: true,\n  };\n}\n\nconst appReducer = (params) => {\n  const initalAppState = createInitialAppState(params);\n  return (state = initalAppState, action) => {\n    switch (action.type) {\n      case 'SET_PROTOBUF_STATIC_INITIALIZED':\n        state.proxy.setProtobufStaticInitialized();\n        return state;\n      case 'SET_PROTOBUF': {\n        const { protobuf, socket } = action;\n        protobuf.onConnect(socket);\n        state.proxy.setProtobuf(protobuf);\n        return Object.assign({}, state, { protobuf, socket });\n      }\n      case 'ADD_NOTIFICATION': {\n        const newNotifications = getNewNotifications(action.notification, state);\n\n        return Object.assign({}, state, {\n          notifications: newNotifications,\n        });\n      }\n      case 'LOG_IN':\n        saveState(action.authToken, action.user);\n        state.connector.connectWithToken(action.authToken);\n        return { ...state, authToken: action.authToken, user: action.user };\n      case 'LOG_OUT':\n        resetState();\n        setTimeout(() => state.connector.disconnect());\n        return state;\n      case 'AUTH_TOKEN_EXPIRED':\n        resetState();\n        return { ...state, authToken: undefined, user: undefined };\n      case 'SET_LOCALE':\n        localStorage.setItem('CURRENT_LOCALE', action.locale);\n        return { ...state, locale: action.locale };\n      case 'ON_NAVIGATION_HIDDEN': {\n        return Object.assign({}, state, {\n          navigationHidden: !state.navigationHidden,\n        });\n      }\n      case 'SHOW_GLOBAL_MESSAGE_OVERLAY':\n        const { message } = action;\n        logger.info({ message }, 'Showing global message overlay');\n        return {\n          ...state,\n          modalNotificationData: {\n            message,\n          },\n        };\n      case 'HIDE_GLOBAL_MESSAGE_OVERLAY':\n        logger.info('Hiding global message overlay');\n        return {\n          ...state,\n          modalNotificationData: null,\n        };\n      case 'SET_CURRENT_MODE':\n        state.proxy.setMode(action.mode);\n        return state;\n      case 'SET_CURRENT_MODE_DONE':\n        return {\n          ...state,\n          currentMode: action.mode,\n        };\n      case 'SET_PAUSED_INSPECTIONS':\n        return {\n          ...state,\n          pausedInspections: action.pausedInspections,\n        };\n      case 'UPDATE_CLIENT_CHUNK_REVISION':\n        return {\n          ...state,\n          currentClientChunkRevision: action.revision,\n        };\n\n      case 'UPDATE_SAVE_OPERATION_IN_PROCESS':\n        return {\n          ...state,\n          saveOperationInProcess: action.inProcess,\n        };\n      case 'SET_CONFIGURATION':\n        return {\n          ...state,\n          configuration: action.configuration,\n        };\n\n      case 'SET_FOCUSED_VIEW_TYPE':\n        return {\n          ...state,\n          focusedViewType: action.viewType,\n        };\n\n      case 'OPEN_HELP_VIEW':\n        return {\n          ...state,\n          isHelpViewOpen: action.isHelpViewOpen,\n        };\n\n      case 'CLOSE_HELP_VIEW':\n        return {\n          ...state,\n          isHelpViewOpen: action.isHelpViewOpen,\n        };\n\n      case 'SET_GROUP_PERMISSIONS':\n        return {\n          ...state,\n          groupPermissions: action.groupPermissions,\n        };\n\n      case 'SET_MY_PERMISSIONS':\n        return {\n          ...state,\n          myPermissions: action.myPermissions,\n        };\n\n      case 'SET_BROWSER_WINDOW_VISIBILITY':\n        return {\n          ...state,\n          isBrowserWindowVisible: action.visible,\n        };\n      default:\n        return state;\n    }\n  };\n};\n\nfunction getNewNotifications(notification2Add, state) {\n  let newNotifications = [...state.notifications];\n  let notification = addTimestampToNotification(notification2Add, state.locale);\n\n  const equalsLastNotification = equalsLastNotificationCurrentNotification(\n    notification,\n    newNotifications,\n  );\n\n  if (!equalsLastNotification) {\n    notification = setCountForNotification(notification);\n    newNotifications.unshift(notification);\n  } else {\n    newNotifications[0] = setCountForNotification(newNotifications[0]);\n  }\n\n  if (newNotifications && newNotifications.length > NUMBER_OF_NOTIFICATIONS_SHOWN) {\n    newNotifications.splice(-1, 1);\n  }\n\n  return newNotifications;\n}\n\nfunction addTimestampToNotification(notification, locale) {\n  const date = new Date();\n  const dateOptions = { day: '2-digit', month: '2-digit', year: 'numeric' };\n  const timeOptions = { hour: '2-digit', minute: '2-digit', second: '2-digit' };\n  const timestamp = `${date.toLocaleString(locale, dateOptions)} ${date.toLocaleString(\n    locale,\n    timeOptions,\n  )}`;\n\n  notification = {\n    ...notification,\n    timestamp: timestamp,\n  };\n\n  return notification;\n}\n\nfunction equalsLastNotificationCurrentNotification(currentNotification, notifications) {\n  if (notifications && notifications.length > 0) {\n    return isEqual(currentNotification.message, notifications[0].message);\n  }\n\n  return false;\n}\n\nfunction setCountForNotification(notification) {\n  let count = notification.count;\n  if (count === undefined) {\n    count = 1;\n  } else {\n    count++;\n  }\n\n  notification = {\n    ...notification,\n    count,\n  };\n\n  return notification;\n}\n\nexport default appReducer;\n","import ViewSetFactory, { DEFAULT_VIEWSET_NAME } from '../../views/ViewSetFactory';\n\nconst viewSetFactory = new ViewSetFactory();\n\nconst initialState = () => {\n  const hideBottomNavigation =\n    localStorage.getItem('BOTTOM_NAVIGATION_HIDDEN') === 'true';\n  const hideTopNavigation =\n    localStorage.getItem('TOP_NAVIGATION_HIDDEN') === 'true';\n  const defaultViewSetName = localStorage.getItem('DEFAULT_VIEWSET_NAME');\n\n  return {\n  currentViewSet: undefined,\n  createdViewSets: {},\n  fullscreenMode: false,\n  fullscreenComponentDescriptor: undefined,\n  viewSizeChangeCounter: 0,\n    bottomNavHidden: hideBottomNavigation || false,\n    topNavHidden: hideTopNavigation || false,\n    defaultViewSetName: defaultViewSetName || null,\n  isSVOConfigLoaded: false,\n  unsavedChanges: false,\n  };\n};\n\nconst enterFullScreenMode = (componentDescriptor, state) => {\n  componentDescriptor.setFullscreen(true);\n  return {\n    ...state,\n    fullscreenMode: true,\n    fullscreenComponentDescriptor: componentDescriptor,\n  };\n};\n\nconst leaveFullScreenMode = (componentDescriptor, state) => {\n  componentDescriptor.setFullscreen(false);\n  return {\n    ...state,\n    fullscreenMode: false,\n    fullscreenComponentDescriptor: undefined,\n  };\n};\n\nconst findCreatedViewSetWithName = (name, createdViewSets) => {\n  const viewSetId = Object.keys(createdViewSets).find(\n    (viewSetId) => createdViewSets[viewSetId] && createdViewSets[viewSetId].name === name,\n  );\n  return viewSetId && createdViewSets[viewSetId];\n};\n\nconst switchViewSet = (viewSet, state) => {\n  const viewSetId = viewSet.id;\n  const cached = state.createdViewSets[viewSetId];\n  const targetViewSet = cached || viewSetFactory.getViewSet(viewSetId);\n  const createdViewSet = !cached ? { [viewSetId]: targetViewSet } : {};\n\n  const newState = {\n    ...state,\n    currentViewSet: targetViewSet,\n    createdViewSets: Object.assign({}, state.createdViewSets, createdViewSet),\n  };\n  return newState;\n};\n\nconst updateCurrentViewSet = (state, viewSet, viewSetId) => {\n  return {\n    ...state,\n    currentViewSet: viewSet,\n    createdViewSets: {\n      ...state.createdViewSets,\n      [viewSetId]: viewSet,\n    },\n    unsavedChanges: true,\n  };\n};\n\nconst removeViewSet = (state, name) => {\n  const { createdViewSets } = state;\n\n  let newCreatedViewSets = Object.keys(createdViewSets)\n    .filter((id) => id !== name)\n    .reduce((p, c) => ({ ...p, [c]: createdViewSets[c] }), {});\n\n  if (Object.keys(newCreatedViewSets).length === 0) {\n    const name = DEFAULT_VIEWSET_NAME;\n    newCreatedViewSets = {\n      [name]: viewSetFactory.buildEmptyViewSet(name),\n    };\n  }\n\n  return {\n    createdViewSets: newCreatedViewSets,\n    currentViewSet: newCreatedViewSets[Object.keys(newCreatedViewSets)[0]],\n    unsavedChanges: true,\n  };\n};\n\nconst viewSetReducer = (state = initialState(), action) => {\n  switch (action.type) {\n    case 'LOG_OUT':\n      return initialState();\n    case 'SET_VIEWSET':\n      return updateCurrentViewSet(state, action.viewSet, action.viewSetId);\n    case 'REPLACE_VIEW_IN_CURRENT_VIEWSET': {\n      const { viewId, inspectionId, replacementComponentId } = action;\n      const createdView = viewSetFactory.getViewById(replacementComponentId);\n      createdView.inspectionId = inspectionId;\n      const currentViewSetId = state.currentViewSet.id;\n      const updatedViewSet = {\n        ...state.currentViewSet,\n        viewSet: {\n          ...state.currentViewSet.viewSet,\n          [viewId]: createdView,\n        },\n      };\n      return updateCurrentViewSet(state, updatedViewSet, currentViewSetId);\n    }\n    case 'SWITCH_VIEWSET':\n      return switchViewSet(action.viewSet, state);\n    case 'ENTER_FULLSCREEN_MODE': {\n      if (\n        state.fullscreenComponentDescriptor &&\n        state.fullscreenComponentDescriptor.id !== action.componentDescriptor.id\n      ) {\n        leaveFullScreenMode(state.fullscreenComponentDescriptor, state);\n      }\n      return enterFullScreenMode(action.componentDescriptor, state);\n    }\n    case 'LEAVE_FULLSCREEN_MODE': {\n      return leaveFullScreenMode(action.componentDescriptor, state);\n    }\n    case 'TOGGLE_FULLSCREEN_MODE': {\n      if (!state.fullscreenComponentDescriptor) {\n        return enterFullScreenMode(action.componentDescriptor, state);\n      }\n      if (state.fullscreenComponentDescriptor.id === action.componentDescriptor.id) {\n        if (state.fullscreenMode) {\n          return leaveFullScreenMode(action.componentDescriptor, state);\n        }\n        return enterFullScreenMode(action.componentDescriptor, state);\n      }\n      return state;\n    }\n    case 'INCREASE_VIEW_SIZE_CHANGE_COUNTER':\n      return {\n        ...state,\n        viewSizeChangeCounter: state.viewSizeChangeCounter + 1,\n      };\n    case 'SET_BOTTOM_NAV_HIDDEN':\n      localStorage.setItem('BOTTOM_NAVIGATION_HIDDEN', action.hidden);\n      return {\n        ...state,\n        bottomNavHidden: action.hidden,\n      };\n    case 'CHANGE_VIEWSET_AFTER_LOADING':\n      return {\n        ...state,\n        changeViewSetToName: action.name,\n      };\n    case 'SET_TOP_NAV_HIDDEN':\n      localStorage.setItem('TOP_NAVIGATION_HIDDEN', action.hidden);\n      return {\n        ...state,\n        topNavHidden: action.hidden,\n      };\n    case 'SET_DEFAULT_VIEWSET_NAME':\n      localStorage.setItem('DEFAULT_VIEWSET_NAME', action.name);\n      return {\n        ...state,\n        defaultViewSetName: action.name,\n      };\n    case 'NEW_VIEW_SET': {\n      const newViewSet = {\n        [action.name]: viewSetFactory.buildEmptyViewSet(action.name),\n      };\n\n      return {\n        ...state,\n        createdViewSets: {\n          ...state.createdViewSets,\n          ...newViewSet,\n        },\n        unsavedChanges: true,\n      };\n    }\n    case 'REMOVE_VIEWSET': {\n      const { createdViewSets, currentViewSet } = removeViewSet(state, action.name);\n      return {\n        ...state,\n        currentViewSet,\n        createdViewSets,\n        unsavedChanges: true,\n      };\n    }\n    case 'CLEAR_CURRENT_VIEW': {\n      if (!state?.currentViewSet?.name) {\n        return state;\n      }\n\n      const emptyViewSet = viewSetFactory.buildEmptyViewSet(\n        state.currentViewSet.name,\n      );\n      state.createdViewSets[state.currentViewSet.name] = emptyViewSet;\n\n      return {\n        ...state,\n        currentViewSet: emptyViewSet,\n        unsavedChanges: true,\n      };\n    }\n    case 'RENAME_VIEWSET': {\n      const viewsetToEdit = state.createdViewSets[action.oldName];\n      const renamedViewSet = {\n        ...viewsetToEdit,\n        id: action.newName,\n        name: action.newName,\n      };\n      const createdViewSets = Object.keys(state.createdViewSets).reduce(\n        (all, id) =>\n          id === action.oldName\n            ? { ...all, [action.newName]: renamedViewSet }\n            : { ...all, [id]: state.createdViewSets[id] },\n        {},\n      );\n      return {\n        ...state,\n        createdViewSets,\n        unsavedChanges: true,\n      };\n    }\n    case 'SET_CURRENT_LAYOUT':\n      if (!action.layout) {\n        return state;\n      }\n      return {\n        ...state,\n        createdViewSets: Object.assign({}, state.createdViewSets, {\n          [state.currentViewSet.id]: {\n            ...state.currentViewSet,\n            initialValue: action.layout,\n          },\n        }),\n        currentViewSet: {\n          ...state.currentViewSet,\n          initialValue: action.layout,\n        },\n        currentLayout: action.layout,\n        unsavedChanges: true,\n      };\n    case 'LOAD_CLIENT_CHUNK':\n      if (state.changeViewSetToName) {\n        let loadedViewSet = findCreatedViewSetWithName(\n          state.changeViewSetToName,\n          action.chunk.createdViewSets,\n        );\n\n        if (loadedViewSet) {\n          const newState = {\n            ...state,\n            currentViewSet: loadedViewSet,\n            createdViewSets: action.chunk.createdViewSets,\n            changeViewSetToName: undefined,\n          };\n          return switchViewSet(loadedViewSet, newState);\n        }\n      }\n\n      const config = {\n        createdViewSets: action.chunk.createdViewSets,\n        currentViewSet: action.chunk.currentViewSet,\n      };\n      return {\n        ...state,\n        ...config,\n      };\n    case 'SET_SVO_CONFIG_LOADED':\n      return {\n        ...state,\n        isSVOConfigLoaded: action.isLoaded,\n        unsavedChanges: false,\n      };\n    case 'SET_SAVE_FLAG':\n      return {\n        ...state,\n        unsavedChanges: action.hasChanges,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default viewSetReducer;\n","const initialState = {\n  parameter: [],\n};\n\nconst toolsetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_PARAMETER':\n      return {\n        ...state,\n        parameter: action.parameter,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default toolsetReducer;\n","import omit from 'lodash/omit';\nimport { isObjectValid } from '../../utils/objectValidator';\n\nconst findInspectionForView = (viewId, state) =>\n  Object.keys(state).find(\n    (inspectionId) =>\n      state[inspectionId] && state[inspectionId].views && !!state[inspectionId].views[viewId],\n  );\n\nconst viewDataReducer = (state = {}, action) => {\n  const { inspectionId, viewId, key } = action;\n  switch (action.type) {\n    case 'PURGE_VIEW_STATE': {\n      const inspectionId = action.inspectionId || findInspectionForView(action.viewId, state);\n      if (!inspectionId) {\n        return state;\n      }\n\n      return omit(state, [\n        `${inspectionId}.sharedState.views.${action.viewId}`,\n        `${inspectionId}.views.${action.viewId}`,\n        state[inspectionId].sharedState.editingViewId === action.viewId &&\n          `${inspectionId}.sharedState.editingViewId`,\n      ]);\n    }\n    case 'SET_EDITING_FOCUS': {\n      if (!state[inspectionId]) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...state[inspectionId].sharedState,\n            editingViewId: viewId,\n          },\n        },\n      };\n    }\n\n    case 'SET_LIST_VIEW_ALIASES': {\n      if (!state[inspectionId]) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...state[inspectionId].sharedState,\n            listViewAliases: action.aliases,\n            showAliasesInList: action.showInList,\n          },\n        },\n      };\n    }\n\n    case 'UPDATE_LIST_VIEW_SHOW_ALIASES': {\n      if (!state[inspectionId]) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...state[inspectionId].sharedState,\n            showAliasesInList: action.showInList,\n          },\n        },\n      };\n    }\n\n    case 'SET_VIEW_DATA':\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          views: {\n            ...(state[inspectionId] ? state[inspectionId].views : {}),\n            [viewId]: {\n              ...(state[inspectionId] && state[inspectionId].views\n                ? state[inspectionId].views[viewId]\n                : {}),\n              [key]: action.data,\n            },\n          },\n        },\n      };\n\n    case 'SAVE_IMAGE_SETTINGS':\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          views: {\n            ...(state[inspectionId] ? state[inspectionId].views : {}),\n            [viewId]: {\n              ...(state[inspectionId] && state[inspectionId].views\n                ? state[inspectionId].views[viewId]\n                : {}),\n              zoomFactor: action.zoomFactor,\n              imagePosition: action.imagePosition,\n            },\n          },\n        },\n      };\n\n    case 'SET_SHARED_STATE_DATA':\n      const editingViewId = action.viewId || state[inspectionId].sharedState.editingViewId;\n      const newState = {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...(state[inspectionId] ? state[inspectionId].sharedState : {}),\n            views: {\n              ...(state[inspectionId] ? state[inspectionId].sharedState.views : {}),\n              [editingViewId]: {\n                ...(state[inspectionId]\n                  ? state[inspectionId].sharedState.views[editingViewId]\n                  : {}),\n                [key]: action.data,\n              },\n            },\n          },\n        },\n      };\n      return newState;\n\n    case 'INIT_VIEW_STATE': {\n      const { initState, initSharedState } = action;\n\n      const newState = {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...(state[inspectionId] ? state[inspectionId].sharedState : {}),\n            views: {\n              ...(state[inspectionId] ? state[inspectionId].sharedState.views : {}),\n              [viewId]: isObjectValid(() => state[inspectionId].sharedState.views[viewId])\n                ? {\n                    ...initSharedState,\n                    ...state[inspectionId].sharedState.views[viewId],\n                  }\n                : initSharedState,\n            },\n          },\n          views: {\n            ...(state[inspectionId] ? state[inspectionId].views : {}),\n            [viewId]: isObjectValid(() => state[inspectionId].views[viewId])\n              ? { ...initState, ...state[inspectionId].views[viewId] }\n              : initState,\n          },\n        },\n      };\n\n      const listViewAliases =\n        newState[inspectionId] &&\n        newState[inspectionId].sharedState &&\n        (newState[inspectionId].sharedState.listViewAliases || new Map());\n      newState[inspectionId].sharedState.listViewAliases = listViewAliases;\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default viewDataReducer;\n","import { combineReducers } from 'redux';\nimport { routerReducer as routing } from 'react-router-redux';\n\nimport appReducer from './appReducer';\nimport viewSetReducer from './viewSetReducer';\nimport toolsetReducer from './toolsetReducer';\nimport viewDataReducer from './viewDataReducer';\n\nfunction createReducers(params) {\n  return combineReducers({\n    app: appReducer(params),\n    viewSet: viewSetReducer,\n    toolSet: toolsetReducer,\n    inspections: viewDataReducer,\n    routing,\n  });\n}\n\nexport default createReducers;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\n\nimport {\n  setLocale,\n  authenticate,\n  setTopNavHidden,\n  setBottomNavHidden,\n  setDefaultViewSetName,\n} from '../redux/actions';\nimport logger from '../utils/logger';\n\nconst parseQueryParams = (search) => {\n  const queryParams = {};\n  try {\n    search\n      .substr(1)\n      .split('&')\n      .forEach((item) => {\n        const part = item.split('=');\n        const key = part[0];\n        const value = part[1] && decodeURIComponent(part[1]);\n        queryParams[key] = value;\n      });\n  } catch (error) {\n    logger.error(error);\n  }\n  return queryParams;\n};\n\nclass HmiLoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticated: false,\n      queryParams: parseQueryParams(this.props.location.search),\n    };\n  }\n\n  componentDidMount() {\n    this.props.setTopNavHidden(this.state.queryParams.hideTopNavigation === 'true');\n    this.props.setBottomNavHidden(this.state.queryParams.hideBottomNavigation === 'true');\n\n    this.props.setLocale(this.state.queryParams.locale || 'en');\n\n    this.props.setDefaultViewSetName(this.state.queryParams.viewSet || null);\n\n    if (this.state.queryParams.token) {\n      this.props\n        .authenticate(this.state.queryParams.token)\n        .then(() => this.setState({ authenticated: true }))\n        .catch((authError) => this.setState({ authError }));\n    }\n  }\n\n  render() {\n    if (!this.state.queryParams.token) {\n      return <div>Malformed query params</div>;\n    }\n    if (this.state.authError) {\n      return (\n        <div>\n          Invalid token provided. Error: {this.state.authError.response?.status} Status:{' '}\n          {this.state.authError.response?.statusText}\n        </div>\n      );\n    }\n    if (!this.state.authenticated) {\n      return <div>Fetching auth token for provided access token</div>;\n    }\n\n    return (\n      <Redirect\n        to={{\n          pathname: '/app',\n          state: { viewSetTemplate: this.state.queryParams.viewSet },\n        }}\n      />\n    );\n  }\n}\n\nHmiLoginPage.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n  setLocale: PropTypes.func.isRequired,\n  authenticate: PropTypes.func.isRequired,\n  setTopNavHidden: PropTypes.func.isRequired,\n  setBottomNavHidden: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLocale: (locale) => dispatch(setLocale(locale)),\n  authenticate: (accessToken) => dispatch(authenticate(accessToken)),\n  setTopNavHidden: (hidden) => dispatch(setTopNavHidden(hidden)),\n  setBottomNavHidden: (hidden) => dispatch(setBottomNavHidden(hidden)),\n  setDefaultViewSetName: (name) => dispatch(setDefaultViewSetName(name)),\n});\n\nexport default connect(null, mapDispatchToProps)(HmiLoginPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { resetState } from '../utils/localStorage';\nimport { logOut } from '../redux/actions';\n\nclass LogoutPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedOut: false,\n    };\n  }\n\n  render() {\n    this.props.onLogOut().then(() => {\n      this.setState({ loggedOut: true });\n    });\n\n    if (this.state.loggedOut) {\n      resetState();\n      this.props.onLoggedOut();\n      return (\n        <Redirect\n          to={{\n            pathname: '/',\n            state: { loggedOut: true },\n          }}\n        />\n      );\n    }\n    return null;\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLogOut: () => dispatch(logOut()),\n});\n\nexport default connect(null, mapDispatchToProps)(LogoutPage);\n","import PropTypes from 'prop-types';\n\nexport const viewSetType = PropTypes.shape({\n  id: PropTypes.string,\n});\n\nexport const mosaicViewType = PropTypes.oneOfType([viewSetType, PropTypes.string]);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\n\nimport Dialog from '../Dialog';\nimport './style.scss';\n\nclass ConfirmDialog extends Component {\n  render() {\n    const { onClose, open, title, message } = this.props;\n\n    return (\n      <div>\n        <Dialog title={title || ''} onClose={() => onClose(false)} open={open}>\n          <div className=\"message-wrapper\">{message}</div>\n          <div className=\"button-wrapper\">\n            <Button color=\"primary\" onClick={() => onClose(true)}>\n              Okay\n            </Button>\n            <Button color=\"primary\" onClick={() => onClose(false)}>\n              <FormattedMessage id=\"cancel\" />\n            </Button>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default ConfirmDialog;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport { IMAGE_VIEW } from '../views/ViewSetFactory';\nimport {\n  toggleFullscreenMode,\n  setEditingFocus,\n  setFocusedViewType,\n  setSaveFlag,\n  openHelpView,\n} from '../redux/actions/index';\n\nexport default class KeyHandler extends Component {\n  componentDidMount() {\n    this.node.addEventListener('keydown', this.handleKeyEvent);\n    this.node.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    this.node.removeEventListener('keydown', this.handleKeyEvent);\n    this.node.removeEventListener('click', this.handleClick);\n  }\n\n  handleKeyEvent = (event) => {\n    const keyString = `${event.ctrlKey ? 'ctrl+' : ''}${event.key}`;\n    switch (keyString) {\n      case 'ctrl+f':\n        event.preventDefault();\n        this.props.dispatch(toggleFullscreenMode(this.props.view));\n        break;\n      case 'F1':\n        event.preventDefault();\n        this.props.dispatch(openHelpView());\n        break;\n      default:\n        return;\n    }\n    event.stopPropagation();\n  };\n\n  handleClick = (event) => {\n    const { view, editingViewIds, dispatch, helpSection } = this.props;\n\n    if (view) {\n      try {\n        const viewId = view.props.id;\n        const inspectionId = view.props.views.viewSet[viewId].inspectionId;\n        const viewType = view.props.views.viewSet[viewId].viewComponentClassId;\n        if (viewType === IMAGE_VIEW) {\n          dispatch(setEditingFocus(inspectionId, viewId));\n\n          if (!editingViewIds.includes(viewId)) {\n            dispatch(setSaveFlag(true));\n          }\n        }\n        dispatch(setFocusedViewType(viewType));\n      } catch (error) {}\n    } else if (helpSection) {\n      dispatch(setFocusedViewType(helpSection));\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex=\"0\"\n        style={{ width: '100%', height: '100%' }}\n        ref={(node) => {\n          this.node = node;\n        }}\n      >\n        {children && children}\n      </div>\n    );\n  }\n}\n\nKeyHandler.defaultProps = {\n  children: undefined,\n};\n\nKeyHandler.propTypes = {\n  children: PropTypes.node,\n  dispatch: PropTypes.func.isRequired,\n  view: PropTypes.object, // eslint-disable-line\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport './style.scss';\n\nclass ListSelection extends Component {\n  render() {\n    const { headline, selectionItems, onSelection, cancelButtonProps, showCancel } = this.props;\n\n    return (\n      <div>\n        <h3>{headline}</h3>\n        <ul className=\"list-wrapper\">\n          {selectionItems.map((item) => (\n            <li className=\"selection-item\" key={`li${item.id}`}>\n              <Button\n                variant=\"outlined\"\n                key={`button${item.id}`}\n                onClick={() => onSelection(item.id)}\n              >\n                {item.icon && <img src={item.icon} alt=\"inspection.name\" className=\"image-item\" />}\n                {item.text}\n              </Button>\n            </li>\n          ))}\n          {showCancel ? (\n            <li className=\"selection-item\" key=\"liCancel\">\n              <Button variant=\"contained\" color=\"primary\" onClick={cancelButtonProps.goBack}>\n                {cancelButtonProps.icon && (\n                  <img src={cancelButtonProps.icon} alt=\"type.id\" className=\"image-item\" />\n                )}\n                {cancelButtonProps.text}\n              </Button>\n            </li>\n          ) : null}\n        </ul>\n      </div>\n    );\n  }\n}\n\nListSelection.defaultProps = {\n  showCancel: false,\n  headline: '',\n  selectionItems: [],\n  cancelButtonProps: {},\n};\n\nListSelection.propTypes = {\n  headline: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  selectionItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      text: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n      icon: PropTypes.string,\n    }),\n  ),\n  showCancel: PropTypes.bool,\n  onSelection: PropTypes.func.isRequired,\n  cancelButtonProps: PropTypes.shape({\n    text: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    icon: PropTypes.string,\n    goBack: PropTypes.func,\n  }),\n};\n\nexport default ListSelection;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport ListSelection from '../../../../components/ListSelection';\nimport InspectionIcon from '../../../../assets/icons/show.svg';\nimport BackIcon from '../../../../assets/icons/back.svg';\n\nclass InspectionSelection extends Component {\n  getSelectionItems = () => {\n    const { configuration } = this.props;\n    const inspections = (configuration && configuration.getInspections()) || [];\n    const items = inspections.map((inspection) => {\n      return {\n        id: inspection.id,\n        text: inspection.name,\n        icon: InspectionIcon,\n      };\n    });\n\n    return items;\n  };\n\n  render() {\n    const { onSelection, goBack, showCancel } = this.props;\n    const cancelButtonProps = {\n      text: <FormattedMessage id=\"viewTypeSelection.back\" />,\n      icon: BackIcon,\n      goBack,\n    };\n\n    const selectionItems = this.getSelectionItems();\n\n    return (\n      <div>\n        <ListSelection\n          headline={<FormattedMessage id=\"inspectionSelection.selectInspection\" />}\n          onSelection={onSelection}\n          cancelButtonProps={cancelButtonProps}\n          showCancel={showCancel}\n          selectionItems={selectionItems}\n        />\n      </div>\n    );\n  }\n}\n\nInspectionSelection.defaultProps = {};\n\nInspectionSelection.propTypes = {\n  onSelection: PropTypes.func.isRequired,\n  configuration: PropTypes.object,\n  goBack: PropTypes.func,\n  showCancel: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  configuration: state.app.configuration,\n});\n\nexport default connect(mapStateToProps)(InspectionSelection);\n","export default __webpack_public_path__ + \"static/media/image.ab9e385a.svg\";","export default __webpack_public_path__ + \"static/media/parameter.417d04e6.svg\";","export default __webpack_public_path__ + \"static/media/filmstrip.c43ef800.svg\";","export default __webpack_public_path__ + \"static/media/list.7380903e.svg\";","export default __webpack_public_path__ + \"static/media/toolset.f1f1d3b2.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport {\n  PARAMETER_VIEW,\n  IMAGE_VIEW,\n  IMAGE_STRIP_VIEW,\n  LIST_VIEW,\n  TOOLSET_VIEW,\n} from '../../../ViewSetFactory';\nimport ListSelection from '../../../../components/ListSelection';\nimport ImageViewIcon from '../../../../assets/icons/image.svg';\nimport ParameterViewIcon from '../../../../assets/icons/parameter.svg';\nimport ImageStripViewIcon from '../../../../assets/icons/filmstrip.svg';\nimport ListViewIcon from '../../../../assets/icons/list.svg';\nimport BackIcon from '../../../../assets/icons/back.svg';\nimport toolsetIcon from '../../../../assets/icons/toolset.svg';\nimport {\n  canAddImageView,\n  canAddListView,\n  canAddImageStripView,\n  canAddParameterView,\n  canAddToolSetView,\n} from '../../../../utils/permissions';\n\nclass ViewTypeSelection extends Component {\n  render() {\n    const { onSelection, goBack, myPermissions } = this.props;\n    const inspectionTypes = [];\n    if (canAddImageView(myPermissions)) {\n      inspectionTypes.push({\n        id: IMAGE_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.imageView\" />,\n        icon: ImageViewIcon,\n      });\n    }\n\n    if (canAddParameterView(myPermissions)) {\n      inspectionTypes.push({\n        id: PARAMETER_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.parameterView\" />,\n        icon: ParameterViewIcon,\n      });\n    }\n\n    if (canAddImageStripView(myPermissions)) {\n      inspectionTypes.push({\n        id: IMAGE_STRIP_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.imageStripView\" />,\n        icon: ImageStripViewIcon,\n      });\n    }\n\n    if (canAddListView(myPermissions)) {\n      inspectionTypes.push({\n        id: LIST_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.ListView\" />,\n        icon: ListViewIcon,\n      });\n    }\n\n    if (canAddToolSetView(myPermissions)) {\n      inspectionTypes.push({\n        id: TOOLSET_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.toolset\" />,\n        icon: toolsetIcon,\n      });\n    }\n\n    const cancelButtonProps = {\n      text: <FormattedMessage id=\"viewTypeSelection.back\" />,\n      icon: BackIcon,\n      goBack,\n    };\n\n    return (\n      <div>\n        <ListSelection\n          headline={<FormattedMessage id=\"viewTypeSelection.selectViewType\" />}\n          onSelection={onSelection}\n          cancelButtonProps={cancelButtonProps}\n          showCancel={true}\n          selectionItems={inspectionTypes}\n        />\n      </div>\n    );\n  }\n}\n\nViewTypeSelection.defaultProps = {};\n\nViewTypeSelection.propTypes = {\n  onSelection: PropTypes.func.isRequired,\n  goBack: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  myPermissions: state.app.myPermissions,\n});\n\nexport default connect(mapStateToProps)(ViewTypeSelection);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport InspectionSelection from './components/InspectionSelection';\nimport ViewTypeSelection from './components/ViewTypeSelection';\nimport { replaceViewInCurrentViewSet, purgeViewState } from '../../redux/actions';\nimport './style.scss';\n\nclass ViewSelection extends Component {\n  state = {\n    visibleComponent: 'ViewTypeSelection',\n    selectedInspectionId: 0,\n    selectedViewType: '',\n  };\n\n  componentDidMount() {\n    const { viewToShowWithoutInspection } = this.props;\n\n    if (viewToShowWithoutInspection) {\n      this.setState({\n        visibleComponent: 'InspectionSelection',\n        selectedViewType: viewToShowWithoutInspection,\n      });\n    }\n  }\n\n  setSelectedInspectionId = (inspectionId) => {\n    this.setState({\n      visibleComponent: '',\n      selectedInspectionId: inspectionId,\n    });\n\n    this.props.changeTitle(inspectionId);\n    this.updateView(inspectionId);\n  };\n\n  setSelectedViewType = (viewType) => {\n    this.setState({\n      visibleComponent: 'InspectionSelection',\n      selectedViewType: viewType,\n    });\n  };\n\n  goBackToViewTypeSelection = () => {\n    this.setState({\n      visibleComponent: 'ViewTypeSelection',\n      selectedInspectionId: 0,\n    });\n  };\n\n  cancelViewSelection = () => {\n    const { changeContent } = this.props;\n    changeContent();\n  };\n\n  updateView = (inspectionId) => {\n    const { replaceViewInCurrentViewSet, viewId, changeContent } = this.props;\n    const { selectedViewType } = this.state;\n\n    replaceViewInCurrentViewSet(viewId, selectedViewType, inspectionId);\n\n    changeContent();\n  };\n\n  render() {\n    const { showCancel } = this.props;\n    const { visibleComponent } = this.state;\n\n    return (\n      <div className=\"view-selection-wrapper\">\n        {(() => {\n          switch (visibleComponent) {\n            case 'InspectionSelection':\n              return (\n                <InspectionSelection\n                  onSelection={this.setSelectedInspectionId}\n                  goBack={this.goBackToViewTypeSelection}\n                  showCancel={showCancel}\n                />\n              );\n            case 'ViewTypeSelection':\n              return (\n                <ViewTypeSelection\n                  onSelection={this.setSelectedViewType}\n                  goBack={this.cancelViewSelection}\n                />\n              );\n            default:\n              return <div></div>;\n          }\n        })()}\n      </div>\n    );\n  }\n}\n\nViewSelection.propTypes = {\n  replaceViewInCurrentViewSet: PropTypes.func.isRequired,\n  viewId: PropTypes.string.isRequired,\n  changeContent: PropTypes.func,\n  changeTitle: PropTypes.func,\n  showCancel: PropTypes.bool,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  replaceViewInCurrentViewSet: (viewId, replacementComponentId, inspectionId) => {\n    dispatch(purgeViewState(undefined, viewId));\n    dispatch(replaceViewInCurrentViewSet(viewId, replacementComponentId, inspectionId));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(ViewSelection);\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\n\nclass NoSVOConfigurationLoadedView extends Component {\n  render() {\n    return (\n      <div className=\"no-config-loaded-wrapper\">\n        <FormattedMessage id=\"noConfigLoaded\" />\n      </div>\n    );\n  }\n}\n\nexport default NoSVOConfigurationLoadedView;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortId from 'shortid';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { MosaicWindow, SplitButton } from 'react-mosaic-component';\nimport { injectIntl } from 'react-intl';\n\nimport { mosaicViewType } from './types';\nimport IconButton from '../../components/buttons/IconButton';\nimport KeyHandler from '../../components/KeyHandler';\nimport ViewSetFactory, {\n  IMAGE_VIEW,\n  LIST_VIEW,\n  PARAMETER_VIEW,\n  IMAGE_STRIP_VIEW,\n  TOOLSET_VIEW,\n} from '../../views/ViewSetFactory';\nimport ViewSelection from '../ViewSelection';\nimport NoSVOConfigurationLoadedView from '../NoSVOConfigurationLoadedView';\nimport { isObjectValid } from '../../utils/objectValidator';\nimport CloseIcon from '../../assets/icons/close.svg';\nimport EditIcon from '../../assets/icons/edit.svg';\nimport {\n  canEditViewSet,\n  canEditImageView,\n  canEditListView,\n  canEditImageStripView,\n  canEditParameterView,\n  canEditToolSetView,\n  canDeleteImageView,\n  canDeleteListView,\n  canDeleteImageStripView,\n  canDeleteParameterView,\n  canDeleteToolSetView,\n} from '../../utils/permissions';\n\nconst viewSetFactory = new ViewSetFactory();\n\nclass SVOView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFullscreen: false,\n      resetView: false,\n      selectedInspectionId: 0,\n      isConfirmOpen: false,\n    };\n  }\n\n  setFullscreen = (isFullscreen) =>\n    // this function can be triggered from reducer\n    // where state modifications are not allowed\n    setTimeout(() => this.setState({ isFullscreen }), 0);\n\n  resetView = () => {\n    this.setState({\n      resetView: true,\n    });\n  };\n\n  removeIdsForUnknownInspectionIds = (currentViewSet, inspectionIds) => {\n    const viewSet = currentViewSet.viewSet;\n\n    Object.keys(viewSet).forEach((viewId) => {\n      const inspectionId = viewSet[viewId].inspectionId;\n      if (!inspectionIds.includes(inspectionId)) {\n        delete viewSet[viewId].id;\n        delete viewSet[viewId].inspectionId;\n      }\n    });\n  };\n\n  canEditCurrentView = () => {\n    const { id, views, myPermissions } = this.props;\n    if (views && views.viewSet && views.viewSet[id]) {\n      switch (views.viewSet[id].viewComponentClassId) {\n        case IMAGE_VIEW:\n          return canEditImageView(myPermissions);\n        case LIST_VIEW:\n          return canEditListView(myPermissions);\n        case IMAGE_STRIP_VIEW:\n          return canEditImageStripView(myPermissions);\n        case PARAMETER_VIEW:\n          return canEditParameterView(myPermissions);\n        case TOOLSET_VIEW:\n          return canEditToolSetView(myPermissions);\n        default:\n          return false;\n      }\n    }\n\n    return false;\n  };\n\n  canDeleteCurrentView = () => {\n    const { id, views, myPermissions } = this.props;\n    if (views && views.viewSet && views.viewSet[id]) {\n      switch (views.viewSet[id].viewComponentClassId) {\n        case IMAGE_VIEW:\n          return canDeleteImageView(myPermissions);\n        case LIST_VIEW:\n          return canDeleteListView(myPermissions);\n        case IMAGE_STRIP_VIEW:\n          return canDeleteImageStripView(myPermissions);\n        case PARAMETER_VIEW:\n          return canDeleteParameterView(myPermissions);\n        case TOOLSET_VIEW:\n          return canDeleteToolSetView(myPermissions);\n        default:\n          return false;\n      }\n    }\n\n    return false;\n  };\n\n  getInspectionId = () => {\n    const { id, views } = this.props;\n    const { selectedInspectionId } = this.state;\n\n    return selectedInspectionId || (views.viewSet[id] && views.viewSet[id].inspectionId);\n  };\n\n  render() {\n    const {\n      configuration,\n      id,\n      path,\n      views,\n      dispatch,\n      editingViewIds,\n      intl,\n      windowName,\n      isSVOConfigLoaded,\n      myPermissions,\n    } = this.props;\n    const { isFullscreen, resetView, selectedInspectionId } = this.state;\n    const viewClass = classNames({\n      fullscreen: isFullscreen,\n      'editing-focus': editingViewIds.includes(id),\n    });\n\n    const inspectionId = this.getInspectionId();\n    let inspectionName = '<UNKNOWN INSPECTION>';\n    if (configuration) {\n      const name = configuration.getInspectionName(inspectionId);\n      if (name && name.length > 0) {\n        inspectionName = `[${name}]`;\n      }\n      if (windowName && !resetView) {\n        inspectionName = `${inspectionName} ${windowName}`;\n      }\n\n      const currentInspections =\n        configuration &&\n        configuration.inspections &&\n        configuration.inspections.map((inspection) => inspection.id);\n      if (currentInspections) {\n        this.removeIdsForUnknownInspectionIds(views, currentInspections);\n      }\n    }\n\n    const hasInspectionId = views.viewSet && views.viewSet[id] && views.viewSet[id].inspectionId;\n    const viewToShowWithoutInspection =\n      !hasInspectionId &&\n      views.viewSet &&\n      views.viewSet[id] &&\n      views.viewSet[id].viewComponentClassId;\n\n    const toolbarControls = [];\n\n    if (canEditViewSet(myPermissions)) {\n      toolbarControls.push(<SplitButton key=\"splitButton\" />);\n    }\n\n    if (this.canEditCurrentView()) {\n      toolbarControls.push(\n        <IconButton\n          tooltip={intl.messages['viewTypeSelection.chooseViewTooltip']}\n          onClick={() => this.resetView(id)}\n          iconUrl={EditIcon}\n          key=\"swapButton\"\n        />,\n      );\n    }\n\n    if (resetView || !hasInspectionId || this.canDeleteCurrentView()) {\n      toolbarControls.push(\n        <IconButton\n          tooltip={intl.messages['svoView.closeView']}\n          onClick={() => this.props.onCloseView()}\n          iconUrl={CloseIcon}\n          key=\"customRemoveButton\"\n          style={{ width: '18px', height: '18px' }}\n        />,\n      );\n    }\n\n    return (\n      <MosaicWindow\n        className={viewClass}\n        createNode={() => shortId.generate()}\n        title={\n          (selectedInspectionId ||\n            (views.viewSet && views.viewSet[id] && views.viewSet[id].titleId)) &&\n          this.props.intl.formatMessage(\n            {\n              id:\n                selectedInspectionId || windowName\n                  ? 'svoView.emptyViewInspectionTemplate'\n                  : views.viewSet[id].titleId,\n            },\n            {\n              inspectionName,\n            },\n          )\n        }\n        toolbarControls={isSVOConfigLoaded ? toolbarControls : []}\n        path={path}\n        draggable={canEditViewSet(myPermissions)}\n      >\n        <KeyHandler view={this} dispatch={dispatch} editingViewIds={editingViewIds}>\n          {!resetView && hasInspectionId ? (\n            viewSetFactory.createViewInstance(views.viewSet[id], {\n              ...views.viewSet[id].passedProps,\n              id,\n              inspectionId: views.viewSet[id].inspectionId,\n            })\n          ) : isSVOConfigLoaded ? (\n            <ViewSelection\n              viewId={id}\n              changeContent={() => this.setState({ resetView: false, selectedInspectionId: 0 })}\n              changeTitle={(selectedInspectionId) => this.setState({ selectedInspectionId })}\n              showCancel={resetView}\n              viewToShowWithoutInspection={viewToShowWithoutInspection}\n            />\n          ) : (\n            <NoSVOConfigurationLoadedView />\n          )}\n        </KeyHandler>\n      </MosaicWindow>\n    );\n  }\n}\n\nSVOView.defaultProps = {\n  editingViewIds: [],\n};\n\nSVOView.propTypes = {\n  id: PropTypes.string.isRequired,\n  path: PropTypes.arrayOf(PropTypes.string).isRequired,\n  views: mosaicViewType.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  editingViewIds: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { views, id } = ownProps;\n  const inspectionId = isObjectValid(() => views.viewSet[id].inspectionId);\n  const configuration = state.app.configuration;\n  const isSVOConfigLoaded = state.viewSet.isSVOConfigLoaded;\n  const myPermissions = state.app.myPermissions;\n\n  let windowName = isObjectValid(() => state.inspections[inspectionId].views[id].windowName);\n  if (windowName) {\n    const inspectionName = configuration.getInspectionName(inspectionId);\n    windowName = windowName.replace(`Inspections.${inspectionName}.`, '');\n    return {\n      configuration,\n      windowName,\n      isSVOConfigLoaded,\n      myPermissions,\n    };\n  }\n  return {\n    configuration,\n    isSVOConfigLoaded,\n    myPermissions,\n  };\n};\n\nconst mapDispatchToProps = () => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(SVOView));\n","import React, { useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Mosaic, MosaicContext } from 'react-mosaic-component';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\nimport { mosaicViewType } from './types';\nimport {\n  increaseViewSizeChangeCounter,\n  purgeViewState,\n  clearCurrentView,\n} from '../../redux/actions/index';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport SVOView from './SVOView';\nimport { canEditViewSet } from '../../utils/permissions';\n\nconst ViewSet = ({\n  views,\n  onChange,\n  topNavHidden,\n  bottomNavHidden,\n  increaseChangeCounter,\n  dispatch,\n  inspections,\n  myPermissions,\n}) => {\n  const mosaic = useRef(null);\n  const [viewToClose, setViewToClose] = useState(undefined);\n  const viewSetClass = classNames({\n    'view-set-wrapper': true,\n    'bottom-nav-offset': !bottomNavHidden,\n    'top-nav-hidden': !topNavHidden,\n  });\n\n  if (!views) {\n    return false;\n  }\n  const editingViewIds = Object.keys(inspections).map(\n    (inspection) =>\n      inspections[inspection].sharedState && inspections[inspection].sharedState.editingViewId,\n  );\n\n  const handleConfirmDialogClose = (confirmed) => {\n    if (confirmed) {\n      closeView();\n    }\n    setViewToClose(undefined);\n  };\n\n  const oneViewInViewset = () => {\n    return typeof views.initialValue === 'string';\n  };\n\n  const closeView = () => {\n    const { viewId, path, remove } = viewToClose;\n    const inspectionId = views.viewSet[viewId] && views.viewSet[viewId].inspectionId;\n    if (oneViewInViewset()) {\n      dispatch(clearCurrentView());\n    }\n    dispatch(purgeViewState(inspectionId, viewId));\n\n    remove(path);\n  };\n\n  return (\n    <div className={viewSetClass}>\n      <ConfirmDialog\n        open={viewToClose !== undefined}\n        onClose={(confirmed) => handleConfirmDialogClose(confirmed)}\n        message={<FormattedMessage id=\"svoView.closeViewConfirmation\" />}\n      />\n      <Mosaic\n        onChange={(layout) => {\n          onChange(layout);\n          increaseChangeCounter();\n        }}\n        ref={mosaic}\n        renderTile={(id, path) => (\n          <MosaicContext.Consumer>\n            {({ mosaicActions }) => {\n              const { remove } = mosaicActions;\n              return (\n                <SVOView\n                  id={id}\n                  path={path}\n                  views={views}\n                  dispatch={dispatch}\n                  editingViewIds={editingViewIds}\n                  onCloseView={() => {\n                    setViewToClose({ viewId: id, path, remove });\n                  }}\n                />\n              );\n            }}\n          </MosaicContext.Consumer>\n        )}\n        initialValue={views.initialValue}\n        resize={canEditViewSet(myPermissions) ? '' : 'DISABLED'}\n      />\n    </div>\n  );\n};\n\nViewSet.defaultProps = {\n  topNavHidden: false,\n  bottomNavHidden: false,\n  views: undefined,\n};\n\nViewSet.propTypes = {\n  views: mosaicViewType,\n  onChange: PropTypes.func.isRequired,\n  topNavHidden: PropTypes.bool,\n  bottomNavHidden: PropTypes.bool,\n  increaseChangeCounter: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  inspections: state.inspections,\n  myPermissions: state.app.myPermissions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  increaseChangeCounter: () => dispatch(increaseViewSizeChangeCounter()),\n  dispatch: (action) => dispatch(action),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewSet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nconst TopNavigationItem = ({ children }) => <div className=\"box-wrapper\">{children}</div>;\n\nTopNavigationItem.defaultProps = {\n  children: undefined,\n};\n\nTopNavigationItem.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default TopNavigationItem;\n","import React from 'react';\nimport Clock from 'react-live-clock';\n\nimport './style.scss';\nimport NavigationItem from '../../../../components/NavigationItem';\n\nconst DateTime = () => (\n  <NavigationItem>\n    <div className=\"date-time-wrapper\">\n      <Clock className=\"date\" format={'DD.MM.YYYY'} ticking />\n      <Clock className=\"time\" format={'HH:mm:ss'} ticking />\n    </div>\n  </NavigationItem>\n);\n\nexport default DateTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport './style.scss';\nimport allModes from '../../../../utils/modes';\nimport { canReadSVOMode, canEditSVOMode } from '../../../../utils/permissions';\nimport MenuList from '../../../../components/MenuList';\n\nconst ModeSwitch = ({ changeMode, currentMode, modes, open, handleClose, enabled }) => {\n  const myPermissions = useSelector((state) => state.app.myPermissions);\n  const selectableModes = Object.keys(modes).filter((m) => m !== 'unknownMode');\n  const canRead = canReadSVOMode(myPermissions);\n  const canEdit = canEditSVOMode(myPermissions);\n  const menuItems = selectableModes.map((key) => ({\n    key: key,\n    onClick: () => {\n      changeMode(key, modes[key].id);\n    },\n    caption: <FormattedMessage id={key} />,\n    img: modes[key].iconSrc,\n  }));\n\n  return canRead || canEdit ? (\n    <div>\n      <MenuList\n        buttonCaption={currentMode}\n        buttonIcon={modes[currentMode.props.id].iconSrc}\n        menuItems={menuItems}\n        onClose={handleClose}\n        open={open}\n        showBottomArrow\n        enabled={enabled && canEdit}\n      />\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n\nModeSwitch.defaultProps = {\n  open: false,\n  currentMode: undefined,\n  modes: allModes,\n  handleClose: () => {},\n};\n\nexport const modeShape = PropTypes.shape({\n  id: PropTypes.string,\n  iconSrc: PropTypes.string,\n  text: PropTypes.string,\n});\n\nModeSwitch.propTypes = {\n  changeMode: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n  anchorEl: PropTypes.node,\n  handleRequestClose: PropTypes.func.isRequired,\n  openModePopover: PropTypes.func.isRequired,\n  currentMode: PropTypes.node,\n  modes: modeShape,\n};\n\nexport default ModeSwitch;\n","export default __webpack_public_path__ + \"static/media/description.7b05d18e.svg\";","import shortId from 'shortid';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport './style.scss';\n\nimport OutsideClickHandler from '../../../../../src/components/OutsideClickHandler';\nimport LogIcon from '../../../../assets/icons/description.svg';\nimport { canReadLogs } from '../../../../utils/permissions';\n\nclass StatusReport extends Component {\n  state = {\n    statusListActive: false,\n  };\n\n  closeStatusList = (e) => {\n    this.setState({ statusListActive: false });\n  };\n\n  render() {\n    const { notifications, myPermissions } = this.props;\n    return canReadLogs(myPermissions) ? (\n      <OutsideClickHandler\n        onOutsideClick={() => {\n          this.closeStatusList();\n        }}\n        ref={(ref) => {\n          this.wrapper = ref;\n        }}\n      >\n        {notifications && notifications.length > 0 ? (\n          <div style={{ position: 'relative' }}>\n            <div\n              role=\"button\"\n              tabIndex=\"0\"\n              className=\"status-bar\"\n              onClick={() => {\n                this.setState({\n                  statusListActive: !this.state.statusListActive,\n                });\n              }}\n            >\n              <img src={LogIcon} alt=\"Log\" />\n              <p className={`${notifications[0].type} pb1 ma0 `}>{notifications[0].message}</p>\n            </div>\n            <div className=\"bottomArrow\"></div>\n            <div className={`status-list ${this.state.statusListActive ? '' : 'hidden'}`}>\n              <div className=\"status-container\">\n                {notifications.map((notification) => (\n                  <p key={shortId.generate()} className={`${notification.type} status`}>\n                    {notification.timestamp}: <b>{notification.message}</b>{' '}\n                    {notification.count > 1 ? `(${notification.count})` : ''}\n                  </p>\n                ))}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </OutsideClickHandler>\n    ) : (\n      <div></div>\n    );\n  }\n}\n\nStatusReport.defaultProps = {\n  notifications: undefined,\n};\n\nStatusReport.propTypes = {\n  notifications: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string,\n    }),\n  ),\n};\n\nconst mapStateToProps = (state) => ({\n  notifications: state.app.notifications,\n  myPermissions: state.app.myPermissions,\n});\n\nexport default connect(mapStateToProps)(injectIntl(StatusReport));\n","export default __webpack_public_path__ + \"static/media/play-multiple.92160d4a.svg\";","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport MenuList from '../../../../components/MenuList';\nimport iconPlay from '../../../../assets/icons/play.svg';\nimport iconPlayMultiple from '../../../../assets/icons/play-multiple.svg';\nimport iconPause from '../../../../assets/icons/pause.svg';\nimport { canReadInspectionState, canEditInspectionState } from '../../../../utils/permissions';\n\nexport const InspectionStateSwitch = () => {\n  const { proxy, configuration, pausedInspections, myPermissions } = useSelector(\n    (state) => state.app,\n  );\n  const inspections = (configuration && configuration.getInspections()) || [];\n  const allRunning = pausedInspections.length === 0;\n  const canRead = canReadInspectionState(myPermissions);\n  const canEdit = canEditInspectionState(myPermissions);\n  const menuItems = inspections.map((inspection) => {\n    const isPaused = (pausedInspections || []).includes(inspection.id);\n\n    return {\n      key: inspection.id,\n      onClick: () => {\n        isPaused ? proxy.resumeRejectStream(inspection.id) : proxy.pauseRejectStream(inspection.id);\n      },\n      caption: inspection.name,\n      img: isPaused ? iconPlay : iconPause,\n      className: isPaused ? 'paused-inspection' : undefined,\n    };\n  });\n  const globalItem = {\n    key: 'globalResumePause',\n    onClick: () => {\n      allRunning ? proxy.pauseRejectStream() : proxy.resumeRejectStream();\n    },\n    caption: allRunning ? 'Pause all inspections' : 'Resume all inspections',\n    img: allRunning ? iconPause : iconPlay,\n    className: 'all-inspections',\n  };\n  menuItems.unshift(globalItem);\n\n  return canRead || canEdit ? (\n    <div>\n      <MenuList\n        buttonCaption={\n          <FormattedMessage\n            id=\"topNavigation.inspectionState\"\n            values={{\n              runningInspections: inspections.length - pausedInspections.length,\n              numberOfInspections: inspections.length,\n            }}\n          />\n        }\n        buttonIcon={iconPlayMultiple}\n        menuItems={menuItems}\n        onClose={() => {}}\n        showBottomArrow\n        enabled={canEdit}\n      />\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/language.0be28bcb.svg\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { setLocale, addUserSwitchedLanguageNotification } from '../../../../redux/actions';\nimport LanguageIcon from '../../../../assets/icons/language.svg';\nimport MenuList from '../../../../components/MenuList';\nimport { languages } from '../../../../translations';\n\nimport './style.scss';\n\nclass LanguageChooser extends Component {\n  changeLocation = (locale) => {\n    const { changeLocale, dispatchUserSwitchedLanguageNotification } = this.props;\n    changeLocale(locale);\n    dispatchUserSwitchedLanguageNotification(locale);\n  };\n\n  render() {\n    const { languages, locale } = this.props;\n    const menuItems = languages.map((language) => ({\n      key: language.locale,\n      caption: language.name,\n      onClick: () => {\n        this.changeLocation(language.locale);\n      },\n    }));\n\n    return (\n      <div className=\"flex\">\n        <MenuList\n          buttonIcon={LanguageIcon}\n          buttonCaption={locale}\n          menuItems={menuItems}\n          showBottomArrow\n          onClose={() => {}}\n          open={false}\n        />\n      </div>\n    );\n  }\n}\n\nLanguageChooser.propTypes = {\n  languages: PropTypes.arrayOf(\n    PropTypes.shape({\n      locale: PropTypes.string,\n      name: PropTypes.node,\n    }),\n  ),\n  locale: PropTypes.string.isRequired,\n  changeLocale: PropTypes.func.isRequired,\n};\n\nLanguageChooser.defaultProps = {\n  languages,\n};\n\nconst mapStateToProps = (state) => ({\n  locale: state.app.locale,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeLocale: (locale) => dispatch(setLocale(locale)),\n  dispatchUserSwitchedLanguageNotification: (locale) =>\n    dispatch(addUserSwitchedLanguageNotification(locale)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageChooser);\n","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport './style.scss';\nimport modes from '../../utils/modes';\nimport UserInfo from './components/UserInfo';\nimport DateTime from './components/DateTime';\nimport ViewSetFactory from '../ViewSetFactory';\nimport Logo from '../../components/layout/Logo';\nimport KoerberLogo from '../../assets/logo/logo.svg';\nimport ModeSwitch from './components/ModeSwitch';\nimport StatusReport from './components/StatusReport';\nimport { InspectionStateSwitch } from './components/InspectionStateSwitch';\nimport LanguageChoooser from './components/LanguageChooser';\nimport {\n  setTopNavHidden,\n  setViewSetForMode,\n  setViewSet,\n  setCurrentMode,\n  setPausedInspections,\n} from '../../redux/actions';\nconst viewSetFactory = new ViewSetFactory();\n\nclass TopNavigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      open: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRequestClose = this.handleRequestClose.bind(this);\n  }\n\n  handleChange = (event, index, value) => this.setState({ value });\n  openModePopover = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true,\n    });\n  };\n\n  handleRequestClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  changeMode = (modeKey, modeId) => {\n    this.props.setCurrentMode(modeId);\n    this.handleRequestClose();\n  };\n\n  mapModeIdToKey(modeId) {\n    return Object.keys(modes).find((modeKey) => modes[modeKey].id === modeId);\n  }\n\n  getConfigName = () => {\n    const { configuration, isSVOConfigLoaded } = this.props;\n    if (!isSVOConfigLoaded) {\n      return <FormattedMessage id=\"noConfigName\" />;\n    }\n    if (!configuration || !configuration.name) {\n      return <FormattedMessage id=\"unknownConfigName\" />;\n    }\n    return <span>{configuration.name}</span>;\n  };\n\n  render() {\n    const { topNavHidden, isSVOConfigLoaded } = this.props;\n    const currentMode = this.props.currentMode || modes.unknownMode.id;\n    const currentModeKey = this.mapModeIdToKey(currentMode);\n    const currentModeFormatted = <FormattedMessage id={currentModeKey} />;\n    const configName = this.getConfigName();\n    const navClass = classNames({\n      nav: true,\n      'nav-hidden': topNavHidden,\n    });\n    return (\n      <div className={navClass}>\n        <button\n          className=\"hider\"\n          onClick={() => {\n            this.props.setTopNavHidden(!topNavHidden);\n          }}\n        >\n          {topNavHidden ? 'show' : 'hide'}\n        </button>\n        <div className=\"flex-container\">\n          <div className=\"config-wrapper\">\n            <Logo src={KoerberLogo} title=\"logo\" />\n            {this.props.unsavedChanges ? (\n              <div style={{ fontStyle: 'italic' }}>{configName}*</div>\n            ) : (\n              configName\n            )}\n          </div>\n          <ModeSwitch\n            changeMode={this.changeMode}\n            open={this.state.open}\n            anchorEl={this.state.anchorEl}\n            handleRequestClose={this.handleRequestClose}\n            openModePopover={this.openModePopover}\n            currentMode={currentModeFormatted}\n            enabled={isSVOConfigLoaded}\n          />\n          <StatusReport />\n          {isSVOConfigLoaded && <InspectionStateSwitch />}\n        </div>\n        <div className=\"flex-container\">\n          <UserInfo onChangeUser={() => {}} onLoggedOut={this.props.onLoggedOut} />\n          <LanguageChoooser />\n          <div className=\"separator\">\n            <DateTime date={new Date()} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTopNavigation.defaultProps = {\n  fullscreenMode: false,\n  currentMode: undefined,\n};\n\nTopNavigation.propTypes = {\n  changeViewSet: PropTypes.func.isRequired,\n  setViewSetForMode: PropTypes.func.isRequired,\n  setTopNavHidden: PropTypes.func.isRequired,\n  setCurrentMode: PropTypes.func.isRequired,\n  setPausedInspections: PropTypes.func.isRequired,\n  saveOperationInProcess: PropTypes.bool.isRequired,\n  currentMode: PropTypes.string,\n  topNavHidden: PropTypes.bool.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTopNavHidden: (hidden) => dispatch(setTopNavHidden(hidden)),\n  setViewSetForMode: (mode) => dispatch(setViewSetForMode(mode)),\n  changeViewSet: (viewSetId) => dispatch(setViewSet(viewSetFactory.getViewSet(viewSetId))),\n  setCurrentMode: (modeId) => dispatch(setCurrentMode(modeId)),\n  setPausedInspections: (pausedInspections) => dispatch(setPausedInspections(pausedInspections)),\n});\n\nconst mapStateToProps = (state) => ({\n  activeAppState: state.app.activeAppState,\n  appStateConnection: state.app.appStateConnection,\n  appMode: state.app.mode,\n  currentMode: state.app.currentMode,\n  fullscreenMode: state.viewSet.fullscreenMode,\n  saveOperationInProcess: state.app.saveOperationInProcess,\n  configuration: state.app.configuration,\n  topNavHidden: state.viewSet.topNavHidden,\n  proxy: state.app.proxy,\n  pausedInspections: state.app.pausedInspections,\n  isSVOConfigLoaded: state.viewSet.isSVOConfigLoaded,\n  unsavedChanges: state.viewSet.unsavedChanges,\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(TopNavigation));\n","export default __webpack_public_path__ + \"static/media/view-manager.8d715a8f.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './style.scss';\nimport NavigationItem from '../../../../../../components/NavigationItem';\n\nconst PresetButton = ({ id, title, onClick, active }) => {\n  const presetButtonClass = classNames({\n    'preset-button': true,\n    'preset-button-active': active,\n  });\n  return (\n    <NavigationItem>\n      <button id={id} onClick={onClick} className={presetButtonClass}>\n        <span>{title}</span>\n      </button>\n    </NavigationItem>\n  );\n};\n\nPresetButton.defaultProps = {\n  id: undefined,\n  onClick: () => {},\n  active: false,\n};\n\nPresetButton.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  active: PropTypes.bool,\n};\n\nexport default PresetButton;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\nimport PresetButton from './components/PresetButton';\nimport { viewSetType, mosaicViewType } from '../../../ViewSet/types';\nimport { switchViewSet } from '../../../../redux/actions';\nimport { canReadViewSet, canEditViewSet } from '../../../../utils/permissions';\n\nconst PresetSlider = ({ currentViewSet, createdViewSets, switchViewSet, myPermissions }) =>\n  canReadViewSet(myPermissions) || canEditViewSet(myPermissions) ? (\n    <div className=\"preset-slider-wrapper\">\n      {createdViewSets &&\n        createdViewSets.map((viewSet) => (\n          <PresetButton\n            title={viewSet.name || viewSet.id}\n            key={viewSet.id}\n            onClick={() => switchViewSet(viewSet)}\n            active={currentViewSet && currentViewSet.id === viewSet.id}\n          />\n        ))}\n    </div>\n  ) : (\n    <div></div>\n  );\n\nPresetSlider.defaultProps = {\n  currentViewSet: undefined,\n  createdViewSets: [],\n};\n\nPresetSlider.propTypes = {\n  currentViewSet: mosaicViewType,\n  createdViewSets: PropTypes.arrayOf(viewSetType),\n  switchViewSet: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  createdViewSets: Object.keys(state.viewSet.createdViewSets).map(\n    (key) => state.viewSet.createdViewSets[key],\n  ),\n  currentViewSet: state.viewSet.currentViewSet,\n  myPermissions: state.app.myPermissions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  switchViewSet: (viewSet) => dispatch(switchViewSet(viewSet)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PresetSlider);\n","export default __webpack_public_path__ + \"static/media/delete.85c719f0.svg\";","export default __webpack_public_path__ + \"static/media/export.6f1edad0.svg\";","export default __webpack_public_path__ + \"static/media/import.2817cb78.svg\";","export default __webpack_public_path__ + \"static/media/check.069f9f99.svg\";","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from '../Dialog';\nimport './style.scss';\n\nclass InformationDialog extends Component {\n  render() {\n    const { onClose, open, title, message } = this.props;\n\n    return (\n      <div>\n        <Dialog title={title} onClose={onClose} open={open}>\n          <div className=\"message-wrapper\">{message}</div>\n          <div className=\"button-wrapper\">\n            <Button color=\"primary\" onClick={onClose}>\n              Okay\n            </Button>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default InformationDialog;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useState, useRef } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport semver from 'semver';\nimport Table, { AutoResizer } from 'react-base-table';\n\nimport addIcon from '../../assets/icons/plus.svg';\nimport removeIcon from '../../assets/icons/delete.svg';\nimport iconSave from '../../assets/icons/save.svg';\nimport exportIcon from '../../assets/icons/export.svg';\nimport importIcon from '../../assets/icons/import.svg';\nimport iconCheck from '../../assets/icons/check.svg';\nimport EditIcon from '../../assets/icons/edit.svg';\n\nimport Dialog from '../../components/Dialog';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport InformationDialog from '../../components/InformationDialog';\nimport { forceDownload } from '../../utils/downloader';\nimport {\n  canReadViewSet,\n  canEditViewSet,\n  canDeleteViewSet,\n  canSaveConfig,\n} from '../../utils/permissions';\nimport logger from '../../utils/logger';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '../../components/buttons/IconButton';\nimport {\n  removeViewSet,\n  renameViewSet,\n  newViewSet,\n  setViewSet,\n  setEditingFocus,\n  purgeViewState,\n} from '../../redux/actions';\n\nimport './style.scss';\n\nconst ViewSetManager = ({ onClose, onSave, intl }) => {\n  const fileChooser = useRef(null);\n  const dispatch = useDispatch();\n  const createdViewSets = useSelector((state) => state.viewSet.createdViewSets);\n  const currentViewSet = useSelector((state) => state.viewSet.currentViewSet);\n  const inspections = useSelector((state) => state.inspections);\n  const configuration = useSelector((state) => state.app.configuration);\n  const myPermissions = useSelector((state) => state.app.myPermissions);\n  const canEdit = canEditViewSet(myPermissions);\n  const canDelete = canDeleteViewSet(myPermissions);\n\n  const [name, setName] = useState(currentViewSet.name);\n  const [isImportConfirmOpen, setIsImportConfirmOpen] = useState(false);\n  const [viewsetToDelete, setViewsetToDelete] = useState('');\n  const [currentImportedViewSet, setCurrentImportedViewSet] = useState(null);\n  const [isInformationDialogOpen, setIsInformationDialogOpen] = useState(false);\n  const [informationDialogTitle, setInformationDialogTitle] = useState('');\n  const [informationDialogMessage, setInformationDialogMessage] = useState('');\n  const [shouldCloseViewSetManager, setShouldCloseViewSetManager] = useState(false);\n  const [viewSetToEdit, setViewSetToEdit] = useState('');\n\n  const fileLoaderVersion = '1.0.0';\n\n  const getNextFreeName = (nameToTry) => {\n    let name = nameToTry;\n    let counter = 1;\n    while (existsName(name)) {\n      name = `${nameToTry}${counter}`;\n      counter++;\n    }\n\n    return name;\n  };\n\n  const existsName = (name) => {\n    return Object.keys(createdViewSets).filter((key) => key === name).length > 0;\n  };\n\n  const addViewSet = () => {\n    const newViewSetName = getNextFreeName('Initial');\n    dispatch(newViewSet(newViewSetName));\n  };\n\n  const removeSelectedViewSet = () => {\n    dispatch(removeViewSet(viewsetToDelete));\n  };\n\n  const saveViewSets = () => {\n    onSave();\n    closeViewSetManager();\n  };\n\n  const exportViewSets = async () => {\n    const webAppVersion = configuration.getWebAppVersion();\n    const dataToSave = {\n      currentViewSet,\n      editingViewIds: getEditingViewIdsPerInspection(),\n      timestamp: new Date(),\n      version: '1.0.0',\n      webAppVersion,\n    };\n\n    await createJsonFileFromObject(dataToSave);\n\n    closeViewSetManager();\n  };\n\n  const getEditingViewIdsPerInspection = () => {\n    const editingViewIds = [];\n\n    Object.keys(inspections).forEach((inspectionIdStr) => {\n      const inspectionId = parseInt(inspectionIdStr, 10);\n      if (\n        inspections[inspectionIdStr] &&\n        inspections[inspectionIdStr].sharedState &&\n        inspections[inspectionIdStr].sharedState.editingViewId\n      ) {\n        editingViewIds.push({\n          inspectionId,\n          editingViewId: inspections[inspectionIdStr].sharedState.editingViewId,\n        });\n      }\n    });\n\n    return editingViewIds;\n  };\n\n  const createJsonFileFromObject = async (object) => {\n    const json = JSON.stringify(object);\n    const blob = new Blob([json], { type: 'application/json' });\n    const data = await URL.createObjectURL(blob);\n\n    forceDownload(data, 'viewset.json');\n  };\n\n  const importViewSets = () => {\n    fileChooser.current.click();\n  };\n\n  const onFileAdded = (evt) => {\n    const file = evt.target.files[0];\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.readAsText(file);\n\n      fileReader.onload = (event) => {\n        handleFileData(event.target.result);\n      };\n    }\n  };\n\n  const handleFileData = (fileText) => {\n    try {\n      const data = JSON.parse(fileText);\n      if (equalsViewSetName(data.currentViewSet.id)) {\n        setIsImportConfirmOpen(true);\n        setCurrentImportedViewSet(data);\n        return;\n      }\n\n      setViewSetConfigurationFromFileData(data);\n    } catch (error) {\n      showErrorWhileLoadingFileDialog();\n      logger.error(error);\n    }\n  };\n\n  const handleImportConfirmDialogClose = (confirmed) => {\n    setIsImportConfirmOpen(false);\n    if (confirmed) {\n      loadViewSetFromFile();\n    } else {\n      fileChooser.current.value = '';\n    }\n  };\n\n  const handleDeleteConfirmDialogClose = (confirmed) => {\n    setViewsetToDelete('');\n    if (confirmed) {\n      removeSelectedViewSet();\n    }\n  };\n\n  const loadViewSetFromFile = () => {\n    setViewSetConfigurationFromFileData(currentImportedViewSet);\n  };\n\n  const equalsViewSetName = (name) => {\n    if (currentViewSet.id === name) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const setViewSetConfigurationFromFileData = (data) => {\n    loadSuccessfulInformationDialogText();\n\n    if (!isMajorVersionCompatible(data.version)) {\n      showIncompatibleVersionErrorDialog();\n      logger.error('Version of file is not valid.');\n      return;\n    }\n\n    if (isMinorVersionNewer(data.version)) {\n      loadVersionChangeInformationDialogText();\n    }\n\n    if (!data.currentViewSet.id) {\n      showErrorWhileLoadingFileDialog();\n      logger.error('Could not load viewset id.');\n      return;\n    }\n    dispatch(setViewSet(data.currentViewSet, data.currentViewSet.id));\n\n    if (data.editingViewIds) {\n      data.editingViewIds.forEach((entry) => {\n        dispatch(setEditingFocus(entry.inspectionId, entry.editingViewId));\n      });\n    }\n\n    dispatch(purgeViewState());\n    showInformationDialog();\n  };\n\n  const isMajorVersionCompatible = (version) => {\n    if (fileLoaderVersion === version) {\n      return true;\n    }\n\n    if (!semver.valid(version) || semver.diff(fileLoaderVersion, version) === 'major') {\n      return false;\n    }\n\n    return true;\n  };\n\n  const isMinorVersionNewer = (version) => {\n    return (\n      semver.diff(fileLoaderVersion, version) === 'minor' && semver.gt(version, fileLoaderVersion)\n    );\n  };\n\n  const closeViewSetManager = () => {\n    onClose();\n  };\n\n  const loadSuccessfulInformationDialogText = () => {\n    setInformationDialogTitle(<FormattedMessage id=\"notifications.successfulAction\" />);\n    setInformationDialogMessage(<FormattedMessage id=\"notifications.successfullyLoadedFile\" />);\n    setShouldCloseViewSetManager(true);\n  };\n\n  const showErrorWhileLoadingFileDialog = () => {\n    setInformationDialogTitle(<FormattedMessage id=\"notifications.errorOccurred\" />);\n    setInformationDialogMessage(<FormattedMessage id=\"notifications.error.loadingFile\" />);\n    setIsInformationDialogOpen(true);\n  };\n\n  const showIncompatibleVersionErrorDialog = () => {\n    setInformationDialogTitle(\n      <FormattedMessage id=\"notifications.viewsetVersionIncompatibleTitle\" />,\n    );\n    setInformationDialogMessage(\n      <FormattedMessage id=\"notifications.viewsetVersionIncompatibleMessage\" />,\n    );\n    setIsInformationDialogOpen(true);\n  };\n\n  const loadVersionChangeInformationDialogText = () => {\n    setInformationDialogTitle(<FormattedMessage id=\"notifications.minorVersionDiffTitle\" />);\n    setInformationDialogMessage(<FormattedMessage id=\"notifications.minorVersionDiffMessage\" />);\n    setShouldCloseViewSetManager(true);\n  };\n\n  const showInformationDialog = () => {\n    setIsInformationDialogOpen(true);\n  };\n\n  const getActions = () => {\n    const actions = [];\n\n    if (canSaveConfig(myPermissions)) {\n      actions.push({\n        intlId: 'viewSetManager.save',\n        iconUrl: iconSave,\n        onClickHandler: () => {\n          saveViewSets();\n        },\n      });\n    }\n\n    if (canReadViewSet(myPermissions)) {\n      actions.push({\n        intlId: 'viewSetManager.export',\n        iconUrl: exportIcon,\n        onClickHandler: () => {\n          exportViewSets();\n        },\n      });\n    }\n\n    if (canEdit) {\n      actions.push({\n        intlId: 'viewSetManager.import',\n        iconUrl: importIcon,\n        onClickHandler: () => {\n          importViewSets();\n        },\n      });\n    }\n\n    return actions;\n  };\n\n  const getColumns = () => {\n    return [\n      {\n        key: 'name',\n        dataKey: 'name',\n        title: 'Name',\n        width: 0,\n        flexGrow: 1,\n      },\n      {\n        key: 'edit',\n        dataKey: 'edit',\n        title: '',\n        width: 40,\n      },\n      {\n        key: 'delete',\n        dataKey: 'delete',\n        title: '',\n        width: 40,\n      },\n    ];\n  };\n\n  const changeViewSetName = () => {\n    if (viewSetToEdit !== name && Object.keys(createdViewSets).includes(name)) {\n      alert('Viewset with this name already exists.');\n      return;\n    }\n\n    dispatch(renameViewSet(viewSetToEdit, name));\n\n    setViewSetToEdit('');\n    setName('');\n  };\n\n  const getViewSetEditName = () => {\n    return (\n      <div className=\"viewsetmanager-edit-viewset-name-wrapper\">\n        <TextField\n          fullWidth\n          type=\"text\"\n          inputProps={{\n            style: {\n              height: 29,\n            },\n          }}\n          value={name}\n          onChange={(e) => setName(e.target.value.substring(0, 20))}\n        />\n      </div>\n    );\n  };\n\n  const getViewSetEditingIcon = (viewsetName) => {\n    if (!canEdit) {\n      return undefined;\n    }\n\n    if (viewSetToEdit !== viewsetName) {\n      return (\n        <IconButton\n          onClick={() => {\n            setViewSetToEdit(viewsetName);\n            setName(viewsetName);\n          }}\n          tooltip={intl.messages['viewSetManager.editViewSetName']}\n          iconUrl={EditIcon}\n        />\n      );\n    } else {\n      return (\n        <IconButton\n          onClick={() => changeViewSetName()}\n          tooltip={intl.messages['viewSetManager.changeViewSetName']}\n          iconUrl={iconCheck}\n        />\n      );\n    }\n  };\n\n  const getViewSets = () => {\n    const data =\n      createdViewSets &&\n      Object.keys(createdViewSets).map((viewsetName) => {\n        return {\n          edit: getViewSetEditingIcon(viewsetName),\n          delete: canDelete ? (\n            <IconButton\n              onClick={() => setViewsetToDelete(viewsetName)}\n              tooltip={intl.messages['viewSetManager.deleteIconTooltip']}\n              iconUrl={removeIcon}\n            />\n          ) : undefined,\n          name: viewSetToEdit === viewsetName ? getViewSetEditName() : viewsetName,\n          id: viewsetName,\n        };\n      });\n    return data;\n  };\n\n  const headerRenderer = ({ cells, columns }) => {\n    const columnHeaders = [];\n    columns.forEach((column, columnIndex) => {\n      if (column.key === 'delete') {\n        columnHeaders.push(\n          <div\n            style={{ width: columns[columnIndex].width, paddingRight: 3 }}\n            key={`header_${columnIndex}`}\n          >\n            <IconButton\n              tooltip={intl.messages['viewSetManager.newViewSet']}\n              iconUrl={addIcon}\n              onClick={() => addViewSet()}\n            />\n          </div>,\n        );\n      } else {\n        columnHeaders.push(\n          <div key={`header_${columnIndex}`} className=\"viewsetmanager-header-wrapper\">\n            {columns[columnIndex].title}\n          </div>,\n        );\n      }\n    });\n\n    return columnHeaders;\n  };\n\n  const actions = getActions();\n  const data = getViewSets();\n  const columns = getColumns();\n\n  return (\n    <div>\n      <Dialog\n        title={<FormattedMessage id=\"viewSetManager.title\" />}\n        dialogActions={actions}\n        onClose={() => {\n          closeViewSetManager();\n        }}\n        open\n      >\n        <div className=\"viewsetmanager-headline-wrapper\">\n          <FormattedMessage id=\"viewSetManager.editViewSetHeadline\" />\n        </div>\n        <div className=\"viewsetmanager-table-wrapper\">\n          <AutoResizer key={`autoresizer`}>\n            {({ width, height }) => (\n              <Table\n                headerRenderer={headerRenderer}\n                columns={columns}\n                data={data}\n                width={width}\n                height={height - 20}\n                headerHeight={30}\n                rowHeight={30}\n                key=\"viewset-table\"\n              />\n            )}\n          </AutoResizer>\n        </div>\n      </Dialog>\n      <ConfirmDialog\n        open={isImportConfirmOpen}\n        onClose={(confirmed) => handleImportConfirmDialogClose(confirmed)}\n        title={<FormattedMessage id=\"viewSetManager.importConfirm.title\" />}\n        message={<FormattedMessage id=\"viewSetManager.importConfirm.message\" />}\n      />\n      <ConfirmDialog\n        open={viewsetToDelete !== ''}\n        onClose={(confirmed) => handleDeleteConfirmDialogClose(confirmed)}\n        message={\n          <FormattedMessage\n            id=\"viewSetManager.deleteConfirm.message\"\n            values={{ viewsetName: viewsetToDelete }}\n          />\n        }\n      />\n      <InformationDialog\n        onClose={() => {\n          setIsInformationDialogOpen(false);\n          if (shouldCloseViewSetManager) {\n            closeViewSetManager();\n          }\n        }}\n        open={isInformationDialogOpen}\n        title={informationDialogTitle}\n        message={informationDialogMessage}\n      />\n      <input ref={fileChooser} style={{ display: 'none' }} type=\"file\" onChange={onFileAdded} />\n    </div>\n  );\n};\n\nViewSetManager.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(ViewSetManager);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport React, { Component } from 'react';\n\nimport './style.scss';\nimport ViewSetManagerIcon from '../../assets/icons/view-manager.svg';\nimport PresetSlider from './components/PresetSlider';\nimport ViewSetManager from '../ViewSetManager';\nimport { setBottomNavHidden } from '../../redux/actions';\nimport { canReadViewSet, canEditViewSet } from '../../utils/permissions';\n\nclass BottomNav extends Component {\n  state = {\n    selectedIndex: 0,\n    viewSetManagerOpen: false,\n  };\n  select = (index) => this.setState({ selectedIndex: index });\n\n  render() {\n    const { onSave, bottomNavHidden, isSVOConfigLoaded, myPermissions } = this.props;\n    return (\n      <div className={`bottom-nav-wrapper ${bottomNavHidden ? 'bottom-nav-hidden' : ''}`}>\n        <div className=\"bottom-nav\">\n          {isSVOConfigLoaded && <PresetSlider />}\n          {isSVOConfigLoaded && (canReadViewSet(myPermissions) || canEditViewSet(myPermissions)) ? (\n            <div\n              className=\"view-manager\"\n              onClick={() => {\n                this.setState({\n                  viewSetManagerOpen: !this.state.viewSetManagerOpen,\n                });\n              }}\n            >\n              <img src={ViewSetManagerIcon} alt=\"\" />\n              <FormattedMessage id=\"viewSetManager\" />\n            </div>\n          ) : undefined}\n        </div>\n        <button\n          className=\"bottom-hider\"\n          onClick={() => {\n            this.props.setBottomNavHidden(!bottomNavHidden);\n          }}\n        >\n          {bottomNavHidden ? 'show' : 'hide'}\n        </button>\n        {isSVOConfigLoaded && (\n          <div>\n            {this.state.viewSetManagerOpen && (\n              <ViewSetManager\n                onClose={() => this.setState({ viewSetManagerOpen: false })}\n                onSave={onSave}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nBottomNav.propTypes = {\n  setBottomNavHidden: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  bottomNavHidden: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  fullscreenMode: state.viewSet.fullscreenMode,\n  bottomNavHidden: state.viewSet.bottomNavHidden,\n  isSVOConfigLoaded: state.viewSet.isSVOConfigLoaded,\n  myPermissions: state.app.myPermissions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setBottomNavHidden: (hidden) => dispatch(setBottomNavHidden(hidden)),\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(BottomNav));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport './style.scss';\n\nclass ModalNotification extends Component {\n  render() {\n    const { visible, message } = this.props;\n    if (!visible) {\n      return false;\n    }\n\n    return (\n      <div className=\"modal-fullscreen-style\">\n        <div className=\"modal-fullscreen-inner\">{message}</div>\n      </div>\n    );\n  }\n}\n\nModalNotification.defaultProps = {\n  visible: false,\n  message: undefined,\n};\n\nModalNotification.propTypes = {\n  visible: PropTypes.bool,\n  message: PropTypes.object,\n};\n\nexport default ModalNotification;\n","import PropTypes from 'prop-types';\n\nconst ProtobufType = PropTypes.shape({\n  request: PropTypes.func.isRequired,\n});\n\nexport default ProtobufType;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { Redirect } from 'react-router-dom';\nimport throttle from 'lodash/throttle';\nimport { ReactReduxContext } from 'react-redux';\n\nimport ViewSet from '../views/ViewSet';\nimport HelpView from '../views/HelpView';\nimport translations from '../translations';\nimport TopNavigation from '../views/TopNavigation';\nimport BottomNavigation from '../views/BottomNavigation';\nimport ProtobufType from '../components/Protobuf/ProtobufType';\nimport ModalNotification from '../components/ModalNotification.js';\nimport ViewSetFactory, { DEFAULT_VIEWSET } from '../views/ViewSetFactory';\nimport {\n  setViewSet,\n  setCurrentLayout,\n  addConnectionEstablishedNotification,\n  addConnectionLostNotification,\n  saveClientChunk,\n  closeHelpView,\n  increaseViewSizeChangeCounter,\n  changeViewSetAfterLoading,\n} from '../redux/actions';\n\nclass SVObserver extends Component {\n  static contextType = ReactReduxContext;\n  state = {\n    viewSetFactory: new ViewSetFactory(),\n    throttledWindwResizeHandler: throttle(() => this.props.increaseChangeCounter(), 500),\n  };\n\n  handleBeforeUnload(event) {\n    event.preventDefault();\n    event.returnValue = '';\n  }\n\n  componentDidMount() {\n    if (!this.props.currentViewSet) {\n      const viewSetId = DEFAULT_VIEWSET;\n      const viewSet = this.state.viewSetFactory.getViewSet(viewSetId);\n      this.props.setViewSet(viewSet, viewSet.id);\n    }\n\n    if (this.props.defaultViewSetName) {\n      this.props.changeViewSetAfterLoading(this.props.defaultViewSetName);\n    }\n\n    if (this.props.protobuf && this.props.socket) {\n      this.onWebsocketConnect(this.props.protobuf);\n    }\n\n    window.addEventListener('resize', this.state.throttledWindwResizeHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.state.throttledWindwResizeHandler);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.socket !== this.props.socket && nextProps.protobuf && nextProps.socket) {\n      this.onWebsocketConnect(nextProps.protobuf);\n    }\n    if (nextProps.socket !== this.props.socket && !nextProps.socket) {\n      this.onWebsocketDisconnect();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { unsavedChanges } = this.props;\n    if (unsavedChanges && prevProps.currentViewSet) {\n      window.addEventListener('beforeunload', this.handleBeforeUnload);\n    } else {\n      window.removeEventListener('beforeunload', this.handleBeforeUnload);\n    }\n  }\n\n  onWebsocketConnect = async (protobuf) => {\n    this.props.addConnectionEstablishedNotification();\n  };\n\n  onWebsocketDisconnect = () => {\n    this.props.addConnectionLostNotification();\n  };\n\n  render() {\n    const {\n      locale,\n      currentViewSet,\n      bottomNavHidden,\n      topNavHidden,\n      protobuf,\n      modalNotificationData,\n      isHelpViewOpen,\n      closeHelpView,\n    } = this.props;\n\n    if (!this.props.user || !this.props.authToken) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <IntlProvider locale={locale} messages={translations[locale]}>\n        <div className=\"vh-100 center\">\n          <ModalNotification\n            visible={!!modalNotificationData}\n            message={modalNotificationData && modalNotificationData.message}\n          />\n          <TopNavigation onLoggedOut={this.props.onLoggedOut} />\n          <ViewSet\n            views={currentViewSet}\n            onChange={(layout) => {\n              this.props.setLayout(layout);\n            }}\n            bottomNavHidden={bottomNavHidden}\n            topNavHidden={topNavHidden}\n          />\n          <BottomNavigation\n            onSave={() => {\n              const currentState = this.context.store.getState();\n              this.props.saveClientChunk(protobuf, currentState);\n            }}\n          />\n          <HelpView open={isHelpViewOpen} onClose={() => closeHelpView()}></HelpView>\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n\nSVObserver.defaultProps = {\n  bottomNavHidden: false,\n  topNavHidden: false,\n  protobuf: undefined,\n  viewSetTemplate: undefined,\n  user: undefined,\n  authToken: undefined,\n  location: { state: {} },\n  currentViewSet: undefined,\n};\n\nSVObserver.propTypes = {\n  locale: PropTypes.string.isRequired,\n  user: PropTypes.shape({ name: PropTypes.string }),\n  authToken: PropTypes.string,\n  currentViewSet: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({ id: PropTypes.string }),\n  ]),\n  bottomNavHidden: PropTypes.bool,\n  topNavHidden: PropTypes.bool,\n  setLayout: PropTypes.func.isRequired,\n  setViewSet: PropTypes.func.isRequired,\n  viewSetTemplate: PropTypes.string,\n  addConnectionEstablishedNotification: PropTypes.func.isRequired,\n  addConnectionLostNotification: PropTypes.func.isRequired,\n  protobuf: ProtobufType,\n  location: PropTypes.shape({ state: PropTypes.any }),\n};\n\nconst mapStateToProps = (state) => ({\n  isHelpViewOpen: state.app.isHelpViewOpen,\n  locale: state.app.locale,\n  protobuf: state.app.protobuf,\n  socket: state.app.socket,\n  user: state.app.user,\n  authToken: state.app.authToken,\n  currentViewSet: state.viewSet.currentViewSet,\n  bottomNavHidden: state.viewSet.bottomNavHidden,\n  topNavHidden: state.viewSet.topNavHidden,\n  defaultViewSetName: state.viewSet.defaultViewSetName,\n  createdViewSets: state.app.createdViewSets,\n  modalNotificationData: state.app.modalNotificationData,\n  increaseChangeCounter: PropTypes.func.isRequired,\n  unsavedChanges: state.viewSet.unsavedChanges,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  closeHelpView: () => {\n    dispatch(closeHelpView());\n  },\n  setViewSet: (viewSet, viewSetId) => {\n    dispatch(setViewSet(viewSet, viewSetId));\n  },\n  setLayout: (layout) => {\n    dispatch(setCurrentLayout(layout));\n  },\n  addConnectionEstablishedNotification: () => {\n    dispatch(addConnectionEstablishedNotification());\n  },\n  addConnectionLostNotification: () => {\n    dispatch(addConnectionLostNotification());\n  },\n  saveClientChunk: (protobuf, chunk) => {\n    dispatch(saveClientChunk(protobuf, chunk));\n  },\n  increaseChangeCounter: () => {\n    dispatch(increaseViewSizeChangeCounter());\n  },\n  changeViewSetAfterLoading: (name) => {\n    dispatch(changeViewSetAfterLoading(name));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SVObserver);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { FormattedMessage } from 'react-intl';\n\nimport ArrowIcon from '../../assets/icons/back.svg';\nimport Protobuf from '../../protobuf/Protobuf';\nimport {\n  flattenProtobuf,\n  canReadUserManagement,\n  canEditUserManagement,\n  getGroupPermissionsFromFlattenedPermissions,\n} from '../../utils/permissions';\n\nimport './style.scss';\n\nclass PermissionManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.allAvailablePermissions = new Set();\n    this.state = {\n      redirect: false,\n      initiallySelectedPermissions: new Map(),\n      currentSelectedPermissions: new Map(),\n    };\n  }\n\n  componentDidMount() {\n    if (Protobuf.SvPb.Permissions) {\n      this.allAvailablePermissions = flattenProtobuf(Protobuf.SvPb.Permissions);\n      this.loadCurrentPermissions(this.props.groupPermissions);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      (prevProps.groupPermissions === undefined && this.props.groupPermissions) ||\n      prevProps.groupPermissions !== this.props.groupPermissions\n    ) {\n      this.loadCurrentPermissions(this.props.groupPermissions);\n    }\n  }\n\n  loadCurrentPermissions = (permissions) => {\n    if (permissions) {\n      const initiallySelectedPermissions = permissions;\n      const currentSelectedPermissions = cloneDeep(initiallySelectedPermissions);\n      this.setState({ initiallySelectedPermissions, currentSelectedPermissions });\n    }\n  };\n\n  onCheck(groupName, key, checked) {\n    const newPermissions = cloneDeep(this.state.currentSelectedPermissions);\n    if (!newPermissions.has(groupName)) {\n      newPermissions.set(groupName, { groupPermissions: new Set(), users: [] });\n    }\n    if (checked) {\n      newPermissions.get(groupName).groupPermissions.add(key);\n    } else {\n      newPermissions.get(groupName).groupPermissions.delete(key);\n    }\n    this.setState({ currentSelectedPermissions: newPermissions });\n  }\n\n  savePermissions = (flattenedPermissions) => {\n    const result = getGroupPermissionsFromFlattenedPermissions(flattenedPermissions);\n    this.props.proxy.setUserPermissions(result);\n  };\n\n  onSaveClicked = () => {\n    this.savePermissions(this.state.currentSelectedPermissions);\n  };\n\n  onResetClicked = () => {\n    this.setState({\n      currentSelectedPermissions: cloneDeep(this.state.initiallySelectedPermissions),\n    });\n  };\n\n  mapsAreEqual(am, bm) {\n    if (am.size !== bm.size) {\n      return false;\n    }\n    for (var a of am) {\n      if (!bm.has(a[0])) {\n        return false;\n      }\n\n      const bs = bm.get(a[0]).groupPermissions;\n      if (a[1].groupPermissions.size !== bs.size) {\n        return false;\n      }\n\n      for (var as of a[1].groupPermissions) {\n        if (!bs.has(as)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  getColGroup() {\n    const { currentSelectedPermissions } = this.state;\n    const colGroup = [];\n\n    colGroup.push(<col style={{ width: '200px' }} key={`col_permissions`}></col>);\n    currentSelectedPermissions.forEach((permissionsPerGroup, groupName) => {\n      colGroup.push(<col style={{ width: '80px' }} key={`col_${groupName}`}></col>);\n    });\n    colGroup.push(<col style={{ width: '*' }} key={`col_descriptions`}></col>);\n\n    return colGroup;\n  }\n\n  getTableHead() {\n    const { currentSelectedPermissions } = this.state;\n    const tableheader = [];\n\n    tableheader.push(\n      <td key={`header_td_permissions`}>\n        <div className=\"permission-management-permissions-header-left\">\n          <FormattedMessage id=\"permissions.permissions\" />\n        </div>\n      </td>,\n    );\n    currentSelectedPermissions.forEach((permissionsPerGroup, groupName) => {\n      tableheader.push(\n        <td key={`header_td_${groupName}`}>\n          <div className=\"permission-management-permissions-header\">{groupName}</div>\n          <div className=\"permission-management-permissions-subheader\">\n            {Array.isArray(permissionsPerGroup.users) && permissionsPerGroup.users.length > 0\n              ? `(${permissionsPerGroup.users.join(', ')})`\n              : undefined}\n          </div>\n        </td>,\n      );\n    });\n    tableheader.push(\n      <td key={`header_td_description`}>\n        <div className=\"permission-management-permissions-header\">\n          <FormattedMessage id=\"permissions.description\" />\n        </div>\n      </td>,\n    );\n\n    return <tr>{tableheader}</tr>;\n  }\n\n  getData(canEdit) {\n    const { currentSelectedPermissions } = this.state;\n    const data = [];\n    this.allAvailablePermissions.forEach((permission) => {\n      const dataRow = [];\n      dataRow.push(\n        <td key={`body_td_permission_${permission}`}>\n          <div className=\"permission-management-label\">{permission}</div>\n        </td>,\n      );\n      currentSelectedPermissions.forEach((permissionsPerGroup, groupName) => {\n        const selected = permissionsPerGroup.groupPermissions.has(permission);\n        dataRow.push(\n          <td key={`body_td_${groupName}_${permission}`}>\n            <Checkbox\n              type=\"checkbox\"\n              checked={selected}\n              name={`checkbox_${groupName}_${permission}`}\n              color=\"primary\"\n              className=\"permission-management-checkbox\"\n              onClick={(e) =>\n                canEdit && groupName !== 'sdm'\n                  ? this.onCheck(groupName, permission, e.target.checked)\n                  : undefined\n              }\n              disabled={!canEdit || groupName === 'sdm'}\n            />\n          </td>,\n        );\n      });\n      dataRow.push(\n        <td key={`body_td_description_${permission}`}>\n          <div className=\"permission-management-label\">\n            <FormattedMessage id={`permissionDescription.${permission}`} />\n          </div>\n        </td>,\n      );\n      data.push(<tr key={`body_tr_${permission}`}>{dataRow}</tr>);\n    });\n    return data;\n  }\n\n  render() {\n    const { redirect, initiallySelectedPermissions, currentSelectedPermissions } = this.state;\n    const { myPermissions } = this.props;\n\n    const canRead = canReadUserManagement(myPermissions);\n    const canEdit = canEditUserManagement(myPermissions);\n\n    if (redirect) {\n      return <Redirect to=\"/app\" />;\n    }\n\n    const hasChanges = !this.mapsAreEqual(initiallySelectedPermissions, currentSelectedPermissions);\n    const colGroup = this.getColGroup();\n    const tablehead = this.getTableHead();\n    const data = this.getData(canEdit);\n\n    return (\n      <div className=\"permission-management-wrapper\">\n        <div className=\"permission-management-fixed-header\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.setState({ redirect: true })}\n          >\n            <img src={ArrowIcon} alt=\"back\" className=\"image-item\" />\n            <FormattedMessage id=\"permissions.backToWebApp\" />\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!hasChanges}\n            onClick={this.onSaveClicked}\n          >\n            Save\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!hasChanges}\n            onClick={this.onResetClicked}\n          >\n            Reset\n          </Button>\n        </div>\n        <h1>\n          <FormattedMessage id=\"permissions.permissionManagement\" />\n        </h1>\n        <h3>\n          <FormattedMessage id=\"permissions.helpText\" />\n        </h3>\n        {canRead || canEdit ? (\n          <table className=\"permission-management-table-wrapper\">\n            <colgroup>{colGroup}</colgroup>\n            <thead>{tablehead}</thead>\n            <tbody>{data}</tbody>\n          </table>\n        ) : undefined}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  groupPermissions: state.app.groupPermissions,\n  proxy: state.app.proxy,\n  user: state.app.user,\n  myPermissions: state.app.myPermissions,\n});\n\nexport default connect(mapStateToProps, null)(PermissionManagement);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\n\nimport PermissionManagement from '../components/PermissionManagement';\nimport HelpView from '../views/HelpView';\nimport viewMappings from '../views/HelpView/viewMappings';\nimport KeyHandler from '../components/KeyHandler';\nimport translations from '../translations';\nimport { closeHelpView } from '../redux/actions';\n\nconst PermissionPage = () => {\n  const dispatch = useDispatch();\n  const { isHelpViewOpen, locale } = useSelector((state) => state.app);\n\n  return (\n    <IntlProvider locale={locale} messages={translations[locale]}>\n      <KeyHandler dispatch={dispatch} helpSection={viewMappings.PERMISSIONS}>\n        <PermissionManagement />\n        <HelpView open={isHelpViewOpen} onClose={() => dispatch(closeHelpView())}></HelpView>\n      </KeyHandler>\n    </IntlProvider>\n  );\n};\n\nexport default PermissionPage;\n","import React from 'react';\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport ClearIcon from '../../../../assets/icons/clear.svg';\n\nconst SingleParameter = ({ value, changeCallback, removeCallback, fieldType, defaultValue }) => {\n  return (\n    <TextField\n      fullWidth\n      type={fieldType}\n      variant=\"outlined\"\n      value={value || defaultValue}\n      onChange={(e) => changeCallback && changeCallback(e.target.value)}\n      InputProps={\n        removeCallback\n          ? {\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"remove\"\n                    onClick={() => removeCallback()}\n                    title=\"Remove\"\n                  >\n                    <img src={ClearIcon} alt=\"x\" />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }\n          : null\n      }\n    />\n  );\n};\n\nexport default SingleParameter;\n","import React from 'react';\n\nimport SingleParameter from '../../generic/SingleParameter';\n\nconst TextParameter = ({ value, changeCallback, removeCallback, typeName }) => {\n  return (\n    <SingleParameter\n      value={value}\n      typeName={typeName}\n      changeCallback={changeCallback}\n      removeCallback={removeCallback}\n      fieldType=\"text\"\n      defaultValue={''}\n    />\n  );\n};\n\nexport default TextParameter;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nconst ArrayParameter = ({\n  value,\n  changeCallback,\n  typeName,\n  defaultValue,\n  options,\n  labels,\n  SingleParameterComponent,\n}) => {\n  const numberOfEntries = (value && value.length) || 0;\n  const fields = [];\n\n  const addArrayEntry = () => {\n    changeCallback([...(value || []), defaultValue]);\n  };\n  const removeArrayEntry = (idx) => {\n    const copy = [...value];\n    copy.splice(idx, 1);\n    changeCallback(copy);\n  };\n\n  for (let i = 0; i < numberOfEntries; i++) {\n    fields.push(\n      <div className=\"field-container\" key={`${typeName}_array_${i}`}>\n        <div className=\"field-name-type\">\n          {i}\n          <small>{typeName}</small>\n        </div>\n        <div className=\"field-settings\">\n          <SingleParameterComponent\n            value={value[i]}\n            changeCallback={(newValue) => {\n              const copy = [...(value || [])];\n              copy[i] = newValue;\n              changeCallback(copy);\n            }}\n            options={options}\n            labels={labels}\n            removeCallback={() => removeArrayEntry(i)}\n          />\n        </div>\n      </div>,\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"field-container is-array\">\n        {fields.length ? (\n          fields\n        ) : (\n          <div className=\"field-container\">\n            <div className=\"field-name-type\">\n              <em>\n                <FormattedMessage id=\"debugger.noItemsMessage\" />\n              </em>\n            </div>\n            <div className=\"field-settings\"></div>\n          </div>\n        )}\n      </div>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => addArrayEntry()}>\n        <FormattedMessage id=\"debugger.addItemButtonText\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default ArrayParameter;\n","import React from 'react';\n\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport TextParameter from '../TextParameter';\n\nconst TextArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={''}\n      SingleParameterComponent={TextParameter}\n    />\n  );\n};\n\nexport default TextArrayParameter;\n","import React, { useEffect } from 'react';\nimport { InputAdornment, IconButton } from '@material-ui/core';\nimport OutlinedSelection from '../../../../components/OutlinedSelection';\nimport ClearIcon from '../../../../assets/icons/clear.svg';\n\nconst SelectParameter = ({ value, options, labels, changeCallback, removeCallback }) => {\n  useEffect(() => {\n    if (typeof value === 'undefined') {\n      changeCallback && changeCallback(options[0]);\n    }\n  });\n\n  let valuesWithLabels = [];\n\n  // if we have a labels array, options and labels need to be sorted together\n  // if we don't have label array, the values will be used as id and value in select\n  if (labels) {\n    options.forEach((option, idx) =>\n      valuesWithLabels.push({ option, label: labels[idx] }),\n    );\n\n    valuesWithLabels = valuesWithLabels.sort(function(a, b) {\n      return a.label.localeCompare(b.label);\n    });\n\n    options = valuesWithLabels.map((value) => value.option);\n    labels = valuesWithLabels.map((value) => value.label);\n  } else {\n    options = options.sort();\n  }\n\n  return (\n    <OutlinedSelection\n      selectedValue={value}\n      values={options}\n      labels={labels}\n      onSelectionChanged={(e) => {\n        changeCallback && changeCallback(e['param']);\n      }}\n      id=\"param\"\n      InputProps={\n        removeCallback\n          ? {\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"remove\"\n                    onClick={() => removeCallback()}\n                    title=\"Remove\"\n                  >\n                    <img src={ClearIcon} alt=\"x\" />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }\n          : null\n      }\n    />\n  );\n};\n\nexport default SelectParameter;\n","import React from 'react';\nimport SelectParameter from '../../generic/SelectParameter';\n\nconst BoolParameter = ({ value, changeCallback, removeCallback }) => {\n  return (\n    <SelectParameter\n      value={value && value !== 'false' ? 'true' : 'false'}\n      options={['true', 'false']}\n      changeCallback={(value) => changeCallback(value === 'true')}\n    />\n  );\n};\n\nexport default BoolParameter;\n","import React from 'react';\n\nimport BoolParameter from '../BoolParameter';\nimport ArrayParameter from '../../generic/ArrayParameter';\n\nconst BoolArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={false}\n      SingleParameterComponent={BoolParameter}\n    />\n  );\n};\n\nexport default BoolArrayParameter;\n","import React from 'react';\nimport SingleParameter from '../../generic/SingleParameter';\n\nconst IntegerParameter = ({ value, changeCallback, removeCallback }) => {\n  return (\n    <SingleParameter\n      value={value}\n      changeCallback={changeCallback}\n      removeCallback={removeCallback}\n      fieldType=\"number\"\n      defaultValue={0}\n    />\n  );\n};\n\nexport default IntegerParameter;\n","import React from 'react';\n\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport IntegerParameter from '../IntegerParameter';\n\nconst IntegerArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={0}\n      SingleParameterComponent={IntegerParameter}\n    />\n  );\n};\n\nexport default IntegerArrayParameter;\n","import React from 'react';\nimport SingleParameter from '../../generic/SingleParameter';\n\nconst DecimalParameter = ({ value, changeCallback, removeCallback }) => {\n  return (\n    <SingleParameter\n      value={value}\n      changeCallback={changeCallback}\n      removeCallback={removeCallback}\n      fieldType=\"number\"\n      defaultValue={0}\n    />\n  );\n};\n\nexport default DecimalParameter;\n","import React from 'react';\n\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport DecimalParameter from '../DecimalParameter';\n\nconst DecimalArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={0}\n      SingleParameterComponent={DecimalParameter}\n    />\n  );\n};\n\nexport default DecimalArrayParameter;\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nconst BytesParameter = ({ value, changeCallback, removeCallback }) => {\n  return (\n    <TextField\n      fullWidth\n      type=\"file\"\n      variant=\"outlined\"\n      value={value || ''}\n      onChange={(e) => changeCallback && changeCallback(e.target.value)}\n    />\n  );\n};\n\nexport default BytesParameter;\n","import React from 'react';\nimport SelectParameter from '../../generic/SelectParameter';\n\nconst EnumParameter = ({ value, options, changeCallback, removeCallback }) => {\n  return (\n    <SelectParameter\n      value={String(value)}\n      options={Object.values(options)}\n      labels={Object.keys(options)}\n      changeCallback={(value) => changeCallback(value)}\n    />\n  );\n};\n\nexport default EnumParameter;\n","import React from 'react';\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport SelectParameter from '../../generic/SelectParameter';\n\nconst EnumArrayParameter = ({ value, options, changeCallback }) => {\n  return (\n    <ArrayParameter\n      value={(value || []).map((i) => String(i))}\n      changeCallback={changeCallback}\n      options={Object.values(options)}\n      labels={Object.keys(options)}\n      SingleParameterComponent={SelectParameter}\n    />\n  );\n};\n\nexport default EnumArrayParameter;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { cloneDeep, get, set } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport Protobuf from '../../protobuf/Protobuf';\n\nimport './style.scss';\nimport TextParameter from './specialized/TextParameter';\nimport TextArrayParameter from './specialized/TextArrayParameter';\nimport BoolParameter from './specialized/BoolParameter';\nimport BoolArrayParameter from './specialized/BoolArrayParameter';\nimport IntegerParameter from './specialized/IntegerParameter';\nimport IntegerArrayParameter from './specialized/IntegerArrayParameter';\nimport DecimalParameter from './specialized/DecimalParameter';\nimport DecimalArrayParameter from './specialized/DecimalArrayParameter';\nimport BytesParameter from './specialized/BytesParameter';\nimport EnumParameter from './specialized/EnumParameter';\nimport EnumArrayParameter from './specialized/EnumArrayParameter';\nimport SelectParameter from './generic/SelectParameter';\n\nconst RequestParameter = ({ name, onResponse }) => {\n  const protobuf = useSelector((state) => state.app.protobuf);\n  const [parameters, setParameters] = useState({});\n  const [nestedParamsMap, setNestedParamsMap] = useState({});\n  const [currentRequestName, setCurrentRequestName] = useState('');\n\n  useEffect(() => {\n    if (currentRequestName === name) return;\n\n    setParameters({});\n    setNestedParamsMap({});\n    setCurrentRequestName(name);\n  }, [name, currentRequestName]);\n\n  if (!Protobuf.SvPb[name]) {\n    return <div></div>;\n  }\n\n  const sendRequest = async () => {\n    onResponse('');\n    if (name === 'MyDummyRequest') {\n      onResponse(parameters);\n      return;\n    }\n    const request = Protobuf.SvPb[name].create(parameters);\n    console.dir(parameters);\n    try {\n      const response = await protobuf.request(request);\n      onResponse(response);\n    } catch (e) {\n      onResponse(`An error occured: ${e.message}`);\n    }\n  };\n\n  const deepValue = (obj, path) => {\n    if (!path) return obj;\n    return get(obj, path);\n  };\n\n  const getStringControl = (field, currentPath, currentValue) => {\n    return (\n      <TextParameter\n        key={`txt_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getStringArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <TextArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getBoolControl = (field, currentPath, currentValue) => {\n    return (\n      <BoolParameter\n        key={`bool_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getBoolArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <BoolArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getIntegerControl = (field, currentPath, currentValue) => {\n    return (\n      <IntegerParameter\n        key={`integer_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getIntegerArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <IntegerArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getDecimalControl = (field, currentPath, currentValue) => {\n    return (\n      <DecimalParameter\n        key={`decimal_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getDecimalArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <DecimalArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getBytesControl = (field, currentPath, currentValue) => {\n    return (\n      <BytesParameter\n        key={`bytes_${field.name}`}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getEnumControl = (type, field, currentPath, currentValue) => {\n    return (\n      <EnumParameter\n        value={currentValue}\n        options={type.values}\n        changeCallback={(value) => {\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, value);\n        }}\n      ></EnumParameter>\n    );\n  };\n\n  const getArrayEnumControl = (type, field, currentPath, currentValue) => {\n    return (\n      <EnumArrayParameter\n        value={currentValue}\n        options={type.values}\n        changeCallback={(value) => {\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, value);\n        }}\n      ></EnumArrayParameter>\n    );\n  };\n\n  const addArrayEntryForType = (currentPath, currentValue) => {\n    const newValue = currentValue ? [...currentValue] : [];\n    newValue.push({});\n    changeValue(currentPath, newValue);\n  };\n\n  const getControlForField = (field, isArray, currentPath) => {\n    const currentValue = deepValue(\n      parameters,\n      currentPath ? `${currentPath}.${field.name}` : field.name,\n    );\n\n    switch (field.type) {\n      case 'string':\n        if (isArray) {\n          return getStringArrayControl(field, currentPath, currentValue);\n        }\n\n        return getStringControl(field, currentPath, currentValue);\n      case 'bool':\n        if (isArray) {\n          return getBoolArrayControl(field, currentPath, currentValue);\n        }\n\n        return getBoolControl(field, currentPath, currentValue);\n      case 'int32':\n      case 'int64':\n      case 'uint32':\n      case 'uint64':\n      case 'sint32':\n      case 'sint64':\n      case 'fixed32':\n      case 'fixed64':\n      case 'sfixed32':\n      case 'sfixed64':\n        if (isArray) {\n          return getIntegerArrayControl(field, currentPath, currentValue);\n        }\n\n        return getIntegerControl(field, currentPath, currentValue);\n      case 'double':\n      case 'float':\n        if (isArray) {\n          return getDecimalArrayControl(field, currentPath, currentValue);\n        }\n\n        return getDecimalControl(field, currentPath, currentValue);\n      case 'bytes':\n        return getBytesControl(field, currentPath, currentValue);\n      default:\n        const type = Protobuf.SvPb.lookup(field.type);\n        if (field.type.endsWith('Enum')) {\n          if (isArray) {\n            return getArrayEnumControl(type, field, currentPath, currentValue);\n          }\n\n          return getEnumControl(type, field, currentPath, currentValue);\n        }\n\n        const newPath = currentPath ? `${currentPath}.${field.name}` : field.name;\n\n        if (isArray) {\n          return getArrayControlsForType(type, newPath, currentValue);\n        }\n\n        return getControlsForType(type, newPath, currentValue);\n    }\n  };\n\n  const changeValue = (path, value) => {\n    const newParams = cloneDeep(parameters);\n    set(newParams, path, value);\n    setParameters(newParams);\n  };\n\n  const getControlsForType = (type, path) => {\n    const controls = [];\n    const fieldKeys = Object.keys(type.fields);\n\n    if (type.oneofs) {\n      Object.keys(type.oneofs).forEach((oneOfKey) => {\n        controls.push(\n          <div className=\"field-container\" key={`div_${oneOfKey}`}>\n            <div className=\"field-name-type\">\n              {oneOfKey}\n              <small>oneof type</small>\n            </div>\n            <div className=\"field-settings\">\n              <SelectParameter\n                value={nestedParamsMap[`${path}.${oneOfKey}`]}\n                options={type.oneofs[oneOfKey].oneof}\n                changeCallback={(value) => {\n                  setNestedParamsMap({\n                    ...nestedParamsMap,\n                    [`${path}.${oneOfKey}`]: value,\n                  });\n                }}\n              ></SelectParameter>\n            </div>\n          </div>,\n        );\n      });\n    }\n\n    fieldKeys.forEach((fieldkey) => {\n      const field = type.fields[fieldkey];\n      if (!field) return;\n\n      if (field.partOf && field.name !== nestedParamsMap[`${path}.${field.partOf.name}`]) {\n        return;\n      }\n\n      controls.push(\n        <div className=\"field-container\" key={`div_${field.name}`}>\n          <div className=\"field-name-type\">\n            {field.name}\n            <small>\n              {field.rule} {field.type}\n              {field.required ? '*' : ''}\n            </small>\n          </div>\n          <div className=\"field-settings\">\n            {getControlForField(field, field.rule === 'repeated', path)}\n          </div>\n        </div>,\n      );\n    });\n\n    if (!fieldKeys.length && path.length)\n      controls.push(\n        <div className=\"field-container\" key={`div_type.name`}>\n          <div className=\"field-name-type\">\n            <em>\n              <FormattedMessage id=\"debugger.nothingToConfigureMessage\"></FormattedMessage>\n            </em>\n          </div>\n          <div className=\"field-settings\"></div>\n        </div>,\n      );\n\n    return controls;\n  };\n\n  const getArrayControlsForType = (type, path, value) => {\n    const controls = [];\n    (value || []).forEach((_, idx) => {\n      controls.push(\n        <div className=\"field-container\" key={`${type.name}_array_${idx}`}>\n          <div className=\"field-name-type\">\n            {idx}\n            <small>{type.name}</small>\n          </div>\n          <div className=\"field-settings\">\n            {getControlsForType(type, path ? `${path}.${idx}` : idx, value[idx])}\n          </div>\n        </div>,\n      );\n    });\n\n    return (\n      <div>\n        <div className=\"field-container is-array\">\n          {controls.length ? (\n            controls\n          ) : (\n            <div className=\"field-container\">\n              <div className=\"field-name-type\">\n                <em>\n                  <FormattedMessage id=\"debugger.noItemsMessage\" />\n                </em>\n              </div>\n              <div className=\"field-settings\"></div>\n            </div>\n          )}\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => addArrayEntryForType(type, path, value)}\n        >\n          Add\n        </Button>\n      </div>\n    );\n  };\n\n  const fields = getControlsForType(Protobuf.SvPb[name], '');\n  return (\n    <div className=\"request-parameters-container\">\n      <div className=\"request-name-type\">\n        {name}\n        <small>Request</small>\n      </div>\n      <div className=\"request-parameters-fields-container\">\n        {fields && fields.length ? fields : <FormattedMessage id=\"debugger.noParametersMessage\" />}\n      </div>\n\n      <Button\n        className=\"send-button\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => sendRequest()}\n      >\n        <FormattedMessage id=\"debugger.sendRequest\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default RequestParameter;\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport Product from '../../protobuf/Product';\n\nimport './style.scss';\n\nconst RequestedResponseVisualizer = ({ response }) => {\n  const [imageUrl, setImageUrl] = useState('');\n  const [fileData, setFileData] = useState('');\n\n  useEffect(() => {\n    if (response && response.imageData) {\n      const product = new Product({\n        history: null,\n        trigger: null,\n        isReject: false,\n      });\n      setImageUrl(product.buildUrl(response.imageData));\n    } else {\n      setImageUrl('');\n    }\n  }, [response]);\n\n  useEffect(() => {\n    if (response && response.fileData) {\n      const blob = new Blob(response.fileData, { type: 'octet/stream' });\n      setFileData(window.URL.createObjectURL(blob));\n    } else {\n      setFileData('');\n    }\n  }, [response]);\n\n  const copyResponseToClipboard = async () => {\n    if (!navigator.clipboard) {\n      // fallback code possible, but I think not needed as we use the debugger only\n      return;\n    }\n    await navigator.clipboard.writeText(result);\n  };\n\n  const result = response ? JSON.stringify(response, null, 2) : '';\n\n  return (\n    <div className=\"response-body-container\">\n      <div className=\"response-body-header\">\n        <div className=\"response-name-type\">\n          {response ? response.constructor.name : 'Response'}\n          <small>Response</small>\n        </div>\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={copyResponseToClipboard}\n            disabled={!result}\n          >\n            <FormattedMessage id=\"debugger.copyToClipboard\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"response-content\">\n        {imageUrl ? <img src={imageUrl} alt=\"\" /> : undefined}\n        {fileData ? <a href={fileData}>Download</a> : undefined}\n        <pre className=\"response-formatter\">{result}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default RequestedResponseVisualizer;\n","import React, { useEffect, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { TextField } from '@material-ui/core';\n\nimport './style.scss';\n\nconst RequestsList = ({ proto, chooseCallback }) => {\n  const [filter, setFilter] = useState('');\n  const [active, setActive] = useState(null);\n\n  const requests = Object.keys(proto)\n    .sort()\n    .reduce((requests, key) => {\n      if (!key.toLowerCase().includes(filter)) return requests;\n\n      return [\n        ...requests,\n        <li\n          key={`li_${key}`}\n          requestname={key}\n          className={active === key ? 'active' : ''}\n          onClick={() => {\n            chooseCallback(key);\n            setActive(key);\n          }}\n        >\n          {key}\n        </li>,\n      ];\n    }, []);\n\n  useEffect(() => {\n    if (!active) {\n      chooseCallback(requests[0].props.requestname);\n      setActive(requests[0].props.requestname);\n    }\n  }, [active, chooseCallback, requests]);\n\n  return (\n    <div className=\"requests-list\">\n      <div className=\"request-list-header\">\n        <FormattedMessage id=\"debugger.requestsListHeader\" />\n        <small>Choose one from the list below</small>\n      </div>\n      <div className=\"requests-filter\">\n        <TextField\n          fullWidth\n          type=\"text\"\n          variant=\"outlined\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value.toLowerCase())}\n          placeholder=\"Search...\"\n        />\n      </div>\n      <div className=\"requests\">\n        <ul>{requests}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default RequestsList;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Protobuf from '../../protobuf/Protobuf';\nimport RequestParameter from '../RequestParameter';\nimport RequestedResponseVisualizer from '../RequestedResponseVisualizer';\nimport { Button } from '@material-ui/core';\nimport RequestsList from '../RequestsList';\nimport ArrowIcon from '../../assets/icons/back.svg';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\n\nconst Debugger = () => {\n  const [currentRequest, setCurrentRequest] = useState('');\n  const [response, setResponse] = useState(null);\n\n  const filteredProto = Object.keys(Protobuf.SvPb)\n    .sort()\n    .reduce((requests, key) => {\n      if (!key.endsWith('Request')) return requests;\n      if (key.endsWith('StreamRequest')) return requests;\n      if (\n        Protobuf.SvPb[key].filename.includes('InspectionCommands') &&\n        key !== 'InspectionCmdRequest'\n      )\n        return requests;\n      if (Protobuf.SvPb[key].filename.includes('ConfigCommands') && key !== 'ConfigCommandRequest')\n        return requests;\n\n      return { ...requests, [key]: Protobuf.SvPb[key] };\n    }, {});\n\n  return (\n    <div className=\"debugger-wrapper\">\n      <div className=\"debugger-header\">\n        <Button component={Link} variant=\"contained\" color=\"primary\" to=\"/app\">\n          <img src={ArrowIcon} alt=\"back\" className=\"image-item\" />\n          <FormattedMessage id=\"debugger.backToWebApp\" />\n        </Button>\n      </div>\n      <div className=\"request-list-container\">\n        <RequestsList\n          proto={filteredProto}\n          chooseCallback={(key) => {\n            setCurrentRequest(key);\n            setResponse(null);\n          }}\n        />\n      </div>\n      <div className=\"request-container\">\n        <RequestParameter name={currentRequest} onResponse={(response) => setResponse(response)} />\n      </div>\n      <div className=\"response-container\">\n        <RequestedResponseVisualizer response={response} />\n      </div>\n    </div>\n  );\n};\n\nexport default Debugger;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\nimport translations from '../translations';\n\nimport Debugger from '../components/Debugger';\n\nconst DebuggerPage = () => {\n  const { locale } = useSelector((state) => state.app);\n  return (\n    <IntlProvider locale={locale} messages={translations[locale]}>\n      <Debugger />\n    </IntlProvider>\n  );\n};\n\nexport default DebuggerPage;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport HmiLoginPage from './pages/HmiLoginPage';\nimport LogoutPage from './pages/LogoutPage';\nimport SVObserver from './pages/SVObserver';\nimport PermissionPage from './pages/PermissionPage';\nimport DebuggerPage from './pages/DebuggerPage';\n\nconst App = ({ user, authToken, onLoggedOut }) => {\n  const dispatch = useDispatch();\n  dispatch({\n    type: 'LOG_IN',\n    authToken,\n    user,\n  });\n\n  return (\n    <Router>\n      <div>\n        <Route exact path={'/'} render={() => <Redirect to=\"/app\" />} />\n        <Route\n          path={'/app'}\n          render={(props) => <SVObserver {...props} onLoggedOut={onLoggedOut} />}\n        />\n        <Route path={'/hmi-v1'} component={HmiLoginPage} />\n        <Route path={'/permissions'} component={PermissionPage} />\n        <Route\n          path={'/logout'}\n          render={(props) => <LogoutPage {...props} onLoggedOut={onLoggedOut} />}\n        />\n        <Route path={'/debugger'} component={DebuggerPage} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { logIn } from '../utils/authentication';\n\nconst paperStyle = {\n  width: 400,\n  margin: 20,\n  padding: 25,\n  display: 'inline-block',\n};\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      password: null,\n    };\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    logIn(this.state.username, this.state.password)\n      .then((data) => this.props.onLogin(data))\n      .catch(() => this.setState({ loginFailed: true }));\n  };\n\n  render() {\n    return (\n      <div className=\"flex items-center justify-center\" id=\"login-page\">\n        <Paper elevation={5} style={paperStyle}>\n          {this.state.loginFailed ? <p className=\"red\">Log In failed</p> : null}\n          <form onSubmit={this.onSubmit}>\n            <TextField\n              label=\"Username\"\n              style={{ width: '100%' }}\n              margin=\"dense\"\n              type=\"username\"\n              onChange={(e) => {\n                this.setState({\n                  username: e.target.value,\n                });\n              }}\n            />\n            <br />\n            <TextField\n              label=\"Password\"\n              style={{ width: '100%' }}\n              autoComplete=\"current-password\"\n              margin=\"dense\"\n              type=\"password\"\n              onChange={(e) => {\n                this.setState({\n                  password: e.target.value,\n                });\n              }}\n            />\n            <br />\n            <br />\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              LogIn\n            </Button>\n          </form>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  onLogin: PropTypes.func.isRequired,\n};\n\nexport default LoginPage;\n","import React, { useState, useEffect } from 'react';\nimport thunk from 'redux-thunk';\nimport 'react-tippy/dist/tippy.css';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\nimport Protobuf from './protobuf/Protobuf';\nimport createReducers from './redux/reducers';\nimport {\n  saveClientChunk,\n  setProtobufStaticInitialized,\n  setBrowserWindowVisibility,\n} from './redux/actions';\n\nimport App from './App';\nimport LoginPage from './pages/LoginPage';\nimport { loadState } from './utils/localStorage';\nimport env from './utils/env';\n\nimport './App.scss';\nimport './css/utils.css';\nimport './css/reset.scss';\n\nconst PreLogin = () => {\n  const [user, setUser] = useState(null);\n  const [authToken, setAuthToken] = useState('');\n  const [store, setStore] = useState(null);\n\n  const onLoggedIn = (data) => {\n    if (data && data.user && data.authToken) {\n      setUser(data.user);\n      setAuthToken(data.authToken);\n    }\n  };\n\n  const onLoggedOut = () => {\n    setUser(null);\n    setAuthToken('');\n  };\n\n  const create = async () => {\n    const autoSave = (store) => (next) => (action) => {\n      if (env.enableAutoSave) {\n        // TODO: for now trigger an auto-save whenever dispatching a \"SET_*\" action\n        const state = store.getState();\n        if (\n          action.type.substr(0, 4) === 'SET_' &&\n          !state.app.saveOperationInProcess &&\n          state.app.protobuf\n        ) {\n          // only store if we have a valid protobuf connection\n          const { currentClientChunkRevision, protobuf, user } = state.app;\n          store.dispatch(saveClientChunk(protobuf, user, state, currentClientChunkRevision));\n        }\n      }\n      return next(action);\n    };\n\n    const store = createStore(\n      createReducers({\n        websocketUrl: env.websocketServerUrl,\n        dispatch: (action) => store.dispatch(action),\n      }),\n      compose(\n        applyMiddleware(thunk, autoSave),\n        window.devToolsExtension ? window.devToolsExtension() : (f) => f,\n      ),\n    );\n\n    await Protobuf.init();\n    store.dispatch(setProtobufStaticInitialized());\n\n    setStore(store);\n  };\n\n  useEffect(() => {\n    if ((user && authToken) || window.location.pathname === '/hmi-v1') {\n      create();\n    }\n  }, [user, authToken]);\n\n  const fromLocalStorage = loadState();\n  if (fromLocalStorage) {\n    if (fromLocalStorage.user && !user) {\n      setUser(fromLocalStorage.user);\n    }\n\n    if (fromLocalStorage.authToken && !authToken) {\n      setAuthToken(fromLocalStorage.authToken);\n    }\n  }\n\n  if (!(user && authToken) && window.location.pathname !== '/hmi-v1') {\n    return <LoginPage onLogin={(data) => onLoggedIn(data)} />;\n  } else {\n    if (!store) {\n      return <div></div>;\n    }\n\n    document.addEventListener('visibilitychange', function () {\n      if (document.visibilityState === 'visible') {\n        store.dispatch(setBrowserWindowVisibility(true));\n        clearTimeout(this.hibernateTimer);\n      } else {\n        this.hibernateTimer = setTimeout(() => {\n          store.dispatch(setBrowserWindowVisibility(false));\n        }, 10000);\n      }\n    });\n\n    return (\n      <Provider store={store}>\n        <App user={user} authToken={authToken} onLoggedOut={() => onLoggedOut()} />\n      </Provider>\n    );\n  }\n};\n\nexport default PreLogin;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// MUI Seidenader Default Colors\nconst GREY135 = 'rgb(135, 135, 135)';\nconst muiTheme = createMuiTheme({\n  palette: {\n    primary: { main: GREY135 },\n  },\n  typography: {\n    useNextVariants: true,\n    htmlFontSize: 10,\n  },\n});\n\nexport default muiTheme;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport 'react-tippy/dist/tippy.css';\nimport PreLogin from './PreLogin';\nimport muiTheme from './theme';\n\nimport './css/app.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={muiTheme}>\n      <PreLogin />\n    </MuiThemeProvider>\n    ,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}