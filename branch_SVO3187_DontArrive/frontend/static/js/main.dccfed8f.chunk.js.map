{"version":3,"sources":["utils/downloader.js","components/ConfirmDialog/index.js","utils/env.js","utils/jsonMapper.js","utils/stringChunker.js","protobuf/Configuration.js","assets/icons/clear.svg","assets/icons/close.svg","views/HelpView/index.js","components/typo/Heading.js","views/HelpView/viewMappings.js","protobuf/ConfigurationLock.js","utils/authentication.js","assets/icons/pause.svg","assets/icons/play.svg","utils/permissions.js","components/OutlinedSelection/index.js","protobuf/Product.js","components/buttons/ToggleButton/index.js","assets/icons/help.svg","assets/icons/download.svg","assets/icons/info.svg","assets/icons/show.svg","assets/icons/plus.svg","assets/icons/save.svg","assets/icons/delete.svg","assets/icons/image.svg","assets/logo/logo.svg","components/layout/Logo/index.js","components/OutsideClickHandler/index.js","protobuf/Mapper.js","components/ObjectSelector/index.js","components/layout/Container/index.js","components/Protobuf/ProxyType.js","utils/OverlayRenderer.js","views/ImageStripView/components/FilmStrip/index.js","views/ImageStripView/index.js","assets/icons/downloadWithOverlays.svg","assets/icons/fit-to-height.svg","assets/icons/fit-to-width.svg","assets/icons/one.svg","assets/icons/overlay-list.svg","utils/reduxHelper.js","components/OverlayList/index.js","views/ImageView/components/ImageEditor.js","views/ImageView/components/ImageInfo.js","utils/propHelper.js","views/ImageView/index.js","assets/icons/show-off.svg","assets/icons/drag.svg","components/DraggableTable/index.js","views/ListView/components/List/AliasEditor.js","views/ListView/index.js","assets/icons/delete-dustbin.svg","views/ParameterView/components/Overlay/OverlayPropertyList.js","views/ParameterView/components/Overlay/VariableSelection.js","views/ParameterView/components/Overlay/index.js","views/ParameterView/index.js","assets/icons/before.svg","components/layout/ScrollContainer/index.js","views/RecipeView/index.js","assets/icons/archive.svg","assets/icons/arrow-top-right.svg","assets/icons/collapse-all.svg","assets/icons/copy.svg","assets/icons/cut.svg","assets/icons/cylindrical-wrap.svg","assets/icons/expand-all.svg","assets/icons/external.svg","assets/icons/group.svg","assets/icons/load-image.svg","assets/icons/loop.svg","assets/icons/palette.svg","assets/icons/paste.svg","assets/icons/perspective.svg","assets/icons/polar-transformation.svg","assets/icons/resize.svg","assets/icons/shift.svg","assets/icons/statistics.svg","assets/icons/table-analyzer.svg","assets/icons/table.svg","assets/icons/transformation.svg","assets/icons/undo-disabled.svg","assets/icons/undo.svg","assets/icons/window.svg","views/ToolsetView/components/ToolSetBar/index.js","assets/icons/down.svg","assets/icons/take-over.svg","assets/icons/up.svg","views/ParameterView/components/Filter/index.js","views/ParameterView/components/Filter/types/AvailableFilterListType.js","views/ToolsetView/components/ToolSetup.js","views/ToolsetView/components/TreebeardStyle.js","views/ToolsetView/index.js","views/ViewSetFactory.js","assets/icons/regression.svg","assets/icons/run.svg","assets/icons/stop.svg","assets/icons/test.svg","utils/modes.js","components/ActionBar/index.js","components/buttons/IconButton/index.js","views/TopNavigation/components/UserInfo/index.js","assets/icons/logout.svg","assets/icons/permissions.svg","assets/icons/shortcut-help.svg","types/ActionBarType.js","assets/icons/upload.svg","assets/icons/user.svg","views/AboutView/index.js","protobuf/ProtobufConnector.js","protobuf/WebsocketConnector.js","protobuf/Proxy.js","utils/defaultPermissions.js","views/ShortcutView/components/ShortcutListItem/index.js","views/ShortcutView/components/ShortcutList/index.js","views/ShortcutView/shortcuts.js","views/ShortcutView/index.js","protobuf/ProductHistory.js","protobuf/ProductHistoryManager.js","protobuf/InspectionSubscription.js","protobuf/SubscriptionManager.js","components/Dialog/index.js","utils/localStorage.js","utils/logger.js","utils/objectValidator.js","protobuf/Observable.js","protobuf/Protobuf.js","assets/icons/back.svg","protobuf/Utils.js","utils/clientChunkManager.js","redux/actions/index.js","translations/de.js","translations/en.js","translations/index.js","components/RequestParameter/generic/SelectParameter/index.js","components/RequestParameter/generic/ArrayParameter/index.js","components/RequestParameter/specialized/BoolParameter/index.js","components/RequestParameter/specialized/BoolArrayParameter/index.js","components/RequestParameter/specialized/BytesParameter/index.js","components/RequestParameter/generic/SingleParameter/index.js","components/RequestParameter/specialized/DecimalParameter/index.js","components/RequestParameter/specialized/DecimalArrayParameter/index.js","components/RequestParameter/specialized/EnumArrayParameter/index.js","components/RequestParameter/specialized/EnumParameter/index.js","components/RequestParameter/specialized/IntegerParameter/index.js","components/RequestParameter/specialized/IntegerArrayParameter/index.js","components/RequestParameter/specialized/TextParameter/index.js","components/RequestParameter/specialized/TextArrayParameter/index.js","components/RequestParameter/index.js","components/RequestedResponseVisualizer/index.js","components/RequestsList/index.js","components/Debugger/index.js","pages/DebuggerPage.js","pages/HmiLoginPage.js","pages/LogoutPage.js","components/KeyHandler.js","components/PermissionManagement/index.js","pages/PermissionPage.js","components/ModalNotification.js/index.js","components/Protobuf/ProtobufType.js","assets/icons/view-manager.svg","assets/icons/check.svg","assets/icons/export.svg","assets/icons/import.svg","components/InformationDialog/index.js","views/ViewSetManager/index.js","views/ViewSet/types.js","components/NavigationItem/index.js","views/BottomNavigation/components/PresetSlider/components/PresetButton/index.js","views/BottomNavigation/components/PresetSlider/index.js","views/BottomNavigation/index.js","views/TopNavigation/components/DateTime/index.js","assets/icons/play-multiple.svg","views/TopNavigation/components/InspectionStateSwitch/index.js","assets/icons/language.svg","views/TopNavigation/components/LanguageChooser/index.js","assets/icons/icons8-lock.svg","assets/icons/icons8-padlock.svg","views/TopNavigation/components/LockStateHandler/alertDialog.js","views/TopNavigation/components/LockStateHandler/takeoverDialog.js","views/TopNavigation/components/LockStateHandler/index.js","views/TopNavigation/components/ModeSwitch/index.js","assets/icons/description.svg","views/TopNavigation/components/StatusReport/index.js","views/TopNavigation/index.js","views/NoSVOConfigurationLoadedView/index.js","components/ListSelection/index.js","views/ViewSelection/components/InspectionSelection/index.js","assets/icons/filmstrip.svg","assets/icons/list.svg","assets/icons/parameter.svg","assets/icons/toolset.svg","views/ViewSelection/components/ViewTypeSelection/index.js","views/ViewSelection/index.js","views/ViewSet/SVOView.js","views/ViewSet/index.js","pages/SVObserver.js","App.js","pages/LoginPage.js","redux/reducers/appReducer.js","redux/reducers/toolsetReducer.js","redux/reducers/viewDataReducer.js","redux/reducers/viewSetReducer.js","redux/reducers/index.js","PreLogin.js","theme.js","reportWebVitals.ts","index.tsx","assets/icons/edit.svg","components/MenuList/index.js"],"names":["forceDownload","data","fileName","link","document","createElement","download","href","body","appendChild","click","removeChild","logger","info","ConfirmDialog","this","props","onClose","open","title","message","className","color","onClick","id","Component","env","authEndpoint","url","parsedUrl","parse","window","location","protocol","replace","host","getEndpoint","process","websocketServerUrl","enableAutoSave","replacerMapToJson","key","value","originalObject","Map","dataType","reviverJsonToMap","chunkSubstr","str","size","numChunks","Math","ceil","length","chunks","Array","i","o","substr","extractConfigName","filename","slashIdx","lastIndexOf","dotIdx","getConfigName","protobuf","a","request","Protobuf","SvPb","GetConfigurationInfoRequest","create","getInspections","inspectionsReq","GetInspectionsRequest","inspectionsRes","inspections","map","inspection","name","error","getInspectionIds","getInspectionNames","cleanObjectSelectorNodeRecursively","node","type","objectIDIndex","children","selected","cleanedChildren","startsWith","endIdx","indexOf","parseInt","parseObjectIdIndex","getIdNameMappingForInspection","inspectionId","inspectionName","req","GetObjectSelectorItemsRequest","areas","SearchArea","toolsetItems","inspectionID","instanceID","attribute","ObjectAttributes","viewable","wholeArray","ObjectSelectorType","allValueObjects","attributesAllowed","res","tree","entries","queue","slice","head","shift","set","fullLocation","push","getObjectSelectorItemsForInspection","getObjectSelectorImagesForInspection","allImageObjects","archivableImage","getVersion","requestClass","response","version","getPerInspection","inspectionIds","inspectionNames","fn","itemsByInspectionId","item","getConfigurationTree","GetConfigurationTreeRequest","mapInspectionIdtoToolset","inspectionToolsetMappings","configurationTree","isObjectValid","forEach","objectID","toolSetId","getToolSetId","InspectionCmdRequest","undefined","getObjectIdRequest","getObjectIdResponse","objectId","Configuration","config","filterArrayValuesFromTree","ii","stack","pop","firstChildId","idNameMappings","objectSelectorItems","objectSelectorImages","versions","Object","keys","assign","isConnected","Promise","all","promises","configName","err","GetSVObserverVersionRequest","GetGatewayVersionRequest","GetWebAppVersionRequest","svObserverVersion","gatewayVersion","webAppVersion","find","mappings","get","mapping","warn","chunksString","localStorage","getItem","CONFIGURATION_CHUNK_LIST","chunkList","split","configString","join","decompressedConfig","LZString","decompress","JSON","configuration","configInfo","stringifiedConfig","compress","stringify","configChunks","configChunkNames","chunk","chunkName","CONFIGURATION_CHUNK_TEMPLATE","setItem","CONFIG_INFO","HelpView","helpUrl","focusedViewType","locale","isFullscreen","style","width","height","src","defaultProps","connect","state","app","Heading","intlId","React","Views","PARAMETER_VIEW","LIST_VIEW","IMAGE_VIEW","PERMISSIONS","DEBUGGER","ConfigurationLock","lock","lockId","takeoverId","owner","takeoverUser","lockDescription","takeoverMessage","status","lockedInSameAppInstance","isTakeoverAttempt","configAlreadyLocked","isWaitingForResponse","ownerRejectedTakeover","user","username","isLocked","isSameUserAsOwner","notification","description","logIn","password","axios","post","loginRes","accessToken","authenticate","authRes","authToken","claims","jwtDecode","pick","logOut","notifyGateway","removeProxy","flattenProtobuf","oldObject","permissions","Set","flattenProtobufRec","currentObject","parentPath","nested","currKey","toLowerCase","currPath","fields","viewTypeProtobuf","lookup","values","viewPath","getViewName","addFieldValues","path","field","add","flattenPermissionsRec","isArray","entry","createObjectFromFlattenedPermissions","obj","v","k","getViewId","substring","view","index","findIndex","getGroupPermissionsFromFlattenedPermissions","flattenedPermissions","result","groupEntry","permissionForUser","groupPermissions","permission","viewType","canSaveConfig","myPermissions","has","canReadLogs","canReadViewSet","canEditViewSet","canDeleteViewSet","canAddImageView","canReadImageView","canEditImageView","canDeleteImageView","canAddListView","canReadListView","canEditListView","canDeleteListView","canAddImageStripView","canReadImageStripView","canEditImageStripView","canDeleteImageStripView","canAddParameterView","canReadParameterView","canEditParameterView","canDeleteParameterView","canAddToolSetView","canReadToolSetView","canEditToolSetView","canDeleteToolSetView","canReadSVOMode","canEditSVOMode","canReadInspectionState","canEditInspectionState","canReadUserManagement","canEditUserManagement","canReadSVOConfiguration","canWriteSVOConfiguration","OutlinedSelection","labelWidth","renderOptions","labels","counter","setState","InputLabelRef","offsetWidth","selectedValue","classes","disabled","variant","htmlFor","ref","outlined","label","native","onChange","e","onSelectionChanged","target","root","input","select","withStyles","fontSize","paddingTop","paddingBottom","transform","Product","history","trigger","isReject","useCount","images","imageId","checkNotReleasedYet","imageIds","valueId","valueIds","toString","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","byteNumbers","charCodeAt","byteArray","Uint8Array","blob","Blob","URL","createObjectURL","imagePromises","image","overlays","rgbData","initImage","valueStr","getValueFromVariant","buildImage","domImage","initOverlayImages","overlayImages","resolve","reject","arrayBufferView","domURL","self","webkitURL","Image","onload","onerror","revokeObjectURL","overlaysDesc","overlay","shapeGroups","shapeGroup","shapes","shape","then","releaseProduct","Error","releaseImages","clear","released","releaseImage","overlayImage","remove","ToggleButton","intl","iconUrl","onClickHandler","intlIdAlternative","iconUrlAlternative","onClickHandlerAlternative","showAlternative","tooltip","messages","Logo","alt","OutsideClickHandler","onClickOutside","wrappedNode","contains","onOutsideClick","addEventListener","removeEventListener","mapProtobufDeviceModeToWebAppMode","deviceMode","DeviceModeType","available","modes","unknownMode","runMode","stopMode","regressionMode","testMode","editMode","modeChanging","mapWebAppModeToProtobufDeviceMode","mode","mapLogLevelNameToProtobufLogSeverity","levelName","LogSeverity","trace","debug","warning","NUMBER_OF_SELECTABLE_VALUES","ObjectSelector","expandedKeys","expandedFilteredKeys","checkedKeys","filteredCheckedKeys","inputValue","filteredLocations","filteredTree","countedVisibleValues","countedPossibleValues","selectionLimitReached","halfChecked","setSelection","selection","setExpandedKeys","onExpand","onCheck","checkProps","limitedCheckedKeys","limitCheckedKeys","checkUnselectingAll","updateCheckedKeys","ensureSingleSelection","setChangedIds","limit","condition","abs","checkedNode","includes","newSelectedKeys","filter","newDeselectedKeys","union","singleSelect","ids","filteredIds","checkedLocation","getSelectedLocation","onChangeFilter","event","initialChars","cutFilterIgnoreWords","ctx","abortRecursion","filteredKeys","countSelection","countCtx","countMatches","copy","filterNodesRecursively","countMatchingNodesRecursively","filteredInput","filterIgnore","chars","shadowChildren","positions","remainingChars","consumeChars","childMatches","child","isMatchingSubtree","shadowNode","createFilteredShadowNode","prevIdx","idx","styledText","highlightAtPositions","word","charAt","shortId","generate","createTreeNodes","loop","disableCheckbox","childProps","prevProps","expanded","rootNode","visibleCheckedKeys","treeNodes","TextField","InputLabelProps","checkable","showLine","showIcon","selectable","Container","PropTypes","drawInspectionOverlays","drawTarget","zoomFactor","boundingCoordinates","currentMode","targetContext","getContext","setLineDash","colorInt","colorString","getRgbaString","fillStyle","lineWidth","font","strokeStyle","boundingShape","OverlayBoundingShape","rect","renderRectangleTool","renderSliceTool","perspective","renderPerspectiveTool","boundingBoxX","minX","x","boundingBoxY","minY","y","boundingBoxWidth","w","boundingBoxHeight","h","displayBounding","overlayTitle","angle","fillText","detailLevel","shapeColor","shapeColorString","shapeType","useRotation","OverlayShape","arrow","rotateContextByAngleAroundPoint","x1","y1","x2","y2","angleBetweenP1andP2","atan2","PI","calcAngleDegrees","beginPath","moveTo","lineTo","theta1","cos","sin","theta2","stroke","closePath","rectArray","rAngle","restore","graph","maxValueX","maxValueY","marker","orientationType","sizeType","strokeHeight","maxValue","strokeWidth","markers","blockMarker","colors","changePos","currentPos","drawImage","save","maxOverlayTextX","measureText","updateBoundingCoordinates","max","translate","rotate","centerX","centerY","innerRadius","outerRadius","startRadian","calculateRadiansFromAngle","endAngle","endRadian","startAngle","arc","textWidth","orientation","isNaN","green","blue","setBoundingCoordinatesForCustomOverlays","product","dispatch","coords","setCustomOverlayCoordinates","getTextWidth","setBoundingCoordinatesForInspectionOverlays","setInspectionOverlayCoordinates","text","coordinates","offsetLeft","Number","getValueById","offsetLeftVariable","xVariable","offsetTop","offsetTopVariable","yVariable","widthVariable","heightVariable","maxHeightFallback","maxWidthFallback","minHeightFallback","minWidthFallback","addVariableValueShouldBeInTheRangeNotification","correctCoordsWithBoundingCoordinates","actualCoordinates","maxX","maxY","valueObj","getValue","extractInspectionOverlays","getImage","FilmStrip","onImageClick","combinedSrc","ImageStripView","onProduct","release","updateImageDimensions","drawImageAndOverlaysToCanvas","canvas","sort","b","productsToRelease","imageStripLength","splice","releaseProducts","sourceImage","imageWidth","imageHeigt","setSourceImageIndex","setSharedStateData","drawTargetContext","clearRect","toDataURL","renderObjectSelector","overflow","selectedIid","setViewData","setSaveFlag","setTitleFromConfig","getValueNameForId","showPause","pausedInspections","renderFilmStrip","actions","TOGGLE_BUTTON","iconPlay","resumeStream","iconPause","pauseStream","display","selectProduct","ActionBar","isViewAction","productSub","unsubscribeFromProductStream","subscribeToProductStream","proxy","setObjectSelectorImages","dispatchCurrentConfiguration","setIdNameMappings","nextProps","isBrowserWindowVisible","products","desc","startAtTriggerCount","rejectImageIds","allowOldTrigger","manualRelease","replayProduct","resumeRejectStream","pauseRejectStream","canEdit","imageData","initState","initSharedState","mappedConnect","ownProps","viewId","sharedState","views","initViewState","hasChanges","updateOverlayList","updatedOverlay","overlayList","OverlayList","selectAll","selectedRowIndex","checkAndUpdateAllSelected","isActive","handleSelectAll","checked","onSelectAll","handleSingleSelect","updatedOverlayList","getTableDataFromOverlays","checkbox","getCheckboxDefinition4Cell","getColumnDefinition4OverlayTable","dataKey","flexGrow","currentId","Checkbox","padding","getSelectedRowClass","currentOverlay","headerRenderer","columns","columnHeaders","column","columnIndex","rowEventHandlers","rowIndex","updateCurrentOverlay","setRowClassName","canSelectRow","hasActionBar","headerHeight","rowHeight","rowClassName","ImageEditor","left","top","currentCursorPosition","canvasDimension","setBoundingCoordinates","getBoundingCoordinatesFromCustomOverlays","getBoundingCoordinatesFromInspectionOverlays","setCanvasDimensions","customOverlays","imageHeight","setImageInfo","isImageInfoOpen","setRgbValues","handleScroll","evt","delta","wheelDelta","detail","offsetX","offsetY","zoom","preventDefault","handleMouseDown","dragStart","pageX","pageY","dragStartPos","dragging","handleMouseUp","handleDrag","diffX","diffY","handleMouseMove","cursorPosition","getMouseCoordinatesOnElement","setCursorPosition","element","containerRef","parentNode","trunc","getImageData","red","R","G","B","cursorPositionOnImage","trimPositionsOnImageSize","loadViewSettings","bindEventListeners","prevState","productChanged","modeChanged","zoomFactorChanged","customOverlaysChanged","isEqual","imageMoved","saveImageSettings","viewSettings","imagePosition","onImageLoaded","initCanvas","draw","webkitImageSmoothingEnabled","msImageSmoothingEnabled","imageSmoothingEnabled","scale","drawOverlays","console","activeOverlays","colorVariable","lineStyle","drawCustomOverlays","offX","offY","scaleFactor","pow","leftDiff","topDiff","min","getViewSize","getBoundingClientRect","toBlob","position","compose","forwardRef","ImageInfo","imageInfoClass","rgbValues","imageDimensions","backgroundColor","reduce","acc","getPropsFromInspection","ImageView","viewSizeChangeCounter","isOverlayInfoOpen","canvasInitResize","subscribedSource","updateViewSize","newViewSizeChangeCounter","resubscribeToProductStream","getUsedVariablesFromOverlay","variables","setAllOverlaysActive","updatedOverlays","createActiveOverlayList","createActiveOverlayIdList","toggleOverlayInfo","toggleImageInfo","setSourceImageId","selectedId","renderImageView","viewActions","renderImageViewImpl","oldVariables","newVariables","renderImageEditor","renderImageInfo","renderOverlayList","imageEditor","classNames","imageView","iconOne","resetZoom","iconFitToWidth","fitToWidth","iconFitToHeight","fitToHeight","SEPARATOR","iconDownload","downloadOriginalImage","iconDownloadWithOverlays","downloadOriginalImageWithOverlays","iconOverlayList","iconInfo","overlayActions","inRunMode","viewSet","addImageNotAvailableNotification","DraggableContainer","sortableContainer","DraggableElement","sortableElement","DraggableHandle","sortableHandle","Row","draggable","rest","DragIcon","DraggableTable","table","createRef","getContainer","current","getDOMNode","querySelector","getHelperContainer","rowProps","args","extraProps","callOrReturn","tagName","handleSortEnd","oldIndex","newIndex","onSequenceChange","removed","useDragHandle","helperContainer","onSortEnd","PureComponent","injectIntl","selectedAlias","alias","oldState","useRef","useState","setAlias","Dialog","isInView","isPopup","fullWidth","languages","language","defaultValue","renderLanguageAliases","Button","ListView","setAliasColumnVisibility","visibility","updateListViewShowAliases","showAliases","saveNewOrdner","before","after","renderValueSelector","items","getInspectionName","selectedIds","renderList","getListData","tableData","row","editAlias","IconButton","isAliasEditorOpen","EditIcon","renderAliasEditor","listValues","currentValueObject","isSaved","closeAliasEditor","aliases","dottedName","isEmpty","newAlias","delete","isSelectionMode","showAliasesInList","setObjectSelectorItems","bind","createListValues","getValuesAsString","listView","iconList","iconShow","iconShowOff","listViewAliases","show","theme","createMuiTheme","typography","useNextVariants","htmlFontSize","OverlayPropertyList","changedValue","renderTextField","InputProps","renderNumberField","inputProps","valueNumber","trimToMinMax","renderSelection","options","endAdornment","InputAdornment","edge","ClearIcon","onFocus","openSelection","minWidth","maxWidth","minHeight","maxHeight","header","fontWeight","marginBottom","VariableSelection","Overlay","isObjectSelectorOpen","variableName","variableId","selectedVariables","setInitialOverlay","addNewOverlay","newOverlay","floor","random","deleteCurrentOverlay","newCurrentOverlay","getNeighborOverlayId","renderPlaceholder","setVariableSelection","selectedVariable","saveChangeToOverlays","defaultPropTypes","iconPlus","iconDeleteDustbin","array","ActionBarType","object","editingViewId","ParameterView","doSomething","parameter","component","toolSet","ScrollContainer","RecipeView","renderConfiguration","option","configurations","iconBack","iconBefore","iconSave","iconClose","ToolSetBar","tools","tool","isToolAction","SortableItem","arrayOf","string","func","SortableElement","SortableList","SortableContainer","Filter","CurrentFilterListItems","arrayMove","AvailableFilterListItems","AvailableFilterListActions","CurrentFilterListActions","helperClass","iconTakeOver","iconDown","iconUp","ToolSetup","setup","setupParameterView","viewSetFactory","ViewSetFactory","currentViewSet","setParameter","setViewSet","TreebeardStyle","base","whiteSpace","listStyle","margin","fontFamily","cursor","activeLink","background","toggle","verticalAlign","marginLeft","wrapper","fill","connector","borderLeft","borderBottom","lineHeight","subtree","paddingLeft","loading","useStyles","makeStyles","ToolsetView","useSelector","treeModel","setTreeModel","filteredTreeModel","setFilteredTreeModel","setCursor","lastActionsStack","setToolSetId","update","setUpdate","openConfirmDelete","setOpenConfirmDelete","filterText","setFilterText","useEffect","setInspectionIdToToolsetMappings","treeDataRaw","getConfigTreeByInspectionId","isValid","toggled","active","sortToolSet","setNext","treeNode","deleteTool","copyTool","cutTool","pasteTool","addTool","newToolId","toolId","iconCopy","iconCut","iconPaste","iconDelete","iconUndoDisabled","iconUndo","lastAction","from","undoLastAction","iconExpand","iconCollapse","toolActions","iconWindow","ClassIdEnum","WindowToolClassId","MathToolClassId","iconStatistics","StatisticsToolClassId","iconLinear","RingBufferToolClassId","iconArchive","ArchiveToolClassId","AcquisitionToolClassId","iconTransformation","TransformationToolClassId","iconShift","ShiftToolClassId","iconCylindricalWrap","CylindricalWarpToolClassId","iconPerspective","PerspectiveToolClassId","iconImage","ImageToolClassId","LinearToolClassId","iconColor","ColorToolClassId","iconResize","ResizeToolId","iconLoadImage","LoadImageToolClassId","iconTable","TableToolClassId","iconTableAnalyzer","TableAnalyzerToolClassId","iconPolarTransformation","PolarTransformationToolClassId","iconLoop","LoopToolClassId","iconExternal","ExternalToolClassId","iconGroup","GroupToolClassId","confirmed","handleConfirmDeleteClose","toolName","onToggle","to","mapViewSetArray","CONFIG_VIEW","TOOLSET_VIEW","IMAGE_STRIP_VIEW","DEFAULT_RECIPE_VIEWSET","DEFAULT_VIEWSET","DEFAULT_VIEWSET_NAME","getViewSet","buildEmptyViewSet","createViewInstance","viewDesc","meta","getViewById","viewComponentClassId","passedProps","titleId","buildRecipeViewSet","initialValue","first","direction","splitPercentage","second","emptyViewId","buildEditViewSet","createNewViewSet","iconSrc","unknownIcon","runIcon","stopIcon","regressionIcon","testIcon","editIcon","action","duration","delay","backgroundImage","backgroundPosition","backgroundSize","withRouter","inputFile","shortcutViewOpen","setShortcutViewOpen","isHelpViewOpen","setIsHelpViewOpen","isAboutViewOpen","setIsAboutViewOpen","gotoPermissions","setGotoPermissions","downloadConfig","downloadSVOConfig","fileData","Date","toISOString","menuItems","caption","img","HelpIcon","ShortcutHelpIcon","AboutIcon","LogoutIcon","setImmediate","origin","unshift","UploadIcon","DownloadIcon","PermissionsIcon","file","files","fileReader","FileReader","readAsArrayBuffer","arrayBuffer","uploadSVOConfig","buttonIcon","UserIcon","buttonCaption","fullname","showBottomArrow","actionList","oneOfType","AboutView","getWebAppVersion","getSvObserverVersion","getGatewayVersion","KoerberLogo","ProtobufConnector","disconnect","websocketConnector","WebsocketConnector","onConnect","onMessage","onError","connectWithToken","token","closeSocket","readMessage","socket","connectionLost","setProtobuf","ReconnectingWebSocket","binaryType","onopen","onmessage","onclose","onconnecting","log","close","Proxy","sendLogsToServer","logs","mapLogEntry","StoreClientLogsRequest","client","loadProject","loadProjectRequested","showLoadingSplashScreen","discoverConfiguration","discoverDeviceMode","subscribeToNotificationAndMessageStreams","currentConfiguration","setSVOConfigLoaded","discoverInspectionsWithConfigName","loadClientChunk","resetClientChunk","hideLoadingSplashScreen","showLoadingErrorOverlay","configLoadedFromCache","setUpProductHistories","discoverPartsInBackground","modeName","GetDeviceModeRequest","oldMode","newMode","newModeName","addModeSwitchNotification","setCurrentModeDone","protobufInitialized","observerNotificationSubscription","observerMessageSubscription","lockAcquisitionSubscription","gatewayNotificationSubscription","gatewayMessageSubscription","nextSubId","productHistoryManager","ProductHistoryManager","subscriptionManager","SubscriptionManager","showConnectingSplashScreen","onCurrentModeChanged","onProtobufChangedImpl","hideConnectingSplashScreen","severity","dispatchConfigurationLock","setCurrentConfiguration","saveToCache","setConfigurationLock","showGlobalMessageOverlay","hideGlobalMessageOverlay","lastModified","loadedSince","cachedConfigInfo","getConfigurationInfo","hash","loadFromCache","clearCurrentView","SetDeviceModeRequest","hResult","setTimeout","subscribeToObserverNotificationStream","subscribeToObserverMessageStream","subscribeToGatewayNotificationStream","subscribeToGatewayMessageStream","unsubscribeFromObserverNotificationStream","GetNotificationStreamRequest","stream","subscribe","next","onObserverNotification","onObserverNotificationError","complete","unsubscribe","NotifyType","getVariantValue","timestamp","addProjectModifiedNotification","configLoaded","extractConfigNameFromFileName","addProjectLoadedNotification","configUnloaded","addProjectUnloadedNotification","messageText","errorNumber","unsubscribeFromObserverMessageStream","GetMessageStreamRequest","onObserverMessage","onObserverMessageError","messageList","MessageType","startMsgBox","firstMessage","formatMessageNotification","messageCode","endMsgBox","msgLog","addServerMessageNotification","reqInfo","requestTakeover","waitForTakeoverResponse","LockAcquisitionStreamRequest","onLockAcquisition","onLockAcquisitionError","getMyPermissions","onLockAcquiredNotification","onLockTakeoverNotification","onLockReleasedNotification","onLockAlreadyLockedNotification","onLockTakeoverRejectedNotification","code","addConfigAlreadyLockedBySameUser","addTakeoverCandidateNotFoundNotification","addLockAcquisitionErrorNotification","handleLockAcquiredNotification","handleLockTakeoverNotification","handleLockReleasedNotification","handleLockAlreadyLockedNotification","handleLockTakeoverRejectedNotification","resetAlertDialogFlags","LockTakeoverRequest","resetTakeoverAttempt","addLockTakeoverErrorNotification","LockTakeoverRejectedRequest","unsubscribeFromGatewayNotificationStream","GetGatewayNotificationStreamRequest","onGatewayNotification","onGatewayNotificationError","pausedInspectionIds","onPauseNotification","updateConfigLockStatus","unsubscribeFromGatewayMessageStream","GetGatewayMessageStreamRequest","GatewayMessageSubscription","onGatewayMessage","onGatewayMessageError","cb","_getNextSubId","addSubscription","removeSubscription","init","fetchMissingProductData","missingImageIds","getMissingProductImages","missingValueIds","getMissingProductValues","GetProductDataRequest","includeOverlays","addData","getSubscribedImages","getSubscribedValues","addRejectStreamPausedNotification","updatePausedInspections","setPausedInspections","pauseRejectStreamImpl","pause","SetRejectStreamPauseStateRequest","GetMyPermissionsRequest","defaultPermissions","disablePermissionsWhenConfigLocked","setMyPermissions","getGroupPermissions","isUnlocked","isLockedInDifferentAppInstance","endsWith","GetGroupDetailsRequest","groupDetails","flattenPermissions","setGroupPermissions","groupDetail","users","UpdateGroupPermissionsRequest","ownerId","classId","taskObjectPos","createObjectRequest","createObjectResponse","deleteObjectRequest","GetConfigRequest","PutConfigRequest","ConfigCommandRequest","clipboardRequest","ClipboardActionEnum","Copy","Cut","Paste","webapp","read","viewset","edit","svobserver","inspectionstate","write","notifications","clientlogs","store","machinestate","command","execute","usermanagement","userpermissions","ShortcutListItem","isRequired","ShortcutList","shortcuts","shortcut","ShortcutView","ProductHistory","productData","releaseImpl","productHistories","productHistory","addProductData","InspectionSubscription","paused","lastTrigger","subsById","selectedTrigger","baseSub","emitProductToAllSubscriptions","subscription","resubscribeToStream","swapLastProduct","uniqueIds","unsubscribeFromStream","subscribeToStream","params","buildReqParams","GetProductStreamRequest","onStreamEvent","onStreamError","getStartAtTriggerCount","includeFailStatusValues","rejectValueIds","rejectsOnly","isRejectsOnly","imageFormat","ImageFormatEnum","bmp","sub","each","rawEvent","gatherImages","gatherValues","rejectImages","overlaysList","rejectOverlays","rejectValues","emitProductToSubscription","hasRequestedData","hasAllRequestedDataForSubscription","isInterestedIn","isInterestedInNewPorduct","hasDataForSubscriptionInList","lastProduct","requestedIds","arr","inspectionIdBySubId","subsByInspectionId","resume","isPaused","dialogActions","isHeight100","dialogClass","dialog","dialogWrapperClass","dialogContentWrapperClass","closeIcon","AUTH_TOKEN_KEY","USER_KEY","loadState","userStr","resetState","removeItem","saveState","ProxyStream","opts","pendingMessages","start","throttleInterval","throttleRequests","currentThrottleTimeout","recs","rec","level","msg","sameMessageCount","FormatStream","out","browserStdout","impl","bunyanFormat","outputMode","proxyStream","formatStream","createLogger","streams","setProxy","prop","Observer","observable","closed","onNext","onComplete","Observable","onSubscribe","_onSubscribe","_next","_error","_complete","observer","tearDownCb","pendingRequests","openStreams","prevSocket","cancelAllPendingRequests","SvPenv","Envelope","decode","errorResponse","streamResponse","streamErrorResponse","streamFinish","streamCancel","onResponse","onErrorResponse","onStreamResponse","onStreamErrorResponse","onStreamFinish","onStreamCancel","txId","transactionId","hdl","unwrapResponse","handled","clearTimeout","timeout","unwrapErrorResponse","onErrorResponseImpl","streamId","ackStreamResponse","nextTxId","wrapMessage","buf","serializeEnvelope","onRequestTimeout","send","nextStreamId","streamRequest","cancelStream","fromObject","ackEnv","sequenceNumber","streamAck","wrapOneOf","envelope","payloadType","getPayloadTypeForOneOfMessage","payload","packToAny","unpackFromAny","unwrapOneOf","errorCode","fieldName","getFieldNameForSVRCMessage","SVRCMessages","$type","typeName","fullName","encoded","encode","finish","type_url","any","buffer","byteOffset","loadProto","SvAuth","initialized","namespace","ProtoJs","load","utf8StringToBuffer","len","protobufjs","util","utf8","bufferToUtf8String","WEBAPP_CHUNK_FILENAME","WEBAPP_IDMAPPING_FILENAME","WEBAPP_CHUNK_VERSION","WEBAPP_CHUNK_PARAMETERS","VERSION","SV_OBSERVER_VERSION","GATEWAY_VERSION","WEBAPP_VERSION","CREATED_VIEW_SETS","CURRENT_VIEW_SETS","INSPECTION_OVERLAYS","INSPECTION_LIST_SELECTION","INSPECTION_EDITING_VIEW_IDS","INSPECTION_LIST_ALIASES","INSPECTION_IMAGE_VIEW_SETTINGS","saveChunk","currentState","setSaveOperationInProcess","inspectionOverlays","inspectionIdStr","inspectionListSelection","listSelection","inspectionEditingViewIds","inspectionListAliases","convertAliasesToJson","showInList","inspectionImageViewSettings","imageViewSettings","createdViewSets","json","PutFileRequest","destinationPath","saveInConfig","loadChunk","setClientChunk","setEditingFocus","addIncompatibilityDetectedNotification","setListViewAliases","GetFileRequest","sourcePath","updateConfigWithGuidToIntMapping","loadDataForCurrentViewSet","semver","coerce","configVersion","satisfies","receivedConfigParameters","expectedConfigParameters","currentParameterName","valid","diff","gt","setting","resetChunk","emptyViewset","emptyViewSets","idMappingChunk","idMapping","parseGuidToObjectIdMapping","guidToObjectIdMapping","recursivlyUpdateConfigWithGuidToIntMapping","hasError","patchedIds","guid","lookUpKeyInMapping","lowerCaseKey","isToolsetViewSet","isImageViewSet","isListViewSet","isImageStripViewSet","setLocale","setProtobufStaticInitialized","newProtobuf","configurationLock","addNotification","addConnectionEstablishedNotification","addConnectionLostNotification","addUserSwitchedLanguageNotification","configFile","range","authenticateHelper","logOutHelper","viewSetId","replaceViewInCurrentViewSet","replacementComponentId","switchViewSet","toggleFullscreenMode","componentDescriptor","setFullscreen","increaseViewSizeChangeCounter","setBottomNavHidden","hidden","setTopNavHidden","setDefaultViewSetName","newViewSet","inProcess","saveClientChunk","isLoaded","setViewSetForMode","removeViewSet","renameViewSet","oldName","newName","changeViewSetAfterLoading","setCurrentLayout","layout","setCurrentMode","setFocusedViewType","purgeViewState","openHelpView","closeHelpView","setBrowserWindowVisibility","visible","de","en","translations","SelectParameter","changeCallback","removeCallback","valuesWithLabels","localeCompare","ArrayParameter","SingleParameterComponent","numberOfEntries","newValue","removeArrayEntry","BoolParameter","BoolArrayParameter","BytesParameter","SingleParameter","fieldType","DecimalParameter","DecimalArrayParameter","EnumArrayParameter","String","EnumParameter","IntegerParameter","IntegerArrayParameter","TextParameter","TextArrayParameter","RequestParameter","parameters","setParameters","nestedParamsMap","setNestedParamsMap","currentRequestName","setCurrentRequestName","sendRequest","dir","getControlForField","currentPath","currentValue","changeValue","getStringArrayControl","getStringControl","getBoolArrayControl","getBoolControl","getIntegerArrayControl","getIntegerControl","getDecimalArrayControl","getDecimalControl","getBytesControl","constructor","getArrayEnumControl","getEnumControl","newPath","getArrayControlsForType","getControlsForType","newParams","cloneDeep","controls","fieldKeys","oneofs","oneOfKey","oneof","fieldkey","partOf","rule","required","_","addArrayEntryForType","RequestedResponseVisualizer","imageUrl","setImageUrl","setFileData","buildUrl","copyResponseToClipboard","navigator","clipboard","writeText","RequestsList","proto","chooseCallback","setFilter","setActive","requests","requestname","placeholder","Debugger","currentRequest","setCurrentRequest","setResponse","filteredProto","Link","ArrowIcon","DebuggerPage","parseQueryParams","search","queryParams","part","decodeURIComponent","HmiLoginPage","authenticated","hideTopNavigation","hideBottomNavigation","catch","authError","statusText","pathname","viewSetTemplate","LogoutPage","loggedOut","onLogOut","onLoggedOut","KeyHandler","handleKeyEvent","ctrlKey","stopPropagation","handleClick","editingViewIds","helpSection","tabIndex","PermissionManagement","loadCurrentPermissions","initiallySelectedPermissions","currentSelectedPermissions","savePermissions","setUserPermissions","onSaveClicked","onResetClicked","allAvailablePermissions","redirect","Permissions","groupName","newPermissions","am","bm","bs","as","colGroup","permissionsPerGroup","tableheader","dataRow","canRead","mapsAreEqual","getColGroup","tablehead","getTableHead","getData","PermissionPage","useDispatch","viewMappings","ModalNotification","InformationDialog","onSave","fileChooser","canDelete","setName","isImportConfirmOpen","setIsImportConfirmOpen","viewsetToDelete","setViewsetToDelete","currentImportedViewSet","setCurrentImportedViewSet","isInformationDialogOpen","setIsInformationDialogOpen","informationDialogTitle","setInformationDialogTitle","informationDialogMessage","setInformationDialogMessage","shouldCloseViewSetManager","setShouldCloseViewSetManager","viewSetToEdit","setViewSetToEdit","fileLoaderVersion","existsName","addViewSet","newViewSetName","nameToTry","getNextFreeName","exportViewSets","dataToSave","getEditingViewIdsPerInspection","createJsonFileFromObject","closeViewSetManager","handleFileData","fileText","equalsViewSetName","setViewSetConfigurationFromFileData","showErrorWhileLoadingFileDialog","handleDeleteConfirmDialogClose","loadViewSetFromFile","loadSuccessfulInformationDialogText","isMajorVersionCompatible","isMinorVersionNewer","loadVersionChangeInformationDialogText","showInformationDialog","showIncompatibleVersionErrorDialog","getViewSetEditingIcon","viewsetName","alert","iconCheck","paddingRight","addIcon","exportIcon","importIcon","getActions","removeIcon","handleImportConfirmDialogClose","readAsText","viewSetType","TopNavigationItem","PresetButton","presetButtonClass","NavigationItem","PresetSlider","BottomNav","selectedIndex","viewSetManagerOpen","bottomNavHidden","isSVOConfigLoaded","ViewSetManagerIcon","fullscreenMode","DateTime","format","ticking","InspectionStateSwitch","allRunning","globalItem","MenuList","runningInspections","numberOfInspections","iconPlayMultiple","enabled","LanguageChooser","changeLocation","changeLocale","dispatchUserSwitchedLanguageNotification","LanguageIcon","AlertDialog","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","contentText","DialogActions","TakeoverDialog","onAccept","timeLeft","setTimeLeft","interval","setInterval","clearInterval","onReject","formReducer","LockIcon","lockIcon","PadlockIcon","padlockIcon","LockStateHandler","configLock","loggedUser","openFormDialog","setOpenFormDialog","useReducer","scope","formData","setFormData","handleChange","handleClose","handleSubmit","isLockedByOtherUser","subscribeToLockAcquisitionStream","role","isLockedBySameUser","unsubscribeFromLockAcquisitionStream","shrink","autoFocus","isConfigAlreadyLocked","closeAlertDialogs","isOwnerRejectedTakeover","isWaitingForTakeoverResponse","isTakeoverAttemptFromOtherUser","passConfigLock","retainConfigLock","ModeSwitch","changeMode","selectableModes","m","allModes","StatusReport","statusListActive","closeStatusList","LogIcon","count","TopNavigation","openModePopover","anchorEl","currentTarget","handleRequestClose","modeKey","modeId","topNavHidden","currentModeKey","mapModeIdToKey","currentModeFormatted","navClass","nav","unsavedChanges","fontStyle","UserInfo","onChangeUser","date","activeAppState","appStateConnection","appMode","saveOperationInProcess","changeViewSet","NoSVOConfigurationLoadedView","ListSelection","headline","selectionItems","onSelection","cancelButtonProps","showCancel","icon","goBack","InspectionSelection","getSelectionItems","InspectionIcon","BackIcon","ViewTypeSelection","inspectionTypes","ImageViewIcon","ParameterViewIcon","ImageStripViewIcon","ListViewIcon","toolsetIcon","ViewSelection","visibleComponent","selectedInspectionId","selectedViewType","setSelectedInspectionId","changeTitle","updateView","setSelectedViewType","goBackToViewTypeSelection","cancelViewSelection","changeContent","viewToShowWithoutInspection","SVOView","resetView","removeIdsForUnknownInspectionIds","canEditCurrentView","canDeleteCurrentView","getInspectionId","isConfirmOpen","windowName","viewClass","fullscreen","currentInspections","hasInspectionId","toolbarControls","onCloseView","CloseIcon","createNode","formatMessage","ViewSet","increaseChangeCounter","mosaic","viewToClose","setViewToClose","viewSetClass","closeView","handleConfirmDialogClose","renderTile","Consumer","mosaicActions","resize","SVObserver","throttledWindwResizeHandler","throttle","onWebsocketConnect","onWebsocketDisconnect","returnValue","defaultViewSetName","handleBeforeUnload","modalNotificationData","setLayout","BottomNavigation","context","getState","contextType","ReactReduxContext","App","exact","render","paperStyle","LoginPage","onSubmit","onLogin","loginFailed","Paper","elevation","autoComplete","getNewNotifications","notification2Add","newNotifications","dateOptions","day","month","year","timeOptions","hour","minute","toLocaleString","addTimestampToNotification","currentNotification","equalsLastNotificationCurrentNotification","setCountForNotification","appReducer","initalAppState","websocketUrl","connection","navigationHidden","currentClientChunkRevision","createInitialAppState","setMode","revision","initialState","toolsetReducer","findInspectionForView","viewDataReducer","omit","newState","fullscreenComponentDescriptor","enterFullScreenMode","leaveFullScreenMode","findCreatedViewSetWithName","cached","targetViewSet","createdViewSet","updateCurrentViewSet","newCreatedViewSets","p","c","viewSetReducer","createdView","currentViewSetId","updatedViewSet","changeViewSetToName","emptyViewSet","viewsetToEdit","renamedViewSet","currentLayout","loadedViewSet","createReducers","combineReducers","routing","PreLogin","setUser","setAuthToken","setStore","autoSave","createStore","applyMiddleware","thunk","devToolsExtension","f","fromLocalStorage","visibilityState","hibernateTimer","onLoggedIn","muiTheme","palette","primary","main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","openMenu","renderMenuItems","menuItem","closeMenu","rootMenu","justifyContent","common","black","alignItems","marginRight"],"mappings":"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","file":"static/js/main.dccfed8f.chunk.js","sourcesContent":["import logger from './logger';\nexport const forceDownload = (data, fileName) => {\n  if (!data) {\n    logger.info('forceDownload expects data but did not receive');\n    return;\n  }\n  const link = document.createElement('a');\n  link.download = fileName;\n  link.href = data;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\n\nimport Dialog from '../Dialog';\nimport './style.scss';\n\nclass ConfirmDialog extends Component {\n  render() {\n    const { onClose, open, title, message } = this.props;\n\n    return (\n      <div>\n        <Dialog title={title || ''} onClose={() => onClose(false)} open={open}>\n          <div className=\"message-wrapper\">{message}</div>\n          <div className=\"button-wrapper\">\n            <Button color=\"primary\" onClick={() => onClose(true)}>\n              Okay\n            </Button>\n            <Button color=\"primary\" onClick={() => onClose(false)}>\n              <FormattedMessage id=\"cancel\" />\n            </Button>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default ConfirmDialog;\n","import { parse } from 'url';\n\nfunction getDefaultWebsocketUrl() {\n  const { host, protocol } = window.location;\n  const wsProtocol = protocol === 'https:' ? 'wss:' : 'ws:';\n  return `${wsProtocol}//${host}`;\n}\n\nfunction getEndpoint(url) {\n  const parsedUrl = url ? parse(url) : window.location;\n  const protocol = parsedUrl.protocol.replace('ws', 'http');\n  return `${protocol}//${parsedUrl.host}`;\n}\n\nconst env = {\n  authEndpoint: getEndpoint(process.env.REACT_APP_WEBSOCKET_SERVER_URL),\n  websocketServerUrl: process.env.REACT_APP_WEBSOCKET_SERVER_URL || getDefaultWebsocketUrl(),\n  enableAutoSave: false,\n};\n\nexport default env;\n","export function replacerMapToJson(key, value) {\n  const originalObject = this[key];\n  if (originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: [...originalObject],\n    };\n  } else {\n    return value;\n  }\n}\n\nexport function reviverJsonToMap(key, value) {\n  if (typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n","export const chunkSubstr = (str, size) => {\n  const numChunks = Math.ceil(str.length / size);\n  const chunks = new Array(numChunks);\n\n  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substr(o, size);\n  }\n\n  return chunks;\n};\n","import LZString from 'lz-string';\nimport { reviverJsonToMap, replacerMapToJson } from '../utils/jsonMapper';\nimport {\n  CONFIG_INFO,\n  CONFIGURATION_CHUNK_TEMPLATE,\n  CONFIGURATION_CHUNK_LIST,\n} from '../utils/localStorage';\nimport logger from '../utils/logger';\nimport { isObjectValid } from '../utils/objectValidator';\nimport { chunkSubstr } from '../utils/stringChunker';\nimport Protobuf from './Protobuf';\n\nconst extractConfigName = (filename) => {\n  if (!filename) {\n    return '';\n  }\n  const slashIdx = filename.lastIndexOf('\\\\');\n  if (slashIdx !== -1) {\n    filename = filename.substr(slashIdx + 1);\n  }\n  const dotIdx = filename.lastIndexOf('.');\n  if (dotIdx !== -1) {\n    filename = filename.substr(0, dotIdx);\n  }\n  return filename;\n};\n\nconst getConfigName = async (protobuf) => {\n  const request = Protobuf.SvPb.GetConfigurationInfoRequest.create();\n  const { fileName } = await protobuf.request(request);\n  return extractConfigName(fileName);\n};\n\nconst getInspections = async (protobuf) => {\n  try {\n    const inspectionsReq = Protobuf.SvPb.GetInspectionsRequest.create({});\n    const inspectionsRes = await protobuf.request(inspectionsReq);\n    return (inspectionsRes.inspections || []).map((inspection) => ({\n      id: inspection.id,\n      name: inspection.name,\n    }));\n  } catch (e) {\n    // ignore error. will fall back to empty inspection name list.\n    logger.error('Error while fetching inspection name list:', e);\n    return [];\n  }\n};\n\nconst getInspectionIds = (inspections) => {\n  return (inspections || []).map((inspection) => inspection.id);\n};\n\nconst getInspectionNames = (inspections) => {\n  return (inspections || []).map((inspection) => inspection.name);\n};\n\n// objectIDIndex has the format:\n//   {#123}\n// and sometimes also an index at the end:\n//   {#123}[10]\n// or this for empty arrays\n//   {#123}[ ]\n// except of the index at the end, it is a normal id\nconst parseObjectIdIndex = (str) => {\n  if (!str.startsWith('{#')) {\n    return;\n  }\n  const endIdx = str.indexOf('}');\n  if (endIdx < 0) {\n    return;\n  }\n  // TODO parse array index\n  str = str.substr(2, endIdx);\n  return parseInt(str, 10);\n};\n\nconst cleanObjectSelectorNodeRecursively = (node) => {\n  const { name, type, location, objectIDIndex, children, selected } = node;\n  const cleanedChildren = (children || []).map(cleanObjectSelectorNodeRecursively);\n  const id = (objectIDIndex && parseObjectIdIndex(objectIDIndex)) || null;\n  return {\n    id,\n    name,\n    type,\n    location,\n    selected,\n    children: cleanedChildren,\n  };\n};\n\nconst getIdNameMappingForInspection = async (protobuf, inspectionId, inspectionName) => {\n  const req = Protobuf.SvPb.GetObjectSelectorItemsRequest.create({\n    areas: [Protobuf.SvPb.SearchArea.toolsetItems],\n    inspectionID: inspectionId,\n    instanceID: 0, // InvalidObjectId\n    attribute: Protobuf.SvPb.ObjectAttributes.viewable,\n    wholeArray: true,\n    type: Protobuf.SvPb.ObjectSelectorType.allValueObjects,\n    attributesAllowed: 1,\n  });\n  const res = await protobuf.request(req);\n  if (!res.tree) {\n    logger.error('GetObjectSelectorItemsRequest response does not contain a tree');\n    return null;\n  }\n\n  const tree = cleanObjectSelectorNodeRecursively(res.tree);\n\n  const entries = new Map();\n  const queue = (tree && tree.children && tree.children.slice(0)) || [];\n  while (queue.length > 0) {\n    const head = queue.shift();\n    const { id, name, type, location, children } = head;\n    if (id) {\n      entries.set(id, {\n        id,\n        name,\n        type,\n        location,\n        fullLocation: 'Inspections.' + inspectionName + '.' + location,\n      });\n    }\n    if (children && children.length) {\n      for (let i = 0; i < children.length; ++i) {\n        queue.push(children[i]);\n      }\n    }\n  }\n\n  return entries;\n};\n\nconst getObjectSelectorItemsForInspection = async (protobuf, inspectionId) => {\n  const req = Protobuf.SvPb.GetObjectSelectorItemsRequest.create({\n    areas: [Protobuf.SvPb.SearchArea.toolsetItems],\n    inspectionID: inspectionId,\n    instanceID: 0, // InvalidObjectId\n    attribute: Protobuf.SvPb.ObjectAttributes.viewable,\n    wholeArray: true,\n    type: Protobuf.SvPb.ObjectSelectorType.allValueObjects,\n    attributesAllowed: 1,\n  });\n  let res;\n  try {\n    res = await protobuf.request(req);\n  } catch (error) {\n    logger.error(error);\n    return null;\n  }\n\n  if (!res.tree) {\n    logger.error('GetObjectSelectorItemsRequest response does not contain a tree');\n    return null;\n  }\n\n  const tree = cleanObjectSelectorNodeRecursively(res.tree);\n  return { tree };\n};\n\nconst getObjectSelectorImagesForInspection = async (protobuf, inspectionId) => {\n  const req = Protobuf.SvPb.GetObjectSelectorItemsRequest.create({\n    areas: [Protobuf.SvPb.SearchArea.toolsetItems],\n    inspectionID: inspectionId,\n    type: Protobuf.SvPb.ObjectSelectorType.allImageObjects,\n    attribute: Protobuf.SvPb.ObjectAttributes.archivableImage,\n    attributesAllowed: 1,\n  });\n  let res;\n  try {\n    res = await protobuf.request(req);\n  } catch (error) {\n    logger.error(error);\n    return null;\n  }\n\n  if (!res.tree) {\n    logger.error('GetObjectSelectorItemsRequest response does not contain a tree');\n    return null;\n  }\n  const tree = cleanObjectSelectorNodeRecursively(res.tree);\n\n  return { tree };\n};\n\nconst getVersion = async (protobuf, requestClass) => {\n  const request = requestClass.create();\n  const response = await protobuf.request(request);\n  if (!response.version) {\n    logger.error(`Error while reading version via ${requestClass.name}`);\n    return 'Unknown Version';\n  }\n  return response.version;\n};\n\nconst getPerInspection = async (protobuf, inspectionIds, inspectionNames, fn) => {\n  const itemsByInspectionId = new Map();\n  for (let i = 0; i < inspectionIds.length; ++i) {\n    const inspectionId = inspectionIds[i];\n    const inspectionName = inspectionNames[i];\n    const item = await fn(protobuf, inspectionId, inspectionName);\n    if (item) {\n      itemsByInspectionId.set(inspectionId, item);\n    }\n  }\n  return itemsByInspectionId;\n};\n\nconst getConfigurationTree = async (protobuf) => {\n  const request = Protobuf.SvPb.GetConfigurationTreeRequest.create();\n  const response = await protobuf.request(request);\n  if (!response || !response.tree) {\n    logger.error('Cannot get config tree');\n    return false;\n  }\n  return response;\n};\n\nconst mapInspectionIdtoToolset = async (protobuf) => {\n  const inspectionToolsetMappings = new Map();\n\n  const configurationTree = await getConfigurationTree(protobuf);\n  if (!isObjectValid(() => configurationTree.tree.children)) {\n    logger.error('configTree is not valid');\n    return inspectionToolsetMappings;\n  }\n\n  configurationTree.tree.children.forEach(async (inspection) => {\n    const inspectionId = inspection.objectID;\n    if (!inspectionId) {\n      logger.error(`Inspection without valid id: ${inspectionId}`);\n      return;\n    }\n\n    let toolSetId = 0;\n    try {\n      toolSetId = await getToolSetId(protobuf, inspectionId, inspection.name);\n    } catch (e) {\n      logger.error(`Could not load tool set id for ${inspection.name} (${inspectionId})`);\n      return;\n    }\n\n    inspectionToolsetMappings.set(inspectionId, { ...inspection, toolSetId });\n  });\n\n  return inspectionToolsetMappings;\n};\n\nconst getToolSetId = async (protobuf, inspectionId, inspectionName) => {\n  const request = Protobuf.SvPb.InspectionCmdRequest.create({\n    inspectionID: inspectionId || undefined,\n    getObjectIdRequest: {\n      name: `${inspectionName}.Tool Set`,\n    },\n  });\n\n  try {\n    const response = await protobuf.request(request);\n    return response?.getObjectIdResponse?.objectId;\n  } catch (error) {\n    logger.error(error);\n  }\n};\n\nexport default class Configuration {\n  static async loadFromCache() {\n    try {\n      let configString = '';\n      const chunksString = localStorage.getItem(CONFIGURATION_CHUNK_LIST);\n      const chunkList = chunksString.split(',');\n\n      configString = chunkList.map((key) => localStorage.getItem(key)).join();\n      const decompressedConfig = LZString.decompress(configString);\n      const config = JSON.parse(decompressedConfig, reviverJsonToMap);\n\n      return new Configuration({\n        ...config,\n      });\n    } catch (err) {\n      logger.error({ err }, 'Error loading configuration');\n      return null;\n    }\n  }\n\n  static async saveToCache(configuration, configInfo) {\n    const stringifiedConfig = LZString.compress(JSON.stringify(configuration, replacerMapToJson));\n    const configChunks = chunkSubstr(stringifiedConfig, 1000000); // 1m chars = 1MB chunks\n    let configChunkNames = [];\n\n    for (let i = 0; i < configChunks.length; i++) {\n      const chunk = configChunks[i];\n      const chunkName = `${CONFIGURATION_CHUNK_TEMPLATE}${i}`;\n      localStorage.setItem(chunkName, chunk);\n      configChunkNames.push(chunkName);\n    }\n\n    localStorage.setItem(CONFIGURATION_CHUNK_LIST, configChunkNames.join(','));\n    localStorage.setItem(CONFIG_INFO, JSON.stringify(configInfo));\n  }\n\n  static extractConfigNameFromFileName(filename) {\n    return extractConfigName(filename);\n  }\n\n  async discoverInspectionsWithConfigName(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    try {\n      const promises = await Promise.all([getConfigName(protobuf), getInspections(protobuf)]);\n\n      const [configName, inspections] = promises;\n\n      this.name = configName;\n      this.inspections = inspections;\n      this.inspectionIds = getInspectionIds(inspections);\n      this.inspectionNames = getInspectionNames(inspections);\n    } catch (err) {\n      logger.error({ err }, 'Error while discovering configuration');\n      return;\n    }\n  }\n\n  async discoverPartsInBackground(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    try {\n      const promises = await Promise.all([\n        getVersion(protobuf, Protobuf.SvPb.GetSVObserverVersionRequest),\n        getVersion(protobuf, Protobuf.SvPb.GetGatewayVersionRequest),\n        getVersion(protobuf, Protobuf.SvPb.GetWebAppVersionRequest),\n        getPerInspection(\n          protobuf,\n          this.inspectionIds,\n          this.inspectionNames,\n          getIdNameMappingForInspection,\n        ),\n        getPerInspection(\n          protobuf,\n          this.inspectionIds,\n          this.inspectionNames,\n          getObjectSelectorItemsForInspection,\n        ),\n        getPerInspection(\n          protobuf,\n          this.inspectionIds,\n          this.inspectionNames,\n          getObjectSelectorImagesForInspection,\n        ),\n        mapInspectionIdtoToolset(protobuf),\n      ]);\n      const [\n        svObserverVersion,\n        gatewayVersion,\n        webAppVersion,\n        idNameMappings,\n        objectSelectorItems,\n        objectSelectorImages,\n        inspectionToolsetMappings,\n      ] = promises;\n\n      this.versions = { svObserverVersion, gatewayVersion, webAppVersion };\n      this.idNameMappings = idNameMappings;\n      this.objectSelectorItems = objectSelectorItems;\n      this.objectSelectorImages = objectSelectorImages;\n      this.inspectionToolsetMappings = inspectionToolsetMappings;\n    } catch (err) {\n      logger.error({ err }, 'Error while discovering configuration');\n      return;\n    }\n  }\n\n  constructor(config) {\n    this.name = '';\n    this.inspections = [];\n    this.inspectionIds = [];\n    this.inspectionNames = [];\n    this.idNameMappings = new Map();\n    this.objectSelectorItems = new Map();\n    this.objectSelectorImages = new Map();\n    this.versions = {};\n    this.inspectionToolsetMappings = new Map();\n\n    if (Object.keys(config).length !== 0) {\n      // copy all provided fields into this.\n      // this allows treating the configuration instance like a\n      // normal json object, but with additional helper functions.\n      Object.assign(this, config);\n    }\n  }\n\n  getSvObserverVersion() {\n    return this.versions && this.versions.svObserverVersion;\n  }\n\n  getGatewayVersion() {\n    return this.versions && this.versions.gatewayVersion;\n  }\n\n  getWebAppVersion() {\n    return this.versions && this.versions.webAppVersion;\n  }\n\n  getInspections() {\n    return this.inspections;\n  }\n\n  getInspectionName(inspectionId) {\n    const inspection = (this.inspections || []).find((i) => i.id === inspectionId);\n    return inspection && inspection.name;\n  }\n\n  getValueNameForId(inspectionId, id) {\n    if (typeof inspectionId === 'string') {\n      inspectionId = parseInt(inspectionId, 10);\n    }\n    const mappings = this.idNameMappings.get(inspectionId);\n    if (mappings) {\n      if (typeof id === 'string') {\n        id = parseInt(id, 10);\n      }\n      const mapping = mappings.get(id);\n      if (mapping) {\n        return mapping.fullLocation;\n      }\n    }\n    return null;\n  }\n\n  async setIdNameMappings(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    if (\n      this.idNameMappings.size === 0 &&\n      this.inspectionIds.length !== 0 &&\n      this.inspectionNames.length !== 0\n    ) {\n      const mappings = await getPerInspection(\n        protobuf,\n        this.inspectionIds,\n        this.inspectionNames,\n        getIdNameMappingForInspection,\n      );\n      this.idNameMappings = mappings;\n    } else {\n      logger.warn('setIdNameMappings: id name mappings already set');\n    }\n  }\n\n  getObjectSelectorItemsForInspection(inspectionId) {\n    return this.objectSelectorItems.get(inspectionId);\n  }\n\n  async setObjectSelectorItems(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    if (\n      this.objectSelectorItems.size === 0 &&\n      this.inspectionIds.length !== 0 &&\n      this.inspectionNames.length !== 0\n    ) {\n      const objectSelectorItems = await getPerInspection(\n        protobuf,\n        this.inspectionIds,\n        this.inspectionNames,\n        getObjectSelectorItemsForInspection,\n      );\n      this.objectSelectorItems = objectSelectorItems;\n    } else {\n      logger.warn('setObjectSelectorItems: object selector items already set');\n    }\n  }\n\n  getObjectSelectorImagesForInspection(inspectionId) {\n    return this.objectSelectorImages.get(inspectionId);\n  }\n\n  async setObjectSelectorImages(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    if (\n      this.objectSelectorImages.size === 0 &&\n      this.inspectionIds.length !== 0 &&\n      this.inspectionNames.length !== 0\n    ) {\n      const objectSelectorImages = await getPerInspection(\n        protobuf,\n        this.inspectionIds,\n        this.inspectionNames,\n        getObjectSelectorImagesForInspection,\n      );\n      this.objectSelectorImages = objectSelectorImages;\n    } else {\n      logger.warn('setObjectSelectorImages: object selector images already set');\n    }\n  }\n\n  async setInspectionIdToToolsetMappings(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    if (this.inspectionToolsetMappings.size === 0) {\n      const mappings = await mapInspectionIdtoToolset(protobuf);\n      this.inspectionToolsetMappings = mappings;\n    } else {\n      logger.warn('setInspectionIdToToolsetMappings: mappings already done');\n    }\n  }\n\n  // Currently filters array data from values\n  // TODO: array data should be shown in tree, but id must be changed (all have same id atm)\n  filterArrayValuesFromTree = (tree) => {\n    var stack = [],\n      node,\n      ii;\n    stack.push(tree);\n    while (stack.length > 0) {\n      node = stack.pop();\n      if (!node.id && node.children && node.children.length) {\n        let firstChildId = '';\n        for (ii = 0; ii < node.children.length; ii += 1) {\n          if (firstChildId === node.children[ii].id) {\n            node.children = [];\n            node.id = firstChildId;\n            break;\n          }\n          if (node.children[ii].id) {\n            firstChildId = node.children[ii].id;\n          }\n        }\n        for (ii = 0; ii < node.children.length; ii += 1) {\n          stack.push(node.children[ii]);\n        }\n      }\n    }\n    return tree;\n  };\n\n  getConfigTreeByInspectionId(inspectionId) {\n    if (!inspectionId) {\n      logger.warn('getConfigTreeByInspection did not receive inspection id');\n      return;\n    } else if (this.inspectionToolsetMappings.size === 0) {\n      logger.warn('inspectionToolsetMappings is empty');\n      return;\n    }\n\n    return this.inspectionToolsetMappings.get(inspectionId);\n  }\n}\n","export default __webpack_public_path__ + \"static/media/clear.1114cb53.svg\";","export default __webpack_public_path__ + \"static/media/close.f005b782.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\n\nimport Dialog from '../../components/Dialog';\nimport map from './viewMappings';\n\nclass HelpView extends Component {\n  render() {\n    const { onClose, open, focusedViewType, locale } = this.props;\n    let helpUrl;\n    switch (locale) {\n      case 'en':\n        helpUrl = `/help/en/SVOWebApp_WebHelp.htm#cshid=${map[focusedViewType]}`;\n        break;\n\n      case 'de':\n        helpUrl = `/help/de/SVOWebApp_WebHelp.htm#cshid=${map[focusedViewType]}`;\n        break;\n\n      default:\n        helpUrl = `/help/en/SVOWebApp_WebHelp.htm#cshid=${map[focusedViewType]}`;\n        break;\n    }\n    return (\n      <Dialog isFullscreen title={<FormattedMessage id=\"helpView\" />} onClose={onClose} open={open}>\n        <iframe\n          className=\"help-frame\"\n          title=\"help\"\n          style={{ width: '100%', height: '97%' }}\n          src={helpUrl}\n        />\n      </Dialog>\n    );\n  }\n}\n\nHelpView.defaultProps = {\n  open: false,\n  locale: 'en',\n};\n\nHelpView.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  locale: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  focusedViewType: state.app.focusedViewType,\n  locale: state.app.locale,\n});\n\nexport default connect(mapStateToProps)(HelpView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\n\nconst Heading = ({ type, intlId }) =>\n  React.createElement(\n    type,\n    {\n      className: 'heading',\n    },\n    <FormattedMessage id={`${intlId}` || 'none'} />,\n  );\n\nHeading.defaultProps = {\n  intlId: 'none',\n};\n\nHeading.propTypes = {\n  type: PropTypes.string.isRequired,\n  intlId: PropTypes.string,\n};\n\nexport default Heading;\n","import { IMAGE_VIEW, PARAMETER_VIEW, LIST_VIEW } from '../ViewSetFactory';\n\nexport const PERMISSIONS = 'PERMISSIONS';\nexport const DEBUGGER = 'DEBUGGER';\n\nconst Views = {\n  PARAMETER_VIEW,\n  LIST_VIEW,\n  IMAGE_VIEW,\n  PERMISSIONS,\n  DEBUGGER,\n};\n\nexport default Views;\n","export default class ConfigurationLock {\r\n  constructor(lock) {\r\n    this.lockId = undefined;\r\n    this.takeoverId = undefined;\r\n    this.owner = undefined;\r\n    this.takeoverUser = undefined;\r\n    this.host = '';\r\n    this.lockDescription = '';\r\n    this.takeoverMessage = '';\r\n    this.status = 0;\r\n\r\n    // Workaround for checking if config lock is already owned by the same logged user in Proxy.js.\r\n    // In this file (Proxy.js) we don't have an access to redux state.app.user,\r\n    // but we know that it is the same logged user only when LockAcquiredNotification comes\r\n    // from SVOGateway. In result this member is set only in this one place\r\n    // and reset while releasing or passing the lock to other user.\r\n    this.lockedInSameAppInstance = false;\r\n\r\n    // Flags to control alert dialogs\r\n    this.isTakeoverAttempt = false;\r\n    this.configAlreadyLocked = false;\r\n    this.isWaitingForResponse = false;\r\n    this.ownerRejectedTakeover = false;\r\n\r\n    if (Object.keys(lock).length !== 0) {\r\n      Object.assign(this, lock);\r\n    }\r\n  }\r\n\r\n  isLocked() {\r\n    return this.status === 1;\r\n  }\r\n\r\n  isUnlocked() {\r\n    return this.status === 0;\r\n  }\r\n\r\n  isSameUserAsOwner(user) {\r\n    return user.username === this.owner;\r\n  }\r\n\r\n  isLockedBySameUser(user) {\r\n    return this.isLocked() && this.isSameUserAsOwner(user);\r\n  }\r\n\r\n  isLockedByOtherUser(user) {\r\n    return this.isLocked() && !this.isSameUserAsOwner(user);\r\n  }\r\n\r\n  isLockedInDifferentAppInstance() {\r\n    return this.isLocked() && !this.lockedInSameAppInstance;\r\n  }\r\n\r\n  isTakeoverAttemptFromOtherUser() {\r\n    return this.isTakeoverAttempt;\r\n  }\r\n\r\n  isConfigAlreadyLocked() {\r\n    return this.configAlreadyLocked;\r\n  }\r\n\r\n  isWaitingForTakeoverResponse() {\r\n    return this.isWaitingForResponse;\r\n  }\r\n\r\n  isOwnerRejectedTakeover() {\r\n    return this.ownerRejectedTakeover;\r\n  }\r\n\r\n  resetTakeoverAttempt() {\r\n    this.isTakeoverAttempt = false;\r\n  }\r\n\r\n  resetAlertDialogFlags() {\r\n    this.configAlreadyLocked = false;\r\n    this.ownerRejectedTakeover = false;\r\n  }\r\n\r\n  handleLockAcquiredNotification(notification) {\r\n    this.lockId = notification.lockId;\r\n    this.owner = notification.user;\r\n    this.host = notification.host;\r\n    this.lockDescription = notification.description;\r\n    this.status = 1; // Locked\r\n    this.lockedInSameAppInstance = true;\r\n\r\n    this.isWaitingForResponse = false;\r\n  }\r\n\r\n  handleLockTakeoverNotification(notification) {\r\n    this.takeoverId = notification.takeoverId;\r\n    this.takeoverMessage = notification.message;\r\n    this.takeoverUser = notification.user;\r\n\r\n    this.isTakeoverAttempt = true;\r\n  }\r\n\r\n  handleLockReleasedNotification() {\r\n    this.lockId = undefined;\r\n    this.owner = undefined;\r\n    this.host = '0.0.0.0';\r\n    this.lockDescription = '';\r\n    this.status = 0; // Unlocked\r\n  }\r\n\r\n  handleLockAlreadyLockedNotification(notification) {\r\n    this.lockId = notification.lockId;\r\n    this.owner = notification.user;\r\n    this.host = notification.host;\r\n    this.lockDescription = notification.description;\r\n    this.status = 1; // Locked\r\n\r\n    this.configAlreadyLocked = true;\r\n  }\r\n\r\n  handleLockTakeoverRejectedNotification() {\r\n    this.isWaitingForResponse = false;\r\n    this.ownerRejectedTakeover = true;\r\n  }\r\n\r\n  waitForTakeoverResponse() {\r\n    this.isWaitingForResponse = true;\r\n  }\r\n}\r\n","import axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport pick from 'lodash/pick';\nimport env from '../utils/env';\nimport logger from '../utils/logger';\n\nexport const logIn = async (username, password) => {\n  const url = `${env.authEndpoint}/login`;\n  const loginRes = await axios.post(url, { username, password });\n  const { accessToken } = loginRes.data;\n  return await authenticate(accessToken);\n};\n\nexport const authenticate = async (accessToken) => {\n  const url = `${env.authEndpoint}/auth`;\n  const authRes = await axios.post(url, { accessToken });\n  const { authToken } = authRes.data;\n  // TODO verify the token signature\n  const claims = jwtDecode(authToken);\n  const user = pick(claims, ['email', 'fullname', 'username']);\n  return { authToken, user };\n};\n\nexport const logOut =\n  (notifyGateway = true) =>\n  async () => {\n    logger.removeProxy();\n    if (notifyGateway) {\n      const url = `${env.authEndpoint}/logout`;\n      try {\n        await axios.post(url, {});\n      } catch (err) {\n        logger.warn({ err }, 'Error while calling /logout');\n      }\n    }\n  };\n","export default __webpack_public_path__ + \"static/media/pause.ea3fe966.svg\";","export default __webpack_public_path__ + \"static/media/play.f6ca6855.svg\";","import Protobuf from '../protobuf/Protobuf';\n\nexport const flattenProtobuf = (oldObject) => {\n  const permissions = new Set();\n  flattenProtobufRec(oldObject, permissions, '');\n  return permissions;\n};\n\nconst flattenProtobufRec = (currentObject, permissions, parentPath) => {\n  for (const key in currentObject.nested) {\n    const value = currentObject.nested[key];\n    const currKey = key.toLowerCase();\n    const currPath = parentPath ? `${parentPath}.${currKey}` : currKey;\n    if (!value.nested && value.fields) {\n      if (currPath === 'webapp.view') {\n        const viewTypeProtobuf = Protobuf.SvPb.lookup('ViewType');\n        for (let i = 0; i < Object.keys(viewTypeProtobuf.values).length; i++) {\n          const viewPath = `${currPath}[type=${getViewName(i)}]`;\n          addFieldValues(permissions, viewPath, value.fields);\n        }\n      } else {\n        addFieldValues(permissions, currPath, value.fields);\n      }\n    } else {\n      flattenProtobufRec(value, permissions, currPath);\n    }\n  }\n};\n\nconst addFieldValues = (permissions, path, fields) => {\n  Object.keys(fields).forEach((key) => {\n    const field = fields[key];\n    if (field.type === 'bool') {\n      const name = field.name.toLowerCase();\n      permissions.add(`${path}.${name}`);\n    }\n  });\n};\n\nexport const flattenPermissionsRec = (currentObject, permissions, parentPath) => {\n  for (const key in currentObject) {\n    const value = currentObject[key];\n    if (key.indexOf('$') !== -1) {\n      continue;\n    }\n    const currPath = parentPath ? `${parentPath}.${key}` : key;\n    if (Array.isArray(value)) {\n      if (currPath === 'webapp.view') {\n        for (let i = 0; i < value.length; ++i) {\n          const entry = value[i];\n          const viewPath = `${currPath}[type=${getViewName(entry.type)}]`;\n          flattenPermissionsRec(entry, permissions, viewPath);\n        }\n      }\n    } else if (typeof value === 'object') {\n      flattenPermissionsRec(value, permissions, currPath);\n    } else if (typeof value === 'boolean' && value) {\n      permissions.add(currPath);\n    } else {\n      //boolean = false\n      //another type, p.e. number\n    }\n  }\n};\n\nconst createObjectFromFlattenedPermissions = (a, obj, v) => {\n  var k = a.shift();\n\n  if (a.length > 0) {\n    if (k.startsWith('view[')) {\n      const type = getViewId(k.substring(k.indexOf('[type=') + 6, k.indexOf(']')));\n\n      if (!obj.view) {\n        obj.view = [];\n      }\n      const index = obj.view.findIndex((view) => view.type === type);\n      if (index !== -1) {\n        obj.view[index] = { ...obj.view[index], [a[0]]: true };\n      } else {\n        obj.view.push({ type, [a[0]]: true });\n      }\n    } else {\n      if (Object(obj[k]) !== obj[k]) {\n        obj[k] = {};\n      }\n\n      createObjectFromFlattenedPermissions(a, obj[k], v);\n    }\n  } else {\n    obj[k] = true;\n  }\n};\n\nexport const getGroupPermissionsFromFlattenedPermissions = (flattenedPermissions) => {\n  const result = [];\n  flattenedPermissions.forEach((groupEntry, name) => {\n    const permissionForUser = {};\n    groupEntry.groupPermissions.forEach((permission) => {\n      createObjectFromFlattenedPermissions(\n        permission.split('.'),\n        permissionForUser,\n        permissionForUser[permission],\n      );\n    });\n    result.push({\n      name,\n      permissions: permissionForUser,\n    });\n  });\n\n  return result;\n};\n\nexport const getViewName = (viewType) => {\n  switch (viewType) {\n    case 0:\n      return 'AnyView';\n    case 1:\n      return 'ImageView';\n    case 2:\n      return 'ListView';\n    case 3:\n      return 'ImageStripView';\n    case 4:\n      return 'ParameterView';\n    case 5:\n      return 'ToolSetView';\n    default:\n      return '';\n  }\n};\n\nexport const getViewId = (viewType) => {\n  switch (viewType) {\n    case 'AnyView':\n      return 0;\n    case 'ImageView':\n      return 1;\n    case 'ListView':\n      return 2;\n    case 'ImageStripView':\n      return 3;\n    case 'ParameterView':\n      return 4;\n    case 'ToolSetView':\n      return 5;\n    default:\n      return 0;\n  }\n};\n\nexport const canSaveConfig = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.configuration.save') : false;\n};\n\nexport const canReadLogs = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.logs.read') : false;\n};\n\nexport const canAddViewSet = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.add') : false;\n};\n\nexport const canReadViewSet = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.read') : false;\n};\n\nexport const canEditViewSet = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.edit') : false;\n};\n\nexport const canDeleteViewSet = (myPermissions) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.remove') : false;\n};\n\nexport const canAddImageView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadImageView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditImageView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteImageView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddListView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadListView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditListView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteListView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddImageStripView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadImageStripView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditImageStripView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteImageStripView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddParameterView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadParameterView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditParameterView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteParameterView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddToolSetView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadToolSetView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditToolSetView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteToolSetView = (myPermissions) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canReadSVOMode = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.mode.read') : false;\n};\n\nexport const canEditSVOMode = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.mode.edit') : false;\n};\n\nexport const canReadInspectionState = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.inspectionstate.read') : false;\n};\n\nexport const canEditInspectionState = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.inspectionstate.edit') : false;\n};\n\nexport const canReadValue = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.value.read') : false;\n};\n\nexport const canEditValue = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.value.edit') : false;\n};\n\nexport const canReadTool = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.read') : false;\n};\n\nexport const canEditTool = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.edit') : false;\n};\n\nexport const canAddTool = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.add') : false;\n};\n\nexport const canDeleteTool = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.remove') : false;\n};\n\nexport const canReadUserManagement = (myPermissions) => {\n  return myPermissions ? myPermissions.has('usermanagement.userpermissions.read') : false;\n};\n\nexport const canEditUserManagement = (myPermissions) => {\n  return myPermissions ? myPermissions.has('usermanagement.userpermissions.edit') : false;\n};\n\nexport const canReadSVOConfiguration = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.configuration.read') : false;\n};\n\nexport const canWriteSVOConfiguration = (myPermissions) => {\n  return myPermissions ? myPermissions.has('svobserver.configuration.write') : false;\n};\n","import React, { Component } from 'react';\nimport { Select, OutlinedInput, InputLabel, FormControl } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst styles = () => ({\n  input: {\n    height: 37,\n    fontSize: '1.4rem',\n  },\n  select: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    fontSize: '1.4rem',\n  },\n  label: {\n    transform: 'translate(14px, 11px) scale(1)',\n    fontSize: '1.4rem',\n  },\n});\n\nclass OutlinedSelection extends Component {\n  state = {\n    labelWidth: 0,\n  };\n\n  componentDidMount() {\n    this.setState({\n      labelWidth: this.InputLabelRef.offsetWidth,\n    });\n  }\n\n  renderOptions = (values, id, labels) => {\n    labels = labels || values;\n    return values.map((name, counter) => {\n      return (\n        <option value={name} key={id + counter}>\n          {labels[counter]}\n        </option>\n      );\n    });\n  };\n\n  render() {\n    const { values, labels, selectedValue, name, id, classes, disabled } = this.props;\n\n    return (\n      <FormControl variant=\"outlined\" style={{ width: '100%' }} disabled={disabled}>\n        <InputLabel\n          htmlFor={id}\n          ref={(ref) => {\n            this.InputLabelRef = ref;\n          }}\n          classes={{ outlined: classes.label }}\n        >\n          {name}\n        </InputLabel>\n        <Select\n          native\n          value={selectedValue || ''}\n          onChange={(e) => this.props.onSelectionChanged({ [id]: e.target.value })}\n          classes={{ root: classes.input }}\n          input={\n            <OutlinedInput\n              name={name}\n              labelWidth={this.state.labelWidth}\n              id={id}\n              classes={{ input: classes.select }}\n            />\n          }\n        >\n          {!disabled && this.renderOptions(values, id, labels)}\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nOutlinedSelection.defaultProps = {\n  values: [],\n  selectedValue: '',\n  name: '',\n  id: '',\n};\n\nOutlinedSelection.propTypes = {\n  values: PropTypes.array.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n  onSelectionChanged: PropTypes.func,\n  name: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default withStyles(styles)(OutlinedSelection);\n","export default class Product {\n  constructor({ history, trigger, isReject }) {\n    this.history = history;\n    this.trigger = trigger;\n    this.isReject = isReject;\n    this.useCount = 0;\n    this.images = new Map();\n    this.values = new Map();\n  }\n\n  getImage(imageId) {\n    this.checkNotReleasedYet();\n    return this.images.get(imageId);\n  }\n\n  getImages(imageIds) {\n    this.checkNotReleasedYet();\n    return (imageIds || []).map((imageId) => this.images.get(imageId));\n  }\n\n  getValue(valueId) {\n    this.checkNotReleasedYet();\n    return this.values.get(valueId);\n  }\n\n  getValuesAsString(valueIds) {\n    this.checkNotReleasedYet();\n    return (valueIds || []).map((valueId) => {\n      let value = this.values.has(valueId) && this.values.get(valueId).value;\n\n      if (value === undefined) {\n        value = '<UNAVAILABLE>';\n      }\n      return {\n        id: valueId,\n        value: value.toString(),\n      };\n    });\n  }\n\n  buildUrl(b64Data, contentType = '', sliceSize = 512) {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n\n    const blob = new Blob(byteArrays, { type: contentType });\n    return URL.createObjectURL(blob);\n  }\n\n  async addData({ images, values }) {\n    this.checkNotReleasedYet();\n\n    const imagePromises = [];\n    images.forEach(({ id, image, overlays }) => {\n      if (!this.images.has(id) && image && image.rgbData) {\n        imagePromises.push(this.initImage(id, image, overlays));\n      }\n    });\n\n    values.forEach(({ id, value }) => {\n      if (!this.values.has(id) && value) {\n        const valueStr = this.getValueFromVariant(value);\n        this.values.set(id, {\n          id,\n          value: valueStr,\n        });\n      }\n    });\n\n    await Promise.all(imagePromises);\n  }\n\n  async initImage(id, image, overlays) {\n    const { domImage, url } = await this.buildImage(image);\n    const overlayImages = await this.initOverlayImages(overlays);\n    this.images.set(id, {\n      id,\n      image,\n      domImage,\n      overlays,\n      overlayImages,\n      url,\n    });\n  }\n\n  buildImage({ rgbData, type }) {\n    return new Promise((resolve, reject) => {\n      const arrayBufferView = new Uint8Array(rgbData);\n      const blob = new Blob([arrayBufferView], { type: type || 'image/bmp' });\n      const domURL = self.URL || self.webkitURL || self; // eslint-disable-line\n      const url = domURL.createObjectURL(blob);\n      const domImage = new Image();\n      domImage.onload = () => {\n        resolve({ domImage, url });\n      };\n      domImage.onerror = (e) => {\n        domURL.revokeObjectURL(url);\n        reject(e);\n      };\n      domImage.src = url;\n    });\n  }\n\n  initOverlayImages(overlaysDesc) {\n    const promises = [];\n    ((overlaysDesc && overlaysDesc.overlays) || []).forEach((overlay) => {\n      (overlay.shapeGroups || []).forEach((shapeGroup) => {\n        (shapeGroup.shapes || []).forEach((shape) => {\n          if (shape && shape.image && shape.image.image && shape.image.image.rgbData) {\n            promises.push(\n              this.buildImage(shape.image.image).then(({ domImage, url }) => {\n                shape.image.domImage = domImage;\n                shape.image.url = url;\n                return shape.image;\n              }),\n            );\n          }\n        });\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  getValueFromVariant(v) {\n    if (!v) {\n      return undefined;\n    }\n    return v[v.data];\n  }\n\n  lock() {\n    this.useCount++;\n  }\n\n  release() {\n    this.history?.releaseProduct(this.trigger);\n  }\n\n  releaseImpl() {\n    if (this.useCount <= 0) {\n      throw new Error(`Invalid use count ${this.useCount} in Product::release()`);\n    }\n\n    this.useCount--;\n    if (this.useCount > 0) {\n      return false;\n    }\n\n    this.releaseImages();\n\n    this.images.clear();\n    this.values.clear();\n    this.history = null;\n    this.released = true;\n\n    return true;\n  }\n\n  releaseImages() {\n    this.images.forEach((image) => {\n      this.releaseImage(image);\n\n      image.overlayImages.forEach((overlayImage) => {\n        this.releaseImage(overlayImage);\n      });\n    });\n  }\n\n  releaseImage(image) {\n    if (image.domImage) {\n      image.domImage.onload = undefined;\n      image.domImage.onerror = undefined;\n      image.domImage.remove(); // explicitly remove the image from the DOM\n      image.domImage = null;\n    }\n\n    if (image.url) {\n      const domURL = self.URL || self.webkitURL || self; // eslint-disable-line\n      domURL.revokeObjectURL(image.url);\n    }\n  }\n\n  checkNotReleasedYet() {\n    if (this.released) {\n      throw new Error('Can not use Product after releasing it!');\n    }\n  }\n}\n","import React from 'react';\n\nimport logger from '../../../utils/logger';\nimport IconButton from '../IconButton';\n\nimport './style.scss';\n\nexport const ToggleButton = ({\n  id,\n  intl,\n  intlId,\n  iconUrl,\n  onClickHandler,\n  intlIdAlternative,\n  iconUrlAlternative,\n  onClickHandlerAlternative,\n  showAlternative,\n}) => {\n  if (\n    !intl ||\n    !intlId ||\n    !iconUrl ||\n    !onClickHandler ||\n    !intlIdAlternative ||\n    !iconUrlAlternative ||\n    !onClickHandlerAlternative\n  ) {\n    logger.error('ToggleButton component did not receive required parameters');\n  }\n\n  let button = {};\n  if (showAlternative) {\n    button = (\n      <IconButton\n        key={id}\n        tooltip={intl.messages[`${intlIdAlternative}`]}\n        onClick={() => {\n          onClickHandlerAlternative();\n        }}\n        iconUrl={iconUrlAlternative}\n      />\n    );\n  } else {\n    button = (\n      <IconButton\n        key={intlId}\n        tooltip={intl.messages[`${intlId}`]}\n        onClick={() => {\n          onClickHandler();\n        }}\n        iconUrl={iconUrl}\n      />\n    );\n  }\n\n  return button;\n};\n","export default __webpack_public_path__ + \"static/media/help.64b70362.svg\";","export default __webpack_public_path__ + \"static/media/download.c1bdaf13.svg\";","export default __webpack_public_path__ + \"static/media/info.6a606506.svg\";","export default __webpack_public_path__ + \"static/media/show.6ac709c0.svg\";","export default __webpack_public_path__ + \"static/media/plus.72585b6a.svg\";","export default __webpack_public_path__ + \"static/media/save.a6a0528c.svg\";","export default __webpack_public_path__ + \"static/media/delete.85c719f0.svg\";","export default __webpack_public_path__ + \"static/media/image.ab9e385a.svg\";","export default __webpack_public_path__ + \"static/media/logo.a5b69c2a.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nconst Logo = ({ src, title }) => (\n  <div className=\"logo-wrapper\">\n    <img src={src} alt={title} />\n  </div>\n);\n\nLogo.propTypes = {\n  src: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Logo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass OutsideClickHandler extends Component {\n  componentDidMount() {\n    window.addEventListener('click', this.onClickOutside, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.onClickOutside, true);\n  }\n\n  onClickOutside = (e) => {\n    if (!this.wrappedNode || !this.wrappedNode.contains(e.target)) {\n      this.props.onOutsideClick(e);\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"outside-click-handler-wrapper\"\n        ref={(ref) => {\n          this.wrappedNode = ref;\n        }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nOutsideClickHandler.propTypes = {\n  children: PropTypes.node.isRequired,\n  onOutsideClick: PropTypes.func.isRequired,\n};\n\nexport default OutsideClickHandler;\n","import modes from '../utils/modes';\nimport Protobuf from './Protobuf';\n\nexport const mapProtobufDeviceModeToWebAppMode = (deviceMode) => {\n  switch (deviceMode) {\n    case Protobuf.SvPb.DeviceModeType.available:\n      return modes.unknownMode.id;\n    case Protobuf.SvPb.DeviceModeType.runMode:\n      return modes.runMode.id;\n    case Protobuf.SvPb.DeviceModeType.stopMode:\n      return modes.stopMode.id;\n    case Protobuf.SvPb.DeviceModeType.regressionMode:\n      return modes.regressionMode.id;\n    case Protobuf.SvPb.DeviceModeType.testMode:\n      return modes.testMode.id;\n    case Protobuf.SvPb.DeviceModeType.editMode:\n      return modes.editMode.id;\n    case Protobuf.SvPb.DeviceModeType.modeChanging:\n      return modes.unknownMode.id;\n    default:\n      throw new Error(`Unsupported device mode ${deviceMode}`);\n  }\n};\n\nexport const mapWebAppModeToProtobufDeviceMode = (mode) => {\n  switch (mode) {\n    case modes.unknownMode.id:\n      return Protobuf.SvPb.DeviceModeType.available;\n    case modes.runMode.id:\n      return Protobuf.SvPb.DeviceModeType.runMode;\n    case modes.stopMode.id:\n      return Protobuf.SvPb.DeviceModeType.stopMode;\n    case modes.regressionMode.id:\n      return Protobuf.SvPb.DeviceModeType.regressionMode;\n    case modes.testMode.id:\n      return Protobuf.SvPb.DeviceModeType.testMode;\n    case modes.editMode.id:\n      return Protobuf.SvPb.DeviceModeType.editMode;\n    default:\n      throw new Error(`Unsupported mode ${mode}`);\n  }\n};\n\nexport const mapLogLevelNameToProtobufLogSeverity = (levelName) => {\n  switch (levelName) {\n    case 'trace':\n      return Protobuf.SvPb.LogSeverity.trace;\n    case 'debug':\n      return Protobuf.SvPb.LogSeverity.debug;\n    case 'info':\n      return Protobuf.SvPb.LogSeverity.info;\n    case 'warn':\n      return Protobuf.SvPb.LogSeverity.warning;\n    case 'error':\n      return Protobuf.SvPb.LogSeverity.error;\n    default:\n      return Protobuf.SvPb.LogSeverity.error;\n  }\n};\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport union from 'lodash/union';\nimport PropTypes from 'prop-types';\nimport Tree, { TreeNode } from 'rc-tree';\nimport shortId from 'shortid';\n\nimport { isObjectValid } from '../../utils/objectValidator';\n\nimport './styles.scss';\n\nconst styles = () => ({\n  label: {\n    fontSize: '1.4rem',\n    transform: 'translate(10px, 12px) scale(1)',\n  },\n});\n\nconst NUMBER_FILTER_RESULTS = 100;\nconst NUMBER_OF_SELECTABLE_VALUES = 100;\n\nclass ObjectSelector extends React.Component {\n  state = {\n    expandedKeys: [isObjectValid(() => this.props.data.children[0].location)],\n    expandedFilteredKeys: [],\n    checkedKeys: [],\n    filteredCheckedKeys: [],\n    inputValue: '',\n    filteredLocations: [],\n    filteredTree: undefined,\n    countedVisibleValues: 0,\n    countedPossibleValues: 0,\n    selectionLimitReached: false,\n    halfChecked: [],\n  };\n\n  componentDidMount() {\n    this.setSelection();\n    this.setExpandedKeys();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { selection, expandedKeys } = this.props;\n\n    if (selection && prevProps.selection !== selection && selection.length > 0) {\n      this.setSelection();\n    }\n\n    if (expandedKeys && prevProps.expandedKeys !== expandedKeys && expandedKeys.length > 0) {\n      this.setExpandedKeys();\n    }\n  }\n\n  setSelection = () => {\n    const { selection } = this.props;\n\n    this.setState({\n      checkedKeys: selection,\n    });\n  };\n\n  setExpandedKeys = () => {\n    const { expandedKeys } = this.props;\n    if (expandedKeys) {\n      this.setState({\n        expandedKeys: expandedKeys,\n      });\n    }\n  };\n\n  onExpand = (expandedKeys) => {\n    if (this.state.inputValue) {\n      this.setState({\n        expandedFilteredKeys: expandedKeys,\n      });\n    } else {\n      this.props.onExpand(expandedKeys);\n      this.setState({\n        expandedKeys,\n      });\n    }\n  };\n\n  onCheck = (checkedKeys, checkProps) => {\n    let limitedCheckedKeys = this.limitCheckedKeys(checkedKeys, NUMBER_OF_SELECTABLE_VALUES);\n    limitedCheckedKeys = this.checkUnselectingAll(limitedCheckedKeys, checkProps.node);\n\n    const filteredCheckedKeys = limitedCheckedKeys.slice();\n    if (this.state.inputValue) {\n      limitedCheckedKeys = this.updateCheckedKeys(limitedCheckedKeys);\n    }\n\n    limitedCheckedKeys = this.ensureSingleSelection(limitedCheckedKeys);\n\n    this.setChangedIds(limitedCheckedKeys, checkProps);\n    this.setState({\n      checkedKeys: limitedCheckedKeys,\n      filteredCheckedKeys,\n      selectionLimitReached: limitedCheckedKeys.length === NUMBER_OF_SELECTABLE_VALUES,\n    });\n  };\n\n  limitCheckedKeys = (keys, limit) => {\n    const halfChecked = [];\n    if (!limit || limit > keys.length) {\n      limit = keys.length;\n    }\n    const result = [];\n    let condition = Math.abs(limit);\n    let i = 0;\n    while (condition !== 0 && i < keys.length) {\n      if (parseInt(keys[i], 10)) {\n        result.push(keys[i]);\n        condition--;\n      } else {\n        halfChecked.push(keys[i]);\n      }\n\n      i++;\n    }\n\n    this.setState({ halfChecked });\n\n    return result;\n  };\n\n  checkUnselectingAll = (keys, checkedNode) => {\n    const halfChecked = this.state.halfChecked.slice();\n    if (checkedNode.halfChecked) {\n      if (halfChecked.includes(checkedNode.title)) {\n        this.setState({ halfChecked: [] });\n        keys = [];\n      } else {\n        halfChecked.push(checkedNode.title);\n        this.setState({ halfChecked });\n      }\n    }\n    return keys;\n  };\n\n  updateCheckedKeys = (checkedKeys) => {\n    const newSelectedKeys = checkedKeys.filter(\n      (key) => !this.state.filteredCheckedKeys.includes(key),\n    );\n    const newDeselectedKeys = this.state.filteredCheckedKeys.filter(\n      (key) => !checkedKeys.includes(key),\n    );\n    checkedKeys = union(newSelectedKeys, this.state.checkedKeys);\n    checkedKeys = checkedKeys.filter((key) => !newDeselectedKeys.includes(key));\n\n    return checkedKeys;\n  };\n\n  ensureSingleSelection = (checkedKeys) => {\n    if (this.props.singleSelect) {\n      return [checkedKeys[checkedKeys.length - 1]] || [];\n    } else {\n      return checkedKeys;\n    }\n  };\n\n  setChangedIds = (ids, checkProps) => {\n    const filteredIds = (ids || []).filter((id) => parseInt(id, 10) > 0);\n    if (this.props.singleSelect) {\n      const checkedLocation = this.getSelectedLocation(checkProps);\n      this.props.onChange(filteredIds[filteredIds.length - 1] || 0, checkedLocation);\n    } else {\n      this.props.onChange(filteredIds);\n    }\n  };\n\n  onChangeFilter = (event) => {\n    let { data } = this.props;\n    let filteredTree = undefined;\n\n    const inputValue = event.target.value || '';\n    const filteredInputValue = this.cutFilterIgnoreWords(inputValue.toLowerCase()) || '';\n    const initialChars = filteredInputValue.split('');\n    const ctx = {\n      abortRecursion: false,\n      expandedFilteredKeys: [],\n      filteredLocations: [],\n      filteredKeys: [],\n      countSelection: 0,\n    };\n    const countCtx = {\n      countMatches: 0,\n    };\n\n    if (initialChars.length) {\n      const copy = initialChars.slice();\n      const children = [];\n      this.filterNodesRecursively(data, initialChars, children, ctx);\n      this.countMatchingNodesRecursively(data, copy, countCtx);\n      filteredTree = children.length > 0 ? children[0] : { children: [] };\n    }\n\n    const filteredCheckedKeys = this.state.checkedKeys.filter((key) =>\n      ctx.filteredKeys.includes(key),\n    );\n\n    this.setState({\n      filteredLocations: ctx.filteredLocations,\n      filteredTree,\n      filteredCheckedKeys,\n      expandedFilteredKeys: ctx.expandedFilteredKeys,\n      inputValue,\n      countedVisibleValues: ctx.countSelection,\n      countedPossibleValues: countCtx.countMatches,\n    });\n  };\n\n  cutFilterIgnoreWords = (filteredInput) => {\n    const { filterIgnore } = this.props;\n\n    if (filterIgnore) {\n      filterIgnore.forEach((filter) => {\n        filter = filter.toLowerCase();\n        if (filteredInput.startsWith(filter)) {\n          filteredInput = filteredInput.replace(filter, '');\n\n          if (filteredInput.startsWith('.')) {\n            filteredInput = filteredInput.slice(1);\n          }\n        }\n      });\n    }\n\n    return filteredInput;\n  };\n\n  filterNodesRecursively = (node, chars, shadowChildren, ctx) => {\n    if (!node) {\n      return false;\n    }\n    let positions = [];\n    let remainingChars = [];\n    if (chars.length > 0) {\n      remainingChars = this.consumeChars(node.name, chars, positions);\n    }\n\n    if (remainingChars.length === 0) {\n      ctx.filteredLocations.push(node.location);\n      if (node.id && node.children.length === 0) {\n        ctx.filteredKeys.push(node.id);\n      }\n    }\n\n    if (ctx.filteredKeys.length >= NUMBER_FILTER_RESULTS) {\n      ctx.abortRecursion = true;\n    }\n\n    const children = [];\n    let childMatches = false;\n    if (node.children && !ctx.abortRecursion) {\n      node.children.forEach((child) => {\n        if (\n          !ctx.abortRecursion &&\n          this.filterNodesRecursively(child, remainingChars, children, ctx)\n        ) {\n          childMatches = true;\n        }\n      });\n    }\n\n    if (childMatches) {\n      ctx.expandedFilteredKeys.push(node.location);\n    }\n\n    const isMatchingSubtree = remainingChars.length === 0 || childMatches;\n    if (isMatchingSubtree) {\n      if (node.children.length === 0) {\n        ctx.countSelection++;\n      }\n      const shadowNode = this.createFilteredShadowNode(node, positions, children);\n      shadowChildren.push(shadowNode);\n    }\n    return isMatchingSubtree;\n  };\n\n  countMatchingNodesRecursively = (node, chars, countCtx) => {\n    if (!node) {\n      return false;\n    }\n    let positions = [];\n    let remainingChars = [];\n    if (chars.length > 0) {\n      remainingChars = this.consumeChars(node.name, chars, positions);\n    }\n\n    let childMatches = false;\n    if (node.children) {\n      node.children.forEach((child) => {\n        if (this.countMatchingNodesRecursively(child, remainingChars, countCtx)) {\n          childMatches = true;\n        }\n      });\n    }\n\n    const isMatchingSubtree = remainingChars.length === 0 || childMatches;\n    if (isMatchingSubtree && node.children.length === 0) {\n      countCtx.countMatches++;\n    }\n\n    return isMatchingSubtree;\n  };\n\n  consumeChars = (str, chars, positions) => {\n    str = str.toLowerCase();\n    let prevIdx = 0;\n    while (chars.length) {\n      if (chars[0] === '.') {\n        chars = chars.slice(1);\n        break;\n      }\n\n      const idx = str.indexOf(chars[0], prevIdx);\n      if (idx === -1) {\n        break;\n      }\n      positions.push(idx);\n      chars = chars.slice(1);\n      prevIdx = idx + 1;\n    }\n    return chars;\n  };\n\n  createFilteredShadowNode = (node, positions, children) => {\n    const styledText = this.highlightAtPositions(node.name, positions);\n    const shadowNode = {\n      ...node,\n      children,\n      styledText,\n    };\n    return shadowNode;\n  };\n\n  highlightAtPositions = (word, positions) => {\n    let result = [];\n    for (let i = 0; i < word.length; i++) {\n      if (positions.includes(i)) {\n        result.push([\n          <span className=\"filteredText\" key={`strong${shortId.generate()}`}>\n            {word.charAt(i)}\n          </span>,\n        ]);\n      } else {\n        result.push([word.charAt(i)]);\n      }\n    }\n    return [<div key={`div${shortId.generate()}`}>{result}</div>];\n  };\n\n  createTreeNodes = (node, loop) => {\n    if (node.children && node.children.length > 0) {\n      return (\n        <TreeNode\n          // since nodes don't contain a value to subscribe and also don't have a id, we use the location as key\n          // we'll need to filter invalid ids from checkedKeys\n          key={node.location}\n          title={node.styledText || node.name}\n          disableCheckbox={this.props.singleSelect}\n        >\n          {node.children.map(loop)}\n        </TreeNode>\n      );\n    }\n    return <TreeNode key={node.id} title={node.styledText || node.name} location={node.location} />;\n  };\n\n  getSelectedLocation = (childProps) => {\n    if (isObjectValid(() => childProps.node.location)) {\n      return childProps.node.location;\n    }\n    return '';\n  };\n\n  render() {\n    const {\n      checkedKeys,\n      expandedKeys,\n      expandedFilteredKeys,\n      filteredTree,\n      filteredCheckedKeys,\n      inputValue,\n      countedVisibleValues,\n      countedPossibleValues,\n      selectionLimitReached,\n    } = this.state;\n    const loop = (node) => {\n      if (!node) {\n        return;\n      }\n      return this.createTreeNodes(node, loop);\n    };\n\n    const className = inputValue ? 'unfilteredText' : '';\n    const expanded = inputValue ? expandedFilteredKeys : expandedKeys;\n    const rootNode = inputValue ? filteredTree : this.props.data;\n    const visibleCheckedKeys = inputValue ? filteredCheckedKeys : checkedKeys;\n    const treeNodes = rootNode.name ? loop(rootNode) : rootNode.children.map(loop);\n\n    return (\n      <div className=\"object-selector\">\n        <div className=\"topmenu-wrapper\">\n          <div className=\"w100 text\">\n            <div className=\"infotext\">\n              <div className=\"pr2\">Select objects:</div>\n              {selectionLimitReached ? (\n                <div className=\"warning pr2\">\n                  {`(Selection limit of ${NUMBER_OF_SELECTABLE_VALUES} items reached)`}\n                </div>\n              ) : undefined}\n              {inputValue && treeNodes.length > 0 ? (\n                <div className=\"warning\">\n                  {`(${countedVisibleValues} of ${countedPossibleValues} matches are shown)`}\n                </div>\n              ) : undefined}\n            </div>\n          </div>\n          <div className=\"w100\">\n            <TextField\n              label=\"Filter\"\n              type=\"text\"\n              variant=\"outlined\"\n              style={{ width: '100%' }}\n              onChange={this.onChangeFilter}\n              value={this.state.inputValue}\n              InputLabelProps={{ classes: { root: this.props.classes.label } }}\n            />\n          </div>\n        </div>\n        <div>\n          {treeNodes.length > 0 ? (\n            <Tree\n              checkable\n              showLine\n              showIcon={false}\n              selectable={false}\n              onExpand={this.onExpand}\n              expandedKeys={expanded}\n              checkedKeys={visibleCheckedKeys}\n              onCheck={this.onCheck}\n              className={className}\n            >\n              {treeNodes}\n            </Tree>\n          ) : (\n            <div className=\"text\">No filter results</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nObjectSelector.defaultProps = {\n  singleSelect: false,\n  onChange: () => void 0,\n  onExpand: () => void 0,\n  selection: [],\n};\n\nObjectSelector.propTypes = {\n  singleSelect: PropTypes.bool,\n  onChange: PropTypes.func,\n  onExpand: PropTypes.func,\n  selection: PropTypes.array,\n};\n\nexport default withStyles(styles)(ObjectSelector);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\n\nconst ProxyType = PropTypes.shape({});\n\nexport default ProxyType;\n","import Protobuf from '../protobuf/Protobuf';\nimport { addVariableValueShouldBeInTheRangeNotification } from '../redux/actions/index';\nimport modes from '../utils/modes';\nimport logger from './logger';\n\nconst MID_SHORT_SIZE = 20;\n\nexport const drawInspectionOverlays = ({\n  drawTarget,\n  zoomFactor,\n  overlays,\n  boundingCoordinates,\n  width,\n  height,\n  currentMode,\n}) => {\n  if (!overlays || overlays.length === 0) {\n    logger.error('drawInspectionOverlays expects overlays but did not receive');\n    return;\n  }\n  const targetContext = drawTarget.getContext('2d');\n  zoomFactor = zoomFactor || 1;\n  if (overlays && overlays.length > 0) {\n    targetContext.setLineDash([]);\n    overlays.forEach((overlay) => {\n      const colorInt = (overlay.color && overlay.color.value) || 0;\n      const colorString = getRgbaString(colorInt);\n      targetContext.fillStyle = colorString;\n      const fontSize = 10 / zoomFactor;\n      targetContext.lineWidth = 1 / zoomFactor;\n      targetContext.font = fontSize + 'px Arial';\n      targetContext.strokeStyle = colorString;\n\n      const boundingShape = overlay.boundingShape.shape;\n\n      switch (boundingShape) {\n        case Protobuf.SvPb.OverlayBoundingShape.fields.rect.name:\n          renderRectangleTool(\n            targetContext,\n            zoomFactor,\n            fontSize,\n            colorString,\n            overlay,\n            boundingCoordinates,\n            currentMode,\n          );\n          break;\n        case Protobuf.SvPb.OverlayBoundingShape.fields.slice.name:\n          renderSliceTool(targetContext, overlay, boundingCoordinates);\n          break;\n        case Protobuf.SvPb.OverlayBoundingShape.fields.perspective.name:\n          renderPerspectiveTool(\n            targetContext,\n            zoomFactor,\n            overlay,\n            boundingCoordinates,\n            width,\n            height,\n          );\n          break;\n        default:\n          logger.error('Unknown boundingShape received');\n          return;\n      }\n    });\n  }\n};\n\nconst renderRectangleTool = (\n  targetContext,\n  zoomFactor,\n  fontSize,\n  colorString,\n  overlay,\n  boundingCoordinates,\n  currentMode,\n) => {\n  const boundingBoxX = Math.abs(boundingCoordinates.minX) + overlay.boundingShape.rect.x.value || 0;\n  const boundingBoxY = Math.abs(boundingCoordinates.minY) + overlay.boundingShape.rect.y.value || 0;\n  const boundingBoxWidth = overlay.boundingShape.rect.w.value || 0;\n  const boundingBoxHeight = overlay.boundingShape.rect.h.value || 0;\n  const { displayBounding, shapeGroups, name: overlayTitle } = overlay;\n\n  const angle = overlay.boundingShape.rect.angle && overlay.boundingShape.rect.angle.value;\n\n  targetContext.fillText(overlayTitle, boundingBoxX, boundingBoxY - 10 / zoomFactor);\n\n  shapeGroups &&\n    shapeGroups.forEach((shapeGroup) => {\n      // Do not show detailLevel 2 OverlayShapes in run mode\n      if (shapeGroup.detailLevel === 2 && currentMode === modes.runMode.id) {\n        return;\n      }\n\n      shapeGroup.shapes.forEach((shape) => {\n        const shapeColor = shape.color && shape.color.value;\n        const shapeColorString = getRgbaString(shapeColor);\n        const { shape: shapeType } = shape;\n\n        const useRotation =\n          angle && angle > 0 && shapeType !== Protobuf.SvPb.OverlayShape.fields.arrow.name;\n\n        if (useRotation) {\n          rotateContextByAngleAroundPoint(targetContext, angle, boundingBoxX, boundingBoxY);\n        }\n\n        switch (shapeType) {\n          case Protobuf.SvPb.OverlayShape.fields.arrow.name:\n            {\n              const x1 = Math.abs(boundingCoordinates.minX) + shape.arrow.x1.value || 0;\n              const y1 = Math.abs(boundingCoordinates.minY) + shape.arrow.y1.value || 0;\n              const x2 = Math.abs(boundingCoordinates.minX) + shape.arrow.x2.value || 0;\n              const y2 = Math.abs(boundingCoordinates.minY) + shape.arrow.y2.value || 0;\n\n              const calcAngleDegrees = (x, y) => (Math.atan2(y, x) * 180) / Math.PI;\n\n              const angleBetweenP1andP2 = calcAngleDegrees(x2 - x1, y2 - y1);\n\n              targetContext.beginPath();\n              targetContext.strokeStyle = shapeColorString || colorString;\n\n              // line\n              targetContext.moveTo(x1, y1);\n              targetContext.lineTo(x2, y2);\n\n              // arrow\n              targetContext.moveTo(x2, y2);\n              // arrow length\n              const r = 15;\n              // calculate one side of arrow and convert to deg\n              const theta1 = (Math.PI * (angleBetweenP1andP2 + 135)) / 180.0;\n              targetContext.lineTo(x2 + r * Math.cos(theta1), y2 + r * Math.sin(theta1));\n\n              targetContext.moveTo(x2, y2);\n              // calculate another side of arrow and convert to deg\n              const theta2 = (Math.PI * (angleBetweenP1andP2 - 135)) / 180.0;\n              targetContext.lineTo(x2 + r * Math.cos(theta2), y2 + r * Math.sin(theta2));\n\n              targetContext.stroke();\n              targetContext.closePath();\n            }\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.rectArray.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n            shape.rectArray.rectArray.forEach((rect) => {\n              const rAngle = -rect.angle;\n              if (rAngle && rAngle < 0) {\n                rotateContextByAngleAroundPoint(\n                  targetContext,\n                  rAngle,\n                  boundingBoxX + rect.x,\n                  boundingBoxY + rect.y,\n                );\n              }\n              targetContext.rect(\n                boundingBoxX + rect.x || 0,\n                boundingBoxY + rect.y || 0,\n                rect.w || 0,\n                rect.h || 0,\n              );\n              if (rAngle && rAngle < 0) {\n                targetContext.restore();\n              }\n            });\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.graph.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n\n            if (shape.graph.x.length === shape.graph.y.length && shape.graph.x.length > 0) {\n              targetContext.moveTo(\n                boundingBoxX + (shape.graph.x[0] * boundingBoxWidth) / shape.graph.maxValueX,\n                boundingBoxY + (shape.graph.y[0] * boundingBoxHeight) / shape.graph.maxValueY,\n              );\n              for (let i = 0; i < shape.graph.x.length; i++) {\n                targetContext.lineTo(\n                  boundingBoxX + (shape.graph.x[i] * boundingBoxWidth) / shape.graph.maxValueX,\n                  boundingBoxY +\n                    boundingBoxHeight -\n                    (shape.graph.y[i] * boundingBoxHeight) / shape.graph.maxValueY,\n                ); //x\n              }\n            }\n\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.marker.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n\n            if (shape.marker.orientationType === 1) {\n              if (shape.marker.sizeType === 1) {\n                const strokeHeight = MID_SHORT_SIZE;\n                targetContext.moveTo(\n                  boundingBoxX + shape.marker.value.value,\n                  boundingBoxY + boundingBoxHeight / 2 - strokeHeight / 2,\n                );\n                targetContext.lineTo(\n                  boundingBoxX + shape.marker.value.value,\n                  boundingBoxY + boundingBoxHeight / 2 + strokeHeight / 2,\n                );\n              } else {\n                targetContext.moveTo(\n                  boundingBoxX +\n                    (shape.marker.value.value * boundingBoxWidth) / shape.marker.maxValue +\n                    1,\n                  boundingBoxY,\n                );\n                targetContext.lineTo(\n                  boundingBoxX +\n                    (shape.marker.value.value * boundingBoxWidth) / shape.marker.maxValue +\n                    1,\n                  boundingBoxY + boundingBoxHeight,\n                );\n              }\n            } else {\n              if (shape.marker.sizeType === 1) {\n                const strokeWidth = MID_SHORT_SIZE;\n                targetContext.moveTo(\n                  boundingBoxX + boundingBoxWidth / 2 - strokeWidth / 2,\n                  boundingBoxY + shape.marker.value.value,\n                );\n                targetContext.lineTo(\n                  boundingBoxX + boundingBoxWidth / 2 + strokeWidth / 2,\n                  boundingBoxY + shape.marker.value.value,\n                );\n              } else {\n                targetContext.moveTo(\n                  boundingBoxX,\n                  boundingBoxY +\n                    boundingBoxHeight -\n                    (shape.marker.value.value * boundingBoxHeight) / shape.marker.maxValue +\n                    1,\n                );\n                targetContext.lineTo(\n                  boundingBoxX + boundingBoxWidth,\n                  boundingBoxY +\n                    boundingBoxHeight -\n                    (shape.marker.value.value * boundingBoxHeight) / shape.marker.maxValue +\n                    1,\n                );\n              }\n            }\n\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.markers.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n\n            if (shape.markers.orientationType === 1) {\n              if (shape.markers.sizeType === 1) {\n                const strokeWidth = MID_SHORT_SIZE;\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(\n                    boundingBoxX + shape.markers.value[i],\n                    boundingBoxY + boundingBoxHeight / 2 - strokeWidth / 2,\n                  );\n                  targetContext.lineTo(\n                    boundingBoxX + shape.markers.value[i],\n                    boundingBoxY + boundingBoxHeight / 2 + strokeWidth / 2,\n                  );\n                }\n              } else {\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(boundingBoxX + shape.markers.value[i], boundingBoxY);\n                  targetContext.lineTo(\n                    boundingBoxX + shape.markers.value[i],\n                    boundingBoxY + boundingBoxHeight,\n                  );\n                }\n              }\n            } else {\n              if (shape.markers.sizeType === 1) {\n                const strokeHeight = MID_SHORT_SIZE;\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(\n                    boundingBoxX + boundingBoxWidth / 2 - strokeHeight / 2,\n                    boundingBoxY + shape.markers.value[i],\n                  );\n                  targetContext.lineTo(\n                    boundingBoxX + boundingBoxWidth / 2 + strokeHeight / 2,\n                    boundingBoxY + shape.markers.value[i],\n                  );\n                }\n              } else {\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(boundingBoxX, boundingBoxY + shape.markers.value[i]);\n                  targetContext.lineTo(\n                    boundingBoxX + boundingBoxWidth,\n                    boundingBoxY + shape.markers.value[i],\n                  );\n                }\n              }\n            }\n\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.blockMarker.name:\n            {\n              const colors = shape.blockMarker.colors;\n              const changePos = shape.blockMarker.changePos;\n              let currentPos = 0;\n\n              for (let i = 0; i <= changePos.length; i++) {\n                targetContext.beginPath();\n                targetContext.lineWidth = 10 / zoomFactor;\n                targetContext.strokeStyle = getRgbaString(colors[i % colors.length]);\n                targetContext.moveTo(\n                  boundingBoxX + currentPos,\n                  boundingBoxY + boundingBoxHeight / 2,\n                );\n\n                if (i < changePos.length) {\n                  targetContext.lineTo(\n                    boundingBoxX + changePos[i],\n                    boundingBoxY + boundingBoxHeight / 2,\n                  );\n                } else {\n                  targetContext.lineTo(\n                    boundingBoxX + boundingBoxWidth,\n                    boundingBoxY + boundingBoxHeight / 2,\n                  );\n                }\n\n                currentPos = changePos[i];\n                targetContext.stroke();\n                targetContext.closePath();\n                targetContext.lineWidth = 1 / zoomFactor;\n              }\n            }\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.image.name:\n            {\n              const { domImage, x, y, w, h } = shape.image;\n              if (domImage) {\n                // TODO incorporate boundingBoxWidth and boundingBoxHeight\n                targetContext.drawImage(\n                  domImage,\n                  boundingBoxX + ((x && x.value) || 0),\n                  boundingBoxY + ((y && y.value) || 0),\n                  (w && w.value) || 100, // TODO better fallback than 100!\n                  (h && h.value) || 100, // TODO better fallback than 100!\n                );\n              }\n            }\n            break;\n\n          default:\n            logger.warn('Received unknown overlay shape', shapeType);\n            break;\n        }\n        if (useRotation) {\n          targetContext.restore();\n        }\n      });\n    });\n\n  if (displayBounding) {\n    if (angle && angle > 0) {\n      rotateContextByAngleAroundPoint(targetContext, angle, boundingBoxX, boundingBoxY);\n    }\n\n    targetContext.save();\n    targetContext.beginPath();\n    targetContext.strokeStyle = colorString;\n    targetContext.rect(boundingBoxX, boundingBoxY, boundingBoxWidth, boundingBoxHeight);\n    targetContext.stroke();\n    targetContext.closePath();\n\n    if (angle && angle > 0) {\n      targetContext.restore();\n    }\n  }\n\n  targetContext.restore();\n  const maxOverlayTextX = boundingBoxX + targetContext.measureText(overlayTitle).width;\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    boundingBoxX,\n    boundingBoxY - fontSize,\n    Math.max(boundingBoxX + boundingBoxWidth, maxOverlayTextX),\n    boundingBoxY + boundingBoxHeight,\n  );\n};\n\nconst rotateContextByAngleAroundPoint = (targetContext, angle, x, y) => {\n  targetContext.save();\n  targetContext.translate(x, y);\n  targetContext.rotate((angle * Math.PI) / 180);\n  targetContext.translate(-x, -y);\n};\n\nconst renderSliceTool = (targetContext, overlay, boundingCoordinates) => {\n  const { name: overlayTitle } = overlay;\n\n  const centerX = Math.abs(boundingCoordinates.minX) + overlay.boundingShape.slice.centerX.value;\n  const centerY = Math.abs(boundingCoordinates.minY) + overlay.boundingShape.slice.centerY.value;\n  const innerRadius = overlay.boundingShape.slice.innerRadius.value;\n  const outerRadius = overlay.boundingShape.slice.outerRadius.value;\n  const startRadian = calculateRadiansFromAngle(overlay.boundingShape.slice.endAngle.value);\n  const endRadian = calculateRadiansFromAngle(overlay.boundingShape.slice.startAngle.value);\n\n  targetContext.fillText(overlayTitle, centerX - 20, centerY + 20);\n\n  targetContext.beginPath();\n\n  // Maximum a full circle\n  if (endRadian - startRadian <= 2 * Math.PI) {\n    targetContext.arc(centerX, centerY, innerRadius, startRadian, endRadian);\n    targetContext.lineTo(centerX, centerY);\n    targetContext.arc(centerX, centerY, outerRadius, startRadian, endRadian);\n    targetContext.lineTo(centerX, centerY);\n  } else {\n    targetContext.arc(centerX, centerY, innerRadius, startRadian, startRadian + 1.99 * Math.PI);\n    targetContext.arc(\n      centerX,\n      centerY,\n      innerRadius + 1,\n      startRadian + 1.99 * Math.PI,\n      startRadian + 2 * Math.PI,\n    );\n    targetContext.arc(\n      centerX,\n      centerY,\n      innerRadius + 2,\n      startRadian + 2 * Math.PI,\n      startRadian + 2.01 * Math.PI,\n    );\n    targetContext.arc(centerX, centerY, innerRadius + 3, startRadian + 2.01 * Math.PI, endRadian);\n    targetContext.lineTo(centerX, centerY);\n    targetContext.arc(centerX, centerY, outerRadius, startRadian, startRadian + 1.99 * Math.PI);\n    targetContext.arc(\n      centerX,\n      centerY,\n      outerRadius + 1,\n      startRadian + 1.99 * Math.PI,\n      startRadian + 2 * Math.PI,\n    );\n    targetContext.arc(\n      centerX,\n      centerY,\n      outerRadius + 2,\n      startRadian + 2 * Math.PI,\n      startRadian + 2.01 * Math.PI,\n    );\n    targetContext.arc(centerX, centerY, outerRadius + 3, startRadian + 2.01 * Math.PI, endRadian);\n    targetContext.lineTo(centerX, centerY);\n  }\n\n  targetContext.stroke();\n  targetContext.closePath();\n\n  const maxOverlayTextX = centerX - 20 + targetContext.measureText(overlayTitle).width;\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    centerX - outerRadius,\n    centerY - outerRadius,\n    Math.max(centerX + outerRadius, maxOverlayTextX),\n    centerY + outerRadius,\n  );\n};\n\nconst calculateRadiansFromAngle = (angle) => {\n  return ((360 - angle) * Math.PI) / 180;\n};\n\nconst renderPerspectiveTool = (\n  targetContext,\n  zoomFactor,\n  overlay,\n  boundingCoordinates,\n  width,\n  height,\n) => {\n  const { name: overlayTitle } = overlay;\n\n  const textWidth = targetContext.measureText(overlayTitle).width;\n\n  targetContext.fillText(overlayTitle, width / 2 - textWidth / 2, 50);\n\n  const boundingBoxX = Math.abs(boundingCoordinates.minX) || 0;\n  const boundingBoxY = Math.abs(boundingCoordinates.minY) || 0;\n  const boundingBoxWidth = width || 0;\n  const boundingBoxHeight = height || 0;\n  const offset =\n    overlay.boundingShape.perspective.offset && overlay.boundingShape.perspective.offset.value;\n  const orientation = overlay.boundingShape.perspective.orientation;\n\n  // Orientation x\n  if (orientation === 0) {\n    targetContext.moveTo(boundingBoxX, boundingBoxY + boundingBoxHeight / 2);\n    targetContext.lineTo(boundingBoxX + offset, boundingBoxY + 1 / zoomFactor);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth - offset, boundingBoxY + 1 / zoomFactor);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth, boundingBoxY + boundingBoxHeight / 2);\n    targetContext.lineTo(\n      boundingBoxX + boundingBoxWidth - offset,\n      boundingBoxY + boundingBoxHeight - 1 / zoomFactor,\n    );\n    targetContext.lineTo(boundingBoxX + offset, boundingBoxY + boundingBoxHeight - 1 / zoomFactor);\n    targetContext.lineTo(boundingBoxX, boundingBoxY + boundingBoxHeight / 2);\n  }\n\n  // Orientation y\n  if (orientation === 1) {\n    targetContext.moveTo(boundingBoxX + 1 / zoomFactor, boundingBoxY + offset);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth / 2, boundingBoxY);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth - 1 / zoomFactor, boundingBoxY + offset);\n    targetContext.lineTo(\n      boundingBoxX + boundingBoxWidth - 1 / zoomFactor,\n      boundingBoxY + boundingBoxHeight - offset,\n    );\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth / 2, boundingBoxY + boundingBoxHeight);\n    targetContext.lineTo(boundingBoxX + 1 / zoomFactor, boundingBoxY + boundingBoxHeight - offset);\n    targetContext.lineTo(boundingBoxX + 1 / zoomFactor, boundingBoxY + offset);\n  }\n\n  targetContext.stroke();\n  targetContext.closePath();\n};\n\nconst getRgbaString = (colorInt) => {\n  if (typeof colorInt !== 'number' || isNaN(colorInt)) {\n    logger.debug('Could not parse value into color.');\n    // fall back to pink when no valid rgba color value provided\n    return 'pink';\n  }\n  const red = colorInt & 0xff;\n  const green = (colorInt >> 8) & 0xff;\n  const blue = (colorInt >> 16) & 0xff;\n  const alpha = 1;\n  return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n};\n\nexport const setBoundingCoordinatesForCustomOverlays = ({\n  overlay,\n  product,\n  fontSize,\n  boundingCoordinates,\n  dispatch,\n}) => {\n  const coords = { x: 0, y: 0, width: 0, height: 0 };\n  setCustomOverlayCoordinates(product, overlay, coords, dispatch);\n  const textWidth = getTextWidth(overlay.label, fontSize);\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    coords.x,\n    coords.y - fontSize * 2,\n    Math.max(coords.x + coords.width, coords.x + textWidth),\n    coords.y + coords.height,\n  );\n};\n\nexport const setBoundingCoordinatesForInspectionOverlays = ({\n  overlay,\n  fontSize,\n  boundingCoordinates,\n}) => {\n  const coords = { x: 0, y: 0, width: 0, height: 0 };\n  setInspectionOverlayCoordinates(overlay, coords);\n  const textWidth = getTextWidth(overlay.name, fontSize);\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    coords.x,\n    coords.y - fontSize * 2,\n    Math.max(coords.x + coords.width, coords.x + textWidth),\n    coords.y + coords.height,\n  );\n};\n\nconst getTextWidth = (text, fontSize) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.font = fontSize + 'px Arial';\n  return ctx.measureText(text).width;\n};\n\nconst setCustomOverlayCoordinates = (product, overlay, coordinates, dispatch = () => void 0) => {\n  const offsetLeft =\n    Number(getValueById(product, overlay.offsetLeftVariable)) || overlay.offsetLeft;\n  const x = Number(getValueById(product, overlay.xVariable)) || overlay.x;\n  coordinates.x = x + offsetLeft;\n\n  const offsetTop = Number(getValueById(product, overlay.offsetTopVariable)) || overlay.offsetTop;\n  const y = Number(getValueById(product, overlay.yVariable)) || overlay.y;\n  coordinates.y = y + offsetTop;\n\n  coordinates.width = Number(getValueById(product, overlay.widthVariable)) || overlay.width;\n  coordinates.height = Number(getValueById(product, overlay.heightVariable)) || overlay.height;\n\n  // we need to wait here for the fallback values to initialize\n  if (\n    overlay.maxHeightFallback !== 0 &&\n    overlay.maxWidthFallback !== 0 &&\n    overlay.minHeightFallback !== 0 &&\n    overlay.minWidthFallback !== 0\n  ) {\n    if (coordinates.x < overlay.minWidthFallback) {\n      coordinates.x = overlay.minWidthFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'X',\n          `${overlay.minWidthFallback}  -   ${overlay.maxWidthFallback}`,\n        ),\n      );\n    }\n\n    if (coordinates.x > overlay.maxWidthFallback) {\n      coordinates.x = overlay.maxWidthFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'X',\n          `${overlay.minWidthFallback}  -   ${overlay.maxWidthFallback}`,\n        ),\n      );\n    }\n\n    if (coordinates.y < overlay.minHeightFallback) {\n      coordinates.y = overlay.minHeightFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'Y',\n          `${overlay.minHeightFallback}  -   ${overlay.maxHeightFallback}`,\n        ),\n      );\n    }\n\n    if (coordinates.y > overlay.maxHeightFallback) {\n      coordinates.y = overlay.maxHeightFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'Y',\n          `${overlay.minHeightFallback}  -   ${overlay.maxHeightFallback}`,\n        ),\n      );\n    }\n  }\n};\n\nconst setInspectionOverlayCoordinates = (overlay, coordinates) => {\n  if (overlay.boundingShape.rect) {\n    coordinates.x = overlay.boundingShape.rect.x.value || 0;\n    coordinates.y = overlay.boundingShape.rect.y.value || 0;\n    coordinates.width = overlay.boundingShape.rect.w.value || 0;\n    coordinates.height = overlay.boundingShape.rect.h.value || 0;\n  }\n};\n\nexport const drawCustomOverlays = ({\n  drawTarget,\n  customOverlays,\n  product,\n  zoomFactor,\n  boundingCoordinates,\n}) => {\n  if (!customOverlays || customOverlays.length === 0) {\n    return;\n  }\n\n  const targetContext = drawTarget.getContext('2d');\n  const activeOverlays = customOverlays.filter((overlay) => overlay.isActive);\n  zoomFactor = zoomFactor || 1;\n  activeOverlays.forEach((overlay) => {\n    targetContext.beginPath();\n\n    const coords = { x: 0, y: 0, width: 0, height: 0 };\n    setCustomOverlayCoordinates(product, overlay, coords);\n    correctCoordsWithBoundingCoordinates(coords, boundingCoordinates);\n\n    const colorVariable = getValueById(product, overlay.colorVariable);\n    let color;\n    if (!colorVariable) {\n      color = overlay.color;\n    } else {\n      color = getRgbaString(colorVariable);\n    }\n\n    targetContext.rect(coords.x, coords.y, coords.width, coords.height);\n\n    targetContext.fillStyle = color;\n    targetContext.lineWidth = 1 / zoomFactor;\n    const fontSize = 10 / zoomFactor;\n    targetContext.font = fontSize + 'px Arial';\n    targetContext.fillText(overlay.label, coords.x, coords.y - fontSize);\n\n    switch (overlay.lineStyle) {\n      case 'dashed':\n        targetContext.setLineDash([5]);\n        break;\n\n      case 'dotted':\n        targetContext.setLineDash([2, 5]);\n        break;\n\n      default:\n        targetContext.setLineDash([]);\n    }\n    targetContext.strokeStyle = color;\n    targetContext.stroke();\n\n    targetContext.closePath();\n  });\n};\n\nconst correctCoordsWithBoundingCoordinates = (actualCoordinates, boundingCoordinates) => {\n  actualCoordinates.x += Math.abs(boundingCoordinates.minX);\n  actualCoordinates.y += Math.abs(boundingCoordinates.minY);\n};\n\nconst updateBoundingCoordinates = (boundingCoordinates, minX, minY, maxX, maxY) => {\n  if (minX < boundingCoordinates.minX) {\n    boundingCoordinates.minX = minX;\n  }\n\n  if (minY < boundingCoordinates.minY) {\n    boundingCoordinates.minY = minY;\n  }\n\n  if (maxX > boundingCoordinates.maxX) {\n    boundingCoordinates.maxX = maxX;\n  }\n\n  if (maxY > boundingCoordinates.maxY) {\n    boundingCoordinates.maxY = maxY;\n  }\n};\n\nconst getValueById = (product, id) => {\n  if (!product || !id) {\n    return;\n  }\n  const valueObj = product.getValue(id);\n  return valueObj && valueObj.value;\n};\n\nexport const extractInspectionOverlays = (product, imageId) => {\n  if (!product || product.released) {\n    return undefined;\n  }\n\n  const image = product.getImage(imageId);\n\n  if (!image) {\n    return undefined;\n  }\n\n  return (\n    (image &&\n      image.overlays &&\n      image.overlays.overlays &&\n      image.overlays.overlays.length > 0 &&\n      image.overlays.overlays) ||\n    []\n  );\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\n// eslint-disable-next-line\nclass FilmStrip extends Component {\n  render() {\n    const { images, onImageClick } = this.props;\n    return (\n      <div className=\"film-strip-container\">\n        {images.map((image) => (\n          <button\n            key={image.product.trigger}\n            className=\"reject-image\"\n            onClick={() => {\n              onImageClick(image.product);\n            }}\n          >\n            <img src={image.combinedSrc} alt=\"\" />\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\n\nFilmStrip.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.string,\n    }),\n  ).isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n\nexport default FilmStrip;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './styles.scss';\nimport iconPause from '../../assets/icons/pause.svg';\nimport iconPlay from '../../assets/icons/play.svg';\n\nimport ActionBar from '../../components/ActionBar';\nimport ObjectSelector from '../../components/ObjectSelector';\nimport ProxyType from '../../components/Protobuf/ProxyType';\nimport Container from '../../components/layout/Container';\nimport { initViewState, setViewData, setSharedStateData, setSaveFlag } from '../../redux/actions';\nimport { TOGGLE_BUTTON } from '../../types/ActionBarType';\nimport { drawInspectionOverlays, extractInspectionOverlays } from '../../utils/OverlayRenderer';\nimport logger from '../../utils/logger';\nimport {\n  canReadImageStripView,\n  canEditImageStripView,\n  canEditInspectionState,\n} from '../../utils/permissions';\nimport FilmStrip from './components/FilmStrip';\n\nclass ImageStripView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n      data: null,\n    };\n    this.productSub = null;\n    this.imageStripLength = 10;\n  }\n\n  async componentDidMount() {\n    if (this.props.sourceImage) {\n      this.unsubscribeFromProductStream();\n      this.subscribeToProductStream(this.props.sourceImage);\n    }\n\n    const { configuration, proxy } = this.props;\n    if (configuration.objectSelectorImages.size === 0) {\n      configuration.setObjectSelectorImages(proxy.protobuf).then(() => {\n        proxy.dispatchCurrentConfiguration(configuration);\n      });\n    }\n    if (configuration.idNameMappings.size === 0) {\n      configuration.setIdNameMappings(proxy.protobuf).then(() => {\n        proxy.dispatchCurrentConfiguration(configuration);\n      });\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.sourceImage && nextProps.sourceImage !== this.props.sourceImage) {\n      this.unsubscribeFromProductStream();\n      this.subscribeToProductStream(nextProps.sourceImage);\n    }\n\n    if (\n      this.props.isBrowserWindowVisible !== undefined &&\n      this.props.isBrowserWindowVisible !== nextProps.isBrowserWindowVisible\n    ) {\n      if (nextProps.isBrowserWindowVisible) {\n        this.subscribeToProductStream(nextProps.sourceImage);\n      } else {\n        this.unsubscribeFromProductStream();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { images } = this.state;\n    const products = (images || []).map((e) => e.product);\n    this.releaseProducts(products);\n    // TODO resume stream when paused?\n    this.unsubscribeFromProductStream();\n  }\n\n  subscribeToProductStream(sourceImage) {\n    if (!this.productSub) {\n      const { inspectionId } = this.props;\n      const desc = {\n        inspectionId,\n        startAtTriggerCount: -1 * this.imageStripLength,\n        rejectImageIds: [sourceImage],\n        allowOldTrigger: true,\n        manualRelease: true,\n      };\n      this.productSub = this.props.proxy.subscribeToProductStream(desc, this.onProduct);\n    }\n  }\n\n  unsubscribeFromProductStream() {\n    if (this.productSub) {\n      this.props.proxy.unsubscribeFromProductStream(this.productSub);\n      this.productSub = null;\n    }\n\n    (this.state.images || []).forEach((image) => {\n      image.product?.release();\n    });\n    this.setState({ images: [] });\n  }\n\n  onProduct = ({ product }) => {\n    const entry = this.state.images.find((e) => e.product === product);\n    if (entry) {\n      // we can free this reference. the second reference to the\n      // same product will be released in this.releaseProducts().\n      product.release();\n      return;\n    }\n\n    // TODO: Image dimensions won't change for a subscription\n    // better to update `onSubscribed`\n    this.updateImageDimensions(product);\n\n    const combinedSrc = this.drawImageAndOverlaysToCanvas({\n      drawTarget: this.canvas,\n      product,\n    });\n    const images = [{ combinedSrc, product }, ...this.state.images];\n\n    // sort descending by trigger count. can happen at beginning of stream.\n    images.sort((a, b) => b.product.trigger - a.product.trigger);\n\n    let productsToRelease = [];\n    if (images.length > this.imageStripLength) {\n      productsToRelease = images.splice(this.imageStripLength).map((e) => e.product);\n    }\n\n    this.setState({ images });\n\n    this.releaseProducts(productsToRelease);\n  };\n\n  releaseProducts(products) {\n    (products || []).forEach((product) => product.release());\n  }\n\n  updateImageDimensions = (product) => {\n    if (!product) {\n      logger.error(`updateImageDimensions requires product but did not receive.`);\n      return;\n    }\n\n    if (!product.isReject) {\n      logger.error(`updateImageDimensions requires product that is a reject.`);\n      return;\n    }\n\n    const { sourceImage } = this.props;\n    const { image } = product.getImage(sourceImage);\n\n    if (!image) {\n      logger.error(`Product does not contain an Image.`);\n      return;\n    }\n\n    const { height, width } = image;\n\n    if (\n      !this.state.imageWidth ||\n      !this.state.imageHeigt ||\n      this.state.imageWidth !== width ||\n      this.state.imageHeigt !== height\n    ) {\n      this.setState({ imageHeigt: height, imageWidth: width });\n    }\n  };\n\n  setSourceImageIndex = (id) => {\n    if (!id) {\n      logger.error(`OjectSelector did not return a valid id.`);\n      return;\n    }\n    this.props.setSharedStateData('sourceImage', id);\n  };\n\n  drawImageAndOverlaysToCanvas = ({ drawTarget, product }) => {\n    if (!drawTarget || !product) {\n      logger.error(\n        'drawImageAndOverlaysToCanvas expects drawTarget and product but did not receive.',\n      );\n      return;\n    }\n\n    const imageId = this.props.sourceImage;\n    const image = product.getImage(imageId);\n    if (!image || !image.domImage) {\n      logger.warn(`ImageStrip expected an image onReject but didn't receive`);\n      return;\n    }\n\n    const drawTargetContext = drawTarget.getContext('2d');\n    drawTargetContext.clearRect(0, 0, drawTarget.width, drawTarget.height);\n    drawTargetContext.drawImage(image.domImage, 0, 0);\n\n    const overlays = extractInspectionOverlays(product, imageId);\n    const boundingCoordinates = {\n      minX: 0,\n      minY: 0,\n      maxX: image.width || 0,\n      maxY: image.height || 0,\n    };\n\n    drawInspectionOverlays({\n      drawTarget,\n      overlays,\n      zoomFactor: 1,\n      boundingCoordinates,\n      width: image.width,\n      height: image.height,\n    });\n    return this.canvas.toDataURL('image/bmp');\n  };\n\n  renderObjectSelector = () => {\n    const { configuration, inspectionId } = this.props;\n    if (!configuration || !inspectionId) {\n      return;\n    }\n\n    const images = configuration.getObjectSelectorImagesForInspection(inspectionId);\n\n    return (\n      <div style={{ width: '100%', overflow: 'auto' }}>\n        {images && (\n          <ObjectSelector\n            singleSelect\n            data={images.tree}\n            onChange={(selectedIid, checkedLocation) => {\n              this.setSourceImageIndex(selectedIid);\n              this.props.setViewData('windowName', checkedLocation);\n              this.props.setSaveFlag(true);\n            }}\n          />\n        )}\n      </div>\n    );\n  };\n\n  selectProduct(product) {\n    this.pauseStream();\n    this.props.proxy.replayProduct(this.props.inspectionId, product);\n    // TODO some highlights?\n  }\n\n  resumeStream() {\n    this.props.proxy.resumeRejectStream(this.props.inspectionId);\n    this.props.setSaveFlag(true);\n  }\n\n  pauseStream() {\n    this.props.proxy.pauseRejectStream(this.props.inspectionId);\n    this.props.setSaveFlag(true);\n  }\n\n  setTitleFromConfig = () => {\n    const { sourceImage, inspectionId, configuration } = this.props;\n    if (configuration) {\n      const path = configuration.getValueNameForId(inspectionId, sourceImage);\n      if (path) {\n        this.props.setViewData('windowName', path);\n      }\n    }\n  };\n\n  showPause = () => {\n    const { pausedInspections, inspectionId } = this.props;\n    let showPause = false;\n    if (inspectionId) {\n      if (!pausedInspections.includes(inspectionId)) {\n        showPause = true;\n      }\n    }\n    return showPause;\n  };\n\n  renderFilmStrip = () => {\n    const { inspectionId, myPermissions } = this.props;\n    const { imageWidth, imageHeigt } = this.state;\n    const actions = [];\n\n    if (canEditInspectionState(myPermissions)) {\n      actions.push({\n        type: TOGGLE_BUTTON,\n        id: inspectionId,\n        intlId: 'imageStripView.play',\n        iconUrl: iconPlay,\n        onClickHandler: () => {\n          this.resumeStream();\n        },\n        intlIdAlternative: 'imageStripView.pause',\n        iconUrlAlternative: iconPause,\n        onClickHandlerAlternative: () => {\n          this.pauseStream();\n        },\n        showAlternative: this.showPause(),\n      });\n    }\n    return (\n      <div className=\"reject-view-container\">\n        <Container>\n          <canvas\n            style={{ display: 'none' }}\n            width={imageWidth}\n            height={imageHeigt}\n            className=\"imageCanvas\"\n            ref={(canvas) => {\n              this.canvas = canvas;\n            }}\n          />\n          {this.state.images && this.state.images.length > 0 && (\n            <FilmStrip\n              onImageClick={(product) => this.selectProduct(product)}\n              images={this.state.images}\n            />\n          )}\n          <ActionBar isViewAction actions={actions} />\n        </Container>\n      </div>\n    );\n  };\n\n  render() {\n    const { sourceImage, myPermissions } = this.props;\n\n    this.setTitleFromConfig();\n    const canEdit = canEditImageStripView(myPermissions);\n\n    if (canReadImageStripView(myPermissions) || canEdit) {\n      return (\n        <div className=\"reject-view-container\">\n          {!sourceImage && canEdit ? this.renderObjectSelector() : this.renderFilmStrip()}\n        </div>\n      );\n    }\n\n    return <div></div>;\n  }\n}\n\nImageStripView.defaultProps = {\n  imageData: [],\n  proxy: undefined,\n  configuration: null,\n};\n\nImageStripView.propTypes = {\n  proxy: ProxyType,\n  configuration: PropTypes.object,\n  sourceImage: PropTypes.number,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  try {\n    return {\n      proxy: state.app.proxy,\n      configuration: state.app.configuration,\n      sourceImage: Number(state.inspections[inspectionId].sharedState.views[viewId].sourceImage),\n      pausedInspections: state.app.pausedInspections,\n      myPermissions: state.app.myPermissions,\n      isBrowserWindowVisible: state.app.isBrowserWindowVisible,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nconst initState = {};\n\nconst initSharedState = {\n  sourceImage: 0,\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  dispatch(initViewState(inspectionId, viewId, initState, initSharedState));\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    setSharedStateData: (key, data) =>\n      dispatch(setSharedStateData(inspectionId, key, data, viewId)),\n    setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n  };\n};\n\nconst mappedConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default mappedConnect(ImageStripView);\n","export default __webpack_public_path__ + \"static/media/downloadWithOverlays.0ec8c060.svg\";","export default __webpack_public_path__ + \"static/media/fit-to-height.be413aab.svg\";","export default __webpack_public_path__ + \"static/media/fit-to-width.ea508053.svg\";","export default __webpack_public_path__ + \"static/media/one.0123db23.svg\";","export default __webpack_public_path__ + \"static/media/overlay-list.d218d7a4.svg\";","export const updateOverlayList = (updatedOverlay, overlayList) =>\n  overlayList.map((overlay) => (overlay.id === updatedOverlay.id ? updatedOverlay : overlay));\n","import React, { Component } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PropTypes from 'prop-types';\nimport Table, { AutoResizer } from 'react-base-table';\n\nimport { updateOverlayList } from '../../utils/reduxHelper';\n\nimport 'react-base-table/styles.css';\nimport './style.scss';\n\nclass OverlayList extends Component {\n  state = {\n    selectAll: false,\n    selectedRowIndex: -1,\n  };\n\n  componentDidMount() {\n    this.checkAndUpdateAllSelected(this.props.overlays);\n\n    if (this.props.canSelectRow) {\n      this.setState({ selectedRowIndex: 0 });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.checkAndUpdateAllSelected(this.props.overlays);\n    }\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  }\n\n  checkAndUpdateAllSelected = () => {\n    const { overlays } = this.props;\n    let selectAll = true;\n    (overlays || []).forEach((overlay) => {\n      if (!overlay.isActive) {\n        selectAll = false;\n      }\n    });\n\n    this.setState({ selectAll });\n  };\n\n  handleSelectAll = (checked) => {\n    this.setState({ selectAll: checked });\n    this.props.onSelectAll(checked);\n  };\n\n  handleSingleSelect = (checked, overlay) => {\n    const { overlays } = this.props;\n    const updatedOverlay = { ...overlay, isActive: checked };\n    const updatedOverlayList = updateOverlayList(updatedOverlay, overlays);\n\n    this.checkAndUpdateAllSelected(updatedOverlayList);\n    this.props.updateOverlayList(updatedOverlayList);\n  };\n\n  getTableDataFromOverlays = () => {\n    const { overlays } = this.props;\n    const data =\n      overlays &&\n      overlays.map((overlay) => {\n        return {\n          checkbox: this.getCheckboxDefinition4Cell(overlay.id),\n          name: overlay.label,\n          id: overlay.id,\n        };\n      });\n    return data;\n  };\n\n  getColumnDefinition4OverlayTable = () => {\n    return [\n      {\n        key: 'checkbox',\n        dataKey: 'checkbox',\n        title: '',\n        width: 40,\n      },\n      {\n        key: 'name',\n        dataKey: 'name',\n        title: 'Overlays',\n        width: 0,\n        flexGrow: 1,\n      },\n    ];\n  };\n\n  getCheckboxDefinition4Cell = (currentId) => {\n    const { overlays } = this.props;\n    const overlay = overlays.filter((item) => item.id === currentId)[0];\n    const isActive = overlay ? overlay.isActive : false;\n    return (\n      <Checkbox\n        checked={isActive}\n        onChange={(e) => this.handleSingleSelect(e.target.checked, overlay)}\n        style={{\n          padding: 0,\n        }}\n        color=\"primary\"\n        key={`checkbox_${currentId}`}\n      />\n    );\n  };\n\n  getSelectedRowClass = (currentId) => {\n    if (this.props.currentOverlay && this.props.currentOverlay.id === currentId) {\n      return 'overlay-table-selected-row';\n    }\n\n    return '';\n  };\n\n  headerRenderer = ({ columns }) => {\n    const columnHeaders = [];\n    columns.forEach((column, columnIndex) => {\n      if (columnIndex === 0) {\n        columnHeaders.push(\n          <div\n            className=\"base-table-header-column\"\n            style={{ width: columns[columnIndex].width }}\n            key={`header_${columnIndex}`}\n          >\n            <Checkbox\n              checked={this.state.selectAll}\n              onChange={(e) => this.handleSelectAll(e.target.checked)}\n              style={{\n                padding: 0,\n              }}\n              color=\"primary\"\n              key=\"select-all-checkbox\"\n            />\n          </div>,\n        );\n      } else {\n        columnHeaders.push(\n          <div\n            className=\"base-table-header-column\"\n            key={`header_${columnIndex}`}\n            style={{ padding: ' 0 7.5px' }}\n          >\n            {columns[columnIndex].title}\n          </div>,\n        );\n      }\n    });\n\n    return columnHeaders;\n  };\n\n  rowEventHandlers = {\n    onClick: ({ rowIndex }) => {\n      const { overlays, updateCurrentOverlay } = this.props;\n      this.setState({ selectedRowIndex: rowIndex });\n      updateCurrentOverlay(overlays.filter((item) => item.id === overlays[rowIndex].id)[0]);\n    },\n  };\n\n  setRowClassName = ({ rowIndex }) => {\n    return this.state.selectedRowIndex === rowIndex ? 'overlay-table-selected-row' : '';\n  };\n\n  render() {\n    const { overlays, canSelectRow, hasActionBar } = this.props;\n\n    if (!overlays) return null;\n    const data = this.getTableDataFromOverlays();\n    const columns = this.getColumnDefinition4OverlayTable();\n\n    return (\n      <AutoResizer key={`autoresizer`}>\n        {({ width, height }) => (\n          <Table\n            headerRenderer={this.headerRenderer}\n            columns={columns}\n            data={data}\n            width={width}\n            height={hasActionBar ? height - 30 : height}\n            headerHeight={30}\n            rowHeight={30}\n            key=\"overlay-table\"\n            rowEventHandlers={canSelectRow ? this.rowEventHandlers : {}}\n            rowClassName={this.setRowClassName}\n          />\n        )}\n      </AutoResizer>\n    );\n  }\n}\n\nOverlayList.defaultProps = {\n  overlays: [],\n  hasActionBar: true,\n};\n\nOverlayList.propTypes = {\n  overlays: PropTypes.array,\n  onSelectAll: PropTypes.func.isRequired,\n  hasActionBar: PropTypes.bool,\n};\n\nexport default OverlayList;\n","import React, { Component } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { setViewData, saveImageSettings } from '../../../redux/actions';\nimport {\n  drawCustomOverlays,\n  drawInspectionOverlays,\n  setBoundingCoordinatesForCustomOverlays,\n  setBoundingCoordinatesForInspectionOverlays,\n  extractInspectionOverlays,\n} from '../../../utils/OverlayRenderer';\nimport { forceDownload } from '../../../utils/downloader';\nimport logger from '../../../utils/logger';\nimport { isObjectValid } from '../../../utils/objectValidator';\nimport { canEditImageView } from '../../../utils/permissions';\n\nclass ImageEditor extends Component {\n  state = {\n    image: new Image(),\n    left: 0,\n    top: 0,\n    zoomFactor: 1,\n    currentCursorPosition: { x: 0, y: 0 },\n    canvasDimension: { width: 0, height: 0 },\n  };\n\n  componentDidMount() {\n    this.loadViewSettings();\n    this.props.product.lock();\n    this.initImage(this.props);\n    this.bindEventListeners();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { zoomFactor, left, top } = this.state;\n\n    this.bindEventListeners();\n\n    const productChanged = prevProps.product !== this.props.product;\n    const modeChanged = prevProps.currentMode !== this.props.currentMode;\n    const zoomFactorChanged = prevState.zoomFactor !== zoomFactor;\n    const customOverlaysChanged = !isEqual(this.props.customOverlays, prevProps.customOverlays);\n    const imageMoved = prevState.left !== left || prevState.top !== top;\n\n    if (productChanged) {\n      prevProps.product.release();\n      this.props.product.lock();\n    }\n\n    if (productChanged || modeChanged || zoomFactorChanged || customOverlaysChanged) {\n      this.initImage(this.props);\n    }\n\n    if (zoomFactorChanged || imageMoved) {\n      this.props.saveImageSettings(zoomFactor, { left, top });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.product.release();\n  }\n\n  loadViewSettings() {\n    const { zoomFactor, imagePosition } = this.props.viewSettings;\n    if (zoomFactor) {\n      this.setState({ zoomFactor });\n    }\n\n    if (imagePosition && imagePosition.left) {\n      this.setState({ left: imagePosition.left });\n    }\n\n    if (imagePosition && imagePosition.top) {\n      this.setState({ top: imagePosition.top });\n    }\n  }\n\n  initImage(props) {\n    if (props && props.product && props.imageId) {\n      const image = props.product.getImage(props.imageId);\n      if (image && image.domImage) {\n        this.onImageLoaded(image.domImage);\n      }\n    }\n  }\n\n  onImageLoaded(image) {\n    const { zoomFactor, canvasDimension } = this.state;\n    const { height, width } = canvasDimension;\n    this.setState({ image });\n    this.initCanvas({ canvas: this.canvas, height, width, zoomFactor });\n    this.props.setViewData('imageDimensions', { width: image.width, height: image.height });\n    this.draw(this.canvas, image, zoomFactor);\n    this.setImageInfo();\n  }\n\n  initCanvas({ canvas, height, width, zoomFactor }) {\n    canvas.width = Math.ceil(width * zoomFactor);\n    canvas.height = Math.ceil(height * zoomFactor);\n\n    this.props.setViewData('imageDimensions', { width, height });\n  }\n\n  draw(canvas, image, zoomFactor) {\n    if (!canvas || !image) {\n      console.error('Can not draw because we do not have a canvas');\n      return;\n    }\n\n    const boundingCoordinates = this.setBoundingCoordinates(image, zoomFactor);\n\n    this.setCanvasDimensions(canvas, boundingCoordinates, zoomFactor);\n\n    const ctx = canvas.getContext('2d');\n    ctx.webkitImageSmoothingEnabled = false;\n    ctx.msImageSmoothingEnabled = false;\n    ctx.imageSmoothingEnabled = false;\n    ctx.save();\n    ctx.clearRect(\n      0,\n      0,\n      Math.abs(boundingCoordinates.minX) + boundingCoordinates.maxX,\n      Math.abs(boundingCoordinates.minY) + boundingCoordinates.maxY,\n    );\n    ctx.scale(zoomFactor, zoomFactor);\n    ctx.drawImage(image, Math.abs(boundingCoordinates.minX), Math.abs(boundingCoordinates.minY));\n    this.drawOverlays(canvas, zoomFactor, boundingCoordinates, image.width, image.height);\n    ctx.restore();\n  }\n\n  setBoundingCoordinates = (image, zoomFactor) => {\n    const boundingCoordinates = {\n      minX: 0,\n      minY: 0,\n      maxX: image.width || 0,\n      maxY: image.height || 0,\n    };\n    const fontSize = 10 / zoomFactor;\n    this.getBoundingCoordinatesFromCustomOverlays(boundingCoordinates, fontSize);\n    this.getBoundingCoordinatesFromInspectionOverlays(boundingCoordinates, fontSize);\n\n    return boundingCoordinates;\n  };\n\n  setCanvasDimensions = (canvas, boundingCoordinates, zoomFactor) => {\n    const width = Math.abs(boundingCoordinates.minX) + boundingCoordinates.maxX;\n    const height = Math.abs(boundingCoordinates.minY) + boundingCoordinates.maxY;\n\n    canvas.width = Math.ceil(width * zoomFactor);\n    canvas.height = Math.ceil(height * zoomFactor);\n\n    this.setState({ canvasDimension: { width, height }, boundingCoordinates });\n  };\n\n  drawOverlays(drawTarget, zoomFactor, boundingCoordinates, width, height) {\n    const { product, customOverlays, imageId, currentMode } = this.props;\n    const overlays = extractInspectionOverlays(product, imageId);\n\n    drawCustomOverlays({\n      drawTarget,\n      customOverlays,\n      product,\n      zoomFactor,\n      boundingCoordinates,\n    });\n    drawInspectionOverlays({\n      drawTarget,\n      overlays,\n      zoomFactor,\n      boundingCoordinates,\n      width,\n      height,\n      currentMode,\n    });\n  }\n\n  getBoundingCoordinatesFromCustomOverlays = (boundingCoordinates, fontSize) => {\n    const { product, customOverlays } = this.props;\n    const { image } = this.state;\n\n    const imageWidth = image?.width;\n    const imageHeight = image?.height;\n\n    const minWidthFallback = Number(-imageWidth * 2);\n    const maxWidthFallback = Number(imageWidth * 2);\n\n    const minHeightFallback = Number(-imageHeight * 2);\n    const maxHeightFallback = Number(imageHeight * 2);\n\n    let overlays;\n    overlays = customOverlays.filter((overlay) => overlay.isActive);\n    overlays.map((overlay) =>\n      Object.assign(overlay, {\n        minWidthFallback,\n        maxWidthFallback,\n        minHeightFallback,\n        maxHeightFallback,\n      }),\n    );\n\n    overlays.forEach((overlay) => {\n      setBoundingCoordinatesForCustomOverlays({\n        overlay,\n        product,\n        fontSize,\n        boundingCoordinates,\n        dispatch: this.props.dispatch,\n      });\n    });\n  };\n\n  getBoundingCoordinatesFromInspectionOverlays = (boundingCoordinates, fontSize) => {\n    const { product, imageId } = this.props;\n    const overlays = extractInspectionOverlays(product, imageId);\n\n    overlays &&\n      overlays.forEach((overlay) => {\n        setBoundingCoordinatesForInspectionOverlays({ overlay, fontSize, boundingCoordinates });\n      });\n  };\n\n  setImageInfo = () => {\n    const { isImageInfoOpen } = this.props;\n    const { currentCursorPosition } = this.state;\n\n    if (currentCursorPosition && isImageInfoOpen) {\n      const { x, y } = currentCursorPosition;\n      this.setRgbValues(x, y);\n    }\n  };\n\n  bindEventListeners() {\n    if (canEditImageView(this.props.myPermissions)) {\n      this.containerRef.addEventListener('mousewheel', this.handleScroll);\n      this.containerRef.addEventListener('DOMMouseScroll', this.handleScroll);\n      this.containerRef.addEventListener('mousedown', this.handleMouseDown);\n      this.containerRef.addEventListener('mouseup', this.handleMouseUp);\n      this.containerRef.addEventListener('mouseleave', this.handleMouseUp);\n      this.containerRef.addEventListener('mousemove', this.handleDrag);\n    } else {\n      this.containerRef.removeEventListener('mousewheel', this.handleScroll);\n      this.containerRef.removeEventListener('DOMMouseScroll', this.handleScroll);\n      this.containerRef.removeEventListener('mousedown', this.handleMouseDown);\n      this.containerRef.removeEventListener('mouseup', this.handleMouseUp);\n      this.containerRef.removeEventListener('mouseleave', this.handleMouseUp);\n      this.containerRef.removeEventListener('mousemove', this.handleDrag);\n    }\n\n    this.containerRef.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  handleScroll = (evt) => {\n    const delta = evt.wheelDelta ? evt.wheelDelta / 40 : evt.detail ? -evt.detail : 0;\n    if (delta) {\n      const { offsetX, offsetY } = evt;\n      this.zoom(delta, offsetX, offsetY);\n    }\n    evt.preventDefault();\n    return false;\n  };\n\n  handleMouseDown = (event) => {\n    const dragStart = { x: event.pageX, y: event.pageY };\n    const { left, top } = this.state;\n    const dragStartPos = { left, top };\n    this.setState({ dragging: true, dragStart, dragStartPos });\n  };\n\n  handleMouseUp = () => {\n    this.setState({ dragging: false, dragStart: null });\n  };\n\n  handleDrag = (event) => {\n    const { dragging, dragStart, dragStartPos } = this.state;\n    if (!dragging) {\n      return;\n    }\n\n    const diffX = event.pageX - dragStart.x;\n    const diffY = event.pageY - dragStart.y;\n    this.setState({\n      left: dragStartPos.left + diffX,\n      top: dragStartPos.top + diffY,\n    });\n  };\n\n  handleMouseMove = (event) => {\n    const { isImageInfoOpen } = this.props;\n\n    if (isImageInfoOpen) {\n      const cursorPosition = this.getMouseCoordinatesOnElement(event, this.canvas);\n\n      this.setCursorPosition(cursorPosition);\n      this.setRgbValues(cursorPosition.x, cursorPosition.y);\n    }\n  };\n\n  getMouseCoordinatesOnElement = (event) => {\n    const { zoomFactor, boundingCoordinates } = this.state;\n    let offsetX = event.offsetX;\n    let offsetY = event.offsetY;\n    let element = event.target;\n\n    while (element !== this.containerRef) {\n      offsetX += element.offsetLeft;\n      offsetY += element.offsetTop;\n      element = element.parentNode;\n    }\n\n    let x = (offsetX - this.canvas.offsetLeft) / zoomFactor;\n    let y = (offsetY - this.canvas.offsetTop) / zoomFactor;\n\n    if (boundingCoordinates) {\n      x += boundingCoordinates.minX;\n      y += boundingCoordinates.minY;\n    }\n\n    return {\n      x: Math.trunc(x),\n      y: Math.trunc(y),\n    };\n  };\n\n  setRgbValues = (x, y) => {\n    const { image } = this.state;\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(image, 0, 0);\n\n    const colors = ctx.getImageData(x, y, 1, 1).data;\n    const red = colors[0];\n    const green = colors[1];\n    const blue = colors[2];\n    this.props.setViewData('rgbValues', { R: red, G: green, B: blue });\n  };\n\n  setCursorPosition = (cursorPosition) => {\n    const { currentCursorPosition } = this.state;\n    const cursorPositionOnImage = this.trimPositionsOnImageSize(cursorPosition);\n    this.props.setViewData('cursorPosition', cursorPositionOnImage);\n\n    if (\n      currentCursorPosition.x !== cursorPositionOnImage.x ||\n      currentCursorPosition.y !== cursorPositionOnImage.y\n    ) {\n      this.setState({ currentCursorPosition: cursorPosition });\n    }\n  };\n\n  trimPositionsOnImageSize = (cursorPosition) => {\n    const { image } = this.state;\n    if (\n      cursorPosition.x < 0 ||\n      cursorPosition.y < 0 ||\n      cursorPosition.x > image.width ||\n      cursorPosition.y > image.height\n    ) {\n      return { x: 0, y: 0 };\n    }\n\n    return cursorPosition;\n  };\n\n  zoom(delta, offX, offY) {\n    const SCALE_BASE = 1.1;\n    const MIN_ZOOM_FACTOR = 0.05;\n    const MAX_ZOOM_FACTOR = 20;\n    const MAX_CANVAS_SIZE = 4096;\n\n    const scaleFactor = Math.pow(SCALE_BASE, delta);\n    const zoomFactor = this.state.zoomFactor * scaleFactor;\n    if (zoomFactor < MIN_ZOOM_FACTOR || zoomFactor > MAX_ZOOM_FACTOR) {\n      return;\n    }\n\n    const { canvasDimension } = this.state;\n    const longestSide = Math.max(\n      canvasDimension.width * zoomFactor,\n      canvasDimension.height * zoomFactor,\n    );\n    if (longestSide > MAX_CANVAS_SIZE) {\n      return;\n    }\n\n    const { left, top } = this.state;\n    const leftDiff = offX * (1 - scaleFactor);\n    const topDiff = offY * (1 - scaleFactor);\n    this.setState({\n      left: left + leftDiff,\n      top: top + topDiff,\n      zoomFactor,\n    });\n  }\n\n  clamp(v, min, max) {\n    return Math.max(Math.min(v, max), min);\n  }\n\n  resetZoom() {\n    const { boundingCoordinates, zoomFactor } = this.state;\n    this.setState({\n      zoomFactor: 1,\n      left: boundingCoordinates.minX * zoomFactor,\n      top: boundingCoordinates.minY * zoomFactor,\n    });\n  }\n\n  fitToHeight() {\n    const { height } = this.getViewSize();\n    const { image, boundingCoordinates, zoomFactor } = this.state;\n    this.setState({\n      zoomFactor: height / image.height,\n      left: boundingCoordinates.minX * zoomFactor,\n      top: boundingCoordinates.minY * zoomFactor,\n    });\n  }\n\n  fitToWidth() {\n    const { width } = this.getViewSize();\n    const { image, boundingCoordinates, zoomFactor } = this.state;\n    this.setState({\n      zoomFactor: width / image.width,\n      left: boundingCoordinates.minX * zoomFactor,\n      top: boundingCoordinates.minY * zoomFactor,\n    });\n  }\n\n  getViewSize() {\n    return {\n      width: (this.containerRef && this.containerRef.getBoundingClientRect().width) || 200,\n      height: (this.containerRef && this.containerRef.getBoundingClientRect().height) || 200,\n    };\n  }\n\n  downloadOriginalImage() {\n    if (!isObjectValid(() => this.state.image.src)) {\n      logger.info('downloadOriginalImage can not find image source');\n      return;\n    }\n    forceDownload(this.state.image.src, 'image.bmp');\n  }\n\n  downloadOriginalImageWithOverlays() {\n    const { canvasDimension, image } = this.state;\n    const canvas = document.createElement('canvas');\n    canvas.width = canvasDimension.width;\n    canvas.height = canvasDimension.height;\n    this.draw(canvas, image, 1);\n\n    canvas.toBlob((blob) => {\n      const domURL = self.URL || self.webkitURL || self; // eslint-disable-line\n      const url = domURL.createObjectURL(blob);\n      forceDownload(url);\n      domURL.revokeObjectURL(url);\n    });\n  }\n\n  render() {\n    const { zoomFactor, canvasDimension, left, top } = this.state;\n    const height = canvasDimension.height * zoomFactor;\n    const width = canvasDimension.width * zoomFactor;\n\n    return (\n      <div\n        style={{ height: '100%', width: '100%' }}\n        ref={(ref) => {\n          this.containerRef = ref;\n        }}\n      >\n        <canvas\n          className=\"imageCanvas\"\n          style={{\n            position: 'absolute',\n            left,\n            top,\n            width,\n            height,\n          }}\n          ref={(canvas) => {\n            this.canvas = canvas;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst propTypes = {\n  imageSrc: PropTypes.string,\n};\n\nImageEditor.propTypes = propTypes;\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  try {\n    return {\n      customOverlays: state.inspections[inspectionId].sharedState.views[viewId].overlays,\n      currentMode: state.app.currentMode,\n      viewSettings: state.inspections[inspectionId].views[viewId],\n      myPermissions: state.app.myPermissions,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    saveImageSettings: (zoomFactor, imagePosition) =>\n      dispatch(saveImageSettings(inspectionId, viewId, zoomFactor, imagePosition)),\n    dispatch: (...args) => dispatch(...args),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(ImageEditor),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport { getPropsFromInspection } from '../../../utils/propHelper';\n\nclass ImageInfo extends Component {\n  render() {\n    const { imageInfoClass, cursorPosition, rgbValues, imageDimensions } = this.props;\n    return (\n      <div className={imageInfoClass}>\n        <div className=\"info-table\">\n          <div className=\"th\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.info\" />\n            </div>\n          </div>\n\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.width\" />\n            </div>\n            <div className=\"td\">{imageDimensions.width}</div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.height\" />\n            </div>\n            <div className=\"td\">{imageDimensions.height}</div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">{`${rgbValues.R}, ${rgbValues.G}, ${rgbValues.B}`}</div>\n            <div\n              className=\"td\"\n              style={{\n                backgroundColor: `rgb(${rgbValues.R},${rgbValues.G},${rgbValues.B})`,\n              }}\n            />\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.x\" />\n            </div>\n            <div className=\"td\">{cursorPosition.x}</div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.y\" />\n            </div>\n            <div className=\"td\">{cursorPosition.y}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nImageInfo.defaultProps = {\n  imageInfoClass: '',\n  rgbValues: { R: 0, G: 0, B: 0 },\n  cursorPosition: { width: 0, height: 0 },\n  imageDimensions: { width: 0, height: 0 },\n};\n\nImageInfo.propTypes = {\n  imageInfoClass: PropTypes.string,\n  rgbValues: PropTypes.shape({\n    R: PropTypes.number,\n    G: PropTypes.number,\n    B: PropTypes.number,\n  }),\n  imageDimensions: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number,\n  }),\n  cursorPosition: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }),\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  return getPropsFromInspection(state, inspectionId, viewId, {\n    imageDimensions: 'imageDimensions',\n    cursorPosition: 'cursorPosition',\n    rgbValues: 'rgbValues',\n  });\n};\n\nexport default connect(mapStateToProps)(ImageInfo);\n","export const getPropsFromInspection = (state, inspectionId, viewId, props) => {\n  return Object.keys(props).reduce(\n    (acc, key) => ({\n      ...acc,\n      [key]: state.inspections[inspectionId].views[viewId][key],\n    }),\n    {},\n  );\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport isEqual from 'lodash/isEqual';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport iconDownload from '../../assets/icons/download.svg';\nimport iconDownloadWithOverlays from '../../assets/icons/downloadWithOverlays.svg';\nimport iconFitToHeight from '../../assets/icons/fit-to-height.svg';\nimport iconFitToWidth from '../../assets/icons/fit-to-width.svg';\nimport iconInfo from '../../assets/icons/info.svg';\nimport iconOne from '../../assets/icons/one.svg';\nimport iconOverlayList from '../../assets/icons/overlay-list.svg';\n\nimport ActionBar from '../../components/ActionBar';\nimport ObjectSelector from '../../components/ObjectSelector';\nimport OverlayList from '../../components/OverlayList';\nimport ProxyType from '../../components/Protobuf/ProxyType';\nimport {\n  initViewState,\n  setViewData,\n  setSharedStateData,\n  addImageNotAvailableNotification,\n  setSaveFlag,\n} from '../../redux/actions/index';\nimport ActionBarType, { SEPARATOR } from '../../types/ActionBarType';\nimport logger from '../../utils/logger';\nimport { canReadImageView, canEditImageView } from '../../utils/permissions';\nimport ImageEditor from './components/ImageEditor';\nimport ImageInfo from './components/ImageInfo';\n\nclass ImageView extends Component {\n  state = {\n    viewSizeChangeCounter: this.props.viewSizeChangeCounter,\n    isOverlayInfoOpen: false,\n    isImageInfoOpen: false,\n    canvasInitResize: false,\n    subscribedSource: undefined,\n  };\n\n  async componentDidMount() {\n    if (this.props.sourceImage) {\n      this.unsubscribeFromProductStream();\n      this.resubscribeToProductStream(this.props.sourceImage, this.props.overlays);\n    }\n\n    const { configuration, proxy } = this.props;\n    if (configuration.objectSelectorImages.size === 0) {\n      configuration.setObjectSelectorImages(proxy.protobuf).then(() => {\n        proxy.dispatchCurrentConfiguration(configuration);\n      });\n    }\n    if (configuration.idNameMappings.size === 0) {\n      configuration.setIdNameMappings(proxy.protobuf).then(() => {\n        proxy.dispatchCurrentConfiguration(configuration);\n      });\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.updateViewSize(nextProps.viewSizeChangeCounter);\n\n    const oldVariables = this.getUsedVariablesFromOverlay(this.props.overlays);\n    const newVariables = this.getUsedVariablesFromOverlay(nextProps.overlays);\n    if (\n      !isEqual(oldVariables, newVariables) ||\n      (this.state.subscribedSource !== nextProps.sourceImage && nextProps.sourceImage)\n    ) {\n      this.resubscribeToProductStream(nextProps.sourceImage, nextProps.overlays);\n    }\n\n    if (this.props.isBrowserWindowVisible !== nextProps.isBrowserWindowVisible) {\n      if (nextProps.isBrowserWindowVisible) {\n        this.resubscribeToProductStream(this.props.sourceImage, this.props.overlays);\n      } else {\n        this.unsubscribeFromProductStream();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromProductStream();\n  }\n\n  updateViewSize = (newViewSizeChangeCounter) => {\n    if (\n      newViewSizeChangeCounter > this.state.viewSizeChangeCounter ||\n      this.state.viewSizeChangeCounter === undefined\n    ) {\n      this.setState({ viewSizeChangeCounter: newViewSizeChangeCounter });\n    }\n  };\n\n  resubscribeToProductStream = (imageId, overlays) => {\n    if (imageId) {\n      this.unsubscribeFromProductStream();\n      this.subscribeToProductStream(imageId, overlays);\n      this.setState({ subscribedSource: imageId });\n    }\n  };\n\n  subscribeToProductStream = (imageId, overlays) => {\n    if (!this.productSub) {\n      const { inspectionId } = this.props;\n      const startAtTriggerCount = -1; // image view can only show one item at a time\n      const imageIds = [imageId];\n      const valueIds = this.getUsedVariablesFromOverlay(overlays);\n      const desc = { inspectionId, imageIds, valueIds, startAtTriggerCount };\n      this.productSub = this.props.proxy.subscribeToProductStream(desc, this.onProduct);\n    }\n  };\n\n  unsubscribeFromProductStream = () => {\n    if (this.productSub) {\n      this.props.proxy.unsubscribeFromProductStream(this.productSub);\n      this.productSub = null;\n    }\n  };\n\n  getUsedVariablesFromOverlay = (overlays) => {\n    const variables = [];\n    overlays &&\n      overlays.forEach((overlay) => {\n        Object.keys(overlay).forEach((key) => {\n          if (key.indexOf('Variable') > -1 && overlay[key] && !variables.includes(overlay[key])) {\n            variables.push(overlay[key]);\n          }\n        });\n      });\n    return variables;\n  };\n\n  setAllOverlaysActive = (isActive) => {\n    const updatedOverlays = this.props.overlays.map((overlay) => ({\n      ...overlay,\n      isActive,\n    }));\n    this.props.setSharedStateData('overlays', updatedOverlays);\n    this.props.setSaveFlag(true);\n  };\n\n  createActiveOverlayList = (overlays) => overlays.filter((overlay) => overlay.isActive);\n\n  createActiveOverlayIdList = (overlays) => {\n    const activeOverlays = overlays.filter((overlay) => overlay.isActive);\n    return activeOverlays.map((overlay) => overlay.id);\n  };\n\n  onProduct = ({ product }) => {\n    const imageId = this.props.sourceImage;\n\n    this.setState({ imageId, product });\n    if (!this.state.canvasInitResize) {\n      this.setState({ canvasInitResize: true });\n    }\n  };\n\n  toggleOverlayInfo = () => {\n    this.setState({\n      isOverlayInfoOpen: !this.state.isOverlayInfoOpen,\n      isImageInfoOpen: false,\n    });\n  };\n\n  toggleImageInfo = () => {\n    this.setState({\n      isImageInfoOpen: !this.state.isImageInfoOpen,\n      isOverlayInfoOpen: false,\n    });\n  };\n\n  setSourceImageId = (id) => {\n    if (!id) {\n      logger.error(`OjectSelector did not return a valid id ${id}.`);\n      return;\n    }\n    this.props.setSharedStateData('sourceImage', id);\n  };\n\n  updateOverlayList = (updatedOverlayList) => {\n    this.props.setSharedStateData('overlays', updatedOverlayList);\n    this.props.setSaveFlag(true);\n  };\n\n  setTitleFromConfig = () => {\n    const { sourceImage, inspectionId, configuration } = this.props;\n    if (configuration) {\n      const path = configuration.getValueNameForId(inspectionId, sourceImage);\n      if (path) {\n        this.props.setViewData('windowName', path);\n      }\n    }\n  };\n\n  renderObjectSelector = () => {\n    const { configuration, inspectionId } = this.props;\n    if (!configuration || !inspectionId) {\n      return;\n    }\n\n    const images = configuration.getObjectSelectorImagesForInspection(inspectionId);\n\n    return (\n      <div style={{ width: '100%', overflow: 'auto' }}>\n        {images && (\n          <ObjectSelector\n            singleSelect\n            data={images.tree}\n            onChange={(selectedId, checkedLocation) => {\n              this.setSourceImageId(selectedId);\n              this.props.setViewData('windowName', checkedLocation);\n              this.props.setSaveFlag(true);\n            }}\n          />\n        )}\n      </div>\n    );\n  };\n\n  renderImageView = () => {\n    const { viewActions } = this.props;\n\n    return (\n      <div style={{ height: '100%', width: '100%' }}>\n        <div style={{ height: '100%', width: '100%' }}>{this.renderImageViewImpl()}</div>\n        <ActionBar isViewAction actions={viewActions(this)} />\n      </div>\n    );\n  };\n\n  renderImageViewImpl() {\n    const { product } = this.state;\n    if (!product || product.released) {\n      return <div>&lt;UNAVAILABLE&gt;</div>;\n    }\n\n    return [this.renderImageEditor(), this.renderImageInfo(), this.renderOverlayList()];\n  }\n\n  renderImageEditor() {\n    const { inspectionId, id } = this.props;\n    const { product, imageId, isImageInfoOpen } = this.state;\n\n    return (\n      <ImageEditor\n        ref={(ref) => {\n          this.imageEditor = ref;\n        }}\n        id={id}\n        inspectionId={inspectionId}\n        imageId={imageId}\n        product={product}\n        key={`ImageEditor${id}`}\n        isImageInfoOpen={isImageInfoOpen}\n      />\n    );\n  }\n\n  renderImageInfo() {\n    const { inspectionId, id } = this.props;\n    const { isImageInfoOpen } = this.state;\n\n    if (!isImageInfoOpen) {\n      return;\n    }\n\n    return (\n      <ImageInfo\n        id={id}\n        key={`ImageInfo${id}`}\n        inspectionId={inspectionId}\n        imageInfoClass={classNames({ 'info-box': true })}\n      />\n    );\n  }\n\n  renderOverlayList() {\n    const { overlays, id } = this.props;\n    const { isOverlayInfoOpen } = this.state;\n\n    if (!isOverlayInfoOpen) {\n      return;\n    }\n\n    return (\n      <div className={classNames({ 'info-box': true })} key={`OverlayList${id}`}>\n        <OverlayList\n          overlays={overlays}\n          updateOverlayList={this.updateOverlayList}\n          canSelectRow={false}\n          onSelectAll={(checked) => this.setAllOverlaysActive(checked)}\n          hasActionBar={false}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { sourceImage, myPermissions } = this.props;\n\n    this.setTitleFromConfig();\n\n    if (canReadImageView(myPermissions) || canEditImageView(myPermissions)) {\n      return (\n        <div className=\"image-view-wrapper\">\n          {sourceImage ? this.renderImageView() : this.renderObjectSelector()}\n        </div>\n      );\n    }\n\n    return <div></div>;\n  }\n}\n\nImageView.defaultProps = {\n  viewActions: (imageView) => {\n    const actions = [];\n    const canEdit = canEditImageView(imageView.props.myPermissions);\n\n    if (canEdit) {\n      actions.push({\n        intlId: 'imageView.zoomOut',\n        iconUrl: iconOne,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.resetZoom();\n          }\n        },\n      });\n      actions.push({\n        intlId: 'imageView.fitToWidth',\n        iconUrl: iconFitToWidth,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.fitToWidth();\n          }\n        },\n      });\n      actions.push({\n        intlId: 'imageView.fitToHeight',\n        iconUrl: iconFitToHeight,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.fitToHeight();\n          }\n        },\n      });\n    }\n\n    if (canReadImageView(imageView.props.myPermissions) || canEdit) {\n      actions.push({\n        type: SEPARATOR,\n      });\n      actions.push({\n        intlId: 'imageView.save',\n        iconUrl: iconDownload,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.downloadOriginalImage();\n          }\n        },\n      });\n      actions.push({\n        intlId: 'imageView.saveWithOverlays',\n        iconUrl: iconDownloadWithOverlays,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.downloadOriginalImageWithOverlays();\n          }\n        },\n      });\n      actions.push({\n        type: SEPARATOR,\n      });\n      actions.push({\n        intlId: 'imageView.overlayListToggle',\n        iconUrl: iconOverlayList,\n        onClickHandler: () => {\n          imageView.toggleOverlayInfo();\n        },\n      });\n      actions.push({\n        intlId: 'imageView.imageInfoToggle',\n        iconUrl: iconInfo,\n        onClickHandler: () => {\n          imageView.toggleImageInfo();\n        },\n      });\n    }\n\n    return actions;\n  },\n  overlayActions: () => [],\n  inRunMode: false,\n  currentMode: undefined,\n  proxy: undefined,\n  rgbValues: { R: 0, G: 0, B: 0 },\n  cursorPosition: { width: 0, height: 0 },\n};\n\nImageView.propTypes = {\n  viewActions: ActionBarType,\n  overlayActions: ActionBarType,\n  currentMode: PropTypes.string,\n  viewSizeChangeCounter: PropTypes.number,\n  overlays: PropTypes.array, //eslint-disable-line\n  proxy: ProxyType,\n  sourceImage: PropTypes.number,\n};\n\nconst initState = {\n  scaleFactor: 0,\n  rgbValues: { R: 0, G: 0, B: 0 },\n  imageDimensions: { width: 0, height: 0 },\n  cursorPosition: { x: 0, y: 0 },\n};\n\nconst initSharedState = {\n  overlays: [],\n  sourceImage: 0,\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  dispatch(initViewState(inspectionId, viewId, initState, initSharedState));\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    setSharedStateData: (key, data) =>\n      dispatch(setSharedStateData(inspectionId, key, data, viewId)),\n    addImageNotAvailableNotification: () => dispatch(addImageNotAvailableNotification()),\n    setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n  };\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  const result = {\n    proxy: state.app.proxy,\n    configuration: state.app.configuration,\n    currentMode: state.app.currentMode,\n    viewSizeChangeCounter: state.viewSet.viewSizeChangeCounter,\n    myPermissions: state.app.myPermissions,\n    isBrowserWindowVisible: state.app.isBrowserWindowVisible,\n  };\n\n  try {\n    return {\n      ...result,\n      overlays: state.inspections[inspectionId].sharedState.views[viewId].overlays,\n      sourceImage: Number(state.inspections[inspectionId].sharedState.views[viewId].sourceImage),\n    };\n  } catch (error) {\n    return result;\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageView);\n","export default __webpack_public_path__ + \"static/media/show-off.8787321d.svg\";","export default __webpack_public_path__ + \"static/media/drag.a4b2fa8c.svg\";","import React from 'react';\nimport Table, { callOrReturn } from 'react-base-table';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\n\nimport DragIcon from '../../assets/icons/drag.svg';\n\nimport './style.css';\n\nconst DraggableContainer = sortableContainer(({ children }) => children);\nconst DraggableElement = sortableElement(({ children }) => children);\nconst DraggableHandle = sortableHandle(({ children }) => children);\n\nconst Row = ({ key, index, children, draggable, ...rest }) => {\n  if (!draggable) {\n    return <div {...rest}>{children}</div>;\n  }\n\n  return (\n    <DraggableElement key={key} index={index}>\n      <div {...rest}>\n        <DraggableHandle>\n          <div className=\"draggable-table-handle\">\n            <img src={DragIcon} alt=\"Drag\" />\n          </div>\n        </DraggableHandle>\n        {children}\n      </div>\n    </DraggableElement>\n  );\n};\n\nclass DraggableTable extends React.PureComponent {\n  state = {\n    data: this.props.data,\n  };\n\n  table = React.createRef();\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      const data = [...this.props.data];\n      this.setState({ data });\n    }\n  }\n\n  getContainer = () => {\n    return this.table.current.getDOMNode().querySelector('.BaseTable__body');\n  };\n\n  getHelperContainer = () => {\n    return this.table.current.getDOMNode().querySelector('.BaseTable__table');\n  };\n\n  rowProps = (args) => {\n    const extraProps = callOrReturn(this.props.rowProps);\n    return {\n      ...extraProps,\n      draggable: this.props.draggable,\n      tagName: Row,\n      index: args.rowIndex,\n    };\n  };\n\n  handleSortEnd = ({ oldIndex, newIndex }) => {\n    this.props.onSequenceChange(oldIndex, newIndex);\n    const data = [...this.state.data];\n    const [removed] = data.splice(oldIndex, 1);\n    data.splice(newIndex, 0, removed);\n    this.setState({ data });\n  };\n\n  render() {\n    if (!this.props.draggable) {\n      return (\n        <Table {...this.props} ref={this.table} data={this.state.data} rowProps={this.rowProps} />\n      );\n    }\n\n    return (\n      <DraggableContainer\n        useDragHandle\n        getContainer={this.getContainer}\n        helperContainer={this.getHelperContainer}\n        onSortEnd={this.handleSortEnd}\n      >\n        <Table\n          {...this.props}\n          ref={this.table}\n          data={this.state.data}\n          rowProps={this.rowProps}\n          className=\"draggable\"\n        />\n      </DraggableContainer>\n    );\n  }\n}\n\nDraggableTable.defaultProps = {\n  draggable: true,\n};\n\nexport default DraggableTable;\n","import React, { useState, useRef } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport Dialog from '../../../../components/Dialog';\nimport { languages } from '../../../../translations';\nimport './styles.scss';\n\nconst AliasEditor = ({ open, onClose, selectedAlias, intl }) => {\n  if (!selectedAlias.alias) {\n    selectedAlias.alias = {};\n  }\n\n  const oldState = useRef({ ...selectedAlias.alias });\n  const [alias, setAlias] = useState(selectedAlias || {});\n\n  if (alias.id !== selectedAlias.id) {\n    setAlias(selectedAlias);\n  }\n\n  const renderLanguageAliases = () => {\n    const result = [];\n    (languages || []).forEach((language) => {\n      result.push(\n        <div className=\"row\" key={`rowDiv${language.locale}${selectedAlias.id}`}>\n          <div className=\"label\">Alias {language.name}:</div>\n          <div className=\"textfield\">\n            <TextField\n              id={`aliasLabel${language.locale}`}\n              fullWidth\n              defaultValue={selectedAlias.alias && selectedAlias.alias[language.locale]}\n              onChange={(e) => {\n                alias.alias[language.locale] = e.target.value;\n              }}\n            />\n          </div>\n        </div>,\n      );\n    });\n    return result;\n  };\n\n  return (\n    <Dialog\n      isInView\n      isPopup\n      title={intl.messages['listView.AliasEditor.title']}\n      onClose={() => {\n        alias.alias = oldState.current;\n        onClose(alias);\n      }}\n      open={open}\n    >\n      <div className=\"alias-editor-wrapper\">\n        <div className=\"row\">\n          <div className=\"label\">\n            <FormattedMessage id=\"listView.AliasEditor.dottedName\" />:\n          </div>\n          <div className=\"textfield\">\n            <TextField id=\"dottedNameLabel\" fullWidth value={selectedAlias.name} disabled />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"label\">\n            <FormattedMessage id=\"listView.AliasEditor.value\" />:\n          </div>\n          <div className=\"textfield\">\n            <TextField id=\"valueLabel\" fullWidth disabled value={selectedAlias.value} />\n          </div>\n        </div>\n        {renderLanguageAliases()}\n        <div className=\"buttons\">\n          <Button variant=\"contained\" color=\"primary\" onClick={() => onClose(alias, true)}>\n            <FormattedMessage id=\"listView.AliasEditor.button\" />\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default injectIntl(AliasEditor);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AutoResizer } from 'react-base-table';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport 'react-base-table/styles.css';\n\nimport EditIcon from '../../assets/icons/edit.svg';\nimport iconList from '../../assets/icons/overlay-list.svg';\nimport iconShowOff from '../../assets/icons/show-off.svg';\nimport iconShow from '../../assets/icons/show.svg';\nimport ActionBar from '../../components/ActionBar';\nimport DraggableTable from '../../components/DraggableTable';\nimport ObjectSelector from '../../components/ObjectSelector';\nimport ProxyType from '../../components/Protobuf/ProxyType';\nimport IconButton from '../../components/buttons/IconButton';\nimport {\n  initViewState,\n  setViewData,\n  setSharedStateData,\n  setSaveFlag,\n  updateListViewShowAliases,\n} from '../../redux/actions/index';\nimport ActionBarType, { TOGGLE_BUTTON } from '../../types/ActionBarType';\nimport logger from '../../utils/logger';\nimport { canReadListView, canEditListView } from '../../utils/permissions';\n\nimport AliasEditor from './components/List/AliasEditor';\n\nimport './style.scss';\n\nclass ListView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listValues: [],\n      expandedKeys: [],\n      isAliasEditorOpen: false,\n      selectedAlias: {},\n      showAliases: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.unsubscribeFromProductStream();\n    if (!this.props.isSelectionMode && this.props.selection.length > 0) {\n      this.subscribeToProductStream();\n    }\n\n    if (this.props.showAliasesInList) {\n      this.setState({ showAliases: true });\n    }\n\n    const { configuration, proxy } = this.props;\n    if (configuration.objectSelectorItems.size === 0) {\n      configuration.setObjectSelectorItems(proxy.protobuf).then(() => {\n        proxy.dispatchCurrentConfiguration(configuration);\n      });\n    }\n    if (configuration.idNameMappings.size === 0) {\n      configuration.setIdNameMappings(proxy.protobuf).then(() => {\n        proxy.dispatchCurrentConfiguration(configuration);\n      });\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.unsubscribeFromProductStream();\n    if (!nextProps.isSelectionMode && nextProps.selection.length > 0) {\n      this.subscribeToProductStream();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromProductStream();\n  }\n\n  subscribeToProductStream() {\n    if (!this.productSub) {\n      const { inspectionId, selection } = this.props;\n      const startAtTriggerCount = -1; // list view can only show one item at a time\n      const desc = { inspectionId, valueIds: selection, startAtTriggerCount };\n      this.productSub = this.props.proxy.subscribeToProductStream(desc, this.onProduct.bind(this));\n    }\n  }\n\n  unsubscribeFromProductStream() {\n    if (this.productSub) {\n      this.props.proxy.unsubscribeFromProductStream(this.productSub);\n      this.productSub = null;\n    }\n  }\n\n  onProduct({ product }) {\n    const listValues = this.createListValues(product);\n    this.setState({ listValues });\n    return Promise.resolve();\n  }\n\n  createListValues(product) {\n    const { configuration, inspectionId, selection } = this.props;\n    const values = product.getValuesAsString(selection);\n    return values.map((entry) => ({\n      ...entry,\n      name: configuration.getValueNameForId(inspectionId, entry.id) || '',\n    }));\n  }\n\n  setAliasColumnVisibility = (visibility) => {\n    this.props.updateListViewShowAliases(visibility);\n    this.props.setSaveFlag(true);\n    this.setState({ showAliases: visibility });\n  };\n\n  saveNewOrdner = (before, after) => {\n    const { selection } = this.props;\n    const [removed] = selection.splice(before, 1);\n    selection.splice(after, 0, removed);\n    this.props.setViewData('selection', selection);\n    this.props.setSaveFlag(true);\n  };\n\n  renderValueSelector = () => {\n    const { configuration, inspectionId, selection } = this.props;\n\n    if (!configuration || !inspectionId) {\n      return;\n    }\n\n    const items = configuration.getObjectSelectorItemsForInspection(inspectionId);\n    if (!items) {\n      return <div style={{ width: '100%', overflow: 'auto', height: '100%' }}></div>;\n    }\n\n    let tree = items.tree;\n    tree = configuration.filterArrayValuesFromTree(tree);\n\n    const filterIgnore = [];\n    const name = configuration.getInspectionName(inspectionId);\n\n    filterIgnore.push(`Inspections.${name}`);\n    filterIgnore.push(`Inspections${name}`);\n    filterIgnore.push(name);\n\n    return (\n      <div style={{ width: '100%', overflow: 'auto', height: '100%' }}>\n        <ObjectSelector\n          data={tree}\n          onChange={(selectedIds) => {\n            this.props.setViewData('selection', selectedIds);\n            this.props.setSaveFlag(true);\n          }}\n          onExpand={(expandedKeys) => this.setState({ expandedKeys })}\n          selection={selection}\n          expandedKeys={this.state.expandedKeys}\n          filterIgnore={filterIgnore}\n        />\n      </div>\n    );\n  };\n\n  renderList = () => {\n    const { intl, locale, myPermissions } = this.props;\n    const { showAliases } = this.state;\n    const data = this.getListData();\n    const columns = [\n      {\n        key: showAliases ? 'Alias/Name' : 'Name',\n        dataKey: 'name',\n        title: showAliases ? 'Alias/Name' : 'Name',\n        width: 0,\n        flexGrow: 2,\n      },\n      {\n        key: 'Values',\n        dataKey: 'value',\n        title: 'Values',\n        width: 0,\n        flexGrow: 1,\n      },\n    ];\n\n    if (canEditListView(myPermissions)) {\n      columns.push({\n        key: '',\n        dataKey: 'editAlias',\n        title: '',\n        width: 50,\n      });\n    }\n\n    const tableData = data.map((row) => {\n      row.name = showAliases ? (row.alias && row.alias[locale]) || row.name : row.name;\n      return {\n        ...row,\n        editAlias: (\n          <IconButton\n            tooltip={intl.messages['listView.AliasEditor.title']}\n            onClick={() => this.setState({ selectedAlias: row, isAliasEditorOpen: true })}\n            iconUrl={EditIcon}\n            key=\"editAlias\"\n          />\n        ),\n      };\n    });\n\n    return (\n      <div style={{ height: '100%' }}>\n        <AutoResizer>\n          {({ width, height }) => (\n            <DraggableTable\n              columns={columns}\n              data={tableData}\n              width={width}\n              height={height}\n              headerHeight={30}\n              rowHeight={30}\n              onSequenceChange={(before, after) => this.saveNewOrdner(before, after)}\n            />\n          )}\n        </AutoResizer>\n        {this.renderAliasEditor()}\n      </div>\n    );\n  };\n\n  renderAliasEditor = () => {\n    const { selectedAlias, listValues, isAliasEditorOpen } = this.state;\n    const currentValueObject = (listValues || []).find((value) => value.id === selectedAlias.id);\n\n    if (!currentValueObject || !isAliasEditorOpen) {\n      return;\n    }\n\n    return (\n      <AliasEditor\n        onClose={(alias, isSaved = false) => this.closeAliasEditor(alias, isSaved)}\n        open={this.state.isAliasEditorOpen}\n        selectedAlias={currentValueObject}\n      />\n    );\n  };\n\n  getListData = () => {\n    const { aliases } = this.props;\n    const data = this.state.listValues;\n\n    if (aliases) {\n      (data || []).map((entry) => {\n        if (aliases.has(entry.id)) {\n          const alias = aliases.get(entry.id);\n          if (!alias) {\n            logger.error(`Could not load alias for objectId ${entry.id}`);\n            return entry;\n          }\n\n          if (!alias.alias) {\n            logger.info(`There is no alias value stored for ${alias.dottedName}.`);\n            return entry;\n          }\n\n          entry.alias = alias.alias;\n        }\n        return entry;\n      });\n    }\n    return data;\n  };\n\n  closeAliasEditor = (alias, isSaved) => {\n    if (alias) {\n      const { aliases } = this.props;\n\n      Object.keys(alias.alias).forEach((language) => {\n        if (alias.alias[language] === '') {\n          delete alias.alias[language];\n        }\n      });\n\n      const isEmpty = Object.keys(alias.alias).length === 0;\n      if (aliases.has(alias.id)) {\n        const newAlias = aliases.get(alias.id);\n        newAlias.alias = alias.alias;\n\n        if (isEmpty) {\n          aliases.delete(alias.id);\n        } else {\n          aliases.set(alias.id, newAlias);\n        }\n      } else {\n        if (!isEmpty) {\n          aliases.set(alias.id, { objectId: alias.id, dottedName: alias.name, alias: alias.alias });\n        }\n      }\n    }\n\n    this.setState({ isAliasEditorOpen: false });\n    if (isSaved) {\n      this.props.setSaveFlag(true);\n    }\n  };\n\n  render() {\n    const { viewActions, isSelectionMode, myPermissions } = this.props;\n    const canEdit = canEditListView(myPermissions);\n\n    if (canReadListView(myPermissions) || canEdit) {\n      return (\n        <div className=\"list-view-wrapper\">\n          {isSelectionMode && canEdit ? this.renderValueSelector() : this.renderList()}\n          <ActionBar isViewAction actions={viewActions(this)} />\n        </div>\n      );\n    }\n\n    return <div></div>;\n  }\n}\n\nListView.defaultProps = {\n  viewActions: (listView) => {\n    const actions = [];\n    if (canEditListView(listView.props.myPermissions)) {\n      actions.push({\n        intlId: 'listView.save',\n        iconUrl: iconList,\n        onClickHandler: () => {\n          listView.props.setViewData('isSelectionMode', !listView.props.isSelectionMode);\n          listView.props.setSaveFlag(true);\n        },\n      });\n    }\n\n    actions.push({\n      type: TOGGLE_BUTTON,\n      id: listView.props.inspectionId,\n      intlId: 'listView.Actionbar.showAliases',\n      iconUrl: iconShow,\n      onClickHandler: () => {\n        listView.setAliasColumnVisibility(true);\n      },\n      intlIdAlternative: 'listView.Actionbar.hideAliases',\n      iconUrlAlternative: iconShowOff,\n      onClickHandlerAlternative: () => {\n        listView.setAliasColumnVisibility(false);\n      },\n      showAlternative: listView.props.showAliasesInList,\n    });\n\n    return actions;\n  },\n  currentMode: undefined,\n  proxy: undefined,\n  isSelectionMode: true,\n  inspections: {},\n  selection: [],\n};\n\nListView.propTypes = {\n  viewActions: ActionBarType.isRequired,\n  currentMode: PropTypes.string,\n  proxy: ProxyType,\n  inspections: PropTypes.object,\n  selection: PropTypes.array,\n  isSelectionMode: PropTypes.bool,\n};\n\nconst initState = {\n  selection: [],\n  isSelectionMode: true,\n};\n\nconst initSharedState = {};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  dispatch(initViewState(inspectionId, viewId, initState, initSharedState));\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    setSharedStateData: (key, data) => dispatch(setSharedStateData(inspectionId, key, data)),\n    updateListViewShowAliases: (show) => dispatch(updateListViewShowAliases(inspectionId, show)),\n    setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n  };\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  try {\n    return {\n      proxy: state.app.proxy,\n      configuration: state.app.configuration,\n      currentMode: state.app.currentMode,\n      selection: state.inspections[inspectionId].views[viewId].selection,\n      isSelectionMode: state.inspections[inspectionId].views[viewId].isSelectionMode,\n      aliases: state.inspections[inspectionId].sharedState.listViewAliases,\n      showAliasesInList: state.inspections[inspectionId].sharedState.showAliasesInList,\n      locale: state.app.locale,\n      myPermissions: state.app.myPermissions,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(ListView));\n","export default __webpack_public_path__ + \"static/media/delete-dustbin.8c1d9e0c.svg\";","import React, { Component } from 'react';\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ClearIcon from '../../../../assets/icons/clear.svg';\nimport OutlinedSelection from '../../../../components/OutlinedSelection';\nimport { setSaveFlag } from '../../../../redux/actions';\nimport { canEditParameterView } from '../../../../utils/permissions';\n\nconst styles = () => ({\n  header: {\n    fontSize: '1.8rem',\n    fontWeight: 'bold',\n    marginBottom: 30,\n  },\n  input: {\n    height: 37,\n    fontSize: '1.4rem',\n  },\n  label: {\n    fontSize: '1.4rem',\n    transform: 'translate(14px, 11px) scale(1)',\n  },\n});\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    htmlFontSize: 10,\n  },\n});\n\nclass OverlayPropertyList extends Component {\n  async componentDidMount() {\n    const { configuration, proxy } = this.props;\n    if (configuration.idNameMappings.size === 0) {\n      configuration.setIdNameMappings(proxy.protobuf).then(() => {\n        proxy.dispatchCurrentConfiguration(configuration);\n      });\n    }\n  }\n\n  onChange = (changedValue) => {\n    this.props.setSaveFlag(true);\n    this.props.onChange(changedValue);\n  };\n\n  renderTextField = ({ name, id, disabled }) => {\n    const { currentOverlay, classes } = this.props;\n\n    return (\n      <TextField\n        label={name}\n        style={{ width: '100%' }}\n        id={id}\n        type=\"text\"\n        variant=\"outlined\"\n        disabled={disabled || !currentOverlay}\n        InputProps={{ classes: { input: classes.input } }}\n        InputLabelProps={{ classes: { root: classes.label } }}\n        value={(currentOverlay && currentOverlay[id]) || ''}\n        onChange={(e) => this.onChange({ [id]: e.target.value })}\n      />\n    );\n  };\n\n  renderNumberField = ({ name, id, min, max, disabled }) => {\n    const { currentOverlay, classes } = this.props;\n\n    const value = (currentOverlay && currentOverlay[id]) || '';\n    const trimToMinMax = (min, max, value) => {\n      let valueNumber = Number(value);\n      if (valueNumber > max) {\n        valueNumber = max;\n      }\n      if (valueNumber < min) {\n        valueNumber = min;\n      }\n\n      return valueNumber;\n    };\n    return (\n      <TextField\n        label={name}\n        style={{ width: '100%' }}\n        id={id}\n        type=\"number\"\n        variant=\"outlined\"\n        disabled={disabled || !currentOverlay}\n        InputProps={{\n          classes: { input: classes.input },\n          inputProps: { min, max },\n        }}\n        InputLabelProps={{ classes: { root: classes.label } }}\n        value={value}\n        onChange={(e) => this.onChange({ [id]: trimToMinMax(min, max, e.target.value) })}\n      />\n    );\n  };\n\n  renderSelection = ({ name, id, options, disabled }) => {\n    const { currentOverlay } = this.props;\n\n    return (\n      <OutlinedSelection\n        selectedValue={currentOverlay && currentOverlay[id]}\n        values={options}\n        onSelectionChanged={this.onChange}\n        name={name}\n        id={id}\n        disabled={disabled || !currentOverlay}\n      />\n    );\n  };\n\n  renderObjectSelector = ({ name, id, disabled }) => {\n    const { currentOverlay, classes, inspectionId, configuration } = this.props;\n\n    let value =\n      (currentOverlay &&\n        currentOverlay[id] &&\n        configuration.getValueNameForId(inspectionId, currentOverlay[id])) ||\n      '';\n\n    return (\n      <TextField\n        label={name}\n        style={{ width: '100%' }}\n        id={id}\n        type=\"text\"\n        variant=\"outlined\"\n        disabled={disabled || !currentOverlay}\n        InputProps={{\n          classes: { input: classes.input },\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"clear\"\n                onClick={() => this.onChange({ [id]: '' })}\n                title={id}\n              >\n                <img src={ClearIcon} alt=\"x\" />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{ classes: { root: classes.label } }}\n        value={value}\n        onFocus={() => this.props.openSelection(name, id)}\n      />\n    );\n  };\n\n  render() {\n    const { classes, imageDimensions, myPermissions } = this.props;\n    const imageWidth = imageDimensions?.width;\n    const imageHeight = imageDimensions?.height;\n\n    const minWidth = Number(-imageWidth * 2);\n    const maxWidth = Number(imageWidth * 2);\n\n    const minHeight = Number(-imageHeight * 2);\n    const maxHeight = Number(imageHeight * 2);\n\n    const canEdit = canEditParameterView(myPermissions);\n    return (\n      <div className=\"parameter-view-overlay-overlaypropertylist\">\n        <MuiThemeProvider theme={theme}>\n          <label className={classes.header}>Overlay parameters</label>\n          {this.renderTextField({ name: 'Label', id: 'label', disabled: !canEdit })}\n\n          {this.renderNumberField({\n            name: 'X',\n            id: 'x',\n            min: minWidth,\n            max: maxWidth,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({ name: 'X Variable', id: 'xVariable', disabled: !canEdit })}\n\n          {this.renderNumberField({\n            name: 'Offset Left',\n            id: 'offsetLeft',\n            min: minWidth,\n            max: maxWidth,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({\n            name: 'Offset Left Variable',\n            id: 'offsetLeftVariable',\n            disabled: !canEdit,\n          })}\n\n          {this.renderNumberField({\n            name: 'Y',\n            id: 'y',\n            min: minHeight,\n            max: maxHeight,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({ name: 'Y Variable', id: 'yVariable', disabled: !canEdit })}\n\n          {this.renderNumberField({\n            name: 'Offset Top',\n            id: 'offsetTop',\n            min: minHeight,\n            max: maxHeight,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({\n            name: 'Offset Top Variable',\n            id: 'offsetTopVariable',\n            disabled: !canEdit,\n          })}\n\n          {this.renderNumberField({\n            name: 'Width',\n            id: 'width',\n            min: minWidth,\n            max: maxWidth,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({\n            name: 'Width Variable',\n            id: 'widthVariable',\n            disabled: !canEdit,\n          })}\n\n          {this.renderNumberField({\n            name: 'Height',\n            id: 'height',\n            min: minHeight,\n            max: maxHeight,\n            disabled: !canEdit,\n          })}\n          {this.renderObjectSelector({\n            name: 'Height Variable',\n            id: 'heightVariable',\n            disabled: !canEdit,\n          })}\n          {this.renderTextField({ name: 'Color', id: 'color', disabled: !canEdit })}\n          {this.renderObjectSelector({\n            name: 'Color Variable',\n            id: 'colorVariable',\n            disabled: !canEdit,\n          })}\n\n          {this.renderSelection({\n            name: 'Line Style',\n            id: 'lineStyle',\n            options: ['solid', 'dotted', 'dashed'],\n            disabled: !canEdit,\n          })}\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nconst propTypes = {\n  overlay: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n};\n\nOverlayPropertyList.propTypes = propTypes;\n\nconst mapStateToProps = (state) => {\n  return {\n    proxy: state.app.proxy,\n    configuration: state.app.configuration,\n    myPermissions: state.app.myPermissions,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(OverlayPropertyList));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Dialog from '../../../../components/Dialog';\nimport ObjectSelector from '../../../../components/ObjectSelector';\n\nclass VariableSelection extends Component {\n  setSelection = (selectedId) => {\n    this.props.onClose(selectedId);\n  };\n\n  async componentDidMount() {\n    const { configuration, proxy } = this.props;\n    if (configuration.objectSelectorItems.size === 0) {\n      configuration.setObjectSelectorItems(proxy.protobuf).then(() => {\n        proxy.dispatchCurrentConfiguration(configuration);\n      });\n    }\n  }\n\n  render() {\n    const { open, title, configuration, inspectionId } = this.props;\n\n    if (!configuration || !inspectionId) {\n      return;\n    }\n\n    const items = configuration.getObjectSelectorItemsForInspection(inspectionId);\n    if (!items) {\n      return <div></div>;\n    }\n\n    let tree = items.tree;\n    tree = configuration.filterArrayValuesFromTree(tree);\n\n    const filterIgnore = [];\n    const name = configuration.getInspectionName(inspectionId);\n\n    filterIgnore.push(`Inspections.${name}`);\n    filterIgnore.push(`Inspections${name}`);\n    filterIgnore.push(name);\n\n    return (\n      <Dialog isInView isPopup title={title} onClose={() => this.props.onClose()} open={open}>\n        <div className=\"objectselector-in-dialog-wrapper\">\n          <ObjectSelector\n            singleSelect\n            data={tree}\n            onChange={(selectedId) => this.setSelection(selectedId)}\n            filterIgnore={filterIgnore}\n          />\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nVariableSelection.defaultProps = {\n  open: false,\n  title: '',\n};\n\nVariableSelection.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => {\n  try {\n    return {\n      proxy: state.app.proxy,\n      configuration: state.app.configuration,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport default connect(mapStateToProps)(VariableSelection);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport iconDeleteDustbin from '../../../../assets/icons/delete-dustbin.svg';\nimport iconPlus from '../../../../assets/icons/plus.svg';\nimport ActionBar from '../../../../components/ActionBar/index';\nimport OverlayList from '../../../../components/OverlayList';\nimport { initViewState, setSharedStateData, setSaveFlag } from '../../../../redux/actions';\nimport ActionBarType from '../../../../types/ActionBarType';\nimport { canEditParameterView } from '../../../../utils/permissions';\nimport { updateOverlayList } from '../../../../utils/reduxHelper';\nimport OverlayPropertyList from './OverlayPropertyList';\nimport VariableSelection from './VariableSelection';\n\nclass Overlay extends Component {\n  state = {\n    currentOverlay: undefined,\n    isObjectSelectorOpen: false,\n    variableName: 'Variables',\n    variableId: '',\n    selectedVariables: [],\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.overlays && this.state.currentOverlay) {\n      const currentOverlay = nextProps.overlays.filter(\n        (item) => item.id === this.state.currentOverlay.id,\n      )[0];\n      this.setState({\n        currentOverlay,\n      });\n    }\n\n    if (nextProps.overlays) {\n      this.setInitialOverlay(nextProps.overlays);\n    }\n  }\n\n  setInitialOverlay = (overlays) => {\n    if (!this.state.currentOverlay && overlays && overlays.length > 0) {\n      this.setState({\n        currentOverlay: overlays[0],\n      });\n    }\n  };\n\n  setAllOverlaysActive = (isActive) => {\n    try {\n      const updatedOverlays = this.props.overlays.map((overlay) => ({\n        ...overlay,\n        isActive,\n      }));\n      this.props.setSharedStateData('overlays', updatedOverlays);\n      this.props.setSaveFlag(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  addNewOverlay = () => {\n    const { overlays } = this.props;\n\n    const newOverlay = {\n      color: '#ebfc02',\n      height: 100,\n      id: Math.floor(Math.random() * 10000),\n      isActive: true,\n      label: 'Overlay',\n      lineStyle: 'solid',\n      width: 100,\n      x: 10,\n      y: 20,\n      offsetLeft: null,\n      offsetTop: null,\n    };\n    try {\n      this.props.setSharedStateData('overlays', [...overlays, newOverlay]);\n      this.setState({\n        currentOverlay: newOverlay,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  deleteCurrentOverlay = () => {\n    if (!this.state.currentOverlay) {\n      return;\n    }\n\n    try {\n      const { overlays } = this.props;\n      const updatedOverlays = overlays.filter(\n        (overlay) => overlay.id !== this.state.currentOverlay.id,\n      );\n      this.props.setSharedStateData('overlays', updatedOverlays);\n\n      const newCurrentOverlay = this.getNeighborOverlayId(this.state.currentOverlay.id, overlays);\n      this.setState({\n        currentOverlay: overlays.filter((item) => item.id === newCurrentOverlay)[0],\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  getNeighborOverlayId = (id, overlays) => {\n    for (let i = 0; i < overlays.length; i++) {\n      if (overlays[i]['id'] === id) {\n        if (overlays[i - 1]) {\n          return overlays[i - 1]['id'];\n        } else if (overlays[i + 1]) {\n          return overlays[i + 1]['id'];\n        }\n      }\n    }\n    return -1;\n  };\n\n  updateCurrentOverlay = (currentOverlay) => {\n    this.setState({\n      currentOverlay: currentOverlay,\n    });\n  };\n\n  updateOverlayList = (updatedOverlayList) => {\n    this.props.setSharedStateData('overlays', updatedOverlayList);\n    this.props.setSaveFlag(true);\n  };\n\n  renderPlaceholder = () => {\n    return (\n      <div className=\"parameter-view-overlay-placeholder\">\n        Please select a source for this parameter view.\n      </div>\n    );\n  };\n\n  setVariableSelection = (selectedVariable) => {\n    if (!selectedVariable) {\n      this.setState({ isObjectSelectorOpen: false });\n      return;\n    }\n    const { overlays } = this.props;\n    const { currentOverlay, variableId, selectedVariables } = this.state;\n    const updatedOverlay = {\n      ...currentOverlay,\n      [variableId]: selectedVariable,\n    };\n\n    if (selectedVariable && !selectedVariables.includes(selectedVariable)) {\n      selectedVariables.push(selectedVariable);\n    }\n\n    const updatedOverlayList = updateOverlayList(updatedOverlay, overlays);\n    this.props.setSharedStateData('overlays', updatedOverlayList);\n    this.setState({ isObjectSelectorOpen: false, selectedVariables });\n    this.props.setSaveFlag(true);\n  };\n\n  saveChangeToOverlays = (changedValue, currentOverlay) => {\n    const { overlays } = this.props;\n    const updatedOverlay = { ...currentOverlay, ...changedValue };\n    const updatedOverlayList = updateOverlayList(updatedOverlay, overlays);\n    this.props.setSharedStateData('overlays', updatedOverlayList);\n  };\n\n  render() {\n    const { overlayActions, overlays, inspectionId, id: viewId, imageDimensions } = this.props;\n    const { currentOverlay } = this.state;\n\n    if (!overlays) return this.renderPlaceholder();\n    return (\n      <div className=\"parameter-view-overlay-wrapper\">\n        <div className=\"parameter-view-overlay-table-wrapper\">\n          <OverlayList\n            overlays={overlays}\n            currentOverlay={currentOverlay}\n            updateCurrentOverlay={this.updateCurrentOverlay}\n            updateOverlayList={this.updateOverlayList}\n            canSelectRow={true}\n            onSelectAll={(checked) => this.setAllOverlaysActive(checked)}\n          />\n          <ActionBar actions={overlayActions(this)} />\n        </div>\n        <OverlayPropertyList\n          inspectionId={inspectionId}\n          viewId={viewId}\n          currentOverlay={currentOverlay}\n          imageDimensions={imageDimensions}\n          onChange={(value) => this.saveChangeToOverlays(value, currentOverlay)}\n          openSelection={(variableName, variableId) => {\n            this.setState({\n              isObjectSelectorOpen: true,\n              variableName,\n              variableId,\n            });\n          }}\n        />\n        <VariableSelection\n          title={this.state.variableName}\n          onClose={(selectedId) => this.setVariableSelection(selectedId)}\n          open={this.state.isObjectSelectorOpen}\n          inspectionId={inspectionId}\n        />\n      </div>\n    );\n  }\n}\n\n/* eslint-disable  */\nconst defaultPropTypes = {\n  overlayActions: (overlay) => {\n    const actions = [];\n    const canEdit = canEditParameterView(overlay.props.myPermissions);\n\n    if (canEdit) {\n      actions.push({\n        intlId: 'parameterview.overlay.add',\n        iconUrl: iconPlus,\n        onClickHandler: () => {\n          overlay.props.setSaveFlag(true);\n          overlay.addNewOverlay();\n        },\n      });\n    }\n\n    if (canEdit) {\n      actions.push({\n        intlId: 'parameterview.overlay.delete',\n        iconUrl: iconDeleteDustbin,\n        onClickHandler: () => {\n          overlay.props.setSaveFlag(true);\n          overlay.deleteCurrentOverlay();\n        },\n      });\n    }\n\n    return actions;\n  },\n};\n\nconst propTypes = {\n  overlays: PropTypes.array,\n  overlayActions: ActionBarType,\n  currentOverlay: PropTypes.object, //TODO: Add overlay type\n};\n\n/* eslint-enable */\n\nOverlay.propTypes = propTypes;\nOverlay.defaultProps = defaultPropTypes;\n\nconst mapStateToProps = (state, ownProps) => {\n  try {\n    const { inspectionId } = ownProps;\n    const editingViewId = state.inspections[inspectionId].sharedState.editingViewId;\n    const overlays = state.inspections[inspectionId].sharedState.views[editingViewId].overlays;\n    const imageDimensions = state.inspections[inspectionId].views[editingViewId].imageDimensions;\n    const myPermissions = state.app.myPermissions;\n\n    return { overlays, proxy: state.app.proxy, imageDimensions, myPermissions };\n  } catch (error) {\n    return {};\n  }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  dispatch(initViewState(inspectionId, viewId, {}, {}));\n  return {\n    setSharedStateData: (key, data) => dispatch(setSharedStateData(inspectionId, key, data)),\n    setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overlay);\nexport { defaultPropTypes, propTypes };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\n\nimport ActionBar from '../../components/ActionBar';\nimport Container from '../../components/layout/Container';\nimport ActionBarType from '../../types/ActionBarType';\nimport { canReadParameterView, canEditParameterView } from '../../utils/permissions';\nimport Overlay from './components/Overlay';\n\nclass ParameterView extends Component {\n  doSomething = () => void 0; // Implement some more logic\n\n  render() {\n    const { parameter, myPermissions } = this.props;\n\n    if (canReadParameterView(myPermissions) || canEditParameterView(myPermissions)) {\n      return (\n        <div className=\"parameter-view-wrapper\">\n          <Container>\n            {parameter.component || (\n              <Overlay inspectionId={this.props.inspectionId} id={this.props.id} />\n            )}\n          </Container>\n          <ActionBar isViewAction actions={[]} />\n        </div>\n      );\n    }\n    return <div></div>;\n  }\n}\n\nParameterView.defaultProps = {};\n\nParameterView.propTypes = {\n  viewActions: ActionBarType,\n  parameter: PropTypes.arrayOf(\n    PropTypes.shape({\n      component: PropTypes.element,\n    }),\n  ).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  parameter: state.toolSet.parameter,\n  myPermissions: state.app.myPermissions,\n});\n\nexport default injectIntl(connect(mapStateToProps)(ParameterView));\n","export default __webpack_public_path__ + \"static/media/before.53297893.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScrollContainer = ({ children }) => (\n  <div className=\"overflow-scroll absolute w-100 h-100 pa2 top-0 left-0\">{children}</div>\n);\n\nScrollContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ScrollContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport shortId from 'shortid';\n\nimport iconBack from '../../assets/icons/back.svg';\nimport iconBefore from '../../assets/icons/before.svg';\nimport iconClose from '../../assets/icons/close.svg';\nimport iconSave from '../../assets/icons/save.svg';\nimport ActionBar from '../../components/ActionBar';\nimport ScrollContainer from '../../components/layout/ScrollContainer';\nimport Heading from '../../components/typo/Heading';\n\nclass RecipeView extends Component {\n  renderConfiguration = (configuration) => (\n    <div className=\"flex\">\n      <span className=\"sans-serif mr2 basis-100\">\n        <FormattedMessage id={configuration.intlId} />:\n      </span>\n      <span className=\"basis-100\">\n        <select className=\"bn w-100 tc\">\n          {configuration.options.map((option) => (\n            <option key={option.title} value={option.value}>\n              {option.title}\n            </option>\n          ))}\n        </select>\n      </span>\n    </div>\n  );\n\n  render() {\n    const { configurations, viewActions } = this.props;\n    return (\n      <div>\n        <ScrollContainer>\n          <div className=\"pa3 flex items-center\">\n            <div className=\"basis-100\">\n              <div>\n                <Heading type=\"h3\" intlId=\"name\" />\n                <input\n                  type=\"text\"\n                  className=\"w-100 bg-near-white mb3 ba b--near-white outline-0 pa1\"\n                />\n              </div>\n              <div>\n                <Heading type=\"h3\" intlId=\"comment\" />\n                <textarea className=\"w-100 h4 bg-near-white ba b--near-white outline-0 pa1\" />\n              </div>\n            </div>\n            <div className=\"basis-100 pa4 pt0 self-baseline\">\n              <Heading type=\"h3\" intlId=\"configuration\" />\n              {configurations.map((configuration) => (\n                <div className=\"bb b--near-white pa1 mb1\" key={shortId.generate()}>\n                  {this.renderConfiguration(configuration)}\n                </div>\n              ))}\n            </div>\n          </div>\n        </ScrollContainer>\n        <ActionBar isViewAction actions={viewActions} />\n      </div>\n    );\n  }\n}\n\nRecipeView.propTypes = {\n  configurations: PropTypes.arrayOf(\n    PropTypes.shape({\n      intlId: PropTypes.string,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string,\n          value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        }),\n      ),\n    }),\n  ).isRequired,\n  viewActions: PropTypes.arrayOf(\n    PropTypes.shape({\n      intlId: PropTypes.string,\n    }),\n  ),\n};\n\nRecipeView.defaultProps = {\n  viewActions: [\n    { intlId: 'back', iconUrl: iconBack },\n    { intlId: 'before', iconUrl: iconBefore },\n    { intlId: 'save', iconUrl: iconSave },\n    { intlId: 'cancel', iconUrl: iconClose },\n  ],\n};\n\nexport default injectIntl(RecipeView);\n","export default __webpack_public_path__ + \"static/media/archive.b8680473.svg\";","export default __webpack_public_path__ + \"static/media/arrow-top-right.4113715e.svg\";","export default __webpack_public_path__ + \"static/media/collapse-all.5ae8f8d4.svg\";","export default __webpack_public_path__ + \"static/media/copy.1e95e110.svg\";","export default __webpack_public_path__ + \"static/media/cut.bf9e7e56.svg\";","export default __webpack_public_path__ + \"static/media/cylindrical-wrap.b75ac8f0.svg\";","export default __webpack_public_path__ + \"static/media/expand-all.9aefbbb5.svg\";","export default __webpack_public_path__ + \"static/media/external.36cd89bf.svg\";","export default __webpack_public_path__ + \"static/media/group.00737002.svg\";","export default __webpack_public_path__ + \"static/media/load-image.c627eeb8.svg\";","export default __webpack_public_path__ + \"static/media/loop.d385a57c.svg\";","export default __webpack_public_path__ + \"static/media/palette.ebdcc61c.svg\";","export default __webpack_public_path__ + \"static/media/paste.767ba7ae.svg\";","export default __webpack_public_path__ + \"static/media/perspective.b5973ac2.svg\";","export default __webpack_public_path__ + \"static/media/polar-transformation.bca0f07a.svg\";","export default __webpack_public_path__ + \"static/media/resize.34a01621.svg\";","export default __webpack_public_path__ + \"static/media/shift.788a6731.svg\";","export default __webpack_public_path__ + \"static/media/statistics.4012e027.svg\";","export default __webpack_public_path__ + \"static/media/table-analyzer.edbb56e2.svg\";","export default __webpack_public_path__ + \"static/media/table.8752185b.svg\";","export default __webpack_public_path__ + \"static/media/transformation.6c296033.svg\";","export default __webpack_public_path__ + \"static/media/undo-disabled.39d5e190.svg\";","export default __webpack_public_path__ + \"static/media/undo.f3bbb4ae.svg\";","export default __webpack_public_path__ + \"static/media/window.4e0082b0.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport shortId from 'shortid';\n\nimport './style.scss';\nimport IconButton from '../../../../components/buttons/IconButton';\nimport { ToggleButton } from '../../../../components/buttons/ToggleButton';\nimport { TOGGLE_BUTTON, SEPARATOR } from '../../../../types/ActionBarType';\n\nconst ToolSetBar = ({ tools, intl }) => (\n  <div className=\"toolset-bar-wrapper\">\n    {tools &&\n      tools.map((tool) => {\n        if (tool && tool.type === SEPARATOR) {\n          return (\n            <div className=\"toolset-bar-separator\" key={`separator_${shortId.generate()}`}>\n              <div className=\"separator\"></div>\n            </div>\n          );\n        }\n        if (tool && tool.type === TOGGLE_BUTTON) {\n          return (\n            <ToggleButton\n              key={tool.id}\n              id={tool.id}\n              intl={intl}\n              intlId={tool.intlId}\n              iconUrl={tool.iconUrl}\n              onClickHandler={tool.onClickHandler}\n              intlIdAlternative={tool.intlIdAlternative}\n              iconUrlAlternative={tool.iconUrlAlternative}\n              onClickHandlerAlternative={tool.onClickHandlerAlternative}\n              showAlternative={tool.showAlternative}\n            />\n          );\n        }\n\n        return (\n          <IconButton\n            key={tool.intlId}\n            tooltip={intl.messages[`${tool.intlId}`]}\n            onClick={() => {\n              tool.onClickHandler();\n            }}\n            iconUrl={tool.iconUrl}\n          />\n        );\n      })}\n  </div>\n);\n\nToolSetBar.defaultProps = {\n  isToolAction: false,\n};\n\nToolSetBar.propTypes = {\n  tools: PropTypes.arrayOf(\n    PropTypes.shape({\n      intlId: PropTypes.string,\n      onClickHandler: PropTypes.func,\n      iconUrl: PropTypes.string,\n    }),\n  ).isRequired,\n  isToolAction: PropTypes.bool,\n};\n\nexport default injectIntl(ToolSetBar);\n","export default __webpack_public_path__ + \"static/media/down.17f143ff.svg\";","export default __webpack_public_path__ + \"static/media/take-over.e8760b3a.svg\";","export default __webpack_public_path__ + \"static/media/up.32f62e1a.svg\";","/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { Component } from 'react';\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\n\nimport './style.scss';\nimport iconDeleteDustbin from '../../../../assets/icons/delete-dustbin.svg';\nimport iconDown from '../../../../assets/icons/down.svg';\nimport iconTakeOver from '../../../../assets/icons/take-over.svg';\nimport iconUp from '../../../../assets/icons/up.svg';\n\nimport ActionBar from '../../../../components/ActionBar';\nimport ActionBarType from '../../../../types/ActionBarType';\nimport AvailableFilterListItemsType from './types/AvailableFilterListType';\n\nconst SortableItem = SortableElement(({ value }) => (\n  <li className=\"filter-list-row\" key={value}>\n    <span className=\"filter-list-row-item\">{value}</span>\n  </li>\n));\n\nconst SortableList = SortableContainer(({ items }) => (\n  <ul>\n    {items.map((item, index) => (\n      <SortableItem key={item.value} index={index} value={item.value} />\n    ))}\n  </ul>\n));\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CurrentFilterListItems: this.props.CurrentFilterListItems,\n    };\n  }\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.setState({\n      CurrentFilterListItems: arrayMove(this.state.CurrentFilterListItems, oldIndex, newIndex),\n    });\n  };\n  render() {\n    const { AvailableFilterListItems, AvailableFilterListActions, CurrentFilterListActions } =\n      this.props;\n    return (\n      <div className=\"parameter-view-filter-wrapper\">\n        <div className=\"available-filters filter-list\">\n          <div className=\"filter-header\">Available Filters</div>\n          <ul className=\"filter-content\">\n            {AvailableFilterListItems.map((item) => (\n              <li className=\"filter-list-row\" key={item.value}>\n                <span className=\"filter-list-row-item\">{item.value}</span>\n              </li>\n            ))}\n          </ul>\n          <div className=\"filter-list-actions\">\n            <ActionBar actions={AvailableFilterListActions} />\n          </div>\n        </div>\n\n        <div className=\"current-filters filter-list\">\n          <div className=\"filter-header\">Available Filters</div>\n          <ul className=\"filter-content\">\n            <SortableList\n              helperClass=\"filter-list-row-item-on-drag\"\n              items={this.state.CurrentFilterListItems}\n              onSortEnd={this.onSortEnd}\n            />\n          </ul>\n          <div className=\"filter-list-actions\">\n            <ActionBar actions={CurrentFilterListActions} />\n          </div>\n        </div>\n\n        <div className=\"property-container\">\n          <div className=\"filter-header\">Properties</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFilter.defaultProps = {\n  AvailableFilterListItems: [\n    { id: '', value: 'Closing Filter', onClick: () => {} },\n    { id: '', value: 'Custom Filter', onClick: () => {} },\n    { id: '', value: 'Custom2 Filter', onClick: () => {} },\n    { id: '', value: 'Dilation Filter', onClick: () => {} },\n    { id: '', value: 'EdgeDetect Filter', onClick: () => {} },\n    { id: '', value: 'EdgeDetect2 Filter', onClick: () => {} },\n    { id: '', value: 'Erosion Filter', onClick: () => {} },\n    { id: '', value: 'HorizonEdge Filter', onClick: () => {} },\n    { id: '', value: 'LaplacianEdge Filter', onClick: () => {} },\n    { id: '', value: 'LaplacianEdge2 Filter', onClick: () => {} },\n    { id: '', value: 'MAX MIN Filter', onClick: () => {} },\n    { id: '', value: 'Opening Filter', onClick: () => {} },\n    { id: '', value: 'Ranking Filter', onClick: () => {} },\n    { id: '', value: 'Sharpen Filter', onClick: () => {} },\n    { id: '', value: 'Sharpen2 Filter', onClick: () => {} },\n    { id: '', value: 'Skeleton Filter', onClick: () => {} },\n    { id: '', value: 'Smooth Filter', onClick: () => {} },\n    { id: '', value: 'Thickening Filter', onClick: () => {} },\n    { id: '', value: 'Thinning Filter', onClick: () => {} },\n    { id: '', value: 'VertEdge Filter', onClick: () => {} },\n    { id: '', value: 'Watershed Filter', onClick: () => {} },\n  ],\n\n  AvailableFilterListActions: [\n    { intlId: 'before', iconUrl: iconTakeOver, onClickHandler: () => {} },\n  ],\n\n  CurrentFilterListActions: [\n    { intlId: 'down', iconUrl: iconDown, onClickHandler: () => {} },\n    { intlId: 'up', iconUrl: iconUp, onClickHandler: () => {} },\n    { intlId: 'delete', iconUrl: iconDeleteDustbin, onClickHandler: () => {} },\n  ],\n\n  CurrentFilterListItems: [\n    { id: '', value: 'Custom Filter', onClick: () => {} },\n    { id: '', value: 'Dilation Filter', onClick: () => {} },\n    { id: '', value: 'Closing Filter', onClick: () => {} },\n  ],\n};\n\nFilter.propTypes = {\n  AvailableFilterListItems: AvailableFilterListItemsType,\n  AvailableFilterListActions: ActionBarType,\n  CurrentFilterListItems: AvailableFilterListItemsType,\n  CurrentFilterListActions: ActionBarType,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\n\nconst AvailableFilterListItemsType = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string,\n    value: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n);\n\nexport default AvailableFilterListItemsType;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { setParameter, setViewSet } from '../../../redux/actions';\nimport Filter from '../../ParameterView/components/Filter';\nimport ViewSetFactory from '../../ViewSetFactory';\n\nclass ToolSetup extends Component {\n  componentDidUpdate(prevProps) {\n    if (prevProps.node !== this.props.node) {\n      this.setup(this.props.node);\n    }\n  }\n\n  setup = (node) => {\n    switch (node.name) {\n      case 'Equation':\n        this.props.setupParameterView({\n          component: <Filter />,\n        });\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  viewSetFactory = new ViewSetFactory();\n\n  render() {\n    return null;\n  }\n}\n\nToolSetup.defaultProps = {\n  node: undefined,\n};\n\nToolSetup.propTypes = {\n  currentViewSet: PropTypes.shape({\n    id: PropTypes.string,\n    viewSet: PropTypes.shape({ id: PropTypes.string }),\n  }).isRequired,\n  setupParameterView: PropTypes.func.isRequired,\n  setViewSet: PropTypes.func.isRequired,\n  node: PropTypes.shape({\n    uniqueReferenceID: PropTypes.string,\n  }),\n};\n\nconst mapStateToProps = (state) => ({\n  currentViewSet: state.viewSet.currentViewSet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setupParameterView: (parameter) => {\n    dispatch(setParameter(parameter));\n  },\n  setViewSet: (viewSet) => {\n    dispatch(setViewSet(viewSet));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolSetup);\n","const TreebeardStyle = {\n  tree: {\n    base: {\n      whiteSpace: 'nowrap',\n      listStyle: 'none',\n      backgroundColor: 'transparent',\n      margin: 0,\n      padding: 0,\n      color: 'black',\n      fontFamily: 'lucida grande ,tahoma,verdana,arial,sans-serif',\n      fontSize: '14px',\n    },\n    node: {\n      base: {\n        position: 'relative',\n      },\n      link: {\n        cursor: 'pointer',\n        position: 'relative',\n        padding: '0px 5px',\n        display: 'block',\n      },\n      activeLink: {\n        background: 'rgb(135, 135, 135)',\n      },\n      toggle: {\n        base: {\n          position: 'relative',\n          display: 'inline-block',\n          verticalAlign: 'top',\n          marginLeft: '-5px',\n          height: '24px',\n          width: '24px',\n        },\n        wrapper: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          margin: '-7px 0 0 -7px',\n          height: '10px',\n        },\n        height: 10,\n        width: 10,\n        arrow: {\n          fill: '#9DA5AB',\n          strokeWidth: 0,\n        },\n      },\n      header: {\n        base: {\n          display: 'inline-block',\n          verticalAlign: 'top',\n          color: 'black',\n        },\n        connector: {\n          width: '2px',\n          height: '12px',\n          borderLeft: 'solid 2px black',\n          borderBottom: 'solid 2px black',\n          position: 'absolute',\n          top: '0px',\n          left: '-21px',\n        },\n        title: {\n          lineHeight: '24px',\n          verticalAlign: 'middle',\n        },\n      },\n      subtree: {\n        listStyle: 'none',\n        paddingLeft: '10px',\n      },\n      loading: {\n        color: '#E2C089',\n      },\n    },\n  },\n};\n\nexport default TreebeardStyle;\n","import { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Treebeard } from 'react-treebeard';\n\nimport iconArchive from '../../assets/icons/archive.svg';\nimport iconLinear from '../../assets/icons/arrow-top-right.svg';\nimport iconCollapse from '../../assets/icons/collapse-all.svg';\nimport iconCopy from '../../assets/icons/copy.svg';\nimport iconCut from '../../assets/icons/cut.svg';\nimport iconCylindricalWrap from '../../assets/icons/cylindrical-wrap.svg';\nimport iconDelete from '../../assets/icons/delete.svg';\nimport iconExpand from '../../assets/icons/expand-all.svg';\nimport iconExternal from '../../assets/icons/external.svg';\nimport iconGroup from '../../assets/icons/group.svg';\nimport iconImage from '../../assets/icons/image.svg';\nimport iconLoadImage from '../../assets/icons/load-image.svg';\nimport iconLoop from '../../assets/icons/loop.svg';\nimport iconOne from '../../assets/icons/one.svg';\nimport iconColor from '../../assets/icons/palette.svg';\nimport iconPaste from '../../assets/icons/paste.svg';\nimport iconPerspective from '../../assets/icons/perspective.svg';\nimport iconPolarTransformation from '../../assets/icons/polar-transformation.svg';\nimport iconResize from '../../assets/icons/resize.svg';\nimport iconShift from '../../assets/icons/shift.svg';\nimport iconStatistics from '../../assets/icons/statistics.svg';\nimport iconTableAnalyzer from '../../assets/icons/table-analyzer.svg';\nimport iconTable from '../../assets/icons/table.svg';\nimport iconTransformation from '../../assets/icons/transformation.svg';\nimport iconUndoDisabled from '../../assets/icons/undo-disabled.svg';\n\nimport iconUndo from '../../assets/icons/undo.svg';\nimport iconWindow from '../../assets/icons/window.svg';\nimport ActionBar from '../../components/ActionBar';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport ProxyType from '../../components/Protobuf/ProxyType';\nimport Protobuf from '../../protobuf/Protobuf';\nimport { canReadToolSetView, canEditToolSetView } from '../../utils/permissions';\nimport ToolSetBar from './components/ToolSetBar';\nimport ToolSetup from './components/ToolSetup';\nimport TreebeardStyle from './components/TreebeardStyle';\n\nimport './style.scss';\n\nconst useStyles = makeStyles(() => ({\n  label: {\n    fontSize: '1.4rem',\n    transform: 'translate(10px, 12px) scale(1)',\n  },\n}));\n\nconst ToolsetView = ({ inspectionId }) => {\n  const proxy = useSelector((state) => state.app.proxy);\n  const configuration = useSelector((state) => state.app.configuration);\n  const myPermissions = useSelector((state) => state.app.myPermissions);\n  const [treeModel, setTreeModel] = useState([]);\n  const [filteredTreeModel, setFilteredTreeModel] = useState(undefined);\n  const [cursor, setCursor] = useState({});\n  const [lastActionsStack] = useState([]);\n  const [toolSetId, setToolSetId] = useState(0);\n  const [update, setUpdate] = useState(false);\n  const [openConfirmDelete, setOpenConfirmDelete] = useState(false);\n  const [filterText, setFilterText] = useState('');\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (configuration.inspectionToolsetMappings.size === 0) {\n      configuration\n        .setInspectionIdToToolsetMappings(proxy.protobuf)\n        .then(() => proxy.dispatchCurrentConfiguration(configuration));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    const treeDataRaw = configuration.getConfigTreeByInspectionId(inspectionId);\n    setToolSetId(treeDataRaw?.toolSetId);\n\n    const createTreeNodes = (node, loop) => {\n      const { name, isValid, position, objectID } = node;\n      if (node.children && node.children.length > 0) {\n        return {\n          name,\n          isValid,\n          position,\n          objectID,\n          toggled: false,\n          children: node.children.map(loop),\n        };\n      }\n      return { name, isValid, position };\n    };\n\n    const traverseTree = () => {\n      const loop = (node) => {\n        if (!node) {\n          return;\n        }\n        return createTreeNodes(node, loop);\n      };\n\n      return loop(treeDataRaw);\n    };\n\n    const tree = traverseTree();\n\n    if (!tree || !tree.children) {\n      return;\n    }\n\n    tree.children[0].active = true;\n    setCursor(tree.children[0]);\n\n    const treeModel = tree.children.sort(sortToolSet);\n    setTreeModel(treeModel);\n  }, [configuration, inspectionId]);\n\n  const sortToolSet = (a, b) => {\n    return a.position > b.position ? 1 : -1;\n  };\n\n  const onNodeClicked = (node, toggled) => {\n    treeModel.forEach((treeNode) => {\n      treeNode.active = false;\n    });\n\n    // eslint-disable-next-line\n    node.active = true;\n\n    if (node.children) {\n      // eslint-disable-next-line\n      node.toggled = toggled;\n    }\n\n    lastActionsStack.push({\n      type: 'select',\n      from: cursor.position,\n      to: node.position,\n    });\n\n    setCursor(node);\n    setUpdate(!update);\n  };\n\n  const setNext = () => {\n    const { position } = cursor;\n    treeModel.forEach((treeNode) => {\n      if (treeNode.position === position + 1) {\n        cursor.active = false;\n        treeNode.active = true;\n        setCursor(treeNode);\n      }\n    });\n  };\n\n  const deleteTool = async (objectId) => {\n    const { position } = cursor;\n    lastActionsStack.push({\n      type: 'delete',\n      tool: { ...cursor, active: false },\n    });\n\n    await proxy.deleteTool(inspectionId, objectId);\n    setTreeModel(treeModel.filter((treeNode) => treeNode.position !== position));\n    setNext();\n  };\n\n  const copyTool = async () => {\n    const { objectID } = cursor;\n    lastActionsStack.push({\n      type: 'copy',\n      tool: { ...cursor, active: false },\n    });\n\n    await proxy.copyTool(inspectionId, objectID);\n  };\n\n  const cutTool = async () => {\n    const { position, objectID } = cursor;\n    lastActionsStack.push({\n      type: 'cut',\n      tool: { ...cursor, active: false },\n    });\n\n    await proxy.cutTool(inspectionId, objectID);\n    setTreeModel(treeModel.filter((treeNode) => treeNode.position !== position));\n    setNext();\n  };\n\n  const pasteTool = async () => {\n    const { objectID } = cursor;\n    lastActionsStack.push({\n      type: 'paste',\n      tool: { ...cursor, active: false },\n    });\n\n    await proxy.pasteTool(inspectionId, objectID);\n    setUpdate(!update);\n  };\n\n  const undoLastAction = () => {\n    if (lastActionsStack.length === 0) {\n      return;\n    }\n\n    const lastAction = lastActionsStack.pop();\n\n    switch (lastAction.type) {\n      case 'select':\n        treeModel.forEach((treeNode) => {\n          if (treeNode.position === lastAction.from) {\n            cursor.active = false;\n            treeNode.active = true;\n            setCursor(treeNode);\n          }\n        });\n        break;\n      case 'delete':\n        // treeModel.push(lastAction.tool);\n        // setTreeModel(treeModel.sort(sortToolSet));\n        // setPrevious();\n        break;\n      case 'add':\n        deleteTool(lastAction.toolId);\n        break;\n      default:\n    }\n  };\n\n  const addTool = async (type) => {\n    const { position } = cursor;\n    const newToolId = await proxy.addTool(inspectionId, toolSetId, type, position);\n    lastActionsStack.push({\n      type: 'add',\n      position,\n      toolId: newToolId,\n    });\n  };\n\n  const expandTools = () => {\n    treeModel.forEach((treeNode) => {\n      treeNode.toggled = true;\n    });\n    setUpdate(!update);\n  };\n\n  const collapseTools = () => {\n    treeModel.forEach((treeNode) => {\n      treeNode.toggled = false;\n    });\n    setUpdate(!update);\n  };\n\n  const handleConfirmDeleteClose = (confirmed) => {\n    if (confirmed) {\n      deleteTool(cursor.objectID);\n    }\n    setOpenConfirmDelete(false);\n  };\n\n  const getViewActions = () => {\n    return [\n      { intlId: 'copy', iconUrl: iconCopy, onClickHandler: () => copyTool() },\n      { intlId: 'cut', iconUrl: iconCut, onClickHandler: () => cutTool() },\n      { intlId: 'paste', iconUrl: iconPaste, onClickHandler: () => pasteTool() },\n      { intlId: 'delete', iconUrl: iconDelete, onClickHandler: () => setOpenConfirmDelete(true) },\n      {\n        intlId: 'undo',\n        iconUrl: lastActionsStack.length === 0 ? iconUndoDisabled : iconUndo,\n        onClickHandler: () => (lastActionsStack.length === 0 ? {} : undoLastAction()),\n      },\n      { intlId: 'expandAll', iconUrl: iconExpand, onClickHandler: () => expandTools() },\n      { intlId: 'collapseAll', iconUrl: iconCollapse, onClickHandler: () => collapseTools() },\n    ];\n  };\n  const viewActions = getViewActions();\n\n  const getToolActions = () => {\n    return [\n      {\n        intlId: 'toolsetView.windowTool',\n        iconUrl: iconWindow,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.WindowToolClassId),\n      },\n      {\n        intlId: 'toolsetView.mathTool',\n        iconUrl: iconOne,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.MathToolClassId),\n      },\n      {\n        intlId: 'toolsetView.statisticsTool',\n        iconUrl: iconStatistics,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.StatisticsToolClassId),\n      },\n      {\n        intlId: 'toolsetView.ringBufferTool',\n        iconUrl: iconLinear,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.RingBufferToolClassId),\n      },\n      {\n        intlId: 'toolsetView.archiveTool',\n        iconUrl: iconArchive,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ArchiveToolClassId),\n      },\n      {\n        intlId: 'toolsetView.acquisitionTool',\n        iconUrl: iconLinear,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.AcquisitionToolClassId),\n      },\n      {\n        intlId: 'toolsetView.transformationTool',\n        iconUrl: iconTransformation,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.TransformationToolClassId),\n      },\n      {\n        intlId: 'toolsetView.shiftTool',\n        iconUrl: iconShift,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ShiftToolClassId),\n      },\n      {\n        intlId: 'toolsetView.cylindricalWarpTool',\n        iconUrl: iconCylindricalWrap,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.CylindricalWarpToolClassId),\n      },\n      {\n        intlId: 'toolsetView.perspectiveTool',\n        iconUrl: iconPerspective,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.PerspectiveToolClassId),\n      },\n      {\n        intlId: 'toolsetView.imageTool',\n        iconUrl: iconImage,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ImageToolClassId),\n      },\n      {\n        intlId: 'toolsetView.linearTool',\n        iconUrl: iconLinear,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.LinearToolClassId),\n      },\n      {\n        intlId: 'toolsetView.colorTool',\n        iconUrl: iconColor,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ColorToolClassId),\n      },\n      {\n        intlId: 'toolsetView.resizeTool',\n        iconUrl: iconResize,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ResizeToolId),\n      },\n      {\n        intlId: 'toolsetView.loadImageTool',\n        iconUrl: iconLoadImage,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.LoadImageToolClassId),\n      },\n      {\n        intlId: 'toolsetView.tableTool',\n        iconUrl: iconTable,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.TableToolClassId),\n      },\n      {\n        intlId: 'toolsetView.tableAnalyzerTool',\n        iconUrl: iconTableAnalyzer,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.TableAnalyzerToolClassId),\n      },\n      {\n        intlId: 'toolsetView.polarTransformationTool',\n        iconUrl: iconPolarTransformation,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.PolarTransformationToolClassId),\n      },\n      {\n        intlId: 'toolsetView.loopTool',\n        iconUrl: iconLoop,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.LoopToolClassId),\n      },\n      {\n        intlId: 'toolsetView.externalTool',\n        iconUrl: iconExternal,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ExternalToolClassId),\n      },\n      {\n        intlId: 'toolsetView.groupTool',\n        iconUrl: iconGroup,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.GroupToolClassId),\n      },\n    ];\n  };\n\n  const toolActions = getToolActions();\n  const onChangeFilter = (event) => {\n    const text = event.target.value;\n\n    if (text === '') {\n      setFilteredTreeModel(undefined);\n    }\n    setFilterText(text);\n    setFilteredTreeModel(treeModel.filter((item) => item.name.indexOf(text) > -1));\n  };\n\n  if (canReadToolSetView(myPermissions) || canEditToolSetView(myPermissions)) {\n    return (\n      <div className=\"toolset-wrapper\">\n        <ConfirmDialog\n          open={openConfirmDelete}\n          onClose={(confirmed) => handleConfirmDeleteClose(confirmed)}\n          message={\n            <FormattedMessage id=\"toolsetView.confirmDelete\" values={{ toolName: cursor.name }} />\n          }\n        />\n        <ToolSetBar tools={toolActions} />\n        <div className=\"overflow-auto h-100 w-100\">\n          <div>\n            <ToolSetup node={cursor} />\n            <div className=\"w100\">\n              <TextField\n                label=\"Filter\"\n                type=\"text\"\n                variant=\"outlined\"\n                style={{ width: '100%' }}\n                onChange={onChangeFilter}\n                value={filterText}\n                InputLabelProps={{ classes: { root: classes.label } }}\n              />\n            </div>\n            <Treebeard\n              data={filteredTreeModel !== undefined ? filteredTreeModel : treeModel}\n              onToggle={onNodeClicked}\n              style={TreebeardStyle}\n            />\n          </div>\n        </div>\n        <ActionBar isViewAction actions={viewActions} />\n      </div>\n    );\n  }\n  return <div></div>;\n};\n\nToolsetView.propTypes = {\n  proxy: ProxyType,\n  configuration: PropTypes.object,\n};\n\nexport default ToolsetView;\n","import React from 'react';\nimport shortId from 'shortid';\n\nimport ImageStripView from './ImageStripView';\nimport ImageView from './ImageView';\nimport ListView from './ListView';\nimport ParameterView from './ParameterView';\nimport RecipeView from './RecipeView';\nimport ToolsetView from './ToolsetView';\n\nconst mapViewSetArray = (views) => {\n  return views.reduce((viewSet, view) => ({ ...viewSet, [view.id]: view }), {});\n};\n\nconst configurations = [\n  {\n    title: 'No. of Cameras',\n    intlId: 'noOfCameras',\n    options: [\n      { title: '1', value: 1 },\n      { title: '2', value: 2 },\n      { title: '3', value: 3 },\n      { title: '4', value: 4 },\n    ],\n  },\n  {\n    title: 'No. of Triggers',\n    intlId: 'noOfTriggers',\n    options: [\n      { title: '1', value: 1 },\n      { title: '2', value: 2 },\n      { title: '3', value: 3 },\n      { title: '4', value: 4 },\n    ],\n  },\n  {\n    title: 'No. of MonitorLists',\n    intlId: 'noOfMonitors',\n    options: [\n      { title: '1', value: 1 },\n      { title: '2', value: 2 },\n      { title: '3', value: 3 },\n      { title: '4', value: 4 },\n    ],\n  },\n];\n\nexport const CONFIG_VIEW = 'CONFIG_VIEW';\nexport const TOOLSET_VIEW = 'TOOLSET_VIEW';\nexport const IMAGE_VIEW = 'IMAGE_VIEW';\nexport const PARAMETER_VIEW = 'PARAMETER_VIEW';\nexport const LIST_VIEW = 'LIST_VIEW';\nexport const IMAGE_STRIP_VIEW = 'IMAGE_STRIP_VIEW';\n\nexport const DEFAULT_RECIPE_VIEWSET = 'DEFAULT_RECIPE_VIEWSET';\nexport const DEFAULT_EDIT_VIEWSET = 'DEFAULT_EDIT_VIEWSET';\nexport const DEFAULT_VIEWSET = 'DEFAULT_VIEWSET';\n\nexport const DEFAULT_VIEWSET_NAME = 'Initial';\n\nexport default class ViewSetFactory {\n  getViewSet = (id) => {\n    switch (id) {\n      case DEFAULT_VIEWSET:\n        return this.buildEmptyViewSet();\n      case DEFAULT_EDIT_VIEWSET:\n      case DEFAULT_RECIPE_VIEWSET:\n      default:\n        return null;\n    }\n  };\n\n  createViewInstance = (viewDesc, props) => {\n    const meta = this.getViewById(viewDesc.viewComponentClassId);\n    if (!meta) {\n      return false;\n    }\n\n    const key = `${viewDesc.viewComponentClassId}_${viewDesc.id}_${viewDesc.inspectionId}`;\n\n    const passedProps = {\n      ...meta.passedProps,\n      ...props,\n    };\n    switch (meta.viewComponentClassId) {\n      case CONFIG_VIEW:\n        return <RecipeView {...passedProps} key={key} />;\n      case TOOLSET_VIEW:\n        return <ToolsetView {...passedProps} key={key} />;\n      case IMAGE_VIEW:\n        return <ImageView {...passedProps} key={key} />;\n      case PARAMETER_VIEW:\n        return <ParameterView {...passedProps} key={key} />;\n      case IMAGE_STRIP_VIEW:\n        return <ImageStripView {...passedProps} key={key} />;\n      case LIST_VIEW:\n        return <ListView {...passedProps} key={key} />;\n      default:\n        return <div>Unknown Component {meta.viewComponentClassId}</div>;\n    }\n  };\n\n  getViewById = (id) => {\n    switch (id) {\n      case CONFIG_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'recipeViewInspectionTemplate',\n          viewComponentClassId: CONFIG_VIEW,\n          passedProps: { configurations },\n        };\n      case TOOLSET_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'toolsetView.inspectionTemplate',\n          viewComponentClassId: TOOLSET_VIEW,\n        };\n      case IMAGE_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'imageView.inspectionTemplate',\n          viewComponentClassId: IMAGE_VIEW,\n        };\n      case PARAMETER_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'parameterView.inspectionTemplate',\n          viewComponentClassId: PARAMETER_VIEW,\n        };\n      case IMAGE_STRIP_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'imageStripView.inspectionTemplate',\n          viewComponentClassId: IMAGE_STRIP_VIEW,\n        };\n      case LIST_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'listView.inspectionTemplate',\n          viewComponentClassId: LIST_VIEW,\n        };\n      default:\n        return null;\n    }\n  };\n\n  buildRecipeViewSet = () => {\n    const views = [\n      this.getViewById(IMAGE_VIEW),\n      this.getViewById(LIST_VIEW),\n      this.getViewById(IMAGE_STRIP_VIEW),\n    ];\n    return {\n      id: DEFAULT_RECIPE_VIEWSET,\n      viewSet: mapViewSetArray(views),\n      initialValue: {\n        first: {\n          direction: 'row',\n          splitPercentage: 60,\n          first: views[0].id,\n          second: views[1].id,\n        },\n        direction: 'column',\n        splitPercentage: 75,\n        second: views[2].id,\n      },\n    };\n  };\n\n  buildEmptyViewSet = (name = DEFAULT_VIEWSET_NAME) => {\n    const emptyViewId = shortId.generate();\n    return {\n      id: name,\n      name,\n      viewSet: {\n        [emptyViewId]: {},\n      },\n      initialValue: emptyViewId,\n    };\n  };\n\n  buildEditViewSet = () => {\n    const views = [\n      this.getViewById(TOOLSET_VIEW),\n      this.getViewById(IMAGE_VIEW),\n      this.getViewById(PARAMETER_VIEW),\n    ];\n    return {\n      id: DEFAULT_VIEWSET,\n      viewSet: mapViewSetArray(views),\n      initialValue: {\n        direction: 'row',\n        first: views[0].id,\n        splitPercentage: 30,\n        second: {\n          direction: 'column',\n          splitPercentage: 45,\n          first: views[1].id,\n          second: views[2].id,\n        },\n      },\n    };\n  };\n\n  createNewViewSet = () => {\n    const views = [\n      {\n        id: shortId.generate(),\n        viewComponentClassId: TOOLSET_VIEW,\n        titleId: 'toolsetViewInspectionTemplate',\n      },\n    ];\n    return {\n      id: 'NEW_VIEWSET',\n      viewSet: mapViewSetArray(views),\n      initialValue: views[0].id,\n    };\n  };\n}\n","export default __webpack_public_path__ + \"static/media/regression.f027695f.svg\";","export default __webpack_public_path__ + \"static/media/run.eb40f6de.svg\";","export default __webpack_public_path__ + \"static/media/stop.44c5645f.svg\";","export default __webpack_public_path__ + \"static/media/test.47d9c7ad.svg\";","import editIcon from '../assets/icons/edit.svg';\nimport unknownIcon from '../assets/icons/help.svg';\nimport regressionIcon from '../assets/icons/regression.svg';\nimport runIcon from '../assets/icons/run.svg';\nimport stopIcon from '../assets/icons/stop.svg';\nimport testIcon from '../assets/icons/test.svg';\n\nconst modes = {\n  unknownMode: {\n    id: 'UNKNOWN_MODE',\n    iconSrc: unknownIcon,\n    text: '',\n  },\n  runMode: {\n    id: 'RUN_MODE',\n    iconSrc: runIcon,\n    text: '',\n  },\n  stopMode: {\n    id: 'STOP_MODE',\n    iconSrc: stopIcon,\n    text: '',\n  },\n  regressionMode: {\n    id: 'REGRESSION_MODE',\n    iconSrc: regressionIcon,\n    text: '',\n  },\n  testMode: {\n    id: 'TEST_MODE',\n    iconSrc: testIcon,\n    text: '',\n  },\n  editMode: {\n    id: 'EDIT_MODE',\n    iconSrc: editIcon,\n    text: '',\n  },\n};\n\nexport default modes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport shortId from 'shortid';\n\nimport './style.scss';\nimport { TOGGLE_BUTTON, SEPARATOR } from '../../types/ActionBarType';\nimport { ToggleButton } from '../buttons/ToggleButton';\nimport IconButton from './../buttons/IconButton';\n\nconst ActionBar = ({ actions, intl, isViewAction }) => (\n  <div className=\"action-bar-wrapper\" style={{ position: isViewAction ? 'absolute' : 'relative' }}>\n    {actions &&\n      actions.map((action) => {\n        if (action && action.type === SEPARATOR) {\n          return (\n            <div className=\"action-bar-separator\" key={`separator_${shortId.generate()}`}>\n              <div className=\"separator\"></div>\n            </div>\n          );\n        }\n        if (action && action.type === TOGGLE_BUTTON) {\n          return (\n            <ToggleButton\n              key={action.id}\n              id={action.id}\n              intl={intl}\n              intlId={action.intlId}\n              iconUrl={action.iconUrl}\n              onClickHandler={action.onClickHandler}\n              intlIdAlternative={action.intlIdAlternative}\n              iconUrlAlternative={action.iconUrlAlternative}\n              onClickHandlerAlternative={action.onClickHandlerAlternative}\n              showAlternative={action.showAlternative}\n            />\n          );\n        }\n\n        return (\n          <IconButton\n            key={action.intlId}\n            tooltip={intl.messages[`${action.intlId}`]}\n            onClick={() => {\n              action.onClickHandler();\n            }}\n            iconUrl={action.iconUrl}\n          />\n        );\n      })}\n  </div>\n);\n\nActionBar.defaultProps = {\n  isViewAction: false,\n};\n\nActionBar.propTypes = {\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      intlId: PropTypes.string,\n      onClickHandler: PropTypes.func,\n      iconUrl: PropTypes.string,\n    }),\n  ).isRequired,\n  isViewAction: PropTypes.bool,\n};\n\nexport default injectIntl(ActionBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'react-tippy';\nimport './style.scss';\n\nconst IconButton = ({ iconUrl, onClick, tooltip, style }) => (\n  <div className=\"icon-button-wrapper\">\n    <Tooltip title={tooltip} trigger=\"mouseenter\" duration={1} delay={1000}>\n      <button\n        style={{\n          ...style,\n          backgroundImage: `url(${iconUrl})`,\n          backgroundPosition: 'center',\n          backgroundSize: '100% 100%',\n        }}\n        onClick={onClick}\n        className=\"icon-button\"\n      />\n    </Tooltip>\n  </div>\n);\n\nIconButton.defaultProps = {\n  tooltip: undefined,\n};\n\nIconButton.propTypes = {\n  iconUrl: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  tooltip: PropTypes.string,\n};\n\nexport default IconButton;\n","import React, { useState, useRef } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport DownloadIcon from '../../../../assets/icons/download.svg';\nimport HelpIcon from '../../../../assets/icons/help.svg';\nimport AboutIcon from '../../../../assets/icons/info.svg';\nimport LogoutIcon from '../../../../assets/icons/logout.svg';\nimport PermissionsIcon from '../../../../assets/icons/permissions.svg';\nimport ShortcutHelpIcon from '../../../../assets/icons/shortcut-help.svg';\nimport UploadIcon from '../../../../assets/icons/upload.svg';\nimport UserIcon from '../../../../assets/icons/user.svg';\nimport MenuList from '../../../../components/MenuList';\nimport { forceDownload } from '../../../../utils/downloader';\nimport {\n  canReadUserManagement,\n  canEditUserManagement,\n  canReadSVOConfiguration,\n  canWriteSVOConfiguration,\n} from '../../../../utils/permissions';\nimport AboutView from '../../../AboutView';\nimport HelpView from '../../../HelpView';\nimport ShortcutView from '../../../ShortcutView';\n\nimport './style.scss';\n\nconst UserInfo = () => {\n  const user = useSelector((state) => state.app.user);\n  const myPermissions = useSelector((state) => state.app.myPermissions);\n  const proxy = useSelector((state) => state.app.proxy);\n  const inputFile = useRef(null);\n\n  const [shortcutViewOpen, setShortcutViewOpen] = useState(false);\n  const [isHelpViewOpen, setIsHelpViewOpen] = useState(false);\n  const [isAboutViewOpen, setIsAboutViewOpen] = useState(false);\n  const [gotoPermissions, setGotoPermissions] = useState(false);\n\n  const downloadConfig = async () => {\n    const fileData = await proxy.downloadSVOConfig();\n    const blob = new Blob([fileData], { type: 'application/octet-stream' });\n    const url = URL.createObjectURL(blob);\n    forceDownload(url, `SVOConfig_${new Date().toISOString()}.svz`);\n  };\n\n  const menuItems = [\n    {\n      key: 'help',\n      caption: <FormattedMessage id=\"topNavigation.help\" />,\n      img: HelpIcon,\n      onClick: () => {\n        setIsHelpViewOpen(true);\n      },\n    },\n    {\n      key: 'shortcuthelp',\n      caption: <FormattedMessage id=\"topNavigation.shortcut\" />,\n      img: ShortcutHelpIcon,\n      onClick: () => {\n        setShortcutViewOpen(!shortcutViewOpen);\n      },\n    },\n    {\n      key: 'about',\n      caption: <FormattedMessage id=\"topNavigation.about\" />,\n      img: AboutIcon,\n      onClick: () => {\n        setIsAboutViewOpen(true);\n      },\n    },\n    {\n      key: 'logout',\n      caption: <FormattedMessage id=\"topNavigation.logout\" />,\n      img: LogoutIcon,\n      onClick: async () => {\n        setImmediate(() => (window.location.href = `${window.location.origin}/logout`));\n      },\n    },\n  ];\n\n  const onFileAdded = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = (event) => {\n        const arrayBuffer = event.target.result;\n        const array = new Uint8Array(arrayBuffer);\n        proxy.uploadSVOConfig(file.name, array);\n      };\n    }\n  };\n\n  if (canWriteSVOConfiguration(myPermissions)) {\n    menuItems.unshift({\n      key: 'upload',\n      caption: <FormattedMessage id=\"topNavigation.upload\" />,\n      img: UploadIcon,\n      onClick: async () => inputFile.current.click(),\n    });\n  }\n\n  if (canReadSVOConfiguration(myPermissions)) {\n    menuItems.unshift({\n      key: 'download',\n      caption: <FormattedMessage id=\"topNavigation.download\" />,\n      img: DownloadIcon,\n      onClick: () => downloadConfig(),\n    });\n  }\n\n  if (canReadUserManagement(myPermissions) || canEditUserManagement(myPermissions)) {\n    menuItems.unshift({\n      key: 'permissions',\n      caption: <FormattedMessage id=\"topNavigation.permissions\" />,\n      img: PermissionsIcon,\n      onClick: () => {\n        setGotoPermissions(true);\n      },\n    });\n    if (gotoPermissions) {\n      return <Redirect to=\"/permissions\" />;\n    }\n  }\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        id=\"file\"\n        ref={inputFile}\n        style={{ display: 'none' }}\n        onChange={onFileAdded}\n      />\n      <div className=\"flex\">\n        <MenuList\n          buttonIcon={UserIcon}\n          buttonCaption={user.fullname}\n          menuItems={menuItems}\n          showBottomArrow\n          onClose={() => void 0}\n          open={false}\n        />\n      </div>\n      <div>\n        <HelpView open={isHelpViewOpen} onClose={() => setIsHelpViewOpen(false)} />\n        <ShortcutView open={shortcutViewOpen} onClose={() => setShortcutViewOpen(false)} />\n        <AboutView open={isAboutViewOpen} onClose={() => setIsAboutViewOpen(false)} />\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(UserInfo);\n","export default __webpack_public_path__ + \"static/media/logout.34533d8e.svg\";","export default __webpack_public_path__ + \"static/media/permissions.ce764429.svg\";","export default __webpack_public_path__ + \"static/media/shortcut-help.d16d3001.svg\";","import PropTypes from 'prop-types';\n\nconst actionList = PropTypes.arrayOf(\n  PropTypes.shape({ intlId: PropTypes.string, iconUrl: PropTypes.string }),\n);\nconst ActionBarType = PropTypes.oneOfType([actionList, PropTypes.func]);\n\nexport const TOGGLE_BUTTON = 'TOGGLE_BUTTON';\nexport const SEPARATOR = 'SEPARATOR';\n\nexport default ActionBarType;\n","export default __webpack_public_path__ + \"static/media/upload.6f61d1e9.svg\";","export default __webpack_public_path__ + \"static/media/user.71fbff7c.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport KoerberLogo from '../../assets/logo/logo.svg';\nimport Dialog from '../../components/Dialog';\nimport Logo from '../../components/layout/Logo';\n\nimport './style.scss';\n\nclass AboutView extends Component {\n  render() {\n    const { onClose, open, intl, configuration } = this.props;\n\n    if (!configuration) {\n      return <div />;\n    }\n\n    return (\n      <Dialog title={<FormattedMessage id=\"aboutView\" />} onClose={onClose} open={open}>\n        <div className=\"appname\">{process.env.REACT_APP_NAME}</div>\n        <div className=\"table\">\n          <div className=\"row\">\n            <div className=\"cell\">{intl.messages['aboutView.applicationVersion']}</div>\n            <div className=\"cell\">{configuration.getWebAppVersion()}</div>\n          </div>\n          <div className=\"row\">\n            <div className=\"cell\">{intl.messages['aboutView.svoVersion']}</div>\n            <div className=\"cell\">{configuration.getSvObserverVersion()}</div>\n          </div>\n          <div className=\"row\">\n            <div className=\"cell\">{intl.messages['aboutView.gatewayVersion']}</div>\n            <div className=\"cell\">{configuration.getGatewayVersion()}</div>\n          </div>\n        </div>\n        <div className=\"logo\">\n          <Logo src={KoerberLogo} title=\"logo\" />\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nAboutView.defaultProps = {\n  open: false,\n};\n\nAboutView.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  try {\n    const { configuration } = state.app;\n    return { configuration };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport default connect(mapStateToProps)(injectIntl(AboutView));\n","import { setProtobuf } from '../redux/actions';\nimport logger from '../utils/logger';\nimport Protobuf from './Protobuf';\nimport WebsocketConnector from './WebsocketConnector';\n\nexport default class ProtobufConnector {\n  constructor(url, dispatch, authToken) {\n    this.url = url;\n    this.dispatch = dispatch;\n    this.protobuf = new Protobuf();\n    this.websocketConnector = null;\n    this.connectionLost = false;\n    this.authToken = authToken;\n    this.connect();\n  }\n\n  connect = () => {\n    this.disconnect();\n\n    if (!this.authToken) {\n      logger.info('[ProtobufConnector] cannot connect yet. no auth token available');\n      return;\n    }\n\n    this.websocketConnector = new WebsocketConnector(\n      this.onConnect,\n      this.onMessage,\n      this.onClose,\n      this.onError,\n      this.url,\n      this.authToken,\n    );\n  };\n\n  connectWithToken = (token) => {\n    this.authToken = token;\n    this.connect();\n  };\n\n  disconnect = () => {\n    if (this.websocketConnector) {\n      this.websocketConnector.closeSocket();\n      this.websocketConnector = null;\n    }\n  };\n\n  onMessage = (data) => {\n    this.protobuf.readMessage(data);\n  };\n\n  onConnect = async (socket) => {\n    // Force a hard reload on re-conncet to make sure we start fresh\n    if (this.connectionLost) {\n      this.connectionLost = false;\n      setImmediate(() => {\n        window.location.href = `${window.location.origin}/`;\n      });\n      return;\n    }\n\n    // once we have a websocket connection established we publish the protobuf connector via store\n    this.dispatch(setProtobuf(this.protobuf, socket));\n  };\n\n  onClose = () => {\n    this.connectionLost = true;\n    // unsetting the socket will set proxy into disconnected\n    // state and will show the \"Connecting\" screen.\n    this.dispatch(setProtobuf(this.protobuf, /*socket=*/ null));\n  };\n\n  onError = (event) => {\n    console.error('Websocket error: ', event);\n  };\n}\n","import ReconnectingWebSocket from 'reconnecting-websocket';\n\nexport default class WebsocketConnector {\n  constructor(onConnect, onMessage, onClose, onError, url, token) {\n    this.onClose = onClose;\n    const protocol = token ? ['access_token', token] : undefined;\n    const options = { debug: false };\n    this.socket = new ReconnectingWebSocket(url, protocol, options);\n    this.socket.binaryType = 'arraybuffer';\n    this.socket.onopen = () => {\n      onConnect && onConnect(this.socket);\n    };\n    this.socket.onmessage = (e) => onMessage && onMessage(e.data, this.socket);\n    this.socket.onerror = (e) => onError && onError(e);\n    this.socket.onclose = () => onClose && onClose(this.socket);\n    this.socket.onconnecting = (e) => console.log('CONNECTING!', e);\n  }\n\n  closeSocket() {\n    if (this.socket) {\n      this.socket.close();\n    }\n  }\n}\n","import { FormattedMessage } from 'react-intl';\nimport {\n  addModeSwitchNotification,\n  addProjectLoadedNotification,\n  addProjectUnloadedNotification,\n  addProjectModifiedNotification,\n  addServerMessageNotification,\n  addRejectStreamPausedNotification,\n  addConfigAlreadyLockedBySameUser,\n  addTakeoverCandidateNotFoundNotification,\n  addLockAcquisitionErrorNotification,\n  addLockTakeoverErrorNotification,\n  loadClientChunk,\n  resetClientChunk,\n  setCurrentModeDone,\n  setCurrentConfiguration,\n  setConfigurationLock,\n  setPausedInspections,\n  showGlobalMessageOverlay,\n  hideGlobalMessageOverlay,\n  setSVOConfigLoaded,\n  setGroupPermissions,\n  setMyPermissions,\n  clearCurrentView,\n} from '../redux/actions';\nimport { defaultPermissions } from '../utils/defaultPermissions';\nimport { CONFIG_INFO } from '../utils/localStorage';\nimport logger from '../utils/logger';\nimport modes from '../utils/modes';\nimport {\n  flattenPermissionsRec,\n  canReadUserManagement,\n  canEditUserManagement,\n} from '../utils/permissions';\nimport Configuration from './Configuration';\nimport ConfigurationLock from './ConfigurationLock';\nimport {\n  mapLogLevelNameToProtobufLogSeverity,\n  mapProtobufDeviceModeToWebAppMode,\n  mapWebAppModeToProtobufDeviceMode,\n} from './Mapper';\nimport ProductHistoryManager from './ProductHistoryManager';\nimport Protobuf from './Protobuf';\nimport SubscriptionManager from './SubscriptionManager';\n\nexport default class Proxy {\n  constructor(dispatch) {\n    this.dispatch = dispatch;\n    this.configInfo = null;\n    this.configLoadedFromCache = false;\n    this.currentConfiguration = null;\n    this.lock = null;\n    this.loading = false;\n    this.mode = null;\n    this.protobuf = null;\n    this.protobufInitialized = false;\n    this.observerNotificationSubscription = null;\n    this.observerMessageSubscription = null;\n    this.lockAcquisitionSubscription = null;\n    this.gatewayNotificationSubscription = null;\n    this.gatewayMessageSubscription = null;\n    this.nextSubId = 0;\n    this.productHistoryManager = new ProductHistoryManager();\n    this.subscriptionManager = new SubscriptionManager({\n      productHistoryManager: this.productHistoryManager,\n    });\n    this.showConnectingSplashScreen();\n  }\n\n  setMode(mode) {\n    this.onCurrentModeChanged(mode);\n  }\n\n  setProtobufStaticInitialized() {\n    this.protobufInitialized = true;\n    this.onProtobufChangedImpl();\n  }\n\n  setProtobuf(protobuf) {\n    this.protobuf = protobuf;\n    this.subscriptionManager.setProtobuf(protobuf);\n    this.onProtobufChangedImpl();\n  }\n\n  onProtobufChangedImpl() {\n    if (this.protobuf && this.protobuf.isConnected() && this.protobufInitialized) {\n      this.hideConnectingSplashScreen();\n      setImmediate(() => this.loadProject());\n    } else {\n      this.showConnectingSplashScreen();\n    }\n  }\n\n  sendLogsToServer = async (entries) => {\n    const logs = entries.map((e) => this.mapLogEntry(e));\n    const req = Protobuf.SvPb.StoreClientLogsRequest.create({\n      client: 'WebApp',\n      logs,\n    });\n    try {\n      if (this.protobuf) {\n        await this.protobuf.request(req);\n      }\n    } catch (e) {\n      console.error('Error while sending logs to server:', e);\n    }\n  };\n\n  mapLogEntry(entry) {\n    return {\n      severity: mapLogLevelNameToProtobufLogSeverity(entry.levelName),\n      message: JSON.stringify(entry),\n    };\n  }\n\n  async updateConfigLockStatus(status) {\n    if (!this.lock) {\n      this.lock = new ConfigurationLock({});\n    }\n    this.lock.owner = status.owner;\n    this.lock.lockDescription = status.description;\n    this.lock.host = status.host;\n    this.lock.status = status.status;\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  async dispatchCurrentConfiguration(configuration) {\n    this.dispatch(setCurrentConfiguration(new Configuration(configuration)));\n    Configuration.saveToCache(this.currentConfiguration, this.configInfo);\n  }\n\n  async dispatchConfigurationLock(lock) {\n    this.dispatch(setConfigurationLock(new ConfigurationLock(lock)));\n  }\n\n  loadProject = async () => {\n    if (this.loading) {\n      this.loadProjectRequested = true;\n      return;\n    }\n\n    this.loading = true;\n    this.showLoadingSplashScreen();\n    try {\n      await this.discoverConfiguration();\n      await this.discoverDeviceMode();\n      this.subscribeToNotificationAndMessageStreams();\n      // only load the client chunk when we have a valid configuration\n      if (this.currentConfiguration) {\n        this.dispatch(setSVOConfigLoaded(true));\n        await this.currentConfiguration.discoverInspectionsWithConfigName(this.protobuf);\n        await this.loadClientChunk();\n      } else {\n        await this.resetClientChunk();\n        this.dispatch(setSVOConfigLoaded(false));\n      }\n      // TODO: re-subscribe all current subscriptions?\n      // this.scheduleRebuildSubscriptions();\n      this.hideLoadingSplashScreen();\n    } catch (err) {\n      this.showLoadingErrorOverlay(err);\n    }\n    this.loading = false;\n\n    if (!this.configLoadedFromCache && this.currentConfiguration) {\n      try {\n        this.dispatchCurrentConfiguration(this.currentConfiguration);\n        this.setUpProductHistories(this.currentConfiguration);\n\n        this.currentConfiguration.discoverPartsInBackground(this.protobuf).then(() => {\n          this.dispatchCurrentConfiguration(this.currentConfiguration);\n        });\n      } catch (err) {\n        logger.error({ err }, 'Error loading configuration');\n        return;\n      }\n    }\n\n    if (this.loadProjectRequested) {\n      this.loadProjectRequested = false;\n      this.loadProject();\n    }\n  };\n\n  showConnectingSplashScreen() {\n    // can not call dispatch right away, because we reach this point\n    // while the store itself is still in initialization phase.\n    setImmediate(() => {\n      this.dispatch(\n        showGlobalMessageOverlay({\n          message: <p>Connecting</p>,\n        }),\n      );\n    });\n  }\n\n  hideConnectingSplashScreen() {\n    // This function might be triggered by a redux event itself.\n    // Use setImmediate to not trigger a redux event inside a\n    // redux event (which is forbidden).\n    setImmediate(() => {\n      this.dispatch(hideGlobalMessageOverlay());\n    });\n  }\n\n  showLoadingSplashScreen() {\n    this.dispatch(\n      showGlobalMessageOverlay({\n        message: <p>Loading Configuration</p>,\n      }),\n    );\n  }\n\n  showLoadingErrorOverlay(err) {\n    this.dispatch(\n      showGlobalMessageOverlay({\n        message: <p>Error while loading Configuration: {`${err}`}</p>,\n      }),\n    );\n  }\n\n  hideLoadingSplashScreen() {\n    this.dispatch(hideGlobalMessageOverlay());\n  }\n\n  async getConfigurationInfo() {\n    try {\n      let res = await this.protobuf.request(Protobuf.SvPb.GetConfigurationInfoRequest.create());\n\n      if (Object.keys(res).length === 0) {\n        logger.warn(\n          'Empty response for GetConfigurationInfoRequest, configuration in SVO not loaded',\n        );\n        return null;\n      }\n\n      if (!res.lastModified) {\n        res = {\n          ...res,\n          lastModified: res.loadedSince,\n        };\n      }\n\n      return res;\n    } catch (err) {\n      logger.error('GetConfigurationInfoRequest ERROR', err);\n    }\n\n    return null;\n  }\n\n  async discoverConfiguration() {\n    let cachedConfigInfo = null;\n    this.configInfo = await this.getConfigurationInfo();\n\n    if (!this.configInfo || !this.configInfo.loadedSince) {\n      this.currentConfiguration = null;\n      return;\n    }\n\n    try {\n      cachedConfigInfo = await JSON.parse(localStorage.getItem(CONFIG_INFO));\n    } catch (err) {\n      logger.error({ err }, 'Timestamp request failed');\n    }\n\n    let config = null;\n    // Timestamps should be equal but not null\n    if (\n      this.configInfo &&\n      cachedConfigInfo &&\n      cachedConfigInfo.hash === this.configInfo.hash &&\n      Number(cachedConfigInfo.lastModified) === this.configInfo.lastModified\n    ) {\n      config = await Configuration.loadFromCache();\n      this.dispatch(setCurrentConfiguration(config));\n      this.setUpProductHistories(config);\n      this.configLoadedFromCache = true;\n    } else {\n      config = new Configuration({});\n      this.dispatch(setCurrentConfiguration(config));\n      this.dispatch(clearCurrentView());\n    }\n\n    this.currentConfiguration = config;\n  }\n\n  async onCurrentModeChanged(currentMode) {\n    // set internal mode to unknown while switching the mode to\n    // lower the possibility of running into errors in the\n    // subscription code, e.g. e.g. fetching images which are not\n    // accessible in certain modes\n    this.mode = modes.unknownMode.id;\n\n    const mode = mapWebAppModeToProtobufDeviceMode(currentMode);\n    const req = Protobuf.SvPb.SetDeviceModeRequest.create({ mode });\n    let res = null;\n    try {\n      res = await this.protobuf.request(req);\n    } catch (err) {\n      logger.error({ err }, 'Error while changing the mode');\n      return;\n    }\n\n    if (res.hResult) {\n      logger.error({ hResult: res.hResult }, 'Error while changing the mode');\n      return;\n    }\n\n    // Leaving this here as a safety net in case SVObserver is not\n    // informing us about the new mode via a notification. As we\n    // do nothing when the discovered mode is the one we already,\n    // have in this.mode, it is cheap to do it multiple times.\n    setTimeout(this.discoverDeviceMode, 500);\n  }\n\n  discoverDeviceMode = async () => {\n    let mode = null;\n    let modeName = null;\n    try {\n      const req = Protobuf.SvPb.GetDeviceModeRequest.create({});\n      const res = await this.protobuf.request(req);\n      modeName = res.mode;\n      mode = mapProtobufDeviceModeToWebAppMode(modeName);\n    } catch (err) {\n      logger.error({ err }, 'Error while fetching mode');\n    }\n\n    if (mode === null || this.mode === mode) {\n      return;\n    }\n\n    // Initially we get mode from SVObserver and no change happens\n    if (this.mode === null) {\n      this.mode = mode;\n      return;\n    }\n\n    logger.info(\n      { oldMode: this.mode, newMode: mode, newModeName: modeName },\n      'Discovered new mode',\n    );\n    this.mode = mode;\n\n    this.dispatch(addModeSwitchNotification(mode));\n    return this.dispatch(setCurrentModeDone(mode));\n  };\n\n  loadClientChunk() {\n    return this.dispatch(loadClientChunk(this));\n  }\n\n  resetClientChunk() {\n    return this.dispatch(resetClientChunk(this.protobuf));\n  }\n\n  subscribeToNotificationAndMessageStreams() {\n    this.subscribeToObserverNotificationStream();\n    this.subscribeToObserverMessageStream();\n    this.subscribeToGatewayNotificationStream();\n    this.subscribeToGatewayMessageStream();\n  }\n\n  subscribeToObserverNotificationStream() {\n    this.unsubscribeFromObserverNotificationStream();\n    const req = Protobuf.SvPb.GetNotificationStreamRequest.create({});\n    this.observerNotificationSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onObserverNotification(evt),\n      error: (err) => this.onObserverNotificationError(err),\n      complete: () => logger.debug('Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromObserverNotificationStream() {\n    if (this.observerNotificationSubscription) {\n      this.observerNotificationSubscription.unsubscribe();\n    }\n  }\n\n  onObserverNotification({ type, parameter }) {\n    let fileName, configName;\n    switch (type) {\n      case Protobuf.SvPb.NotifyType.currentMode:\n        {\n          const mode = this.getVariantValue(parameter);\n          logger.debug({ mode }, 'Notification currentMode');\n          // the notification contains the new mode already, but it might be \"modeChanging\"\n          // so lets just fetch it from the SVObserver so we always have the actual mode.\n          this.discoverDeviceMode();\n        }\n        break;\n      case Protobuf.SvPb.NotifyType.lastModified:\n        {\n          const timestamp = this.getVariantValue(parameter) * 1000;\n          logger.debug({ timestamp: new Date(timestamp) }, 'Notification lastModified');\n          this.dispatch(addProjectModifiedNotification());\n          this.loadProject();\n        }\n        break;\n      case Protobuf.SvPb.NotifyType.configLoaded:\n        fileName = this.getVariantValue(parameter);\n        configName = Configuration.extractConfigNameFromFileName(fileName);\n        logger.debug({ fileName, configName }, 'Notification configLoaded');\n        this.dispatch(addProjectLoadedNotification(fileName));\n        this.loadProject();\n        break;\n      case Protobuf.SvPb.NotifyType.configUnloaded:\n        fileName = this.getVariantValue(parameter);\n        configName = Configuration.extractConfigNameFromFileName(fileName);\n        logger.debug({ fileName, configName }, 'Notification configUnloaded');\n        this.dispatch(addProjectUnloadedNotification(fileName));\n        this.loadProject();\n        break;\n      default:\n        logger.warn({ type, parameter }, 'Unknown notification type');\n        break;\n    }\n  }\n\n  getVariantValue(variant) {\n    return variant && variant[variant.data];\n  }\n\n  formatMessageNotification(messageText, errorNumber) {\n    return (\n      <div>\n        <FormattedMessage id=\"notifications.checkSvimOutput\" />\n        {messageText && (\n          <div>\n            {errorNumber ? `(${errorNumber})` : ' '} {messageText}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  onObserverNotificationError(err) {\n    logger.error({ err }, 'Notification error');\n    this.unsubscribeFromObserverNotificationStream();\n  }\n\n  subscribeToObserverMessageStream() {\n    this.unsubscribeFromObserverMessageStream();\n    const req = Protobuf.SvPb.GetMessageStreamRequest.create({});\n    this.observerMessageSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onObserverMessage(evt),\n      error: (err) => this.onObserverMessageError(err),\n      complete: () => logger.debug('Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromObserverMessageStream() {\n    if (this.observerMessageSubscription) {\n      this.observerMessageSubscription.unsubscribe();\n    }\n  }\n\n  onObserverMessage(evt) {\n    const { type, messageList } = evt;\n    const { messages } = messageList;\n    logger.debug({ ...evt }, 'SVObserver message stream event');\n\n    switch (type) {\n      case Protobuf.SvPb.MessageType.startMsgBox:\n        {\n          if (!messages || messages.length !== 1) {\n            logger.warn({ type, messages }, 'Expected exactly one message in the message event');\n            return;\n          }\n          const firstMessage = messages[0];\n          const message = this.formatMessageNotification(\n            firstMessage.messageText,\n            firstMessage.messageCode,\n          );\n          this.dispatch(showGlobalMessageOverlay({ message }));\n        }\n        break;\n\n      case Protobuf.SvPb.MessageType.endMsgBox:\n        this.dispatch(hideGlobalMessageOverlay());\n        break;\n\n      case Protobuf.SvPb.MessageType.msgLog:\n        // TODO also handle seveirty\n        (messages || []).forEach(({ messageCode, messageText }) => {\n          this.dispatch(addServerMessageNotification(messageText, messageCode));\n        });\n        break;\n\n      default:\n        logger.warn({ type }, 'Unknown message event type');\n        break;\n    }\n  }\n\n  onObserverMessageError(err) {\n    logger.error({ err }, 'SVObserver message stream error');\n    this.unsubscribeFromObserverMessageStream();\n  }\n\n  subscribeToLockAcquisitionStream(reqInfo) {\n    if (reqInfo.requestTakeover) {\n      this.lock.waitForTakeoverResponse();\n      this.dispatchConfigurationLock(this.lock);\n    }\n    const req = Protobuf.SvPb.LockAcquisitionStreamRequest.create(reqInfo);\n    this.lockAcquisitionSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onLockAcquisition(evt),\n      error: (err) => this.onLockAcquisitionError(err),\n      complete: () => logger.debug('Lock acquisition observable completed'),\n    });\n  }\n\n  async unsubscribeFromLockAcquisitionStream() {\n    if (this.lockAcquisitionSubscription) {\n      this.lockAcquisitionSubscription.unsubscribe();\n      this.lock = new ConfigurationLock({});\n      this.dispatchConfigurationLock(this.lock);\n      await this.getMyPermissions();\n    }\n  }\n\n  onLockAcquisition(evt) {\n    const notification = evt[evt.message];\n    logger.debug('message type: ' + JSON.stringify(evt, undefined, 2));\n    switch (evt.message) {\n      case 'lockAcquiredNotification': {\n        this.onLockAcquiredNotification(notification);\n        break;\n      }\n      case 'lockTakeoverNotification': {\n        this.onLockTakeoverNotification(notification);\n        break;\n      }\n      case 'lockReleasedNotification': {\n        this.onLockReleasedNotification();\n        break;\n      }\n      case 'lockAlreadyLockedNotification': {\n        this.onLockAlreadyLockedNotification(notification);\n        break;\n      }\n      case 'lockTakeoverRejectedNotification': {\n        this.onLockTakeoverRejectedNotification();\n        break;\n      }\n      default:\n        logger.warn({ type: evt.message }, 'Unknown lock acquisition notification type');\n        break;\n    }\n  }\n\n  onLockAcquisitionError(err) {\n    logger.error({ err }, 'Lock acquisition error: ' + JSON.stringify(err, undefined, 2));\n    if (err.code === 403) {\n      this.dispatch(addConfigAlreadyLockedBySameUser());\n    } else if (err.code === 404) {\n      this.dispatch(addTakeoverCandidateNotFoundNotification());\n    } else {\n      this.dispatch(addLockAcquisitionErrorNotification(err.code));\n    }\n  }\n\n  async onLockAcquiredNotification(notification) {\n    this.lock.handleLockAcquiredNotification(notification);\n    this.dispatchConfigurationLock(this.lock);\n    await this.getMyPermissions();\n  }\n\n  onLockTakeoverNotification(notification) {\n    this.lock.handleLockTakeoverNotification(notification);\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  onLockReleasedNotification() {\n    this.lock.handleLockReleasedNotification();\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  onLockAlreadyLockedNotification(notification) {\n    this.lock.handleLockAlreadyLockedNotification(notification);\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  onLockTakeoverRejectedNotification() {\n    this.lock.handleLockTakeoverRejectedNotification();\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  closeAlertDialogs() {\n    this.lock.resetAlertDialogFlags();\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  async passConfigLock(reqInfo) {\n    const req = Protobuf.SvPb.LockTakeoverRequest.create(reqInfo);\n    try {\n      this.protobuf.request(req);\n      this.lock.resetTakeoverAttempt();\n      this.lock.lockedInSameAppInstance = false;\n    } catch (err) {\n      this.dispatch(addLockTakeoverErrorNotification(err.code));\n      logger.error({ err }, 'Error while perfroming config lock takeover');\n    }\n  }\n\n  async retainConfigLock(reqInfo) {\n    const req = Protobuf.SvPb.LockTakeoverRejectedRequest.create(reqInfo);\n    try {\n      await this.protobuf.request(req);\n      this.lock.resetTakeoverAttempt();\n      this.dispatchConfigurationLock(this.lock);\n    } catch (err) {\n      this.dispatch(addLockTakeoverErrorNotification(err.code));\n      logger.error({ err }, 'Error while perfroming config lock takeover');\n    }\n  }\n\n  subscribeToGatewayNotificationStream() {\n    this.unsubscribeFromGatewayNotificationStream();\n    const req = Protobuf.SvPb.GetGatewayNotificationStreamRequest.create({});\n    this.gatewayNotificationSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onGatewayNotification(evt),\n      error: (err) => this.onGatewayNotificationError(err),\n      complete: () => logger.debug('Gateway Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromGatewayNotificationStream() {\n    if (this.gatewayNotificationSubscription) {\n      this.gatewayNotificationSubscription.unsubscribe();\n    }\n  }\n\n  onGatewayNotification(evt) {\n    const value = evt[evt.message];\n    switch (evt.message) {\n      case 'rejectStreamPaused':\n        {\n          const { pausedInspectionIds } = value;\n          logger.debug({ pausedInspectionIds }, 'Notification rejectStreamPaused');\n          this.onPauseNotification(pausedInspectionIds);\n        }\n        break;\n      case 'configurationLockStatus':\n        {\n          logger.debug({ value }, 'Notification configurationLockStatus');\n          this.updateConfigLockStatus(value);\n          this.getMyPermissions();\n        }\n        break;\n      default:\n        logger.warn({ type: evt.message }, 'Unknown gateway notification type');\n        break;\n    }\n  }\n\n  onGatewayNotificationError(err) {\n    logger.error({ err }, 'Gateway Notification error');\n    this.unsubscribeFromGatewayNotificationStream();\n  }\n\n  subscribeToGatewayMessageStream() {\n    this.unsubscribeFromGatewayMessageStream();\n    const req = Protobuf.SvPb.GetGatewayMessageStreamRequest.create({});\n    this.GatewayMessageSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onGatewayMessage(evt),\n      error: (err) => this.onGatewayMessageError(err),\n      complete: () => logger.debug('Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromGatewayMessageStream() {\n    if (this.GatewayMessageSubscription) {\n      this.GatewayMessageSubscription.unsubscribe();\n    }\n  }\n\n  onGatewayMessage(evt) {\n    const {\n      type,\n      messageList: { messages = [] },\n    } = evt;\n    logger.debug({ ...evt }, 'Gateway message stream event');\n\n    switch (type) {\n      case Protobuf.SvPb.MessageType.startMsgBox:\n        {\n          if (messages.length !== 1) {\n            logger.warn({ type, messages }, 'Expected exactly one message in the message event');\n            return;\n          }\n          const firstMessage = messages[0];\n          const message = this.formatMessageNotification(\n            firstMessage.messageText,\n            firstMessage.messageCode,\n          );\n          this.dispatch(showGlobalMessageOverlay({ message }));\n        }\n        break;\n\n      case Protobuf.SvPb.MessageType.endMsgBox:\n        this.dispatch(hideGlobalMessageOverlay());\n        break;\n\n      case Protobuf.SvPb.MessageType.msgLog:\n        // TODO also handle seveirty\n        messages.forEach(({ messageCode, messageText }) => {\n          this.dispatch(addServerMessageNotification(messageText, messageCode));\n        });\n        break;\n\n      default:\n        logger.warn({ type }, 'Unknown message event type');\n        break;\n    }\n  }\n\n  onGatewayMessageError(err) {\n    logger.error({ err }, 'Gateway message stream error');\n    this.unsubscribeFromGatewayMessageStream();\n  }\n\n  subscribeToProductStream(desc, cb) {\n    const id = this._getNextSubId();\n    this.subscriptionManager.addSubscription(id, desc, cb);\n    return id;\n  }\n\n  unsubscribeFromProductStream(id) {\n    this.subscriptionManager.removeSubscription(id);\n  }\n\n  _getNextSubId() {\n    return `${++this.nextSubId}`;\n  }\n\n  setUpProductHistories(config) {\n    const inspections = config.getInspections();\n    this.productHistoryManager.init(inspections);\n  }\n\n  async replayProduct(inspectionId, product) {\n    await this.fetchMissingProductData(inspectionId, product);\n    this.subscriptionManager.replayProduct(inspectionId, product);\n  }\n\n  async fetchMissingProductData(inspectionId, product) {\n    const missingImageIds = this.getMissingProductImages(inspectionId, product);\n    const missingValueIds = this.getMissingProductValues(inspectionId, product);\n    if (missingImageIds.length === 0 && missingValueIds.length === 0) {\n      return;\n    }\n\n    const req = Protobuf.SvPb.GetProductDataRequest.create({\n      inspectionId,\n      trigger: product.trigger,\n      imageIds: missingImageIds,\n      valueIds: missingValueIds,\n      includeOverlays: true,\n    });\n    try {\n      const res = await this.protobuf.request(req);\n      await product.addData({\n        trigger: res.trigger,\n        imageIds: missingImageIds,\n        images: res.images,\n        overlays: res.overlays,\n        valueIds: missingValueIds,\n        values: res.values,\n      });\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  getMissingProductImages(inspectionId, product) {\n    const imageIds = this.subscriptionManager.getSubscribedImages(inspectionId);\n    return imageIds.filter((imageId) => product.getImage(imageId) === undefined);\n  }\n\n  getMissingProductValues(inspectionId, product) {\n    const valueIds = this.subscriptionManager.getSubscribedValues(inspectionId);\n    return valueIds.filter((valueId) => product.getValue(valueId) === undefined);\n  }\n\n  onPauseNotification(pausedInspectionIds) {\n    this.dispatch(addRejectStreamPausedNotification(pausedInspectionIds));\n    this.subscriptionManager.updatePausedInspections(pausedInspectionIds);\n    this.dispatch(setPausedInspections(pausedInspectionIds));\n  }\n\n  pauseRejectStream(inspectionId) {\n    this.pauseRejectStreamImpl(true, inspectionId);\n  }\n\n  resumeRejectStream(inspectionId) {\n    this.pauseRejectStreamImpl(false, inspectionId);\n  }\n\n  async pauseRejectStreamImpl(pause, inspectionId) {\n    const request = Protobuf.SvPb.SetRejectStreamPauseStateRequest.create({\n      inspectionId: inspectionId || undefined,\n      pause,\n    });\n\n    try {\n      await this.protobuf.request(request);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async getMyPermissions() {\n    let response = {};\n    try {\n      const request = Protobuf.SvPb.GetMyPermissionsRequest.create();\n      response = await this.protobuf.request(request);\n    } catch (err) {\n      logger.error('Cannot get my permissions, fall back to default permissions');\n      response = defaultPermissions;\n    }\n\n    if (!response || !response.permissions) {\n      logger.error('Cannot get my permissions');\n      return false;\n    }\n\n    const myPermissions = new Set();\n    flattenPermissionsRec(response.permissions, myPermissions, '');\n    this.disablePermissionsWhenConfigLocked(myPermissions);\n    this.dispatch(setMyPermissions(myPermissions));\n\n    if (canReadUserManagement(myPermissions) || canEditUserManagement(myPermissions)) {\n      await this.getGroupPermissions();\n    }\n  }\n\n  disablePermissionsWhenConfigLocked(permissions) {\n    if (this.lock.isUnlocked() || this.lock.isLockedInDifferentAppInstance()) {\n      permissions.forEach((permission) => {\n        if (\n          permission.endsWith('.save') ||\n          permission.endsWith('.edit') ||\n          permission.endsWith('.write') ||\n          permission.endsWith('.remove') ||\n          permission.endsWith('.add')\n        ) {\n          permissions.delete(permission);\n        }\n      });\n    }\n  }\n\n  async getGroupPermissions() {\n    const request = Protobuf.SvPb.GetGroupDetailsRequest.create();\n    const response = await this.protobuf.request(request);\n\n    if (!response || !response.groupDetails) {\n      logger.error('Cannot get group permissions');\n      return false;\n    }\n\n    const flattenedPermissions = this.flattenPermissions(response.groupDetails);\n    this.dispatch(setGroupPermissions(flattenedPermissions));\n  }\n\n  flattenPermissions(groupDetails) {\n    const permissions = new Map();\n    (groupDetails || []).forEach((groupDetail) => {\n      const groupPermissions = new Set();\n      flattenPermissionsRec(groupDetail.permissions, groupPermissions, '');\n      permissions.set(groupDetail.name, {\n        groupPermissions,\n        users: groupDetail.users,\n      });\n    });\n    return permissions;\n  }\n\n  async setUserPermissions(groupPermissions) {\n    const request = Protobuf.SvPb.UpdateGroupPermissionsRequest.create({\n      groupPermissions,\n    });\n    try {\n      if (this.protobuf) {\n        await this.protobuf.request(request);\n        await this.getGroupPermissions();\n      }\n    } catch (e) {\n      logger.error({ e }, 'Error while setting user permissions');\n    }\n\n    logger.info('Successfully saved user permissions');\n  }\n\n  async addTool(inspectionID, ownerId, classId, taskObjectPos) {\n    const request = Protobuf.SvPb.InspectionCmdRequest.create({\n      inspectionID,\n      createObjectRequest: {\n        ownerId,\n        classId,\n        taskObjectPos,\n      },\n    });\n\n    try {\n      const response = await this.protobuf.request(request);\n      return response?.createObjectResponse?.objectId;\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async deleteTool(inspectionID, objectID) {\n    const request = Protobuf.SvPb.InspectionCmdRequest.create({\n      inspectionID,\n      deleteObjectRequest: {\n        objectID,\n      },\n    });\n\n    try {\n      await this.protobuf.request(request);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async downloadSVOConfig() {\n    const request = Protobuf.SvPb.GetConfigRequest.create({});\n\n    try {\n      const response = await this.protobuf.request(request);\n      return response?.fileData;\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async uploadSVOConfig(fileName, fileData) {\n    const request = Protobuf.SvPb.PutConfigRequest.create({\n      fileName,\n      fileData,\n    });\n\n    try {\n      const res = await this.protobuf.request(request);\n      if (res.hResult) {\n        logger.error({ hResult: res.hResult }, 'Could not load SVO configuration file');\n      }\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async copyTool(inspectionID, objectID) {\n    const request = Protobuf.SvPb.ConfigCommandRequest.create({\n      inspectionID,\n      clipboardRequest: {\n        action: Protobuf.SvPb.ClipboardActionEnum.Copy,\n        objectID,\n      },\n    });\n\n    try {\n      await this.protobuf.request(request);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async cutTool(inspectionID, objectID) {\n    const request = Protobuf.SvPb.ConfigCommandRequest.create({\n      inspectionID,\n      clipboardRequest: {\n        action: Protobuf.SvPb.ClipboardActionEnum.Cut,\n        objectID,\n      },\n    });\n\n    try {\n      await this.protobuf.request(request);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async pasteTool(inspectionID, objectID) {\n    const request = Protobuf.SvPb.ConfigCommandRequest.create({\n      inspectionID,\n      clipboardRequest: {\n        action: Protobuf.SvPb.ClipboardActionEnum.Paste,\n        objectID,\n      },\n    });\n\n    try {\n      await this.protobuf.request(request);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n}\n","export const defaultPermissions = {\n  permissions: {\n    webapp: {\n      configuration: {\n        save: true,\n      },\n      logs: {\n        read: true,\n      },\n      viewset: {\n        add: true,\n        read: true,\n        edit: true,\n        remove: true,\n      },\n      view: [\n        {\n          type: 0,\n          add: true,\n          read: true,\n          edit: true,\n          remove: true,\n        },\n      ],\n    },\n    svobserver: {\n      mode: {\n        read: true,\n        edit: true,\n      },\n      inspectionstate: {\n        read: true,\n        edit: true,\n      },\n      value: {\n        read: true,\n        edit: true,\n      },\n      tool: {\n        read: true,\n        edit: true,\n        add: true,\n        remove: true,\n      },\n      configuration: {\n        read: true,\n        write: true,\n      },\n      notifications: {\n        subscribe: true,\n      },\n      clientlogs: {\n        store: true,\n      },\n      file: {\n        read: true,\n        write: true,\n      },\n      machinestate: {\n        set: true,\n      },\n      command: {\n        execute: true,\n      },\n    },\n    usermanagement: {\n      userpermissions: {\n        // currently set to false because default permissions are used as fallback if svobserver has not yet implemented permissions\n        read: false,\n        edit: false,\n      },\n    },\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\nimport Heading from '../../../../components/typo/Heading';\n\nconst ShortcutListItem = ({ title, description }) => (\n  <li className=\"shortcut-list-item\">\n    <Heading type=\"h3\" intlId={title} />\n    <FormattedMessage id={description} />\n  </li>\n);\n\nexport const propTypes = {\n  title: PropTypes.node.isRequired,\n  description: PropTypes.node.isRequired,\n};\nShortcutListItem.propTypes = propTypes;\n\nexport default ShortcutListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortId from 'shortid';\n\nimport './style.scss';\nimport ShortcutListItem, { propTypes as shortcutListItemPropTypes } from '../ShortcutListItem';\n\nconst ShortcutList = ({ shortcuts }) => (\n  <ul className=\"shortcut-list\">\n    {shortcuts.map((shortcut) => (\n      <ShortcutListItem\n        key={shortId.generate()}\n        title={shortcut.title}\n        description={shortcut.description}\n      />\n    ))}\n  </ul>\n);\n\nShortcutList.propTypes = {\n  shortcuts: PropTypes.arrayOf(PropTypes.shape(shortcutListItemPropTypes)).isRequired,\n};\n\nexport default ShortcutList;\n","const shortcuts = [\n  {\n    title: 'shortcutView.fullscreenTitle',\n    description: 'shortcutView.fullscreenDescription',\n  },\n  {\n    title: 'shortcutView.helpTitle',\n    description: 'shortcutView.helpDescription',\n  },\n];\n\nexport default shortcuts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Dialog from '../../components/Dialog';\nimport ShortcutList from './components/ShortcutList';\nimport shortcuts from './shortcuts';\n\nconst ShortcutView = ({ open, onClose }) => (\n  <Dialog title={<FormattedMessage id=\"shortcutView.title\" />} onClose={onClose} open={open}>\n    <ShortcutList shortcuts={shortcuts} />\n  </Dialog>\n);\n\nShortcutView.defaultProps = {\n  open: false,\n};\n\nShortcutView.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ShortcutView;\n","import Product from './Product';\n\nexport default class ProductHistory {\n  constructor(inspectionId) {\n    this.inspectionId = inspectionId;\n    this.history = [];\n  }\n\n  async addProductData(productData) {\n    const { trigger, isReject } = productData;\n    const entry = this.history.find((e) => e.trigger === trigger);\n    let product = null;\n    if (entry) {\n      product = entry.product;\n    } else {\n      product = new Product({ trigger, isReject, history: this });\n      this.history.push({\n        trigger,\n        product,\n      });\n    }\n\n    await product.addData(productData);\n\n    return product;\n  }\n\n  releaseProduct(trigger) {\n    const entry = this.history.find((entry) => entry.trigger === trigger);\n    if (!entry) {\n      return;\n    }\n\n    const wasReleased = entry.product.releaseImpl();\n    if (wasReleased) {\n      this.history = this.history.filter((e) => e !== entry);\n    }\n  }\n}\n","import ProductHistory from './ProductHistory';\n\nexport default class ProductHistoryManager {\n  constructor() {\n    this.productHistories = new Map();\n  }\n\n  init(inspections) {\n    this.productHistories.clear();\n\n    (inspections || []).forEach((inspection) => {\n      const inspectionId = inspection.id;\n      const history = new ProductHistory(inspectionId);\n      this.productHistories.set(inspectionId, history);\n    });\n  }\n\n  async addProductData(inspectionId, productData) {\n    const productHistory = this.productHistories.get(inspectionId);\n    if (!productHistory) {\n      return undefined;\n    }\n    return await productHistory.addProductData(productData);\n  }\n}\n","import each from 'lodash/each';\nimport logger from '../utils/logger';\nimport Protobuf from './Protobuf';\n\nexport default class InspectionSubscription {\n  constructor({ inspectionId, productHistoryManager, protobuf, paused }) {\n    this.inspectionId = inspectionId;\n    this.productHistoryManager = productHistoryManager;\n    this.protobuf = protobuf;\n    this.lastTrigger = -1;\n    this.subsById = new Map();\n    this.paused = paused;\n    this.selectedTrigger = null;\n    this.baseSub = null;\n  }\n\n  pause() {\n    this.paused = true;\n  }\n\n  resume() {\n    this.paused = false;\n    this.selectedTrigger = null;\n  }\n\n  replayProduct(product) {\n    this.selectedTrigger = product.trigger;\n    this.emitProductToAllSubscriptions(product);\n  }\n\n  addSubscription(id, desc, cb) {\n    const subscription = { id, desc, cb };\n    this.subsById.set(id, subscription);\n\n    const { inspectionId } = desc;\n    if (this.inspectionId !== inspectionId) {\n      throw new Error('Insection id does not match');\n    }\n\n    this.resubscribeToStream();\n  }\n\n  removeSubscription(id) {\n    const subscription = this.subsById.get(id);\n    if (!subscription) {\n      logger.warn({ id }, 'Unable to unsubscribe listener: unknown id');\n      return;\n    }\n\n    this.swapLastProduct(subscription, null);\n\n    this.subsById.delete(id);\n\n    this.resubscribeToStream();\n  }\n\n  isEmpty() {\n    return this.subsById.size === 0;\n  }\n\n  getSubscribedImages() {\n    return this.uniqueIds('imageIds');\n  }\n\n  getSubscribedValues() {\n    return this.uniqueIds('valueIds');\n  }\n\n  setProtobuf(protobuf) {\n    this.protobuf = protobuf;\n    // TODO re-subscribe!\n  }\n\n  resubscribeToStream() {\n    this.unsubscribeFromStream();\n    if (!this.isEmpty()) {\n      this.subscribeToStream();\n    }\n  }\n\n  subscribeToStream() {\n    // TODO generate nonce per subscription so we know whether we get an event for an old sub\n    const params = this.buildReqParams();\n    const req = Protobuf.SvPb.GetProductStreamRequest.create(params);\n    this.baseSub = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onStreamEvent(req, evt),\n      error: (err) => this.onStreamError(err),\n      // TODO: how do we want to report complete event to the client?\n      //       we could return an event emitter...\n      complete: () => logger.debug('Product observable completed'),\n    });\n  }\n\n  buildReqParams() {\n    return {\n      inspectionId: this.inspectionId,\n      startAtTriggerCount: this.getStartAtTriggerCount(),\n      includeFailStatusValues: true,\n      valueIds: this.uniqueIds('valueIds'),\n      imageIds: this.uniqueIds('imageIds'),\n      rejectValueIds: this.uniqueIds('rejectValueIds'),\n      rejectImageIds: this.uniqueIds('rejectImageIds'),\n      rejectsOnly: this.isRejectsOnly(),\n      imageFormat: Protobuf.SvPb.ImageFormatEnum.bmp,\n      includeOverlays: true,\n    };\n  }\n\n  getStartAtTriggerCount() {\n    let startAtTriggerCount = 0;\n    this.subsById.forEach((sub) => {\n      if (\n        !isNaN(sub.desc.startAtTriggerCount) &&\n        sub.desc.startAtTriggerCount < startAtTriggerCount\n      ) {\n        startAtTriggerCount = sub.desc.startAtTriggerCount;\n      }\n    });\n    if (startAtTriggerCount === -1 && this.trigger > 0) {\n      return this.trigger;\n    }\n    return startAtTriggerCount;\n  }\n\n  isRejectsOnly() {\n    let rejectsOnly = true;\n    this.subsById.forEach((sub) => {\n      if (!sub.desc.rejectsOnly) {\n        rejectsOnly = false;\n      }\n    });\n    return rejectsOnly;\n  }\n\n  uniqueIds(key) {\n    const ids = new Set();\n    this.subsById.forEach((sub) => {\n      each(sub.desc[key], (id) => ids.add(id));\n    });\n    return Array.from(ids);\n  }\n\n  unsubscribeFromStream() {\n    if (this.baseSub && this.baseSub.unsubscribe) {\n      this.baseSub.unsubscribe();\n    }\n    this.baseSub = null;\n  }\n\n  async onStreamEvent(req, rawEvent) {\n    const { trigger, isReject } = rawEvent;\n    const images = this.gatherImages(req, rawEvent);\n    const values = this.gatherValues(req, rawEvent);\n\n    const productData = {\n      trigger,\n      isReject,\n      images,\n      values,\n    };\n\n    const product = await this.productHistoryManager.addProductData(this.inspectionId, productData);\n    this.lastTrigger = trigger;\n    this.emitProductToAllSubscriptions(product);\n  }\n\n  gatherImages(req, rawEvent) {\n    const { imageIds, rejectImageIds } = req;\n    const { isReject, images, rejectImages, overlays: overlaysList, rejectOverlays } = rawEvent;\n\n    const result = new Map();\n\n    imageIds.forEach((id, idx) => {\n      const image = (images || [])[idx];\n      const overlays = (overlaysList || [])[idx];\n      if (image) {\n        result.set(id, {\n          id,\n          image,\n          overlays,\n        });\n      }\n    });\n\n    if (isReject) {\n      rejectImageIds.forEach((id, idx) => {\n        const image = (rejectImages || [])[idx];\n        const overlays = (rejectOverlays || [])[idx];\n        if (image) {\n          result.set(id, {\n            id,\n            image,\n            overlays,\n          });\n        }\n      });\n    }\n\n    return result;\n  }\n\n  gatherValues(req, rawEvent) {\n    const { valueIds, rejectValueIds } = req;\n    const { isReject, values, rejectValues } = rawEvent;\n\n    const result = new Map();\n\n    valueIds.forEach((id, idx) => {\n      const value = (values || [])[idx];\n      if (value) {\n        result.set(id, {\n          id,\n          value,\n        });\n      }\n    });\n\n    if (isReject) {\n      rejectValueIds.forEach((id, idx) => {\n        const value = (rejectValues || [])[idx];\n        if (value) {\n          result.set(id, {\n            id,\n            value,\n          });\n        }\n      });\n    }\n\n    return result;\n  }\n\n  emitProductToAllSubscriptions(product) {\n    this.subsById.forEach((subscription) => {\n      this.emitProductToSubscription(subscription, product);\n    });\n  }\n\n  emitProductToSubscription(subscription, product) {\n    const hasRequestedData = this.hasAllRequestedDataForSubscription(product, subscription);\n    const isInterestedIn = this.isInterestedInNewPorduct(product, subscription);\n    if (hasRequestedData && isInterestedIn) {\n      product.lock();\n      subscription.cb({ product });\n      this.swapLastProduct(subscription, product);\n    }\n  }\n\n  hasAllRequestedDataForSubscription(product, subscription) {\n    // if only reject values requested and product is not a reject\n    if (!subscription.desc.imageIds && !subscription.desc.valueIds && !product.isReject) {\n      return false;\n    }\n    return (\n      this.hasDataForSubscriptionInList(subscription.desc.valueIds, product.values) ||\n      this.hasDataForSubscriptionInList(subscription.desc.rejectValueIds, product.values) ||\n      this.hasDataForSubscriptionInList(subscription.desc.imageIds, product.images) ||\n      this.hasDataForSubscriptionInList(subscription.desc.rejectImageIds, product.images)\n    );\n  }\n\n  isInterestedInNewPorduct(product, subscription) {\n    if (this.selectedTrigger) {\n      return this.selectedTrigger === product.trigger;\n    }\n    if (subscription.lastProduct) {\n      return (\n        subscription.desc.allowOldTrigger || subscription.lastProduct.trigger < product.trigger\n      );\n    }\n    return true;\n  }\n\n  hasDataForSubscriptionInList(requestedIds, map) {\n    const arr = requestedIds || [];\n    for (let i = 0; i < arr.length; ++i) {\n      if (!map.has(arr[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  swapLastProduct(subscription, product) {\n    if (subscription.lastProduct && !subscription.desc.manualRelease) {\n      subscription.lastProduct.release();\n    }\n    subscription.lastProduct = product;\n  }\n\n  onStreamError(err) {\n    // TODO: forward err to callback\n    logger.error({ err }, 'Stream error');\n    // TODO: unsubscribe all in case of error!\n  }\n}\n","import logger from '../utils/logger';\nimport InspectionSubscription from './InspectionSubscription';\n\nexport default class SubscriptionManager {\n  constructor({ productHistoryManager }) {\n    this.productHistoryManager = productHistoryManager;\n    this.inspectionIdBySubId = new Map();\n    this.subsByInspectionId = new Map();\n    this.pausedInspectionIds = [];\n    this.protobuf = null;\n  }\n\n  updatePausedInspections(pausedInspectionIds) {\n    this.pausedInspectionIds = pausedInspectionIds;\n    for (let [key, value] of this.subsByInspectionId.entries()) {\n      if (pausedInspectionIds.includes(key)) {\n        value.pause();\n      } else {\n        value.resume();\n      }\n    }\n  }\n\n  replayProduct(inspectionId, product) {\n    const inspection = this.subsByInspectionId.get(inspectionId);\n    if (inspection) {\n      inspection.replayProduct(product);\n    }\n  }\n\n  addSubscription(id, desc, cb) {\n    const { inspectionId, startAtTriggerCount } = desc;\n    this.inspectionIdBySubId.set(id, inspectionId);\n    const isPaused = this.pausedInspectionIds.includes(inspectionId);\n    let subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      subscription = new InspectionSubscription({\n        inspectionId,\n        startAtTriggerCount,\n        productHistoryManager: this.productHistoryManager,\n        paused: isPaused,\n        protobuf: this.protobuf,\n      });\n      this.subsByInspectionId.set(inspectionId, subscription);\n    }\n    subscription.addSubscription(id, desc, cb);\n  }\n\n  removeSubscription(id) {\n    const inspectionId = this.inspectionIdBySubId.get(id);\n    if (!inspectionId) {\n      logger.warn({ id }, 'Unable to unsubscribe listener: unknown id');\n      return;\n    }\n\n    const subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      logger.warn({ id }, 'Unable to unsubscribe listener: unknown inspection id');\n      return;\n    }\n\n    subscription.removeSubscription(id);\n\n    if (subscription.isEmpty()) {\n      this.subsByInspectionId.delete(inspectionId);\n    }\n  }\n\n  getSubscribedImages(inspectionId) {\n    const subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      return [];\n    }\n    return subscription.getSubscribedImages();\n  }\n\n  getSubscribedValues(inspectionId) {\n    const subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      return [];\n    }\n    return subscription.getSubscribedValues();\n  }\n\n  setProtobuf(protobuf) {\n    this.protobuf = protobuf;\n    this.subsByInspectionId.forEach((subscription) => subscription.setProtobuf(protobuf));\n  }\n}\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\n\nimport './style.scss';\nimport closeIcon from '../../assets/icons/close.svg';\n\nimport ActionBar from '../../components/ActionBar';\nimport ActionBarType from '../../types/ActionBarType';\nimport IconButton from '../buttons/IconButton';\n\nclass Dialog extends Component {\n  render() {\n    const {\n      children,\n      onClose,\n      dialogActions,\n      title,\n      intl,\n      open,\n      isInView,\n      isHeight100,\n      isFullscreen,\n      isPopup,\n    } = this.props;\n    const dialogClass = classNames({\n      dialog: true,\n      'dialog--open': open,\n      'is-in-view': isInView,\n      'is-height-100': isHeight100,\n    });\n    const dialogWrapperClass = classNames({\n      'dialog-wrapper': true,\n      'is-height-100': isInView || isFullscreen,\n      'is-width-100': isFullscreen,\n      isPopup: isPopup,\n    });\n\n    const dialogContentWrapperClass = classNames({\n      'dialog-content-wrapper': true,\n      'is-padding-0': isInView,\n      isPopup: isPopup,\n    });\n\n    if (!open) {\n      return false;\n    }\n    return (\n      <div className={dialogClass}>\n        <div className={dialogWrapperClass}>\n          <div className=\"dialog-toolbar\">\n            <div className=\"dialog-title\">{title}</div>\n            <div className=\"dialog-controll-wrapper\">\n              <IconButton\n                tooltip={intl.messages['viewSetManager.close']}\n                iconUrl={closeIcon}\n                onClick={() => {\n                  onClose();\n                }}\n              />\n            </div>\n          </div>\n          <div className={dialogContentWrapperClass}>{children}</div>\n          <div className=\"dialog-action-wrapper\">\n            {dialogActions && <ActionBar isViewAction actions={dialogActions} />}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDialog.defaultProps = {\n  open: false,\n  title: undefined,\n  dialogActions: undefined,\n  isInView: false,\n  isFullscreen: false,\n  isPopup: false,\n};\n\nDialog.propTypes = {\n  children: PropTypes.node.isRequired,\n  open: PropTypes.bool,\n  isInView: PropTypes.bool,\n  dialogActions: ActionBarType,\n  title: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  isFullscreen: PropTypes.bool,\n  isPopup: PropTypes.bool,\n};\n\nexport default injectIntl(Dialog);\n","const AUTH_TOKEN_KEY = 'svAuthToken';\nconst USER_KEY = 'svObserverUser';\nexport const CONFIG_INFO = 'configInfo';\nexport const CONFIGURATION_CHUNK_TEMPLATE = 'configChunk_';\nexport const CONFIGURATION_CHUNK_LIST = 'configChunkList';\n\nexport const loadState = () => {\n  const authToken = localStorage.getItem(AUTH_TOKEN_KEY);\n  if (!authToken) {\n    return {};\n  }\n\n  const userStr = localStorage.getItem(USER_KEY);\n  let user;\n  try {\n    user = JSON.parse(userStr);\n  } catch (e) {\n    return {};\n  }\n\n  if (!user) {\n    return {};\n  }\n\n  return { authToken, user };\n};\n\nexport const resetState = () => {\n  localStorage.removeItem(AUTH_TOKEN_KEY);\n  localStorage.removeItem(USER_KEY);\n  localStorage.removeItem(CONFIG_INFO);\n  localStorage.removeItem(CONFIGURATION_CHUNK_LIST);\n};\n\nexport const saveState = (authToken, user) => {\n  localStorage.setItem(AUTH_TOKEN_KEY, authToken);\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n};\n","import { createLogger } from 'browser-bunyan';\nimport browserStdout from 'browser-stdout';\nimport bunyanFormat from 'bunyan-format';\n\nclass ProxyStream {\n  constructor(opts = {}) {\n    this.proxy = null;\n    this.pendingMessages = [];\n    this.opts = opts;\n    this.start();\n  }\n\n  start() {\n    const { throttleInterval } = this.opts;\n\n    const throttleRequests = () => {\n      this.currentThrottleTimeout = setTimeout(() => {\n        const recs = this.pendingMessages;\n        this.pendingMessages = [];\n\n        if (recs.length > 0) {\n          if (!this.proxy) {\n            this.pendingMessages = recs;\n          } else {\n            this.proxy.sendLogsToServer(recs);\n          }\n        }\n        throttleRequests();\n      }, throttleInterval);\n    };\n\n    throttleRequests();\n  }\n\n  setProxy(proxy) {\n    this.proxy = proxy;\n\n    if (this.proxy && this.pendingMessages.length > 0) {\n      this.proxy.sendLogsToServer(this.pendingMessages);\n      this.pendingMessages = [];\n    }\n  }\n\n  removeProxy() {\n    this.proxy = null;\n    this.pendingMessages = [];\n  }\n\n  write(rec) {\n    if (this.currentThrottleTimeout) {\n      const idx = this.pendingMessages.findIndex(\n        (message) => message.level === rec.level && message.msg === rec.msg,\n      );\n\n      if (idx >= 0) {\n        if (!this.pendingMessages[idx].sameMessageCount) {\n          this.pendingMessages[idx] = { ...this.pendingMessages[idx], sameMessageCount: 1 };\n        }\n        this.pendingMessages[idx].sameMessageCount++;\n      } else {\n        this.pendingMessages.push(rec);\n      }\n    }\n  }\n}\n\nclass FormatStream {\n  constructor() {\n    const out = browserStdout({\n      label: false,\n    });\n    this.impl = bunyanFormat(\n      {\n        outputMode: 'short',\n        color: false,\n      },\n      out,\n    );\n  }\n\n  write(rec) {\n    this.impl.write(JSON.stringify(rec));\n  }\n}\n\nconst proxyStream = new ProxyStream({\n  throttleInterval: 3000,\n});\nconst formatStream = new FormatStream();\nconst logger = createLogger({\n  name: 'SvWebApp',\n  streams: [\n    {\n      level: 'warn',\n      stream: proxyStream,\n      type: 'raw',\n    },\n    {\n      level: 'debug',\n      stream: formatStream,\n      type: 'stream',\n    },\n  ],\n});\n\nlogger.setProxy = (proxy) => proxyStream.setProxy(proxy);\nlogger.removeProxy = (proxy) => proxyStream.removeProxy(proxy);\n\nexport default logger;\n","export const isObjectValid = (prop) => {\n  try {\n    return prop();\n  } catch (error) {\n    return undefined;\n  }\n};\n","class Observer {\n  constructor(observable) {\n    this.closed = false;\n    this.observable = observable;\n  }\n\n  next(v) {\n    return this.observable.onNext(v);\n  }\n\n  error(err) {\n    return this.observable.onError(err);\n  }\n\n  complete() {\n    return this.observable.onComplete();\n  }\n}\n\nexport class Observable {\n  static create(onSubscribe) {\n    return new Observable(onSubscribe);\n  }\n\n  constructor(onSubscribe) {\n    this._onSubscribe = onSubscribe;\n    this._next = () => void 0;\n    this._error = () => void 0;\n    this._complete = () => void 0;\n  }\n\n  subscribe(desc) {\n    if (typeof desc.next === 'function') {\n      this._next = desc.next;\n    }\n    if (typeof desc.error === 'function') {\n      this._error = desc.error;\n    }\n    if (typeof desc.complete === 'function') {\n      this._complete = desc.complete;\n    }\n    const observer = new Observer(this);\n    // TODO use of tearDownCb\n    const tearDownCb = this._onSubscribe(observer);\n    return {\n      unsubscribe: () => {\n        if (typeof tearDownCb === 'function') {\n          tearDownCb();\n        }\n        // TODO support multiple subscriber?\n        this._next = () => void 0;\n        this._error = () => void 0;\n        this._complete = () => void 0;\n      },\n    };\n  }\n\n  onNext(v) {\n    return this._next(v);\n  }\n\n  onError(err) {\n    return this._error(err);\n  }\n\n  onComplete() {\n    return this._complete();\n  }\n}\n","import ProtoJs from 'protobufjs';\nimport logger from '../utils/logger';\nimport { Observable } from './Observable';\n\nexport default class Protobuf {\n  // will be initialized with Protobuf.init()\n  static SvPenv = {};\n  static SvPb = {};\n  static nextTxId = 0;\n  static nextStreamId = 0;\n  static initialized = false;\n\n  static async init() {\n    Protobuf.SvPenv = await Protobuf.loadProto('/res/proto/Envelope.proto', 'SvPenv');\n    Protobuf.SvPb = await Protobuf.loadProto('/res/proto/SVRC.proto', 'SvPb');\n    Protobuf.SvAuth = await Protobuf.loadProto('/res/proto/SVRC.proto', 'SvAuth');\n    Protobuf.initialized = true;\n  }\n\n  static async loadProto(path, namespace) {\n    const root = await ProtoJs.load(path);\n    return root.lookup(namespace);\n  }\n\n  constructor() {\n    this.pendingRequests = new Map();\n    this.openStreams = new Map();\n    this.socket = null;\n  }\n\n  isConnected() {\n    return !!this.socket;\n  }\n\n  onConnect(socket) {\n    const prevSocket = this.socket;\n    this.socket = socket;\n    if (prevSocket !== socket) {\n      this.cancelAllPendingRequests(new Error('Connection changed'));\n    }\n  }\n\n  async readMessage(data) {\n    const env = await Protobuf.SvPenv.Envelope.decode(new Uint8Array(data));\n\n    switch (env.type) {\n      case Protobuf.SvPenv.MessageType.response:\n        this.onResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.errorResponse:\n        this.onErrorResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamResponse:\n        this.onStreamResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamErrorResponse:\n        this.onStreamErrorResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamFinish:\n        this.onStreamFinish(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamCancel:\n        this.onStreamCancel(env);\n        break;\n      default:\n        logger.error({ type: env.type }, 'Received message with unexpected type');\n    }\n  }\n\n  onResponse(env) {\n    const txId = env.transactionId;\n    const hdl = this.pendingRequests.get(txId);\n    if (!hdl) {\n      logger.error({ txId }, 'Received response for unknown transaction id');\n      return;\n    }\n    const res = this.unwrapResponse(env);\n    this.pendingRequests.delete(txId);\n    if (hdl.handled) {\n      return;\n    }\n\n    clearTimeout(hdl.timeout);\n    hdl.resolve(res);\n  }\n\n  onErrorResponse(env) {\n    const txId = env.transactionId;\n    const err = this.unwrapErrorResponse(env);\n    return this.onErrorResponseImpl(txId, err);\n  }\n\n  onErrorResponseImpl(txId, err) {\n    const hdl = this.pendingRequests.get(txId);\n    if (!hdl) {\n      logger.error({ txId }, 'Received response for unknown transaction id');\n      return;\n    }\n\n    this.pendingRequests.delete(txId);\n    if (hdl.handled) {\n      return;\n    }\n\n    clearTimeout(hdl.timeout);\n    hdl.reject(err);\n  }\n\n  cancelAllPendingRequests(err) {\n    for (let txId of this.pendingRequests.keys()) {\n      this.onErrorResponseImpl(txId, err);\n    }\n  }\n\n  onRequestTimeout(txId) {\n    const hdl = this.pendingRequests.get(txId);\n    if (!hdl) {\n      logger.error({ txId }, 'Received response for unknown transaction id');\n      return;\n    }\n\n    hdl.handled = true;\n    hdl.reject(new Error('Request timed out'));\n  }\n\n  async onStreamResponse(env) {\n    const streamId = env.transactionId;\n    const hdl = this.openStreams.get(streamId);\n    if (!hdl) {\n      logger.info({ streamId }, 'Received update for unknown stream id');\n      return;\n    }\n    const res = this.unwrapResponse(env);\n    await hdl.observer.next(res);\n    this.ackStreamResponse(env);\n  }\n\n  onStreamErrorResponse(env) {\n    const streamId = env.transactionId;\n    const hdl = this.openStreams.get(streamId);\n    if (!hdl) {\n      logger.error({ streamId }, 'Received error for unknown stream id');\n      return;\n    }\n    const err = this.unwrapErrorResponse(env);\n    this.openStreams.delete(streamId);\n    hdl.observer.error(err);\n  }\n\n  onStreamFinish(env) {\n    const streamId = env.transactionId;\n    const hdl = this.openStreams.get(streamId);\n    if (!hdl) {\n      logger.error({ streamId }, 'Received finish for unknown stream id');\n      return;\n    }\n\n    this.openStreams.delete(streamId);\n    hdl.observer.complete();\n  }\n\n  onStreamCancel() {\n    // ignore cancel envelopes. they should\n    // be sent from client to server only.\n  }\n\n  request(req) {\n    return new Promise((resolve, reject) => {\n      if (!this.socket) {\n        return reject(new Error('No socket available'));\n      }\n      Protobuf.nextTxId += 1;\n      const txId = Protobuf.nextTxId;\n      const env = this.wrapMessage(req, txId, Protobuf.SvPenv.MessageType.request);\n      const buf = this.serializeEnvelope(env);\n      const timeout = setTimeout(this.onRequestTimeout.bind(this, txId), 60 * 1000);\n      this.pendingRequests.set(txId, { resolve, reject, timeout });\n      this.socket.send(buf);\n    });\n  }\n\n  stream(req) {\n    return Observable.create((observer) => {\n      if (!this.socket) {\n        return observer.error(new Error('No socket available'));\n      }\n      Protobuf.nextStreamId += 1;\n      const streamId = Protobuf.nextStreamId;\n      const env = this.wrapMessage(req, streamId, Protobuf.SvPenv.MessageType.streamRequest);\n      const buf = this.serializeEnvelope(env);\n      this.openStreams.set(streamId, { observer });\n      this.socket.send(buf);\n\n      return () => {\n        this.openStreams.delete(streamId);\n        this.cancelStream(streamId);\n      };\n    });\n  }\n\n  cancelStream(transactionId) {\n    if (!this.socket) {\n      return;\n    }\n    const type = Protobuf.SvPenv.MessageType.streamCancel;\n    const params = { transactionId, type };\n    const env = Protobuf.SvPenv.Envelope.fromObject(params);\n    const buf = this.serializeEnvelope(env);\n    this.socket.send(buf);\n  }\n\n  ackStreamResponse(env) {\n    const ackEnv = Protobuf.SvPenv.Envelope.fromObject({\n      transactionId: env.transactionId,\n      sequenceNumber: env.sequenceNumber,\n      type: Protobuf.SvPenv.MessageType.streamAck,\n    });\n    const buf = this.serializeEnvelope(ackEnv);\n    this.socket.send(buf);\n  }\n\n  wrapMessage(req, transactionId, type = Protobuf.SvPenv.MessageType.request) {\n    const message = this.wrapOneOf(req);\n    const envelope = Protobuf.SvPenv.Envelope.fromObject({\n      payloadType: this.getPayloadTypeForOneOfMessage(message),\n      payload: this.packToAny(message),\n      transactionId,\n      type,\n    });\n    return envelope;\n  }\n\n  // NOTE: ignoring payload_type as we want to unpack anyways\n  //       so no need to dispatch the message before unpacking\n  unwrapResponse(env) {\n    const message = this.unpackFromAny(env.payload);\n    const res = this.unwrapOneOf(message);\n    return res;\n  }\n\n  unwrapErrorResponse(env) {\n    const error = new Error(env.error.message);\n    error.code = env.error.errorCode;\n\n    if (env.error.payload) {\n      const payload = this.unpackFromAny(env.error.payload);\n      error.payload = payload;\n    }\n    return error;\n  }\n\n  wrapOneOf(req) {\n    const fieldName = this.getFieldNameForSVRCMessage(req);\n    return Protobuf.SvPb.SVRCMessages.create({ [fieldName]: req });\n  }\n\n  unwrapOneOf(message) {\n    return message[message.message];\n  }\n\n  // by convention, the field name of the SVRCMessages oneof is\n  // equal to the type name, except that first letter is lower-case.\n  getFieldNameForSVRCMessage(message) {\n    const name = message.$type.name;\n    return name.substr(0, 1).toLowerCase() + name.substr(1);\n  }\n\n  getPayloadTypeForOneOfMessage(message) {\n    const fieldName = message.message;\n    const type = message.$type.fields[fieldName];\n    return type.id;\n  }\n\n  packToAny(message) {\n    const type = message.$type;\n    const typeName = type.fullName.slice(1); // remove leading dot\n    // the c++ protobuf library uses this as the default prefix\n    const typeUrlPrefix = 'type.googleapis.com';\n    const encoded = type.encode(message).finish();\n    return {\n      type_url: `${typeUrlPrefix}/${typeName}`,\n      value: encoded,\n    };\n  }\n\n  unpackFromAny(any) {\n    let typeName = any.type_url;\n    const slashIdx = typeName.indexOf('/');\n    if (slashIdx !== -1) {\n      typeName = typeName.slice(slashIdx + 1);\n    }\n    const type = Protobuf.SvPb.lookup(typeName);\n    if (!type) {\n      logger.error({ type: any.type_url }, 'Received message with unknown payload type');\n      return;\n    }\n    return type.decode(any.value);\n  }\n\n  serializeEnvelope(envelope) {\n    const buf = Protobuf.SvPenv.Envelope.encode(envelope).finish();\n    const raw = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n    return raw;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/back.c6197e51.svg\";","import protobufjs from 'protobufjs';\n\nexport const utf8StringToBuffer = (str) => {\n  const len = protobufjs.util.utf8.length(str);\n  const buf = new Uint8Array(len);\n  protobufjs.util.utf8.write(str, buf, 0);\n  return buf;\n};\n\nexport const bufferToUtf8String = (buffer) => {\n  return protobufjs.util.utf8.read(buffer, 0, buffer.length);\n};\n","import semver from 'semver';\n\nimport Protobuf from '../protobuf/Protobuf';\nimport { bufferToUtf8String, utf8StringToBuffer } from '../protobuf/Utils';\nimport logger from '../utils/logger';\n\nimport ViewSetFactory, {\n  DEFAULT_VIEWSET_NAME,\n  TOOLSET_VIEW,\n  IMAGE_VIEW,\n  LIST_VIEW,\n  IMAGE_STRIP_VIEW,\n} from '../views/ViewSetFactory';\n\nconst viewSetFactory = new ViewSetFactory();\n\n/*\n * Version Changelog:\n * 1:   createdViewSets and currentViewSet property as initial state\n * 2:   added inspectionOverlays property\n * 3:   added inspectionListSelection property\n * 3.1: added inspectionEditingViewIds property\n * 4.0.0: breaking change bw 8.10-8.20. Uses GUIDs instead dotted names\n * 5.0.0: breaking change between 8.20 and 10.00. Uses int ids instead of GUIDs\n */\n\nconst WEBAPP_CHUNK_FILENAME = 'WebApp.json';\nconst WEBAPP_IDMAPPING_FILENAME = 'WebAppIds.json';\nconst WEBAPP_CHUNK_VERSION = '5.0.0';\nconst WEBAPP_CHUNK_PARAMETERS = {\n  VERSION: 'version',\n  SV_OBSERVER_VERSION: 'svObserverVersion',\n  GATEWAY_VERSION: 'gatewayVersion',\n  WEBAPP_VERSION: 'webAppVersion',\n  CREATED_VIEW_SETS: 'createdViewSets',\n  CURRENT_VIEW_SETS: 'currentViewSet',\n  INSPECTION_OVERLAYS: 'inspectionOverlays',\n  INSPECTION_LIST_SELECTION: 'inspectionListSelection',\n  INSPECTION_EDITING_VIEW_IDS: 'inspectionEditingViewIds',\n  INSPECTION_LIST_ALIASES: 'inspectionListAliases',\n  INSPECTION_IMAGE_VIEW_SETTINGS: 'inspectionImageViewSettings',\n};\n\nexport const saveChunk = (protobuf, currentState, actions) => async (dispatch) => {\n  const { setSaveOperationInProcess, setSaveFlag } = actions;\n  // extract the saveable information from store\n  const inspectionOverlays = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    const overlays = Object.keys(inspection.sharedState.views).map((viewId) => ({\n      viewId,\n      overlays:\n        inspection.sharedState.views[viewId] && inspection.sharedState.views[viewId].overlays,\n      sourceImage:\n        inspection.sharedState.views[viewId] && inspection.sharedState.views[viewId].sourceImage,\n    }));\n    return { inspectionId, overlays };\n  });\n\n  const inspectionListSelection = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    const listSelection = Object.keys(inspection.views).map((viewId) => ({\n      viewId,\n      selection: inspection.views[viewId] && inspection.views[viewId].selection,\n      isSelectionMode: inspection.views[viewId] && inspection.views[viewId].isSelectionMode,\n      selectAll: inspection.views[viewId] && inspection.views[viewId].selectAll,\n    }));\n    return { inspectionId, listSelection };\n  });\n\n  const inspectionEditingViewIds = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    const editingViewId = inspection.sharedState.editingViewId;\n    return { inspectionId, editingViewId };\n  });\n\n  const inspectionListAliases = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    if (inspection.sharedState.listViewAliases) {\n      const aliases = convertAliasesToJson(inspection.sharedState.listViewAliases);\n      return { inspectionId, aliases, showInList: inspection.sharedState.showAliasesInList };\n    }\n\n    return {};\n  });\n\n  const inspectionImageViewSettings = Object.keys(currentState.inspections).map(\n    (inspectionIdStr) => {\n      const inspectionId = parseInt(inspectionIdStr, 10);\n      const inspection = currentState.inspections[inspectionIdStr];\n      const imageViewSettings = Object.keys(inspection.views).map((viewId) => ({\n        viewId,\n        zoomFactor: inspection.views[viewId] && inspection.views[viewId].zoomFactor,\n        imagePosition: inspection.views[viewId] && inspection.views[viewId].imagePosition,\n      }));\n\n      return { inspectionId, imageViewSettings };\n    },\n  );\n\n  const chunk = {\n    [WEBAPP_CHUNK_PARAMETERS.VERSION]: WEBAPP_CHUNK_VERSION,\n    [WEBAPP_CHUNK_PARAMETERS.SV_OBSERVER_VERSION]:\n      currentState.app.configuration.getSvObserverVersion(),\n    [WEBAPP_CHUNK_PARAMETERS.GATEWAY_VERSION]: currentState.app.configuration.getGatewayVersion(),\n    [WEBAPP_CHUNK_PARAMETERS.WEBAPP_VERSION]: currentState.app.configuration.getWebAppVersion(),\n    [WEBAPP_CHUNK_PARAMETERS.CREATED_VIEW_SETS]: currentState.viewSet.createdViewSets,\n    [WEBAPP_CHUNK_PARAMETERS.CURRENT_VIEW_SETS]: currentState.viewSet.currentViewSet,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_OVERLAYS]: inspectionOverlays,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_SELECTION]: inspectionListSelection,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_EDITING_VIEW_IDS]: inspectionEditingViewIds,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_ALIASES]: inspectionListAliases,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_IMAGE_VIEW_SETTINGS]: inspectionImageViewSettings,\n  };\n  const json = JSON.stringify(chunk);\n\n  await dispatch(setSaveOperationInProcess(true));\n  try {\n    const req = Protobuf.SvPb.PutFileRequest.create({\n      destinationPath: WEBAPP_CHUNK_FILENAME,\n      fileData: utf8StringToBuffer(json),\n      saveInConfig: true,\n    });\n    await protobuf.request(req);\n  } catch (err) {\n    // TODO: report save error to user\n    logger.error({ err }, 'Error while saving client chunk');\n    return;\n  }\n  await dispatch(setSaveOperationInProcess(false));\n  dispatch(setSaveFlag(false));\n};\n\nconst convertAliasesToJson = (map) => {\n  const result = [];\n  map.forEach((entry) => {\n    result.push(entry);\n  });\n  return result;\n};\n\nexport const loadChunk = (proxy, actions) => async (dispatch) => {\n  const {\n    setSharedStateData,\n    setClientChunk,\n    setViewData,\n    setEditingFocus,\n    addIncompatibilityDetectedNotification,\n    setListViewAliases,\n    saveImageSettings,\n  } = actions;\n\n  const req = Protobuf.SvPb.GetFileRequest.create({\n    sourcePath: WEBAPP_CHUNK_FILENAME,\n  });\n  let response = null;\n  try {\n    response = await proxy.protobuf.request(req);\n  } catch (err) {\n    logger.error({ err }, 'Error while loading client chunk');\n  }\n\n  if (response.hResult) {\n    logger.info('There is no web app configuration to restore');\n    return;\n  }\n\n  const chunk = bufferToUtf8String(response.fileData);\n  let config = JSON.parse(chunk.toString());\n\n  // will check whether config contains deprecated string GUIDs and try to convert them if required\n  config = await updateConfigWithGuidToIntMapping(proxy.protobuf, config);\n  loadDataForCurrentViewSet(proxy, config);\n\n  const { version: configVersion } = semver.coerce(config.version);\n  if (semver.satisfies(configVersion, '<5.0.0')) {\n    throw new Error('Unable to load deprecated config file');\n  }\n\n  const receivedConfigParameters = Object.keys(config);\n  const expectedConfigParameters = Object.keys(WEBAPP_CHUNK_PARAMETERS).map(\n    (key) => WEBAPP_CHUNK_PARAMETERS[key],\n  );\n\n  for (let i = 0; i < expectedConfigParameters.length; i++) {\n    const currentParameterName = expectedConfigParameters[i];\n    if (!receivedConfigParameters.includes(currentParameterName)) {\n      logger.warn(`\"${currentParameterName}\" can not be found in loaded config`);\n    }\n  }\n\n  if (!semver.valid(configVersion)) {\n    logger.error('Config version is invalid!');\n    throw new Error('Selected config version is invalid');\n  }\n\n  if (semver.diff(WEBAPP_CHUNK_VERSION, configVersion) === 'major') {\n    logger.error('Selected config is not compatible with the current Web App version');\n    throw new Error('Selected config is not compatible with the current Web App version');\n  }\n\n  // Notify user when a minor change detected and a newer config is loaded on an older webapp\n  if (\n    semver.diff(WEBAPP_CHUNK_VERSION, configVersion) === 'minor' &&\n    semver.gt(configVersion, WEBAPP_CHUNK_VERSION)\n  ) {\n    dispatch(addIncompatibilityDetectedNotification());\n  }\n\n  if (semver.satisfies(configVersion, '>=3.0.0')) {\n    // restore custom overlays\n    config.inspectionOverlays.forEach((inspection) =>\n      inspection.overlays.forEach((view) => {\n        dispatch(\n          setSharedStateData(inspection.inspectionId, 'overlays', view.overlays, view.viewId),\n        );\n        dispatch(\n          setSharedStateData(inspection.inspectionId, 'sourceImage', view.sourceImage, view.viewId),\n        );\n      }),\n    );\n\n    // restore list view data\n    config.inspectionListSelection.forEach((inspection) =>\n      inspection.listSelection.forEach((view) => {\n        dispatch(setViewData(inspection.inspectionId, view.viewId, 'selection', view.selection));\n        dispatch(\n          setViewData(\n            inspection.inspectionId,\n            view.viewId,\n            'isSelectionMode',\n            view.isSelectionMode,\n          ),\n        );\n        dispatch(setViewData(inspection.inspectionId, view.viewId, 'selectAll', view.selectAll));\n      }),\n    );\n  }\n\n  if (semver.satisfies(configVersion, '>=3.1.0')) {\n    // restore editing focus\n    config.inspectionEditingViewIds.forEach((inspection) => {\n      if (inspection.inspectionId && inspection.editingViewId) {\n        dispatch(setEditingFocus(inspection.inspectionId, inspection.editingViewId));\n      }\n    });\n  }\n\n  if (semver.satisfies(configVersion, '>=5.0.0')) {\n    (config.inspectionListAliases || []).forEach((inspection) => {\n      if (inspection.inspectionId && Array.isArray(inspection.aliases)) {\n        const aliases = new Map();\n        inspection.aliases.forEach((alias) => aliases.set(alias.objectId, alias));\n        dispatch(setListViewAliases(inspection.inspectionId, aliases, inspection.showInList));\n      }\n    });\n    (config.inspectionImageViewSettings || []).forEach((inspection) => {\n      (inspection.imageViewSettings || []).forEach((setting) => {\n        dispatch(\n          saveImageSettings(\n            inspection.inspectionId,\n            setting.viewId,\n            setting.zoomFactor,\n            setting.imagePosition,\n          ),\n        );\n      });\n    });\n  }\n\n  //now the views are created with all configurations set before\n  dispatch(setClientChunk(config));\n};\n\nexport const resetChunk = (protobuf, actions) => async (dispatch) => {\n  const { setClientChunk } = actions;\n  const name = DEFAULT_VIEWSET_NAME;\n  const emptyViewset = viewSetFactory.buildEmptyViewSet(name);\n  const emptyViewSets = {\n    [name]: emptyViewset,\n  };\n\n  const emptyChunk = {\n    [WEBAPP_CHUNK_PARAMETERS.VERSION]: WEBAPP_CHUNK_VERSION,\n    [WEBAPP_CHUNK_PARAMETERS.SV_OBSERVER_VERSION]: 'UNDEFINED',\n    [WEBAPP_CHUNK_PARAMETERS.GATEWAY_VERSION]: 'UNDEFINED',\n    [WEBAPP_CHUNK_PARAMETERS.WEBAPP_VERSION]: 'UNDEFINED',\n    [WEBAPP_CHUNK_PARAMETERS.CREATED_VIEW_SETS]: emptyViewSets,\n    [WEBAPP_CHUNK_PARAMETERS.CURRENT_VIEW_SETS]: emptyViewset,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_OVERLAYS]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_SELECTION]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_EDITING_VIEW_IDS]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_ALIASES]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_IMAGE_VIEW_SETTINGS]: [],\n  };\n\n  dispatch(setClientChunk(emptyChunk));\n};\n\nconst updateConfigWithGuidToIntMapping = async (protobuf, config) => {\n  const { version } = semver.coerce(config.version);\n\n  // config is not using GUIDs any more already\n  if (semver.satisfies(version, '>=5.0.0') || semver.satisfies(version, '<4.0.0')) {\n    return config;\n  }\n\n  const sourcePath = WEBAPP_IDMAPPING_FILENAME;\n  const req = Protobuf.SvPb.GetFileRequest.create({ sourcePath });\n\n  let res;\n  try {\n    res = await protobuf.request(req);\n  } catch (err) {\n    logger.error({ err }, 'Error while loading id mapping');\n    throw new Error('Unable to load id mapping file');\n  }\n\n  if (res.hResult) {\n    logger.info(`The file \"${WEBAPP_IDMAPPING_FILENAME}\" does not exist.`);\n    throw new Error('Unable to load id mapping file');\n  }\n\n  let idMapping;\n  try {\n    const idMappingChunk = bufferToUtf8String(res.fileData);\n    idMapping = JSON.parse(idMappingChunk.toString());\n  } catch (err) {\n    logger.error({ err }, `Error while parsing content of ${WEBAPP_IDMAPPING_FILENAME}`);\n    return config;\n  }\n\n  const mapping = parseGuidToObjectIdMapping(idMapping.guidToObjectIdMapping);\n  const error = { hasError: false };\n  recursivlyUpdateConfigWithGuidToIntMapping(config, mapping, error);\n\n  // this is the first version with int ids\n  config.version = '5.0.0';\n  config.patchedIds = true;\n  if (error.hasError) {\n    throw new Error(\n      'Selected config is not compatible with the current Web App version (could not migrate all string GUIDs to int ObjectIds)',\n    );\n  } else {\n    logger.debug('Successfully migrated string GUIDs to int ObjectIds');\n  }\n\n  return config;\n};\n\nconst parseGuidToObjectIdMapping = (mapping) => {\n  const result = new Map();\n  Object.entries(mapping || {}).forEach(([key, value]) => {\n    const guid = key.toLowerCase().replace('{', '').replace('}', '');\n    result.set(guid, value);\n  });\n  return result;\n};\n\nconst lookUpKeyInMapping = (key, mapping) => {\n  if (mapping.has(key)) {\n    return mapping.get(key);\n  }\n  const lowerCaseKey = key.toLowerCase();\n  if (mapping.has(lowerCaseKey)) {\n    return mapping.get(lowerCaseKey);\n  }\n  return undefined;\n};\n\nconst recursivlyUpdateConfigWithGuidToIntMapping = (obj, mapping, error) => {\n  for (const key in obj) {\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      if (key === 'selection') {\n        obj[key] = obj[key]\n          .map((entry) => {\n            const value = lookUpKeyInMapping(entry, mapping);\n            if (value) {\n              return value;\n            } else {\n              error.hasError = true;\n              logger.error(\n                `There is a guid in the config which is not included in the mapping: ${entry}`,\n              );\n              return undefined;\n            }\n          })\n          .filter((entry) => !!entry); // remove undefined entries from selection\n      }\n      recursivlyUpdateConfigWithGuidToIntMapping(obj[key], mapping, error);\n    } else {\n      if (\n        key === 'inspectionId' ||\n        key === 'sourceImage' ||\n        key === 'xVariable' ||\n        key === 'offsetLeftVariable' ||\n        key === 'yVariable' ||\n        key === 'offsetTopVariable' ||\n        key === 'widthVariable' ||\n        key === 'heightVariable' ||\n        key === 'colorVariable'\n      ) {\n        const value = lookUpKeyInMapping(obj[key], mapping);\n        if (value) {\n          obj[key] = value;\n        } else {\n          obj[key] = undefined;\n          error.hasError = true;\n          logger.error(\n            `There is a guid in the config which is not included in the mapping: ${obj[key]}`,\n          );\n        }\n      }\n    }\n  }\n};\n\nconst loadDataForCurrentViewSet = async (proxy, config) => {\n  let isToolsetViewSet = false;\n  let isImageViewSet = false;\n  let isListViewSet = false;\n  let isImageStripViewSet = false;\n\n  for (const view of Object.values(config.currentViewSet.viewSet)) {\n    switch (view.viewComponentClassId) {\n      case TOOLSET_VIEW:\n        if (!isToolsetViewSet && proxy.currentConfiguration.inspectionToolsetMappings.size === 0) {\n          proxy.currentConfiguration.setInspectionIdToToolsetMappings(proxy.protobuf).then(() => {\n            proxy.dispatchCurrentConfiguration(proxy.currentConfiguration);\n          });\n          isToolsetViewSet = true;\n        }\n        break;\n      case IMAGE_VIEW:\n        if (!isImageViewSet) {\n          if (proxy.currentConfiguration.objectSelectorImages.size === 0) {\n            proxy.currentConfiguration.setObjectSelectorImages(proxy.protobuf).then(() => {\n              proxy.dispatchCurrentConfiguration(proxy.currentConfiguration);\n            });\n          }\n          if (proxy.currentConfiguration.idNameMappings.size === 0) {\n            proxy.currentConfiguration.setIdNameMappings(proxy.protobuf).then(() => {\n              proxy.dispatchCurrentConfiguration(proxy.currentConfiguration);\n            });\n          }\n          isImageViewSet = true;\n        }\n        break;\n      case LIST_VIEW:\n        if (!isListViewSet) {\n          if (proxy.currentConfiguration.objectSelectorItems.size === 0) {\n            proxy.currentConfiguration.setObjectSelectorItems(proxy.protobuf).then(() => {\n              proxy.dispatchCurrentConfiguration(proxy.currentConfiguration);\n            });\n          }\n          if (proxy.currentConfiguration.idNameMappings.size === 0) {\n            proxy.currentConfiguration.setIdNameMappings(proxy.protobuf).then(() => {\n              proxy.dispatchCurrentConfiguration(proxy.currentConfiguration);\n            });\n          }\n          isListViewSet = true;\n        }\n        break;\n      case IMAGE_STRIP_VIEW:\n        if (!isImageStripViewSet) {\n          if (proxy.currentConfiguration.objectSelectorImages.size === 0) {\n            proxy.currentConfiguration.setObjectSelectorImages(proxy.protobuf).then(() => {\n              proxy.dispatchCurrentConfiguration(proxy.currentConfiguration);\n            });\n          }\n          if (proxy.currentConfiguration.idNameMappings.size === 0) {\n            proxy.currentConfiguration.setIdNameMappings(proxy.protobuf).then(() => {\n              proxy.dispatchCurrentConfiguration(proxy.currentConfiguration);\n            });\n          }\n          isImageStripViewSet = true;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  authenticate as authenticateHelper,\n  logOut as logOutHelper,\n} from '../../utils/authentication';\nimport { saveChunk, loadChunk, resetChunk } from '../../utils/clientChunkManager';\n\nexport const setLocale = (locale) => ({\n  type: 'SET_LOCALE',\n  locale,\n});\n\nexport const setProtobufStaticInitialized = () => ({\n  type: 'SET_PROTOBUF_STATIC_INITIALIZED',\n});\n\nexport const setProtobuf = (newProtobuf, socket) => ({\n  type: 'SET_PROTOBUF',\n  protobuf: newProtobuf,\n  socket,\n});\n\nexport const setCurrentConfiguration = (configuration) => ({\n  type: 'SET_CONFIGURATION',\n  configuration,\n});\n\nexport const setConfigurationLock = (configurationLock) => ({\n  type: 'SET_CONFIGURATION_LOCK',\n  configurationLock,\n});\n\nexport const addNotification = (type, message) => ({\n  type: 'ADD_NOTIFICATION',\n  notification: {\n    type,\n    message,\n  },\n});\n\nexport const addImageNotAvailableNotification = () => {\n  return addNotification('warning', <FormattedMessage id=\"imageNotAvailable\" />);\n};\n\nexport const addConnectionEstablishedNotification = () => {\n  return addNotification(\n    'info',\n    <FormattedMessage id=\"notifications.websocket.connectionEstablished\" />,\n  );\n};\n\nexport const addConnectionLostNotification = () => {\n  return addNotification(\n    'warning',\n    <FormattedMessage id=\"notifications.websocket.connectionLost\" />,\n  );\n};\n\nexport const addModeSwitchNotification = (mode) => {\n  return addNotification(\n    'info',\n    <span>\n      <FormattedMessage id=\"notifications.modeSwitch.userSwitchedModeTo\" /> {mode}\n    </span>,\n  );\n};\n\nexport const addUserSwitchedLanguageNotification = (locale) => {\n  return addNotification(\n    'info',\n    <span>\n      <FormattedMessage id=\"notifications.userSwitchedLanguage\" />\n      {locale}\n    </span>,\n  );\n};\n\nexport const addProjectLoadedNotification = (configFile) => {\n  return addNotification('info', `A new project was loaded: \"${configFile}\"`);\n};\n\nexport const addProjectUnloadedNotification = (configFile) => {\n  return addNotification('info', `The project was unloaded: \"${configFile}\"`);\n};\n\nexport const addProjectModifiedNotification = () => {\n  return addNotification('info', `Project was modified. Reloading.`);\n};\n\nexport const addServerMessageNotification = (messageText, errorNumber) => {\n  return addNotification('info', `Server reported: ${messageText} ${errorNumber}`);\n};\n\nexport const addRejectStreamPausedNotification = (pausedInspectionIds) => {\n  return addNotification(\n    'info',\n    Array.isArray(pausedInspectionIds) && pausedInspectionIds.length > 0 ? (\n      <FormattedMessage id=\"notifications.rejectStreamPaused\" />\n    ) : (\n      <FormattedMessage id=\"notifications.rejectStreamResumed\" />\n    ),\n  );\n};\n\nexport const addRunModePauseNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"runViewSet.runModePaused\" />);\n};\n\nexport const addRunModeContinueNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"runViewSet.runModeContinue\" />);\n};\n\nexport const addStartInspectingNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"runViewSet.runModeStoppedInspecting\" />);\n};\n\nexport const addVariableValueShouldBeInTheRangeNotification = (variableName, range) => {\n  return addNotification(\n    'warning',\n    <FormattedMessage\n      id=\"notifications.variableValueShouldBeInTheRange\"\n      values={{ variableName, range }}\n    />,\n  );\n};\n\nexport const addConfigAlreadyLockedBySameUser = () => {\n  return addNotification(\n    'warning',\n    <FormattedMessage id=\"notifications.configAlreadyLockedBySameUser\" />,\n  );\n};\n\nexport const addTakeoverCandidateNotFoundNotification = () => {\n  return addNotification(\n    'warning',\n    <FormattedMessage id=\"notifications.takeoverCandidateNotFound\" />,\n  );\n};\n\nexport const addLockTakeoverErrorNotification = (code) => {\n  return addNotification(\n    'warning',\n    <FormattedMessage id=\"notifications.lockTakeoverError\" values={{ code }} />,\n  );\n};\n\nexport const addLockAcquisitionErrorNotification = (code) => {\n  return addNotification(\n    'warning',\n    <FormattedMessage id=\"notifications.lockAcquisitionError\" values={{ code }} />,\n  );\n};\n\nexport const tokenExpired = () => ({\n  type: 'AUTH_TOKEN_EXPIRED',\n});\n\nexport const authenticate = (accessToken) => async (dispatch) => {\n  const { authToken, user } = await authenticateHelper(accessToken);\n  return dispatch({\n    type: 'LOG_IN',\n    authToken,\n    user,\n  });\n};\n\nexport const logOut =\n  (notifyGateway = true) =>\n  async (dispatch) => {\n    await logOutHelper(notifyGateway);\n    return dispatch({\n      type: 'LOG_OUT',\n    });\n  };\n\nexport const onNavigationHidden = () => ({\n  type: 'ON_NAVIGATION_HIDDEN',\n});\n\nexport const showGlobalMessageOverlay = ({ message }) => ({\n  type: 'SHOW_GLOBAL_MESSAGE_OVERLAY',\n  message,\n});\n\nexport const hideGlobalMessageOverlay = () => ({\n  type: 'HIDE_GLOBAL_MESSAGE_OVERLAY',\n});\n\nexport const setViewSet = (viewSet, viewSetId) => ({\n  type: 'SET_VIEWSET',\n  viewSet,\n  viewSetId,\n});\n\nexport const replaceViewInCurrentViewSet = (viewId, replacementComponentId, inspectionId) => ({\n  type: 'REPLACE_VIEW_IN_CURRENT_VIEWSET',\n  viewId,\n  replacementComponentId,\n  inspectionId,\n});\n\nexport const switchViewSet = (viewSet) => ({\n  type: 'SWITCH_VIEWSET',\n  viewSet,\n});\n\nexport const setParameter = (parameter) => ({\n  type: 'SET_PARAMETER',\n  parameter,\n});\n\nexport const enterFullscreenMode = (component) => ({\n  type: 'ENTER_FULLSCREEN_MODE',\n  componentDescriptor: {\n    componentId: component.props.id,\n    setFullscreen: component.setFullscreen,\n  },\n});\n\nexport const leaveFullscreenMode = (component) => ({\n  type: 'LEAVE_FULLSCREEN_MODE',\n  componentDescriptor: {\n    componentId: component.props.id,\n    setFullscreen: component.setFullscreen,\n  },\n});\n\nexport const toggleFullscreenMode = (component) => ({\n  type: 'TOGGLE_FULLSCREEN_MODE',\n  componentDescriptor: {\n    id: component.props.id,\n    setFullscreen: component.setFullscreen,\n  },\n});\n\nexport const increaseViewSizeChangeCounter = () => ({\n  type: 'INCREASE_VIEW_SIZE_CHANGE_COUNTER',\n});\n\nexport const setBottomNavHidden = (hidden) => ({\n  type: 'SET_BOTTOM_NAV_HIDDEN',\n  hidden: !!hidden,\n});\n\nexport const setTopNavHidden = (hidden) => ({\n  type: 'SET_TOP_NAV_HIDDEN',\n  hidden: !!hidden,\n});\n\nexport const setDefaultViewSetName = (name) => ({\n  type: 'SET_DEFAULT_VIEWSET_NAME',\n  name,\n});\n\nexport const newViewSet = (name, mode) => ({\n  type: 'NEW_VIEW_SET',\n  name,\n  mode,\n});\n\nexport const setSaveOperationInProcess = (inProcess) => ({\n  type: 'UPDATE_SAVE_OPERATION_IN_PROCESS',\n  inProcess,\n});\n\nexport const setSaveFlag = (hasChanges) => ({\n  type: 'SET_SAVE_FLAG',\n  hasChanges,\n});\n\nexport const saveClientChunk = (protobuf, currentState) => async (dispatch) => {\n  const actions = {\n    setSaveOperationInProcess,\n    setSaveFlag,\n  };\n  await dispatch(saveChunk(protobuf, currentState, actions));\n};\n\nexport const loadClientChunk = (proxy) => async (dispatch) => {\n  const actions = {\n    setSharedStateData,\n    setClientChunk,\n    setViewData,\n    setEditingFocus,\n    addIncompatibilityDetectedNotification,\n    setListViewAliases,\n    saveImageSettings,\n    setSVOConfigLoaded,\n  };\n  await dispatch(loadChunk(proxy, actions));\n};\n\nexport const resetClientChunk = (protobuf) => async (dispatch) => {\n  const actions = {\n    setClientChunk,\n    setSVOConfigLoaded,\n  };\n  await dispatch(resetChunk(protobuf, actions));\n};\n\nexport const setClientChunk = (chunk) => ({\n  type: 'LOAD_CLIENT_CHUNK',\n  chunk,\n});\n\nexport const setSVOConfigLoaded = (isLoaded) => ({\n  type: 'SET_SVO_CONFIG_LOADED',\n  isLoaded,\n});\n\nexport const setViewSetForMode = (mode) => ({\n  type: 'SET_VIEWSET_FOR_MODE',\n  mode,\n});\n\nexport const removeViewSet = (name) => ({\n  type: 'REMOVE_VIEWSET',\n  name,\n});\n\nexport const clearCurrentView = () => ({\n  type: 'CLEAR_CURRENT_VIEW',\n});\n\nexport const renameViewSet = (oldName, newName) => ({\n  type: 'RENAME_VIEWSET',\n  oldName,\n  newName,\n});\n\nexport const changeViewSetAfterLoading = (name) => ({\n  type: 'CHANGE_VIEWSET_AFTER_LOADING',\n  name,\n});\n\nexport const setCurrentLayout = (layout) => ({\n  type: 'SET_CURRENT_LAYOUT',\n  layout,\n});\n\nexport const setCurrentMode = (mode) => ({\n  type: 'SET_CURRENT_MODE',\n  mode,\n});\n\nexport const setCurrentModeDone = (mode) => ({\n  type: 'SET_CURRENT_MODE_DONE',\n  mode,\n});\n\nexport const setPausedInspections = (pausedInspections) => ({\n  type: 'SET_PAUSED_INSPECTIONS',\n  pausedInspections,\n});\n\nexport const initViewState = (inspectionId, viewId, initState, initSharedState) => ({\n  type: 'INIT_VIEW_STATE',\n  inspectionId,\n  viewId,\n  initState,\n  initSharedState,\n});\n\nexport const setViewData = (inspectionId, viewId, key, data) => ({\n  type: 'SET_VIEW_DATA',\n  inspectionId,\n  viewId,\n  key,\n  data,\n});\n\nexport const saveImageSettings = (inspectionId, viewId, zoomFactor, imagePosition) => ({\n  type: 'SAVE_IMAGE_SETTINGS',\n  inspectionId,\n  viewId,\n  zoomFactor,\n  imagePosition,\n});\n\nexport const setSharedStateData = (inspectionId, key, data, viewId) => ({\n  type: 'SET_SHARED_STATE_DATA',\n  inspectionId,\n  key,\n  data,\n  viewId,\n});\n\nexport const setEditingFocus = (inspectionId, viewId) => ({\n  type: 'SET_EDITING_FOCUS',\n  inspectionId,\n  viewId,\n});\n\nexport const setListViewAliases = (inspectionId, aliases, showInList) => ({\n  type: 'SET_LIST_VIEW_ALIASES',\n  inspectionId,\n  aliases,\n  showInList,\n});\n\nexport const updateListViewShowAliases = (inspectionId, showInList) => ({\n  type: 'UPDATE_LIST_VIEW_SHOW_ALIASES',\n  inspectionId,\n  showInList,\n});\n\nexport const setFocusedViewType = (viewType) => ({\n  type: 'SET_FOCUSED_VIEW_TYPE',\n  viewType,\n});\n\nexport const purgeViewState = (inspectionId, viewId) => ({\n  type: 'PURGE_VIEW_STATE',\n  inspectionId,\n  viewId,\n});\n\nexport const openHelpView = () => ({\n  type: 'OPEN_HELP_VIEW',\n  isHelpViewOpen: true,\n});\n\nexport const closeHelpView = () => ({\n  type: 'CLOSE_HELP_VIEW',\n  isHelpViewOpen: false,\n});\n\nexport const addIncompatibilityDetectedNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"incompatibilityNotification\" />);\n};\n\nexport const setGroupPermissions = (groupPermissions) => ({\n  type: 'SET_GROUP_PERMISSIONS',\n  groupPermissions,\n});\n\nexport const setMyPermissions = (myPermissions) => ({\n  type: 'SET_MY_PERMISSIONS',\n  myPermissions,\n});\n\nexport const setBrowserWindowVisibility = (visible) => ({\n  type: 'SET_BROWSER_WINDOW_VISIBILITY',\n  visible,\n});\n","const de = {\n  // TopNavigation\n  \"topNavigation.language.german\": \"Deutsch\",\n  \"topNavigation.language.english\": \"Englisch\",\n  \"topNavigation.lock\": \"Lock\",\n  \"topNavigation.takeover\": \"Takeover\",\n  \"topNavigation.release\": \"Release\",\n  \"topNavigation.logout\": \"Abmelden\",\n  \"topNavigation.help\": \"Hilfe\",\n  \"topNavigation.about\": \"Info\",\n  \"topNavigation.shortcut\": \"Shortcut\",\n  \"topNavigation.download\": \"SVO Konfiguration herunterladen\",\n  \"topNavigation.upload\": \"SVO Konfiguration hochladen\",\n  \"topNavigation.inspectionState\": \"Inspektionsstatus ({runningInspections} von {numberOfInspections} aktiv)\",\n  \"topNavigation.permissions\": \"Rechte\",\n\n  // there is a auto mapping in utils/modes.js\n  \"editMode\": \"Edit Mode\",\n  \"unknownMode\": \"Unbekannter Mode\",\n  \"runMode\": \"Run Mode\",\n  \"stopMode\": \"Stop Mode\",\n  \"regressionMode\": \"Regression Mode\",\n  \"testMode\": \"Test Mode\",\n\n  // LockStateHandler (translate to german)\n  \"lockStateHandler.alertDialog.lockAlreadyLocked\": \"Configuration lock is already owned by: {user}\",\n  \"lockStateHandler.alertDialog.lockDescription\": \"Lock description: {description}\",\n  \"lockStateHandler.alertDialog.waitingForTakeoverResponse\": \"Waiting for response from: {user}\",\n  \"lockStateHandler.alertDialog.waitingForResponseInfo\": \"Current configuration lock owner has been notified of your request and has 30 seconds to respond from now on. If there is no response until then, you will automatically takeover the lock.\",\n  \"lockStateHandler.alertDialog.ownerRejectedTakeover\": \"{user} rejected the configuration lock takeover\",\n  \"lockStateHandler.alertDialog.takeoverAttempt\": \"{user} wants to take over configuration lock\",\n  \"lockStateHandler.alertDialog.takeoverMessage\": \"Takeover message: {message}\",\n  \"lockStateHandler.formDialog.lockConfigRequestTitle\": \"Lock configuration request\",\n  \"lockStateHandler.formDialog.takeoverConfigRequestTitle\": \"Takeover configuration request\",\n  \"lockStateHandler.formDialog.lockConfigRequestContent\": \"To lock or takeover the configuration, please enter all details here. SVOGateway will send updates occasionally.\",\n  \"lockStateHandler.formDialog.lockScope\": \"Lock scope\",\n  \"lockStateHandler.formDialog.lockTimeout\": \"Lock timeout\",\n  \"lockStateHandler.formDialog.lockDescription\": \"Lock description\",\n  \"lockStateHandler.formDialog.takeoverRequest\": \"Takeover request\",\n  \"lockStateHandler.formDialog.takeoverMessage\": \"Takeover message\",\n\n  // ImageStrip\n  \"imageStripView.inspectionTemplate\": \"{inspectionName} Filmstreifen\",\n  \"imageStripView.play\": \"Play\",\n  \"imageStripView.pause\": \"Pause\",\n\n  // ListView\n  \"listView\": \"Liste\",\n  \"listView.inspectionTemplate\": \"{inspectionName} Liste\",\n  \"listView.AliasEditor.title\": \"Bearbeite Alias für den Pfadnamen\",\n  \"listView.Actionbar.hideAliases\": \"Zeige Namen\",\n  \"listView.Actionbar.showAliases\": \"Zeige Aliase\",\n  \"listView.AliasEditor.dottedName\": \"Pfadname\",\n  \"listView.AliasEditor.value\": \"Wert\",\n  \"listView.AliasEditor.button\": \"Speichern\",\n\n  // HelpView\n  \"helpView\": \"Hilfe\",\n\n  // AboutView\n  \"aboutView\": \"Über\",\n  \"aboutView.applicationName\": \"Applicationsname:\",\n  \"aboutView.applicationVersion\": \"Applikationsversion:\",\n  \"aboutView.svoVersion\": \"SVObserver-Version:\",\n  \"aboutView.gatewayVersion\": \"Gateway-Version:\",\n\n  // ViewTypeSelection\n  \"viewTypeSelection.imageStripView\": \"Filmstreifen\",\n  \"viewTypeSelection.imageView\": \"Bild\",\n  \"viewTypeSelection.parameterView\": \"Parameter\",\n  \"viewTypeSelection.ListView\": \"Liste\",\n  \"viewTypeSelection.toolset\": \"Toolset\",\n  \"viewTypeSelection.back\": \"Zurück\",\n  \"viewTypeSelection.cancel\": \"Abbrechen\",\n  \"viewTypeSelection.chooseViewTooltip\": \"View-Typ auswählen\",\n  \"viewTypeSelection.selectViewType\": \"Wählen Sie einen Typ für diese View:\",\n\n  // InspectionSelection\n  \"inspectionSelection.selectInspection\": \"Wählen Sie eine Inspektion für diese View:\",\n\n  // ParameterView / Overlay\n  \"parameterview.overlay.delete\": \"Löschen\",\n  \"parameterview.overlay.add\": \"Hinzufügen\",\n  \"parameterview.overlay.showAll\": \"Alle einblenden\",\n  \"parameterview.overlay.hideAll\": \"Alle ausblenden\",\n\n  // ImageView\n  \"imageView.inspectionTemplate\": \"{inspectionName} Bild\",\n  \"imageView.zoomIn\": \"Hineinzoomen\",\n  \"imageView.zoomOut\": \"Herauszoomen\",\n  \"imageView.fitToWidth\": \"An Breite anpassen\",\n  \"imageView.fitToHeight\": \"An Höhe anpassen\",\n  \"imageView.saveWithOverlays\": \"Bild mit Overlays herunterladen\",\n  \"imageView.overlayListToggle\": \"Overlay-Liste\",\n  \"imageView.imageInfoToggle\": \"Bildinfo\",\n  \"imageView.save\": \"Bild herunterladen\",\n  \"imageView.showOverlays\": \"Overlays anzeigen\",\n  \"imageView.hideOverlays\": \"Overlays ausblenden\",\n  \"imageView.info\": \"Info\",\n  \"imageView.width\": \"Breite:\",\n  \"imageView.height\": \"Höhe:\",\n  \"imageView.x\": \"X:\",\n  \"imageView.y\": \"Y:\",\n\n  // ParameterView\n  \"parameterView\": \"Parameter\",\n  \"parameterView.inspectionTemplate\": \"{inspectionName} Parameter\",\n\n  // ToolsetView\n  \"toolsetView.inspectionTemplate\": \"{inspectionName} Toolset\",\n  \"toolsetView.confirmDelete\": \"Wollen Sie das Tool {toolName} wirklich entfernen? Diese Aktion kann nicht rückgängig gemacht werden.\",\n  \"toolsetView.windowTool\": \"Window tool\",\n  \"toolsetView.mathTool\": \"Math tool\",\n  \"toolsetView.statisticsTool\": \"Statistics tool\",\n  \"toolsetView.ringBufferTool\": \"RingBuffer tool\",\n  \"toolsetView.archiveTool\": \"Archive tool\",\n  \"toolsetView.acquisitionTool\": \"Acquisition tool\",\n  \"toolsetView.transformationTool\": \"Transformation tool\",\n  \"toolsetView.shiftTool\": \"Shift tool\",\n  \"toolsetView.cylindricalWarpTool\": \"CylindricalWarp tool\",\n  \"toolsetView.perspectiveTool\": \"Perspective tool\",\n  \"toolsetView.imageTool\": \"Image tool\",\n  \"toolsetView.linearTool\": \"Linear tool\",\n  \"toolsetView.colorTool\": \"Color tool\",\n  \"toolsetView.resizeTool\": \"Resize tool\",\n  \"toolsetView.loadImageTool\": \"LoadImage tool\",\n  \"toolsetView.tableTool\": \"Table tool\",\n  \"toolsetView.tableAnalyzerTool\": \"TableAnalyzer tool\",\n  \"toolsetView.polarTransformationTool\": \"PolarTransformation tool\",\n  \"toolsetView.loopTool\": \"Loop tool\",\n  \"toolsetView.externalTool\": \"External tool\",\n  \"toolsetView.groupTool\": \"Group tool\",\n\n  // AboutView\n  \"aboutView.title\": \"Über \",\n\n  // ViewSet Manager\n  \"viewSetManager\": \"ViewSet Manager\",\n  \"viewSetManager.title\": \"View Set Manager\",\n  \"viewSetManager.remove\": \"Entfernen\",\n  \"viewSetManager.viewSetName\": \"Name\",\n  \"viewSetManager.save\": \"Alle View Sets speichern\",\n  \"viewSetManager.close\": \"Schließen\",\n  \"viewSetManager.editViewSetHeadline\": \"Viewsets editieren:\",\n  \"viewSetManager.newViewSet\": \"Neues Viewset erstellen\",\n  \"viewSetManager.editViewSetName\": \"Viewset-Namen editieren\",\n  \"viewSetManager.changeViewSetName\": \"Viewset-Namen ändern\",\n  \"viewSetManager.apply\": \"Änderungen übernehmen\",\n  \"viewSetManager.export\": \"Aktuelle Ansicht exportieren\",\n  \"viewSetManager.import\": \"Ansicht aus Datei importieren\",\n  \"viewSetManager.importConfirm.title\": \"Aktuelle Ansicht überschreiben\",\n  \"viewSetManager.importConfirm.message\": \"Das Importieren einer Ansicht aus einer Datei überschreibt die aktuelle Ansicht. Wollen Sie das wirklich?\",\n  \"viewSetManager.deleteConfirm.message\": \"Wollen Sie das Viewset {viewsetName} wirklich entfernen?\",\n  \"viewSetManager.deleteIconTooltip\": \"Viewset löschen\",\n\n  // ShortcutView\n  \"shortcutView.title\": \"Shortcuts\",\n  \"shortcutView.fullscreenTitle\": \"Vollbild\",\n  \"shortcutView.fullscreenDescription\": \"Drücken Sie in einer aktiven View STRG-F\",\n  \"shortcutView.helpTitle\": \"Hilfe\",\n  \"shortcutView.helpDescription\": \"Drücken Sie in einer aktiven View F1\",\n\n  // Notifications\n  \"notifications.modeSwitch.userSwitchedModeTo\": \"Benutzer hat Mode geändert zu:\",\n  \"notifications.websocket.connectionEstablished\": \"Websocket-Verbindung geöffnet auf Port:\",\n  \"notifications.websocket.connectionLost\": \"Websocket-Verbindung verloren\",\n  \"notifications.userSwitchedLanguage\": \"Benutzer hat Sprache geändert zu:\",\n  \"notifications.rejectStreamPaused\": \"Reject stream wurde angehalten\",\n  \"notifications.rejectStreamResumed\": \"Reject stream wurde fortgesetzt\",\n  \"notifications.checkSvimOutput\": \"Bitte Ausgabe am SVIM überprüfen\",\n  \"notifications.incompatibilityWarning\": \"Ausgewählte Konfiguration ist möglicherweise nicht mit der aktuellen WebApp version kompatibel\",\n  \"notifications.errorOccurred\": \"Ein Fehler ist aufgetreten\",\n  \"notifications.error.loadingFile\": \"Daten aus der Datei konnten nicht geladen werden.\",\n  \"notifications.successfulAction\": \"Erfolgreiche Aktion\",\n  \"notifications.successfullyLoadedFile\": \"Ansicht konnte erfolgreich aus der Datei geladen werden.\",\n  \"notifications.viewsetVersionIncompatibleTitle\": \"Datei-Version inkompatibel\",\n  \"notifications.viewsetVersionIncompatibleMessage\": \"Die Datei-Version ist inkompatibel. Die Ansicht kann nicht geladen werden.\",\n  \"notifications.minorVersionDiffTitle\": \"Unterversion weicht ab\",\n  \"notifications.minorVersionDiffMessage\": \"Aufgrund unterschiedlicher Unterversionen zwischen Applikation und Datei kann es zu inkorrekter Darstellung der Ansicht kommen.\",\n  \"notifications.variableValueShouldBeInTheRange\": \"Der Wert der eingegebenen Variable {variableName} muss im Bereich von {range} liegen.\",\n  \"notifications.configAlreadyLockedBySameUser\": \"You have already locked the configuration! (Translate)\",\n  \"notifications.takeoverCandidateNotFound\": \"Could not find takeover candidate! You still own the config lock. (Translate)\",\n  \"notifications.lockTakeoverError\": \"Error while perfroming config lock takeover! Error code: {code} (Translate)\",\n  \"notifications.lockAcquisitionError\": \"Error while requesting config lock! Error code : {code} (Translate)\",\n\n  // ListView\n  \"listView.save\": \"Speichern\",\n\n  // SVOView\n  \"svoView.emptyViewInspectionTemplate\": \"{inspectionName}\",\n  \"svoView.closeView\": \"View schließen\",\n  \"svoView.closeViewConfirmation\": \"Wollen Sie die View wirklich schließen?\",\n\n  \"cancel\": \"Abbrechen\",\n  \"submit\": \"Submit (translate)\",\n  \"close\": \"Close (translate)\",\n  \"accept\": \"Akzeptieren\",\n  \"reject\": \"Ablehnen\",\n  \"milliseconds\": \"milliseconds (translate)\",\n  \"noConfigName\": \"[Keine Konfiguration]\",\n  \"unknownConfigName\": \"[Unbekannte Konfiguration]\",\n  \"noConfigLoaded\": \"Keine Konfiguration geladen im SVObserver\",\n  \"up\": \"Vorheriges\",\n  \"down\": \"Nächstes\",\n  \"copy\": \"Kopieren\",\n  \"cut\": \"Ausschneiden\",\n  \"paste\": \"Einfügen\",\n  \"save\": \"Speichern\",\n  \"delete\": \"Löschen\",\n  \"undo\": \"Rückgängig\",\n  \"expandAll\": \"Alles ausklappen\",\n  \"collapseAll\": \"Alles einklappen\",\n\n  // Permissions\n  \"permissions.backToWebApp\": \"Zurück zur WebApp\",\n  \"permissions.helpText\": \"Sie können die aufgelisteten Rechte für die jeweilige Gruppe (Spalte) anpassen. Rechte der Gruppe Common werden allen anderen Gruppen zugeordnet. Die Rechte haben möglicherweise Auswirkungen auf die WebApp und/oder den SVObserver.\",\n  \"permissions.permissions\": \"Rechte\",\n  \"permissions.permissionManagement\": \"Rechte-Verwaltung\",\n  \"permissions.description\": \"Beschreibung\",\n\n  // Permission descriptions\n  \"permissionDescription.webapp.configuration.save\": \"Nutzer kann aktuelle Konfiguration mit allen View Sets speichern\",\n  \"permissionDescription.webapp.logs.read\": \"Nutzer kann Logs sehen in der oberen Navigationsleiste\",\n  \"permissionDescription.webapp.viewset.add\": \"Nutzer kann View Sets hinzufügen\",\n  \"permissionDescription.webapp.viewset.read\": \"Nutzer kann View Sets sehen(Wechseln zwischen View Sets, ViewSet Manager öffnen)\",\n  \"permissionDescription.webapp.viewset.edit\": \"Nutzer kann View Sets sehen und editieren(Größe der Views verändern, neue Views hinzufügen, Wechseln zwischen View Sets, ViewSet Manager öffnen, View Set umbenennen)\",\n  \"permissionDescription.webapp.viewset.remove\": \"Nutzer kann ein View Set entfernen\",\n  \"permissionDescription.webapp.view[type=AnyView].add\": \"Nutzer kann Views eines BELIEBIGEN Typs hinzufügen\",\n  \"permissionDescription.webapp.view[type=AnyView].read\": \"Nutzer kann Views eines BELIEBIGEN Typs sehen\",\n  \"permissionDescription.webapp.view[type=AnyView].edit\": \"Nutzer kann Views eines BELIEBIGEN Typs sehen und editieren\",\n  \"permissionDescription.webapp.view[type=AnyView].remove\": \"Nutzer kann Views eines BELIEBIGEN Typs entfernen\",\n  \"permissionDescription.webapp.view[type=ImageView].add\": \"Nutzer kann Views des Typs IMAGE hinzufügen\",\n  \"permissionDescription.webapp.view[type=ImageView].read\": \"Nutzer kann Views des Typs IMAGE sehen(auch Bilder herunterladen, Liste eigener Overlays sehen, Bildinfos sehen)\",\n  \"permissionDescription.webapp.view[type=ImageView].edit\": \"Nutzer kann Views des Typs IMAGE sehen und editieren(Auswahl von Inspektion und Tool, Ändern der Bildgröße, Bilder herunterladen, Liste eigener Overlays sehen, Bildinfos sehen)\",\n  \"permissionDescription.webapp.view[type=ImageView].remove\": \"Nutzer kann Views des Typs IMAGE entfernen\",\n  \"permissionDescription.webapp.view[type=ListView].add\": \"Nutzer kann Views des Typs LIST hinzufügen\",\n  \"permissionDescription.webapp.view[type=ListView].read\": \"Nutzer kann Views des Typs LIST sehen\",\n  \"permissionDescription.webapp.view[type=ListView].edit\": \"Nutzer kann Views des Typs LIST sehen und editieren(Auswahl von Inspektion und Tool, Editieren von Aliasen)\",\n  \"permissionDescription.webapp.view[type=ListView].remove\": \"Nutzer kann Views des Typs LIST entfernen\",\n  \"permissionDescription.webapp.view[type=ImageStripView].add\": \"Nutzer kann Views des Typs IMAGE STRIP hinzufügen\",\n  \"permissionDescription.webapp.view[type=ImageStripView].read\": \"Nutzer kann Views des Typs IMAGE STRIP sehen\",\n  \"permissionDescription.webapp.view[type=ImageStripView].edit\": \"Nutzer kann Views des Typs IMAGE STRIP sehen und editieren(Auswahl von Inspektion und Tool)\",\n  \"permissionDescription.webapp.view[type=ImageStripView].remove\": \"Nutzer kann Views des Typs IMAGE STRIP entfernen\",\n  \"permissionDescription.webapp.view[type=ParameterView].add\": \"Nutzer kann Views des Typs PARAMETER hinzufügen\",\n  \"permissionDescription.webapp.view[type=ParameterView].read\": \"Nutzer kann Views des Typs PARAMETER sehen\",\n  \"permissionDescription.webapp.view[type=ParameterView].edit\": \"Nutzer kann Views des Typs PARAMETER sehen und editieren(Hinzufügen / editieren / entfernen von eigenen Overlays)\",\n  \"permissionDescription.webapp.view[type=ParameterView].remove\": \"Nutzer kann Views des Typs PARAMETER entfernen\",\n  \"permissionDescription.webapp.view[type=ToolSetView].add\": \"Nutzer kann Views des Typs TOOLSET hinzufügen\",\n  \"permissionDescription.webapp.view[type=ToolSetView].read\": \"Nutzer kann Views des Typs TOOLSET sehen\",\n  \"permissionDescription.webapp.view[type=ToolSetView].edit\": \"Nutzer kann Views des Typs TOOLSET sehen und editieren\",\n  \"permissionDescription.webapp.view[type=ToolSetView].remove\": \"Nutzer kann Views des Typs TOOLSET entfernen\",\n  \"permissionDescription.svobserver.mode.read\": \"Nutzer kann den aktuellen Mode vom SVObserver in der oberen Navigationsleiste sehen\",\n  \"permissionDescription.svobserver.mode.edit\": \"Nutzer kann den aktuellen Mode vom SVObserver in der oberen Navigationsleiste sehen und ändern\",\n  \"permissionDescription.svobserver.inspectionstate.read\": \"Nutzer kann den Status aller Inspektionen in der oberen Navigationsleiste sehen\",\n  \"permissionDescription.svobserver.inspectionstate.edit\": \"Nutzer kann den Status aller Inspektionen in der oberen Navigationsleiste sehen / ändern und den Status im IMAGE STRIP View wechseln\",\n  \"permissionDescription.svobserver.value.read\": \"SVObserver prüft, ob Nutzer Werte sehen darf\",\n  \"permissionDescription.svobserver.value.edit\": \"SVObserver prüft, ob Nutzer Werte editieren darf\",\n  \"permissionDescription.svobserver.tool.add\": \"SVObserver prüft, ob Nutzer neue Tool hinzufügen darf\",\n  \"permissionDescription.svobserver.tool.read\": \"SVObserver prüft, ob Nutzer Tools lesen darf\",\n  \"permissionDescription.svobserver.tool.edit\": \"SVObserver prüft, ob Nutzer existierende Tools editieren darf\",\n  \"permissionDescription.svobserver.tool.remove\": \"SVObserver prüft, ob Nutzer Tools entfernen darf\",\n  \"permissionDescription.svobserver.configuration.read\": \"SVObserver prüft, ob Nutzer die SVObserver Konfiguration lesen darf\",\n  \"permissionDescription.svobserver.configuration.write\": \"SVObserver prüft, ob Nutzer die SVObserver Konfiguration speichern darf\",\n  \"permissionDescription.svobserver.notifications.subscribe\": \"SVObserver prüft, ob Nutzer SVObserver Nachrichten erhalten darf\",\n  \"permissionDescription.svobserver.clientlogs.store\": \"SVObserver prüft, ob Nutzer Client Logs an den SVObserver senden darf\",\n  \"permissionDescription.svobserver.file.read\": \"SVObserver prüft, ob Nutzer Dateien im SVIM RUN Ordner lesen darf\",\n  \"permissionDescription.svobserver.file.write\": \"SVObserver prüft, ob Nutzer Dateien im SVIM RUN Ordner schreiben darf\",\n  \"permissionDescription.svobserver.machinestate.set\": \"SVObserver prüft, ob Nutzer den Maschinenstatus setzen darf (Herunterfahren oder Neustarten des SVIMs)\",\n  \"permissionDescription.svobserver.command.execute\": \"SVObserver prüft, ob Nutzer Kommandos ausführen darf\",\n  \"permissionDescription.usermanagement.userpermissions.read\": \"Nutzer kann Gruppen-Rechte vom SVObserver laden, den Menü-Eintrag zum Wechsel in die Rechte-Verwaltung sehen, alle Rechte in Rechte-Verwaltung sehen\",\n  \"permissionDescription.usermanagement.userpermissions.edit\": \"Nutzer kann Gruppen-Rechte vom SVObserver laden, den Menü-Eintrag zum Wechsel in die Rechte-Verwaltung sehen, alle Rechte in Rechte-Verwaltung sehen und editieren\",\n\n  // Debugger\n  \"debugger.title\": \"Debugger\",\n  \"debugger.backToWebApp\": \"Zurück zur WebApp\",\n  \"debugger.requestsListHeader\": \"Request list\",\n  \"debugger.noParametersMessage\": \"This request has no parameters\",\n  \"debugger.noItemsMessage\": \"(no items)\",\n  \"debugger.nothingToConfigureMessage\": \"(nothing to configure)\",\n  \"debugger.addItemButtonText\": \"Add\",\n  \"debugger.sendRequest\": \"Send request\",\n  \"debugger.noFilteredResultsMessage\": \"No filtered results\",\n  \"debugger.copyToClipboard\": \"Copy to clipboard\",\n};\n\nexport default de;\n","const en = {\n  // TopNavigation\n  \"topNavigation.language.german\": \"German\",\n  \"topNavigation.language.english\": \"English\",\n  \"topNavigation.lock\": \"Lock\",\n  \"topNavigation.takeover\": \"Takeover\",\n  \"topNavigation.release\": \"Release\",\n  \"topNavigation.logout\": \"Logout\",\n  \"topNavigation.help\": \"Help\",\n  \"topNavigation.about\": \"Info\",\n  \"topNavigation.shortcut\": \"Shortcut\",\n  \"topNavigation.download\": \"Download SVO configuration\",\n  \"topNavigation.upload\": \"Upload SVO configuration\",\n  \"topNavigation.inspectionState\": \"Inspection state ({runningInspections} of {numberOfInspections} running)\",\n  \"topNavigation.permissions\": \"Permissions\",\n\n  // there is a auto mapping in utils/modes.js\n  \"editMode\": \"Edit Mode\",\n  \"unknownMode\": \"Unknown mode\",\n  \"runMode\": \"Run Mode\",\n  \"stopMode\": \"Stop Mode\",\n  \"regressionMode\": \"Regression Mode\",\n  \"testMode\": \"Test Mode\",\n\n  // LockStateHandler\n  \"lockStateHandler.alertDialog.lockAlreadyLocked\": \"Configuration lock is already owned by: {user}\",\n  \"lockStateHandler.alertDialog.lockDescription\": \"Lock description: {description}\",\n  \"lockStateHandler.alertDialog.waitingForTakeoverResponse\": \"Waiting for response from: {user}\",\n  \"lockStateHandler.alertDialog.waitingForResponseInfo\": \"Current configuration lock owner has been notified of your request and has 30 seconds to respond from now on. If there is no response until then, you will automatically takeover the lock.\",\n  \"lockStateHandler.alertDialog.ownerRejectedTakeover\": \"{user} rejected the configuration lock takeover\",\n  \"lockStateHandler.alertDialog.takeoverAttempt\": \"{user} wants like to take over configuration lock\",\n  \"lockStateHandler.alertDialog.takeoverMessage\": \"Takeover message: {message}\",\n  \"lockStateHandler.formDialog.lockConfigRequestTitle\": \"Lock configuration request\",\n  \"lockStateHandler.formDialog.takeoverConfigRequestTitle\": \"Takeover configuration request\",\n  \"lockStateHandler.formDialog.lockConfigRequestContent\": \"To lock or takeover the configuration, please enter all details here. SVOGateway will send updates occasionally.\",\n  \"lockStateHandler.formDialog.lockScope\": \"Lock scope\",\n  \"lockStateHandler.formDialog.lockTimeout\": \"Lock timeout\",\n  \"lockStateHandler.formDialog.lockDescription\": \"Lock description\",\n  \"lockStateHandler.formDialog.takeoverRequest\": \"Takeover request\",\n  \"lockStateHandler.formDialog.takeoverMessage\": \"Takeover message\",\n\n  // ImageStrip\n  \"imageStripView.inspectionTemplate\": \"{inspectionName} Image Strip\",\n  \"imageStripView.play\": \"Play\",\n  \"imageStripView.pause\": \"Pause\",\n\n  // ListView\n  \"listView\": \"List\",\n  \"listView.inspectionTemplate\": \"{inspectionName} List\",\n  \"listView.AliasEditor.title\": \"Set alias for dotted name\",\n  \"listView.Actionbar.hideAliases\": \"Hide aliases\",\n  \"listView.Actionbar.showAliases\": \"Show aliases\",\n  \"listView.AliasEditor.dottedName\": \"Dotted name\",\n  \"listView.AliasEditor.value\": \"Value\",\n  \"listView.AliasEditor.button\": \"Save\",\n\n  // HelpView\n  \"helpView\": \"Help\",\n\n  // AboutView\n  \"aboutView\": \"About\",\n  \"aboutView.applicationName\": \"Application name:\",\n  \"aboutView.applicationVersion\": \"Application version:\",\n  \"aboutView.svoVersion\": \"SVObserver version:\",\n  \"aboutView.gatewayVersion\": \"Gateway version:\",\n\n  // ViewTypeSelection\n  \"viewTypeSelection.imageStripView\": \"Image Strip\",\n  \"viewTypeSelection.imageView\": \"Image\",\n  \"viewTypeSelection.parameterView\": \"Parameter\",\n  \"viewTypeSelection.ListView\": \"List\",\n  \"viewTypeSelection.toolset\": \"Tool Set\",\n  \"viewTypeSelection.back\": \"Back\",\n  \"viewTypeSelection.cancel\": \"Cancel\",\n  \"viewTypeSelection.chooseViewTooltip\": \"Choose view type\",\n  \"viewTypeSelection.selectViewType\": \"Select a type for this view:\",\n\n  // InspectionSelection\n  \"inspectionSelection.selectInspection\": \"Select an inspection for this view:\",\n\n  // ParameterView / Overlay\n  \"parameterview.overlay.delete\": \"Delete\",\n  \"parameterview.overlay.add\": \"Add\",\n  \"parameterview.overlay.showAll\": \"Show all\",\n  \"parameterview.overlay.hideAll\": \"Hide all\",\n\n  // ImageView\n  \"imageView.inspectionTemplate\": \"{inspectionName} Image\",\n  \"imageView.zoomIn\": \"Zoom in\",\n  \"imageView.zoomOut\": \"Zoom out\",\n  \"imageView.fitToWidth\": \"Fit to width\",\n  \"imageView.fitToHeight\": \"Fit to height\",\n  \"imageView.saveWithOverlays\": \"Download image with overlays\",\n  \"imageView.overlayListToggle\": \"Overlay list\",\n  \"imageView.imageInfoToggle\": \"Image info\",\n  \"imageView.save\": \"Download image\",\n  \"imageView.showOverlays\": \"Show overlays\",\n  \"imageView.hideOverlays\": \"Hide overlays\",\n  \"imageView.info\": \"Info\",\n  \"imageView.width\": \"Width:\",\n  \"imageView.height\": \"Height:\",\n  \"imageView.x\": \"X:\",\n  \"imageView.y\": \"Y:\",\n\n  // ParameterView\n  \"parameterView\": \"Parameter\",\n  \"parameterView.inspectionTemplate\": \"{inspectionName} Parameter\",\n\n  // ToolsetView\n  \"toolsetView.inspectionTemplate\": \"{inspectionName} Tool Set\",\n  \"toolsetView.confirmDelete\": \"Do you really want to delete {toolName}? This cannot be undone.\",\n\n  // AboutView\n  \"aboutView.title\": \"About \",\n\n  // ViewSet Manager\n  \"viewSetManager\": \"View Set Manager\",\n  \"viewSetManager.title\": \"View Set Manager\",\n  \"viewSetManager.viewSetName\": \"Name\",\n  \"viewSetManager.remove\": \"Remove\",\n  \"viewSetManager.save\": \"Save all view sets\",\n  \"viewSetManager.close\": \"Close\",\n  \"viewSetManager.editViewSetHeadline\": \"Edit view sets:\",\n  \"viewSetManager.newViewSet\": \"Create new view set\",\n  \"viewSetManager.editViewSetName\": \"Edit view set name\",\n  \"viewSetManager.changeViewSetName\": \"Change view set name\",\n  \"viewSetManager.apply\": \"Apply changes\",\n  \"viewSetManager.export\": \"Export current view layout\",\n  \"viewSetManager.import\": \"Import a view layout from file\",\n  \"viewSetManager.importConfirm.title\": \"Overwriting view set\",\n  \"viewSetManager.importConfirm.message\": \"Importing a view set from file will overwrite your existing viewset. Do you want to continue?\",\n  \"viewSetManager.deleteConfirm.message\": \"Do you really want to delete view set {viewsetName}?\",\n  \"viewSetManager.deleteIconTooltip\": \"Delete view set\",\n\n  // ShortcutView\n  \"shortcutView.title\": \"Shortcuts\",\n  \"shortcutView.fullscreenTitle\": \"Full screen\",\n  \"shortcutView.fullscreenDescription\": \"Focus a view and press CTRL-F\",\n  \"shortcutView.helpTitle\": \"Help\",\n  \"shortcutView.helpDescription\": \"Focus a view and press F1\",\n\n  // Notifications\n  \"notifications.modeSwitch.userSwitchedModeTo\": \"User switched mode to:\",\n  \"notifications.websocket.connectionEstablished\": \"Websocket connection established on port:\",\n  \"notifications.websocket.connectionLost\": \"Websocket connection lost\",\n  \"notifications.userSwitchedLanguage\": \"User switched language to: \",\n  \"notifications.rejectStreamPaused\": \"Reject stream was paused\",\n  \"notifications.rejectStreamResumed\": \"Reject stream was resumed\",\n  \"notifications.checkSvimOutput\": \"Please check output on SVIM\",\n  \"notifications.incompatibilityWarning\": \"Selected config might not be compatible with the current WebApp\",\n  \"notifications.errorOccurred\": \"An error occurred\",\n  \"notifications.error.loadingFile\": \"Could not load data from file.\",\n  \"notifications.successfulAction\": \"Successful action\",\n  \"notifications.successfullyLoadedFile\": \"Successfully loaded viewset from file.\",\n  \"notifications.viewsetVersionIncompatibleTitle\": \"File version incompatible\",\n  \"notifications.viewsetVersionIncompatibleMessage\": \"The file version is incompatible. Can not load viewset.\",\n  \"notifications.minorVersionDiffTitle\": \"Minor version differs\",\n  \"notifications.minorVersionDiffMessage\": \"Minor version differs between application and file. The presentation of the viewset might be incorrect.\",\n  \"notifications.variableValueShouldBeInTheRange\": \"Value of the variable {variableName} should be in the range of {range}.\",\n  \"notifications.configAlreadyLockedBySameUser\": \"You have already locked the configuration!\",\n  \"notifications.takeoverCandidateNotFound\": \"Could not find takeover candidate! You still own the config lock.\",\n  \"notifications.lockTakeoverError\": \"Error while perfroming config lock takeover! Error code: {code}\",\n  \"notifications.lockAcquisitionError\": \"Error while requesting config lock! Error code : {code}\",\n\n  // ListView\n  \"listView.save\": \"Save\",\n\n  // SVOView\n  \"svoView.emptyViewInspectionTemplate\": \"{inspectionName}\",\n  \"svoView.closeView\": \"Close view\",\n  \"svoView.closeViewConfirmation\": \"Do you really want to close this view?\",\n\n  \"cancel\": \"Cancel\",\n  \"submit\": \"Submit\",\n  \"close\": \"Close\",\n  \"accept\": \"Accept\",\n  \"reject\": \"Reject\",\n  \"milliseconds\": \"milliseconds\",\n  \"noConfigName\": \"[No configuration]\",\n  \"unknownConfigName\": \"[Unknown configuration]\",\n  \"noConfigLoaded\": \"No configuration loaded in SVObserver\",\n  \"up\": \"Up\",\n  \"down\": \"Down\",\n  \"save\": \"Save\",\n  \"copy\": \"Copy\",\n  \"cut\": \"Cut\",\n  \"paste\": \"Paste\",\n  \"delete\": \"Delete\",\n  \"undo\": \"Undo\",\n  \"expandAll\": \"Expand all\",\n  \"collapseAll\": \"Collapse all\",\n\n  // Permissions\n  \"permissions.backToWebApp\": \"Back to WebApp\",\n  \"permissions.helpText\": \"You can change the listed permissions for each group (column). Common permissions are applied to all other groups. Permissions may have effect on the WebApp and/or the SVObserver.\",\n  \"permissions.permissions\": \"Permissions\",\n  \"permissions.permissionManagement\": \"Permission Management\",\n  \"permissions.description\": \"Description\",\n\n  // Permission descriptions\n  \"permissionDescription.webapp.configuration.save\": \"User can save the current configuration with all view sets\",\n  \"permissionDescription.webapp.logs.read\": \"User can see logs in top navigation bar\",\n  \"permissionDescription.webapp.viewset.add\": \"User can add new view sets\",\n  \"permissionDescription.webapp.viewset.read\": \"User can see view sets (switch between view sets, open View Set Manager)\",\n  \"permissionDescription.webapp.viewset.edit\": \"User can see and edit view sets (change size of views, add new views to view set, switch between view sets, open View Set Manager, rename view sets)\",\n  \"permissionDescription.webapp.viewset.remove\": \"User can remove a view set\",\n  \"permissionDescription.webapp.view[type=AnyView].add\": \"User can add views of any type\",\n  \"permissionDescription.webapp.view[type=AnyView].read\": \"User can see views of any type\",\n  \"permissionDescription.webapp.view[type=AnyView].edit\": \"User can see and edit views of any type\",\n  \"permissionDescription.webapp.view[type=AnyView].remove\": \"User can remove views of any type\",\n  \"permissionDescription.webapp.view[type=ImageView].add\": \"User can add views of type Image\",\n  \"permissionDescription.webapp.view[type=ImageView].read\": \"User can see views of type Image (also download image, see custom overlay list, see image info)\",\n  \"permissionDescription.webapp.view[type=ImageView].edit\": \"User can see and edit views of type Image (choose inspection and tool, change size of image, download image, see custom overlay list, see image info)\",\n  \"permissionDescription.webapp.view[type=ImageView].remove\": \"User can remove views of type Image\",\n  \"permissionDescription.webapp.view[type=ListView].add\": \"User can add views of type List\",\n  \"permissionDescription.webapp.view[type=ListView].read\": \"User can see views of type List\",\n  \"permissionDescription.webapp.view[type=ListView].edit\": \"User can see and edit views of type List (choose inspection and tool, edit aliases)\",\n  \"permissionDescription.webapp.view[type=ListView].remove\": \"User can remove views of type List\",\n  \"permissionDescription.webapp.view[type=ImageStripView].add\": \"User can add views of type Image Strip\",\n  \"permissionDescription.webapp.view[type=ImageStripView].read\": \"User can see views of type Image Strip\",\n  \"permissionDescription.webapp.view[type=ImageStripView].edit\": \"User can see and edit views of type Image Strip (choose inspection and tool)\",\n  \"permissionDescription.webapp.view[type=ImageStripView].remove\": \"User can remove views of type Image Strip\",\n  \"permissionDescription.webapp.view[type=ParameterView].add\": \"User can add views of type Parameter\",\n  \"permissionDescription.webapp.view[type=ParameterView].read\": \"User can see views of type Parameter\",\n  \"permissionDescription.webapp.view[type=ParameterView].edit\": \"User can see and edit views of type Parameter (add/edit/delete custom overlays)\",\n  \"permissionDescription.webapp.view[type=ParameterView].remove\": \"User can remove views of type Parameter\",\n  \"permissionDescription.webapp.view[type=ToolSetView].add\": \"User can add views of type Tool Set\",\n  \"permissionDescription.webapp.view[type=ToolSetView].read\": \"User can see views of type Tool Set\",\n  \"permissionDescription.webapp.view[type=ToolSetView].edit\": \"User can see and edit views of type Tool Set\",\n  \"permissionDescription.webapp.view[type=ToolSetView].remove\": \"User can remove views of type Tool Set\",\n  \"permissionDescription.svobserver.mode.read\": \"User can see the current mode of SVObserver in top navigation bar\",\n  \"permissionDescription.svobserver.mode.edit\": \"User can see and change the current mode of SVObserver in top navigation bar\",\n  \"permissionDescription.svobserver.inspectionstate.read\": \"User can see the inspection state of all inspections in the top navigation bar\",\n  \"permissionDescription.svobserver.inspectionstate.edit\": \"User can see and change the inspection state of all inspections in the top navigation bar and toggle the state in Image Strip View\",\n  \"permissionDescription.svobserver.value.read\": \"SVObserver checks if user is allowed to see values\",\n  \"permissionDescription.svobserver.value.edit\": \"SVObserver checks if user is allowed to edit values\",\n  \"permissionDescription.svobserver.tool.add\": \"SVObserver checks if user is allowed to add new tools\",\n  \"permissionDescription.svobserver.tool.read\": \"SVObserver checks if user is allowed to read tools\",\n  \"permissionDescription.svobserver.tool.edit\": \"SVObserver checks if user is allowed to edit existing tools\",\n  \"permissionDescription.svobserver.tool.remove\": \"SVObserver checks if user is allowed to remove tools\",\n  \"permissionDescription.svobserver.configuration.read\": \"SVObserver checks if user is allowed to read the SVObserver configuration\",\n  \"permissionDescription.svobserver.configuration.write\": \"SVObserver checks if user is allowed to save the SVObserver configuration\",\n  \"permissionDescription.svobserver.notifications.subscribe\": \"SVObserver checks if user is allowed to subscribe to SVObserver notifications\",\n  \"permissionDescription.svobserver.clientlogs.store\": \"SVObserver checks if user is allowed to send client logs to the SVObserver\",\n  \"permissionDescription.svobserver.file.read\": \"SVObserver checks if user is allowed to read arbitrary files in SVIM RUN folder\",\n  \"permissionDescription.svobserver.file.write\": \"SVObserver checks if user is allowed to write arbitrary files in SVIM RUN folder\",\n  \"permissionDescription.svobserver.machinestate.set\": \"SVObserver checks if user is allowed to set the machine state (shutdown or restart of SVIM)\",\n  \"permissionDescription.svobserver.command.execute\": \"SVObserver checks if user is allowed to execute commands\",\n  \"permissionDescription.usermanagement.userpermissions.read\": \"User can load group permissions from backend/can see menu entry to switch to permission management page/can see all permissions in permission management\",\n  \"permissionDescription.usermanagement.userpermissions.edit\": \"User can load group permissions from backend/can see menu entry to switch to permission management page/can see all permissions in permission management/can edit permissions\",\n\n  // Debugger\n  \"debugger.title\": \"Debugger\",\n  \"debugger.backToWebApp\": \"Back to WebApp\",\n  \"debugger.requestsListHeader\": \"Request list\",\n  \"debugger.noParametersMessage\": \"This request has no parameters\",\n  \"debugger.noItemsMessage\": \"(no items)\",\n  \"debugger.nothingToConfigureMessage\": \"(nothing to configure)\",\n  \"debugger.addItemButtonText\": \"Add\",\n  \"debugger.sendRequest\": \"Send request\",\n  \"debugger.noFilteredResultsMessage\": \"No filtered results\",\n  \"debugger.copyToClipboard\": \"Copy to clipboard\",\n\n  // Toolset\n  \"toolsetView.windowTool\": \"Window Tool\",\n  \"toolsetView.mathTool\": \"Math Tool\",\n  \"toolsetView.statisticsTool\": \"Statistics Tool\",\n  \"toolsetView.ringBufferTool\": \"Ring Buffer Tool\",\n  \"toolsetView.archiveTool\": \"Archive Tool\",\n  \"toolsetView.acquisitionTool\": \"Acquisition Tool\",\n  \"toolsetView.transformationTool\": \"Transformation Tool\",\n  \"toolsetView.shiftTool\": \"Shift Tool\",\n  \"toolsetView.cylindricalWarpTool\": \"Cylindrical Warp Tool\",\n  \"toolsetView.perspectiveTool\": \"Perspective Tool\",\n  \"toolsetView.imageTool\": \"Image Tool\",\n  \"toolsetView.linearTool\": \"Linear Tool\",\n  \"toolsetView.colorTool\": \"Color Tool\",\n  \"toolsetView.resizeTool\": \"Resize Tool\",\n  \"toolsetView.loadImageTool\": \"Load Image Tool\",\n  \"toolsetView.tableTool\": \"Table Tool\",\n  \"toolsetView.tableAnalyzerTool\": \"Table Analyzer Tool\",\n  \"toolsetView.polarTransformationTool\": \"Polar Transformation Tool\",\n  \"toolsetView.loopTool\": \"Loop Tool\",\n  \"toolsetView.externalTool\": \"External Tool\",\n  \"toolsetView.groupTool\": \"Group Tool\",\n};\n\nexport default en;\n\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport de from './de';\nimport en from './en';\n\nconst translations = {\n  de: {\n    ...de,\n  },\n  en: {\n    ...en,\n  },\n};\n\nexport const languages = [\n  {\n    locale: 'de',\n    name: <FormattedMessage id=\"topNavigation.language.german\" />,\n  },\n  {\n    locale: 'en',\n    name: <FormattedMessage id=\"topNavigation.language.english\" />,\n  },\n];\n\nexport default translations;\n","import React, { useEffect } from 'react';\nimport { InputAdornment, IconButton } from '@material-ui/core';\nimport ClearIcon from '../../../../assets/icons/clear.svg';\nimport OutlinedSelection from '../../../../components/OutlinedSelection';\n\nconst SelectParameter = ({ value, options, labels, changeCallback, removeCallback }) => {\n  useEffect(() => {\n    if (typeof value === 'undefined') {\n      changeCallback && changeCallback(options[0]);\n    }\n  });\n\n  let valuesWithLabels = [];\n\n  // if we have a labels array, options and labels need to be sorted together\n  // if we don't have label array, the values will be used as id and value in select\n  if (labels) {\n    options.forEach((option, idx) => valuesWithLabels.push({ option, label: labels[idx] }));\n\n    valuesWithLabels = valuesWithLabels.sort(function (a, b) {\n      return a.label.localeCompare(b.label);\n    });\n\n    options = valuesWithLabels.map((value) => value.option);\n    labels = valuesWithLabels.map((value) => value.label);\n  } else {\n    options = options.sort();\n  }\n\n  return (\n    <OutlinedSelection\n      selectedValue={value}\n      values={options}\n      labels={labels}\n      onSelectionChanged={(e) => {\n        changeCallback && changeCallback(e['param']);\n      }}\n      id=\"param\"\n      InputProps={\n        removeCallback\n          ? {\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"remove\"\n                    onClick={() => removeCallback()}\n                    title=\"Remove\"\n                  >\n                    <img src={ClearIcon} alt=\"x\" />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }\n          : null\n      }\n    />\n  );\n};\n\nexport default SelectParameter;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nconst ArrayParameter = ({\n  value,\n  changeCallback,\n  typeName,\n  defaultValue,\n  options,\n  labels,\n  SingleParameterComponent,\n}) => {\n  const numberOfEntries = (value && value.length) || 0;\n  const fields = [];\n\n  const addArrayEntry = () => {\n    changeCallback([...(value || []), defaultValue]);\n  };\n  const removeArrayEntry = (idx) => {\n    const copy = [...value];\n    copy.splice(idx, 1);\n    changeCallback(copy);\n  };\n\n  for (let i = 0; i < numberOfEntries; i++) {\n    fields.push(\n      <div className=\"field-container\" key={`${typeName}_array_${i}`}>\n        <div className=\"field-name-type\">\n          {i}\n          <small>{typeName}</small>\n        </div>\n        <div className=\"field-settings\">\n          <SingleParameterComponent\n            value={value[i]}\n            changeCallback={(newValue) => {\n              const copy = [...(value || [])];\n              copy[i] = newValue;\n              changeCallback(copy);\n            }}\n            options={options}\n            labels={labels}\n            removeCallback={() => removeArrayEntry(i)}\n          />\n        </div>\n      </div>,\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"field-container is-array\">\n        {fields.length ? (\n          fields\n        ) : (\n          <div className=\"field-container\">\n            <div className=\"field-name-type\">\n              <em>\n                <FormattedMessage id=\"debugger.noItemsMessage\" />\n              </em>\n            </div>\n            <div className=\"field-settings\"></div>\n          </div>\n        )}\n      </div>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => addArrayEntry()}>\n        <FormattedMessage id=\"debugger.addItemButtonText\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default ArrayParameter;\n","import React from 'react';\nimport SelectParameter from '../../generic/SelectParameter';\n\nconst BoolParameter = ({ value, changeCallback }) => {\n  return (\n    <SelectParameter\n      value={value && value !== 'false' ? 'true' : 'false'}\n      options={['true', 'false']}\n      changeCallback={(value) => changeCallback(value === 'true')}\n    />\n  );\n};\n\nexport default BoolParameter;\n","import React from 'react';\n\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport BoolParameter from '../BoolParameter';\n\nconst BoolArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={false}\n      SingleParameterComponent={BoolParameter}\n    />\n  );\n};\n\nexport default BoolArrayParameter;\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nconst BytesParameter = ({ value, changeCallback }) => {\n  return (\n    <TextField\n      fullWidth\n      type=\"file\"\n      variant=\"outlined\"\n      value={value || ''}\n      onChange={(e) => changeCallback && changeCallback(e.target.value)}\n    />\n  );\n};\n\nexport default BytesParameter;\n","import React from 'react';\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport ClearIcon from '../../../../assets/icons/clear.svg';\n\nconst SingleParameter = ({ value, changeCallback, removeCallback, fieldType, defaultValue }) => {\n  return (\n    <TextField\n      fullWidth\n      type={fieldType}\n      variant=\"outlined\"\n      value={value || defaultValue}\n      onChange={(e) => changeCallback && changeCallback(e.target.value)}\n      InputProps={\n        removeCallback\n          ? {\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"remove\"\n                    onClick={() => removeCallback()}\n                    title=\"Remove\"\n                  >\n                    <img src={ClearIcon} alt=\"x\" />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }\n          : null\n      }\n    />\n  );\n};\n\nexport default SingleParameter;\n","import React from 'react';\nimport SingleParameter from '../../generic/SingleParameter';\n\nconst DecimalParameter = ({ value, changeCallback, removeCallback }) => {\n  return (\n    <SingleParameter\n      value={value}\n      changeCallback={changeCallback}\n      removeCallback={removeCallback}\n      fieldType=\"number\"\n      defaultValue={0}\n    />\n  );\n};\n\nexport default DecimalParameter;\n","import React from 'react';\n\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport DecimalParameter from '../DecimalParameter';\n\nconst DecimalArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={0}\n      SingleParameterComponent={DecimalParameter}\n    />\n  );\n};\n\nexport default DecimalArrayParameter;\n","import React from 'react';\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport SelectParameter from '../../generic/SelectParameter';\n\nconst EnumArrayParameter = ({ value, options, changeCallback }) => {\n  return (\n    <ArrayParameter\n      value={(value || []).map((i) => String(i))}\n      changeCallback={changeCallback}\n      options={Object.values(options)}\n      labels={Object.keys(options)}\n      SingleParameterComponent={SelectParameter}\n    />\n  );\n};\n\nexport default EnumArrayParameter;\n","import React from 'react';\nimport SelectParameter from '../../generic/SelectParameter';\n\nconst EnumParameter = ({ value, options, changeCallback }) => {\n  return (\n    <SelectParameter\n      value={String(value)}\n      options={Object.values(options)}\n      labels={Object.keys(options)}\n      changeCallback={(value) => changeCallback(value)}\n    />\n  );\n};\n\nexport default EnumParameter;\n","import React from 'react';\nimport SingleParameter from '../../generic/SingleParameter';\n\nconst IntegerParameter = ({ value, changeCallback, removeCallback }) => {\n  return (\n    <SingleParameter\n      value={value}\n      changeCallback={changeCallback}\n      removeCallback={removeCallback}\n      fieldType=\"number\"\n      defaultValue={0}\n    />\n  );\n};\n\nexport default IntegerParameter;\n","import React from 'react';\n\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport IntegerParameter from '../IntegerParameter';\n\nconst IntegerArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={0}\n      SingleParameterComponent={IntegerParameter}\n    />\n  );\n};\n\nexport default IntegerArrayParameter;\n","import React from 'react';\n\nimport SingleParameter from '../../generic/SingleParameter';\n\nconst TextParameter = ({ value, changeCallback, removeCallback, typeName }) => {\n  return (\n    <SingleParameter\n      value={value}\n      typeName={typeName}\n      changeCallback={changeCallback}\n      removeCallback={removeCallback}\n      fieldType=\"text\"\n      defaultValue={''}\n    />\n  );\n};\n\nexport default TextParameter;\n","import React from 'react';\n\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport TextParameter from '../TextParameter';\n\nconst TextArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={''}\n      SingleParameterComponent={TextParameter}\n    />\n  );\n};\n\nexport default TextArrayParameter;\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { cloneDeep, get, set } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport Protobuf from '../../protobuf/Protobuf';\n\nimport './style.scss';\nimport SelectParameter from './generic/SelectParameter';\nimport BoolArrayParameter from './specialized/BoolArrayParameter';\nimport BoolParameter from './specialized/BoolParameter';\nimport BytesParameter from './specialized/BytesParameter';\nimport DecimalArrayParameter from './specialized/DecimalArrayParameter';\nimport DecimalParameter from './specialized/DecimalParameter';\nimport EnumArrayParameter from './specialized/EnumArrayParameter';\nimport EnumParameter from './specialized/EnumParameter';\nimport IntegerArrayParameter from './specialized/IntegerArrayParameter';\nimport IntegerParameter from './specialized/IntegerParameter';\nimport TextArrayParameter from './specialized/TextArrayParameter';\nimport TextParameter from './specialized/TextParameter';\n\nconst RequestParameter = ({ name, onResponse }) => {\n  const protobuf = useSelector((state) => state.app.protobuf);\n  const [parameters, setParameters] = useState({});\n  const [nestedParamsMap, setNestedParamsMap] = useState({});\n  const [currentRequestName, setCurrentRequestName] = useState('');\n\n  useEffect(() => {\n    if (currentRequestName === name) return;\n\n    setParameters({});\n    setNestedParamsMap({});\n    setCurrentRequestName(name);\n  }, [name, currentRequestName]);\n\n  if (!Protobuf.SvPb[name]) {\n    return <div></div>;\n  }\n\n  const sendRequest = async () => {\n    onResponse('');\n    if (name === 'MyDummyRequest') {\n      onResponse(parameters);\n      return;\n    }\n    const request = Protobuf.SvPb[name].create(parameters);\n    console.dir(parameters);\n    try {\n      const response = await protobuf.request(request);\n      onResponse(response);\n    } catch (e) {\n      onResponse(`An error occured: ${e.message}`);\n    }\n  };\n\n  const deepValue = (obj, path) => {\n    if (!path) return obj;\n    return get(obj, path);\n  };\n\n  const getStringControl = (field, currentPath, currentValue) => {\n    return (\n      <TextParameter\n        key={`txt_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getStringArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <TextArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getBoolControl = (field, currentPath, currentValue) => {\n    return (\n      <BoolParameter\n        key={`bool_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getBoolArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <BoolArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getIntegerControl = (field, currentPath, currentValue) => {\n    return (\n      <IntegerParameter\n        key={`integer_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getIntegerArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <IntegerArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getDecimalControl = (field, currentPath, currentValue) => {\n    return (\n      <DecimalParameter\n        key={`decimal_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getDecimalArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <DecimalArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getBytesControl = (field, currentPath, currentValue) => {\n    return (\n      <BytesParameter\n        key={`bytes_${field.name}`}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getEnumControl = (type, field, currentPath, currentValue) => {\n    return (\n      <EnumParameter\n        value={currentValue}\n        options={type.values}\n        changeCallback={(value) => {\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, value);\n        }}\n      ></EnumParameter>\n    );\n  };\n\n  const getArrayEnumControl = (type, field, currentPath, currentValue) => {\n    return (\n      <EnumArrayParameter\n        value={currentValue}\n        options={type.values}\n        changeCallback={(value) => {\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, value);\n        }}\n      ></EnumArrayParameter>\n    );\n  };\n\n  const addArrayEntryForType = (currentPath, currentValue) => {\n    const newValue = currentValue ? [...currentValue] : [];\n    newValue.push({});\n    changeValue(currentPath, newValue);\n  };\n\n  const getControlForField = (field, isArray, currentPath) => {\n    const currentValue = deepValue(\n      parameters,\n      currentPath ? `${currentPath}.${field.name}` : field.name,\n    );\n\n    switch (field.type) {\n      case 'string':\n        if (isArray) {\n          return getStringArrayControl(field, currentPath, currentValue);\n        }\n\n        return getStringControl(field, currentPath, currentValue);\n      case 'bool':\n        if (isArray) {\n          return getBoolArrayControl(field, currentPath, currentValue);\n        }\n\n        return getBoolControl(field, currentPath, currentValue);\n      case 'int32':\n      case 'int64':\n      case 'uint32':\n      case 'uint64':\n      case 'sint32':\n      case 'sint64':\n      case 'fixed32':\n      case 'fixed64':\n      case 'sfixed32':\n      case 'sfixed64':\n        if (isArray) {\n          return getIntegerArrayControl(field, currentPath, currentValue);\n        }\n\n        return getIntegerControl(field, currentPath, currentValue);\n      case 'double':\n      case 'float':\n        if (isArray) {\n          return getDecimalArrayControl(field, currentPath, currentValue);\n        }\n\n        return getDecimalControl(field, currentPath, currentValue);\n      case 'bytes':\n        return getBytesControl(field, currentPath, currentValue);\n      default: {\n        const type = Protobuf.SvPb.lookup(field.type);\n        if (type && type.constructor.name === 'Enum') {\n          if (isArray) {\n            return getArrayEnumControl(type, field, currentPath, currentValue);\n          }\n\n          return getEnumControl(type, field, currentPath, currentValue);\n        }\n\n        const newPath = currentPath ? `${currentPath}.${field.name}` : field.name;\n\n        if (isArray) {\n          return getArrayControlsForType(type, newPath, currentValue);\n        }\n\n        return getControlsForType(type, newPath, currentValue);\n      }\n    }\n  };\n\n  const changeValue = (path, value) => {\n    const newParams = cloneDeep(parameters);\n    set(newParams, path, value);\n    setParameters(newParams);\n  };\n\n  const getControlsForType = (type, path) => {\n    const controls = [];\n    const fieldKeys = type?.fields ? Object.keys(type.fields) : [];\n\n    if (type.oneofs) {\n      Object.keys(type.oneofs).forEach((oneOfKey) => {\n        controls.push(\n          <div className=\"field-container\" key={`div_${oneOfKey}`}>\n            <div className=\"field-name-type\">\n              {oneOfKey}\n              <small>oneof type</small>\n            </div>\n            <div className=\"field-settings\">\n              <SelectParameter\n                value={nestedParamsMap[`${path}.${oneOfKey}`]}\n                options={type.oneofs[oneOfKey].oneof}\n                changeCallback={(value) => {\n                  setNestedParamsMap({\n                    ...nestedParamsMap,\n                    [`${path}.${oneOfKey}`]: value,\n                  });\n                }}\n              ></SelectParameter>\n            </div>\n          </div>,\n        );\n      });\n    }\n\n    fieldKeys.forEach((fieldkey) => {\n      const field = type.fields[fieldkey];\n      if (!field) return;\n\n      if (field.partOf && field.name !== nestedParamsMap[`${path}.${field.partOf.name}`]) {\n        return;\n      }\n\n      controls.push(\n        <div className=\"field-container\" key={`div_${field.name}`}>\n          <div className=\"field-name-type\">\n            {field.name}\n            <small>\n              {field.rule} {field.type}\n              {field.required ? '*' : ''}\n            </small>\n          </div>\n          <div className=\"field-settings\">\n            {getControlForField(field, field.rule === 'repeated', path)}\n          </div>\n        </div>,\n      );\n    });\n\n    if (!fieldKeys.length && path.length)\n      controls.push(\n        <div className=\"field-container\" key={`div_type.name`}>\n          <div className=\"field-name-type\">\n            <em>\n              <FormattedMessage id=\"debugger.nothingToConfigureMessage\"></FormattedMessage>\n            </em>\n          </div>\n          <div className=\"field-settings\"></div>\n        </div>,\n      );\n\n    return controls;\n  };\n\n  const getArrayControlsForType = (type, path, value) => {\n    const controls = [];\n    (value || []).forEach((_, idx) => {\n      controls.push(\n        <div className=\"field-container\" key={`${type.name}_array_${idx}`}>\n          <div className=\"field-name-type\">\n            {idx}\n            <small>{type.name}</small>\n          </div>\n          <div className=\"field-settings\">\n            {getControlsForType(type, path ? `${path}.${idx}` : idx, value[idx])}\n          </div>\n        </div>,\n      );\n    });\n\n    return (\n      <div>\n        <div className=\"field-container is-array\">\n          {controls.length ? (\n            controls\n          ) : (\n            <div className=\"field-container\">\n              <div className=\"field-name-type\">\n                <em>\n                  <FormattedMessage id=\"debugger.noItemsMessage\" />\n                </em>\n              </div>\n              <div className=\"field-settings\"></div>\n            </div>\n          )}\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => addArrayEntryForType(path, value)}\n        >\n          Add\n        </Button>\n      </div>\n    );\n  };\n\n  const fields = getControlsForType(Protobuf.SvPb[name], '');\n  return (\n    <div className=\"request-parameters-container\">\n      <div className=\"request-name-type\">\n        {name}\n        <small>Request</small>\n      </div>\n      <div className=\"request-parameters-fields-container\">\n        {fields && fields.length ? fields : <FormattedMessage id=\"debugger.noParametersMessage\" />}\n      </div>\n\n      <Button\n        className=\"send-button\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => sendRequest()}\n      >\n        <FormattedMessage id=\"debugger.sendRequest\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default RequestParameter;\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport Product from '../../protobuf/Product';\n\nimport './style.scss';\n\nconst RequestedResponseVisualizer = ({ response }) => {\n  const [imageUrl, setImageUrl] = useState('');\n  const [fileData, setFileData] = useState('');\n\n  useEffect(() => {\n    if (response && response.imageData) {\n      const product = new Product({\n        history: null,\n        trigger: null,\n        isReject: false,\n      });\n      setImageUrl(product.buildUrl(response.imageData));\n    } else {\n      setImageUrl('');\n    }\n  }, [response]);\n\n  useEffect(() => {\n    if (response && response.fileData) {\n      const blob = new Blob(response.fileData, { type: 'octet/stream' });\n      setFileData(window.URL.createObjectURL(blob));\n    } else {\n      setFileData('');\n    }\n  }, [response]);\n\n  const copyResponseToClipboard = async () => {\n    if (!navigator.clipboard) {\n      // fallback code possible, but I think not needed as we use the debugger only\n      return;\n    }\n    await navigator.clipboard.writeText(result);\n  };\n\n  const result = response ? JSON.stringify(response, null, 2) : '';\n\n  return (\n    <div className=\"response-body-container\">\n      <div className=\"response-body-header\">\n        <div className=\"response-name-type\">\n          {response ? response.constructor.name : 'Response'}\n          <small>Response</small>\n        </div>\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={copyResponseToClipboard}\n            disabled={!result}\n          >\n            <FormattedMessage id=\"debugger.copyToClipboard\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"response-content\">\n        {imageUrl ? <img src={imageUrl} alt=\"\" /> : undefined}\n        {fileData ? <a href={fileData}>Download</a> : undefined}\n        <pre className=\"response-formatter\">{result}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default RequestedResponseVisualizer;\n","import React, { useEffect, useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\n\nconst RequestsList = ({ proto, chooseCallback }) => {\n  const [filter, setFilter] = useState('');\n  const [active, setActive] = useState(null);\n\n  const requests = Object.keys(proto)\n    .sort()\n    .reduce((requests, key) => {\n      if (!key.toLowerCase().includes(filter)) return requests;\n\n      return [\n        ...requests,\n        <li\n          key={`li_${key}`}\n          requestname={key}\n          className={active === key ? 'active' : ''}\n          onClick={() => {\n            chooseCallback(key);\n            setActive(key);\n          }}\n        >\n          {key}\n        </li>,\n      ];\n    }, []);\n\n  useEffect(() => {\n    if (!active) {\n      chooseCallback(requests[0].props.requestname);\n      setActive(requests[0].props.requestname);\n    }\n  }, [active, chooseCallback, requests]);\n\n  return (\n    <div className=\"requests-list\">\n      <div className=\"request-list-header\">\n        <FormattedMessage id=\"debugger.requestsListHeader\" />\n        <small>Choose one from the list below</small>\n      </div>\n      <div className=\"requests-filter\">\n        <TextField\n          fullWidth\n          type=\"text\"\n          variant=\"outlined\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value.toLowerCase())}\n          placeholder=\"Search...\"\n        />\n      </div>\n      <div className=\"requests\">\n        <ul>{requests}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default RequestsList;\n","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport ArrowIcon from '../../assets/icons/back.svg';\nimport Protobuf from '../../protobuf/Protobuf';\nimport RequestParameter from '../RequestParameter';\nimport RequestedResponseVisualizer from '../RequestedResponseVisualizer';\nimport RequestsList from '../RequestsList';\n\nimport './style.scss';\n\nconst Debugger = () => {\n  const [currentRequest, setCurrentRequest] = useState('');\n  const [response, setResponse] = useState(null);\n\n  const filteredProto = Object.keys(Protobuf.SvPb)\n    .sort()\n    .reduce((requests, key) => {\n      if (!key.endsWith('Request')) return requests;\n      if (key.endsWith('StreamRequest')) return requests;\n      if (\n        Protobuf.SvPb[key].filename.includes('InspectionCommands') &&\n        key !== 'InspectionCmdRequest'\n      )\n        return requests;\n      if (Protobuf.SvPb[key].filename.includes('ConfigCommands') && key !== 'ConfigCommandRequest')\n        return requests;\n\n      return { ...requests, [key]: Protobuf.SvPb[key] };\n    }, {});\n\n  return (\n    <div className=\"debugger-wrapper\">\n      <div className=\"debugger-header\">\n        <Button component={Link} variant=\"contained\" color=\"primary\" to=\"/app\">\n          <img src={ArrowIcon} alt=\"back\" className=\"image-item\" />\n          <FormattedMessage id=\"debugger.backToWebApp\" />\n        </Button>\n      </div>\n      <div className=\"request-list-container\">\n        <RequestsList\n          proto={filteredProto}\n          chooseCallback={(key) => {\n            setCurrentRequest(key);\n            setResponse(null);\n          }}\n        />\n      </div>\n      <div className=\"request-container\">\n        <RequestParameter name={currentRequest} onResponse={(response) => setResponse(response)} />\n      </div>\n      <div className=\"response-container\">\n        <RequestedResponseVisualizer response={response} />\n      </div>\n    </div>\n  );\n};\n\nexport default Debugger;\n","import React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport Debugger from '../components/Debugger';\nimport translations from '../translations';\n\nconst DebuggerPage = () => {\n  const { locale } = useSelector((state) => state.app);\n  return (\n    <IntlProvider locale={locale} messages={translations[locale]}>\n      <Debugger />\n    </IntlProvider>\n  );\n};\n\nexport default DebuggerPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\n\nimport {\n  setLocale,\n  authenticate,\n  setTopNavHidden,\n  setBottomNavHidden,\n  setDefaultViewSetName,\n} from '../redux/actions';\nimport logger from '../utils/logger';\n\nconst parseQueryParams = (search) => {\n  const queryParams = {};\n  try {\n    search\n      .substr(1)\n      .split('&')\n      .forEach((item) => {\n        const part = item.split('=');\n        const key = part[0];\n        const value = part[1] && decodeURIComponent(part[1]);\n        queryParams[key] = value;\n      });\n  } catch (error) {\n    logger.error(error);\n  }\n  return queryParams;\n};\n\nclass HmiLoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticated: false,\n      queryParams: parseQueryParams(this.props.location.search),\n    };\n  }\n\n  componentDidMount() {\n    this.props.setTopNavHidden(this.state.queryParams.hideTopNavigation === 'true');\n    this.props.setBottomNavHidden(this.state.queryParams.hideBottomNavigation === 'true');\n\n    this.props.setLocale(this.state.queryParams.locale || 'en');\n\n    this.props.setDefaultViewSetName(this.state.queryParams.viewSet || null);\n\n    if (this.state.queryParams.token) {\n      this.props\n        .authenticate(this.state.queryParams.token)\n        .then(() => this.setState({ authenticated: true }))\n        .catch((authError) => this.setState({ authError }));\n    }\n  }\n\n  render() {\n    if (!this.state.queryParams.token) {\n      return <div>Malformed query params</div>;\n    }\n    if (this.state.authError) {\n      return (\n        <div>\n          Invalid token provided. Error: {this.state.authError.response?.status} Status:{' '}\n          {this.state.authError.response?.statusText}\n        </div>\n      );\n    }\n    if (!this.state.authenticated) {\n      return <div>Fetching auth token for provided access token</div>;\n    }\n\n    return (\n      <Redirect\n        to={{\n          pathname: '/app',\n          state: { viewSetTemplate: this.state.queryParams.viewSet },\n        }}\n      />\n    );\n  }\n}\n\nHmiLoginPage.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n  setLocale: PropTypes.func.isRequired,\n  authenticate: PropTypes.func.isRequired,\n  setTopNavHidden: PropTypes.func.isRequired,\n  setBottomNavHidden: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLocale: (locale) => dispatch(setLocale(locale)),\n  authenticate: (accessToken) => dispatch(authenticate(accessToken)),\n  setTopNavHidden: (hidden) => dispatch(setTopNavHidden(hidden)),\n  setBottomNavHidden: (hidden) => dispatch(setBottomNavHidden(hidden)),\n  setDefaultViewSetName: (name) => dispatch(setDefaultViewSetName(name)),\n});\n\nexport default connect(null, mapDispatchToProps)(HmiLoginPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { logOut } from '../redux/actions';\nimport { resetState } from '../utils/localStorage';\n\nclass LogoutPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedOut: false,\n    };\n  }\n\n  render() {\n    this.props.onLogOut().then(() => {\n      this.setState({ loggedOut: true });\n    });\n\n    if (this.state.loggedOut) {\n      resetState();\n      this.props.onLoggedOut();\n      return (\n        <Redirect\n          to={{\n            pathname: '/',\n            state: { loggedOut: true },\n          }}\n        />\n      );\n    }\n    return null;\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLogOut: () => dispatch(logOut()),\n});\n\nexport default connect(null, mapDispatchToProps)(LogoutPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  toggleFullscreenMode,\n  setEditingFocus,\n  setFocusedViewType,\n  setSaveFlag,\n  openHelpView,\n} from '../redux/actions/index';\nimport { IMAGE_VIEW } from '../views/ViewSetFactory';\n\nexport default class KeyHandler extends Component {\n  componentDidMount() {\n    this.node.addEventListener('keydown', this.handleKeyEvent);\n    this.node.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    this.node.removeEventListener('keydown', this.handleKeyEvent);\n    this.node.removeEventListener('click', this.handleClick);\n  }\n\n  handleKeyEvent = (event) => {\n    const keyString = `${event.ctrlKey ? 'ctrl+' : ''}${event.key}`;\n    switch (keyString) {\n      case 'ctrl+f':\n        event.preventDefault();\n        this.props.dispatch(toggleFullscreenMode(this.props.view));\n        break;\n      case 'F1':\n        event.preventDefault();\n        this.props.dispatch(openHelpView());\n        break;\n      default:\n        return;\n    }\n    event.stopPropagation();\n  };\n\n  handleClick = () => {\n    const { view, editingViewIds, dispatch, helpSection } = this.props;\n\n    if (view) {\n      try {\n        const viewId = view.props.id;\n        const inspectionId = view.props.views.viewSet[viewId].inspectionId;\n        const viewType = view.props.views.viewSet[viewId].viewComponentClassId;\n        if (viewType === IMAGE_VIEW) {\n          dispatch(setEditingFocus(inspectionId, viewId));\n\n          if (!editingViewIds.includes(viewId)) {\n            dispatch(setSaveFlag(true));\n          }\n        }\n        dispatch(setFocusedViewType(viewType));\n      } catch (error) {\n        console.error(error);\n      }\n    } else if (helpSection) {\n      dispatch(setFocusedViewType(helpSection));\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div\n        tabIndex={0}\n        style={{ width: '100%', height: '100%' }}\n        ref={(node) => {\n          this.node = node;\n        }}\n      >\n        {children && children}\n      </div>\n    );\n  }\n}\n\nKeyHandler.defaultProps = {\n  children: undefined,\n};\n\nKeyHandler.propTypes = {\n  children: PropTypes.node,\n  dispatch: PropTypes.func.isRequired,\n  view: PropTypes.object, // eslint-disable-line\n};\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport ArrowIcon from '../../assets/icons/back.svg';\nimport Protobuf from '../../protobuf/Protobuf';\nimport {\n  flattenProtobuf,\n  canReadUserManagement,\n  canEditUserManagement,\n  getGroupPermissionsFromFlattenedPermissions,\n} from '../../utils/permissions';\n\nimport './style.scss';\n\nclass PermissionManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.allAvailablePermissions = new Set();\n    this.state = {\n      redirect: false,\n      initiallySelectedPermissions: new Map(),\n      currentSelectedPermissions: new Map(),\n    };\n  }\n\n  componentDidMount() {\n    if (Protobuf.SvPb.Permissions) {\n      this.allAvailablePermissions = flattenProtobuf(Protobuf.SvPb.Permissions);\n      this.loadCurrentPermissions(this.props.groupPermissions);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      (prevProps.groupPermissions === undefined && this.props.groupPermissions) ||\n      prevProps.groupPermissions !== this.props.groupPermissions\n    ) {\n      this.loadCurrentPermissions(this.props.groupPermissions);\n    }\n  }\n\n  loadCurrentPermissions = (permissions) => {\n    if (permissions) {\n      const initiallySelectedPermissions = permissions;\n      const currentSelectedPermissions = cloneDeep(initiallySelectedPermissions);\n      this.setState({ initiallySelectedPermissions, currentSelectedPermissions });\n    }\n  };\n\n  onCheck(groupName, key, checked) {\n    const newPermissions = cloneDeep(this.state.currentSelectedPermissions);\n    if (!newPermissions.has(groupName)) {\n      newPermissions.set(groupName, { groupPermissions: new Set(), users: [] });\n    }\n    if (checked) {\n      newPermissions.get(groupName).groupPermissions.add(key);\n    } else {\n      newPermissions.get(groupName).groupPermissions.delete(key);\n    }\n    this.setState({ currentSelectedPermissions: newPermissions });\n  }\n\n  savePermissions = (flattenedPermissions) => {\n    const result = getGroupPermissionsFromFlattenedPermissions(flattenedPermissions);\n    this.props.proxy.setUserPermissions(result);\n  };\n\n  onSaveClicked = () => {\n    this.savePermissions(this.state.currentSelectedPermissions);\n  };\n\n  onResetClicked = () => {\n    this.setState({\n      currentSelectedPermissions: cloneDeep(this.state.initiallySelectedPermissions),\n    });\n  };\n\n  mapsAreEqual(am, bm) {\n    if (am.size !== bm.size) {\n      return false;\n    }\n    for (var a of am) {\n      if (!bm.has(a[0])) {\n        return false;\n      }\n\n      const bs = bm.get(a[0]).groupPermissions;\n      if (a[1].groupPermissions.size !== bs.size) {\n        return false;\n      }\n\n      for (var as of a[1].groupPermissions) {\n        if (!bs.has(as)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  getColGroup() {\n    const { currentSelectedPermissions } = this.state;\n    const colGroup = [];\n\n    colGroup.push(<col style={{ width: '200px' }} key={`col_permissions`}></col>);\n    currentSelectedPermissions.forEach((permissionsPerGroup, groupName) => {\n      colGroup.push(<col style={{ width: '80px' }} key={`col_${groupName}`}></col>);\n    });\n    colGroup.push(<col style={{ width: '*' }} key={`col_descriptions`}></col>);\n\n    return colGroup;\n  }\n\n  getTableHead() {\n    const { currentSelectedPermissions } = this.state;\n    const tableheader = [];\n\n    tableheader.push(\n      <td key={`header_td_permissions`}>\n        <div className=\"permission-management-permissions-header-left\">\n          <FormattedMessage id=\"permissions.permissions\" />\n        </div>\n      </td>,\n    );\n    currentSelectedPermissions.forEach((permissionsPerGroup, groupName) => {\n      tableheader.push(\n        <td key={`header_td_${groupName}`}>\n          <div className=\"permission-management-permissions-header\">{groupName}</div>\n          <div className=\"permission-management-permissions-subheader\">\n            {Array.isArray(permissionsPerGroup.users) && permissionsPerGroup.users.length > 0\n              ? `(${permissionsPerGroup.users.join(', ')})`\n              : undefined}\n          </div>\n        </td>,\n      );\n    });\n    tableheader.push(\n      <td key={`header_td_description`}>\n        <div className=\"permission-management-permissions-header\">\n          <FormattedMessage id=\"permissions.description\" />\n        </div>\n      </td>,\n    );\n\n    return <tr>{tableheader}</tr>;\n  }\n\n  getData(canEdit) {\n    const { currentSelectedPermissions } = this.state;\n    const data = [];\n    this.allAvailablePermissions.forEach((permission) => {\n      const dataRow = [];\n      dataRow.push(\n        <td key={`body_td_permission_${permission}`}>\n          <div className=\"permission-management-label\">{permission}</div>\n        </td>,\n      );\n      currentSelectedPermissions.forEach((permissionsPerGroup, groupName) => {\n        const selected = permissionsPerGroup.groupPermissions.has(permission);\n        dataRow.push(\n          <td key={`body_td_${groupName}_${permission}`}>\n            <Checkbox\n              type=\"checkbox\"\n              checked={selected}\n              name={`checkbox_${groupName}_${permission}`}\n              color=\"primary\"\n              className=\"permission-management-checkbox\"\n              onClick={(e) =>\n                canEdit && groupName !== 'sdm'\n                  ? this.onCheck(groupName, permission, e.target.checked)\n                  : undefined\n              }\n              disabled={!canEdit || groupName === 'sdm'}\n            />\n          </td>,\n        );\n      });\n      dataRow.push(\n        <td key={`body_td_description_${permission}`}>\n          <div className=\"permission-management-label\">\n            <FormattedMessage id={`permissionDescription.${permission}`} />\n          </div>\n        </td>,\n      );\n      data.push(<tr key={`body_tr_${permission}`}>{dataRow}</tr>);\n    });\n    return data;\n  }\n\n  render() {\n    const { redirect, initiallySelectedPermissions, currentSelectedPermissions } = this.state;\n    const { myPermissions } = this.props;\n\n    const canRead = canReadUserManagement(myPermissions);\n    const canEdit = canEditUserManagement(myPermissions);\n\n    if (redirect) {\n      return <Redirect to=\"/app\" />;\n    }\n\n    const hasChanges = !this.mapsAreEqual(initiallySelectedPermissions, currentSelectedPermissions);\n    const colGroup = this.getColGroup();\n    const tablehead = this.getTableHead();\n    const data = this.getData(canEdit);\n\n    return (\n      <div className=\"permission-management-wrapper\">\n        <div className=\"permission-management-fixed-header\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.setState({ redirect: true })}\n          >\n            <img src={ArrowIcon} alt=\"back\" className=\"image-item\" />\n            <FormattedMessage id=\"permissions.backToWebApp\" />\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!hasChanges}\n            onClick={this.onSaveClicked}\n          >\n            Save\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!hasChanges}\n            onClick={this.onResetClicked}\n          >\n            Reset\n          </Button>\n        </div>\n        <h1>\n          <FormattedMessage id=\"permissions.permissionManagement\" />\n        </h1>\n        <h3>\n          <FormattedMessage id=\"permissions.helpText\" />\n        </h3>\n        {canRead || canEdit ? (\n          <table className=\"permission-management-table-wrapper\">\n            <colgroup>{colGroup}</colgroup>\n            <thead>{tablehead}</thead>\n            <tbody>{data}</tbody>\n          </table>\n        ) : undefined}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  groupPermissions: state.app.groupPermissions,\n  proxy: state.app.proxy,\n  user: state.app.user,\n  myPermissions: state.app.myPermissions,\n});\n\nexport default connect(mapStateToProps, null)(PermissionManagement);\n","import React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport KeyHandler from '../components/KeyHandler';\nimport PermissionManagement from '../components/PermissionManagement';\nimport { closeHelpView } from '../redux/actions';\nimport translations from '../translations';\nimport HelpView from '../views/HelpView';\nimport viewMappings from '../views/HelpView/viewMappings';\n\nconst PermissionPage = () => {\n  const dispatch = useDispatch();\n  const { isHelpViewOpen, locale } = useSelector((state) => state.app);\n\n  return (\n    <IntlProvider locale={locale} messages={translations[locale]}>\n      <KeyHandler dispatch={dispatch} helpSection={viewMappings.PERMISSIONS}>\n        <PermissionManagement />\n        <HelpView open={isHelpViewOpen} onClose={() => dispatch(closeHelpView())}></HelpView>\n      </KeyHandler>\n    </IntlProvider>\n  );\n};\n\nexport default PermissionPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nclass ModalNotification extends Component {\n  render() {\n    const { visible, message } = this.props;\n    if (!visible) {\n      return false;\n    }\n\n    return (\n      <div className=\"modal-fullscreen-style\">\n        <div className=\"modal-fullscreen-inner\">{message}</div>\n      </div>\n    );\n  }\n}\n\nModalNotification.defaultProps = {\n  visible: false,\n  message: undefined,\n};\n\nModalNotification.propTypes = {\n  visible: PropTypes.bool,\n  message: PropTypes.object,\n};\n\nexport default ModalNotification;\n","import PropTypes from 'prop-types';\n\nconst ProtobufType = PropTypes.shape({\n  request: PropTypes.func.isRequired,\n});\n\nexport default ProtobufType;\n","export default __webpack_public_path__ + \"static/media/view-manager.8d715a8f.svg\";","export default __webpack_public_path__ + \"static/media/check.069f9f99.svg\";","export default __webpack_public_path__ + \"static/media/export.6f1edad0.svg\";","export default __webpack_public_path__ + \"static/media/import.2817cb78.svg\";","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from '../Dialog';\nimport './style.scss';\n\nclass InformationDialog extends Component {\n  render() {\n    const { onClose, open, title, message } = this.props;\n\n    return (\n      <div>\n        <Dialog title={title} onClose={onClose} open={open}>\n          <div className=\"message-wrapper\">{message}</div>\n          <div className=\"button-wrapper\">\n            <Button color=\"primary\" onClick={onClose}>\n              Okay\n            </Button>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default InformationDialog;\n","import React, { useState, useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport Table, { AutoResizer } from 'react-base-table';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport semver from 'semver';\n\nimport iconCheck from '../../assets/icons/check.svg';\nimport removeIcon from '../../assets/icons/delete.svg';\nimport EditIcon from '../../assets/icons/edit.svg';\nimport exportIcon from '../../assets/icons/export.svg';\nimport importIcon from '../../assets/icons/import.svg';\nimport addIcon from '../../assets/icons/plus.svg';\nimport iconSave from '../../assets/icons/save.svg';\n\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport Dialog from '../../components/Dialog';\nimport InformationDialog from '../../components/InformationDialog';\nimport IconButton from '../../components/buttons/IconButton';\nimport {\n  removeViewSet,\n  renameViewSet,\n  newViewSet,\n  setViewSet,\n  setEditingFocus,\n  purgeViewState,\n} from '../../redux/actions';\nimport { forceDownload } from '../../utils/downloader';\nimport logger from '../../utils/logger';\nimport {\n  canReadViewSet,\n  canEditViewSet,\n  canDeleteViewSet,\n  canSaveConfig,\n} from '../../utils/permissions';\n\nimport './style.scss';\n\nconst ViewSetManager = ({ onClose, onSave, intl }) => {\n  const fileChooser = useRef(null);\n  const dispatch = useDispatch();\n  const createdViewSets = useSelector((state) => state.viewSet.createdViewSets);\n  const currentViewSet = useSelector((state) => state.viewSet.currentViewSet);\n  const inspections = useSelector((state) => state.inspections);\n  const configuration = useSelector((state) => state.app.configuration);\n  const myPermissions = useSelector((state) => state.app.myPermissions);\n  const canEdit = canEditViewSet(myPermissions);\n  const canDelete = canDeleteViewSet(myPermissions);\n\n  const [name, setName] = useState(currentViewSet.name);\n  const [isImportConfirmOpen, setIsImportConfirmOpen] = useState(false);\n  const [viewsetToDelete, setViewsetToDelete] = useState('');\n  const [currentImportedViewSet, setCurrentImportedViewSet] = useState(null);\n  const [isInformationDialogOpen, setIsInformationDialogOpen] = useState(false);\n  const [informationDialogTitle, setInformationDialogTitle] = useState('');\n  const [informationDialogMessage, setInformationDialogMessage] = useState('');\n  const [shouldCloseViewSetManager, setShouldCloseViewSetManager] = useState(false);\n  const [viewSetToEdit, setViewSetToEdit] = useState('');\n\n  const fileLoaderVersion = '1.0.0';\n\n  const getNextFreeName = (nameToTry) => {\n    let name = nameToTry;\n    let counter = 1;\n    while (existsName(name)) {\n      name = `${nameToTry}${counter}`;\n      counter++;\n    }\n\n    return name;\n  };\n\n  const existsName = (name) => {\n    return Object.keys(createdViewSets).filter((key) => key === name).length > 0;\n  };\n\n  const addViewSet = () => {\n    const newViewSetName = getNextFreeName('Initial');\n    dispatch(newViewSet(newViewSetName));\n  };\n\n  const removeSelectedViewSet = () => {\n    dispatch(removeViewSet(viewsetToDelete));\n  };\n\n  const saveViewSets = () => {\n    onSave();\n    closeViewSetManager();\n  };\n\n  const exportViewSets = async () => {\n    const webAppVersion = configuration.getWebAppVersion();\n    const dataToSave = {\n      currentViewSet,\n      editingViewIds: getEditingViewIdsPerInspection(),\n      timestamp: new Date(),\n      version: '1.0.0',\n      webAppVersion,\n    };\n\n    await createJsonFileFromObject(dataToSave);\n\n    closeViewSetManager();\n  };\n\n  const getEditingViewIdsPerInspection = () => {\n    const editingViewIds = [];\n\n    Object.keys(inspections).forEach((inspectionIdStr) => {\n      const inspectionId = parseInt(inspectionIdStr, 10);\n      if (\n        inspections[inspectionIdStr] &&\n        inspections[inspectionIdStr].sharedState &&\n        inspections[inspectionIdStr].sharedState.editingViewId\n      ) {\n        editingViewIds.push({\n          inspectionId,\n          editingViewId: inspections[inspectionIdStr].sharedState.editingViewId,\n        });\n      }\n    });\n\n    return editingViewIds;\n  };\n\n  const createJsonFileFromObject = async (object) => {\n    const json = JSON.stringify(object);\n    const blob = new Blob([json], { type: 'application/json' });\n    const data = await URL.createObjectURL(blob);\n\n    forceDownload(data, 'viewset.json');\n  };\n\n  const importViewSets = () => {\n    fileChooser.current.click();\n  };\n\n  const onFileAdded = (evt) => {\n    const file = evt.target.files[0];\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.readAsText(file);\n\n      fileReader.onload = (event) => {\n        handleFileData(event.target.result);\n      };\n    }\n  };\n\n  const handleFileData = (fileText) => {\n    try {\n      const data = JSON.parse(fileText);\n      if (equalsViewSetName(data.currentViewSet.id)) {\n        setIsImportConfirmOpen(true);\n        setCurrentImportedViewSet(data);\n        return;\n      }\n\n      setViewSetConfigurationFromFileData(data);\n    } catch (error) {\n      showErrorWhileLoadingFileDialog();\n      logger.error(error);\n    }\n  };\n\n  const handleImportConfirmDialogClose = (confirmed) => {\n    setIsImportConfirmOpen(false);\n    if (confirmed) {\n      loadViewSetFromFile();\n    } else {\n      fileChooser.current.value = '';\n    }\n  };\n\n  const handleDeleteConfirmDialogClose = (confirmed) => {\n    setViewsetToDelete('');\n    if (confirmed) {\n      removeSelectedViewSet();\n    }\n  };\n\n  const loadViewSetFromFile = () => {\n    setViewSetConfigurationFromFileData(currentImportedViewSet);\n  };\n\n  const equalsViewSetName = (name) => {\n    if (currentViewSet.id === name) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const setViewSetConfigurationFromFileData = (data) => {\n    loadSuccessfulInformationDialogText();\n\n    if (!isMajorVersionCompatible(data.version)) {\n      showIncompatibleVersionErrorDialog();\n      logger.error('Version of file is not valid.');\n      return;\n    }\n\n    if (isMinorVersionNewer(data.version)) {\n      loadVersionChangeInformationDialogText();\n    }\n\n    if (!data.currentViewSet.id) {\n      showErrorWhileLoadingFileDialog();\n      logger.error('Could not load viewset id.');\n      return;\n    }\n    dispatch(setViewSet(data.currentViewSet, data.currentViewSet.id));\n\n    if (data.editingViewIds) {\n      data.editingViewIds.forEach((entry) => {\n        dispatch(setEditingFocus(entry.inspectionId, entry.editingViewId));\n      });\n    }\n\n    dispatch(purgeViewState());\n    showInformationDialog();\n  };\n\n  const isMajorVersionCompatible = (version) => {\n    if (fileLoaderVersion === version) {\n      return true;\n    }\n\n    if (!semver.valid(version) || semver.diff(fileLoaderVersion, version) === 'major') {\n      return false;\n    }\n\n    return true;\n  };\n\n  const isMinorVersionNewer = (version) => {\n    return (\n      semver.diff(fileLoaderVersion, version) === 'minor' && semver.gt(version, fileLoaderVersion)\n    );\n  };\n\n  const closeViewSetManager = () => {\n    onClose();\n  };\n\n  const loadSuccessfulInformationDialogText = () => {\n    setInformationDialogTitle(<FormattedMessage id=\"notifications.successfulAction\" />);\n    setInformationDialogMessage(<FormattedMessage id=\"notifications.successfullyLoadedFile\" />);\n    setShouldCloseViewSetManager(true);\n  };\n\n  const showErrorWhileLoadingFileDialog = () => {\n    setInformationDialogTitle(<FormattedMessage id=\"notifications.errorOccurred\" />);\n    setInformationDialogMessage(<FormattedMessage id=\"notifications.error.loadingFile\" />);\n    setIsInformationDialogOpen(true);\n  };\n\n  const showIncompatibleVersionErrorDialog = () => {\n    setInformationDialogTitle(\n      <FormattedMessage id=\"notifications.viewsetVersionIncompatibleTitle\" />,\n    );\n    setInformationDialogMessage(\n      <FormattedMessage id=\"notifications.viewsetVersionIncompatibleMessage\" />,\n    );\n    setIsInformationDialogOpen(true);\n  };\n\n  const loadVersionChangeInformationDialogText = () => {\n    setInformationDialogTitle(<FormattedMessage id=\"notifications.minorVersionDiffTitle\" />);\n    setInformationDialogMessage(<FormattedMessage id=\"notifications.minorVersionDiffMessage\" />);\n    setShouldCloseViewSetManager(true);\n  };\n\n  const showInformationDialog = () => {\n    setIsInformationDialogOpen(true);\n  };\n\n  const getActions = () => {\n    const actions = [];\n\n    if (canSaveConfig(myPermissions)) {\n      actions.push({\n        intlId: 'viewSetManager.save',\n        iconUrl: iconSave,\n        onClickHandler: () => {\n          saveViewSets();\n        },\n      });\n    }\n\n    if (canReadViewSet(myPermissions)) {\n      actions.push({\n        intlId: 'viewSetManager.export',\n        iconUrl: exportIcon,\n        onClickHandler: () => {\n          exportViewSets();\n        },\n      });\n    }\n\n    if (canEdit) {\n      actions.push({\n        intlId: 'viewSetManager.import',\n        iconUrl: importIcon,\n        onClickHandler: () => {\n          importViewSets();\n        },\n      });\n    }\n\n    return actions;\n  };\n\n  const getColumns = () => {\n    return [\n      {\n        key: 'name',\n        dataKey: 'name',\n        title: 'Name',\n        width: 0,\n        flexGrow: 1,\n      },\n      {\n        key: 'edit',\n        dataKey: 'edit',\n        title: '',\n        width: 40,\n      },\n      {\n        key: 'delete',\n        dataKey: 'delete',\n        title: '',\n        width: 40,\n      },\n    ];\n  };\n\n  const changeViewSetName = () => {\n    if (viewSetToEdit !== name && Object.keys(createdViewSets).includes(name)) {\n      alert('Viewset with this name already exists.');\n      return;\n    }\n\n    dispatch(renameViewSet(viewSetToEdit, name));\n\n    setViewSetToEdit('');\n    setName('');\n  };\n\n  const getViewSetEditName = () => {\n    return (\n      <div className=\"viewsetmanager-edit-viewset-name-wrapper\">\n        <TextField\n          fullWidth\n          type=\"text\"\n          inputProps={{\n            style: {\n              height: 29,\n            },\n          }}\n          value={name}\n          onChange={(e) => setName(e.target.value.substring(0, 20))}\n        />\n      </div>\n    );\n  };\n\n  const getViewSetEditingIcon = (viewsetName) => {\n    if (!canEdit) {\n      return undefined;\n    }\n\n    if (viewSetToEdit !== viewsetName) {\n      return (\n        <IconButton\n          onClick={() => {\n            setViewSetToEdit(viewsetName);\n            setName(viewsetName);\n          }}\n          tooltip={intl.messages['viewSetManager.editViewSetName']}\n          iconUrl={EditIcon}\n        />\n      );\n    } else {\n      return (\n        <IconButton\n          onClick={() => changeViewSetName()}\n          tooltip={intl.messages['viewSetManager.changeViewSetName']}\n          iconUrl={iconCheck}\n        />\n      );\n    }\n  };\n\n  const getViewSets = () => {\n    const data =\n      createdViewSets &&\n      Object.keys(createdViewSets).map((viewsetName) => {\n        return {\n          edit: getViewSetEditingIcon(viewsetName),\n          delete: canDelete ? (\n            <IconButton\n              onClick={() => setViewsetToDelete(viewsetName)}\n              tooltip={intl.messages['viewSetManager.deleteIconTooltip']}\n              iconUrl={removeIcon}\n            />\n          ) : undefined,\n          name: viewSetToEdit === viewsetName ? getViewSetEditName() : viewsetName,\n          id: viewsetName,\n        };\n      });\n    return data;\n  };\n\n  const headerRenderer = ({ columns }) => {\n    const columnHeaders = [];\n    columns.forEach((column, columnIndex) => {\n      if (column.key === 'delete') {\n        columnHeaders.push(\n          <div\n            style={{ width: columns[columnIndex].width, paddingRight: 3 }}\n            key={`header_${columnIndex}`}\n          >\n            <IconButton\n              tooltip={intl.messages['viewSetManager.newViewSet']}\n              iconUrl={addIcon}\n              onClick={() => addViewSet()}\n            />\n          </div>,\n        );\n      } else {\n        columnHeaders.push(\n          <div key={`header_${columnIndex}`} className=\"viewsetmanager-header-wrapper\">\n            {columns[columnIndex].title}\n          </div>,\n        );\n      }\n    });\n\n    return columnHeaders;\n  };\n\n  const actions = getActions();\n  const data = getViewSets();\n  const columns = getColumns();\n\n  return (\n    <div>\n      <Dialog\n        title={<FormattedMessage id=\"viewSetManager.title\" />}\n        dialogActions={actions}\n        onClose={() => {\n          closeViewSetManager();\n        }}\n        open\n      >\n        <div className=\"viewsetmanager-headline-wrapper\">\n          <FormattedMessage id=\"viewSetManager.editViewSetHeadline\" />\n        </div>\n        <div className=\"viewsetmanager-table-wrapper\">\n          <AutoResizer key={`autoresizer`}>\n            {({ width, height }) => (\n              <Table\n                headerRenderer={headerRenderer}\n                columns={columns}\n                data={data}\n                width={width}\n                height={height - 20}\n                headerHeight={30}\n                rowHeight={30}\n                key=\"viewset-table\"\n              />\n            )}\n          </AutoResizer>\n        </div>\n      </Dialog>\n      <ConfirmDialog\n        open={isImportConfirmOpen}\n        onClose={(confirmed) => handleImportConfirmDialogClose(confirmed)}\n        title={<FormattedMessage id=\"viewSetManager.importConfirm.title\" />}\n        message={<FormattedMessage id=\"viewSetManager.importConfirm.message\" />}\n      />\n      <ConfirmDialog\n        open={viewsetToDelete !== ''}\n        onClose={(confirmed) => handleDeleteConfirmDialogClose(confirmed)}\n        message={\n          <FormattedMessage\n            id=\"viewSetManager.deleteConfirm.message\"\n            values={{ viewsetName: viewsetToDelete }}\n          />\n        }\n      />\n      <InformationDialog\n        onClose={() => {\n          setIsInformationDialogOpen(false);\n          if (shouldCloseViewSetManager) {\n            closeViewSetManager();\n          }\n        }}\n        open={isInformationDialogOpen}\n        title={informationDialogTitle}\n        message={informationDialogMessage}\n      />\n      <input ref={fileChooser} style={{ display: 'none' }} type=\"file\" onChange={onFileAdded} />\n    </div>\n  );\n};\n\nViewSetManager.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(ViewSetManager);\n","import PropTypes from 'prop-types';\n\nexport const viewSetType = PropTypes.shape({\n  id: PropTypes.string,\n});\n\nexport const mosaicViewType = PropTypes.oneOfType([viewSetType, PropTypes.string]);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nconst TopNavigationItem = ({ children }) => <div className=\"box-wrapper\">{children}</div>;\n\nTopNavigationItem.defaultProps = {\n  children: undefined,\n};\n\nTopNavigationItem.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default TopNavigationItem;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\nimport NavigationItem from '../../../../../../components/NavigationItem';\n\nconst PresetButton = ({ id, title, onClick, active }) => {\n  const presetButtonClass = classNames({\n    'preset-button': true,\n    'preset-button-active': active,\n  });\n  return (\n    <NavigationItem>\n      <button id={id} onClick={onClick} className={presetButtonClass}>\n        <span>{title}</span>\n      </button>\n    </NavigationItem>\n  );\n};\n\nPresetButton.defaultProps = {\n  id: undefined,\n  onClick: () => void 0,\n  active: false,\n};\n\nPresetButton.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  active: PropTypes.bool,\n};\n\nexport default PresetButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport { switchViewSet } from '../../../../redux/actions';\nimport { canReadViewSet, canEditViewSet } from '../../../../utils/permissions';\nimport { viewSetType, mosaicViewType } from '../../../ViewSet/types';\nimport PresetButton from './components/PresetButton';\n\nconst PresetSlider = ({ currentViewSet, createdViewSets, switchViewSet, myPermissions }) =>\n  canReadViewSet(myPermissions) || canEditViewSet(myPermissions) ? (\n    <div className=\"preset-slider-wrapper\">\n      {createdViewSets &&\n        createdViewSets.map((viewSet) => (\n          <PresetButton\n            title={viewSet.name || viewSet.id}\n            key={viewSet.id}\n            onClick={() => switchViewSet(viewSet)}\n            active={currentViewSet && currentViewSet.id === viewSet.id}\n          />\n        ))}\n    </div>\n  ) : (\n    <div></div>\n  );\n\nPresetSlider.defaultProps = {\n  currentViewSet: undefined,\n  createdViewSets: [],\n};\n\nPresetSlider.propTypes = {\n  currentViewSet: mosaicViewType,\n  createdViewSets: PropTypes.arrayOf(viewSetType),\n  switchViewSet: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  createdViewSets: Object.keys(state.viewSet.createdViewSets).map(\n    (key) => state.viewSet.createdViewSets[key],\n  ),\n  currentViewSet: state.viewSet.currentViewSet,\n  myPermissions: state.app.myPermissions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  switchViewSet: (viewSet) => dispatch(switchViewSet(viewSet)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PresetSlider);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport ViewSetManagerIcon from '../../assets/icons/view-manager.svg';\nimport { setBottomNavHidden } from '../../redux/actions';\nimport { canReadViewSet, canEditViewSet } from '../../utils/permissions';\nimport ViewSetManager from '../ViewSetManager';\nimport PresetSlider from './components/PresetSlider';\n\nclass BottomNav extends Component {\n  state = {\n    selectedIndex: 0,\n    viewSetManagerOpen: false,\n  };\n  select = (index) => this.setState({ selectedIndex: index });\n\n  render() {\n    const { onSave, bottomNavHidden, isSVOConfigLoaded, myPermissions } = this.props;\n    return (\n      <div className={`bottom-nav-wrapper ${bottomNavHidden ? 'bottom-nav-hidden' : ''}`}>\n        <div className=\"bottom-nav\">\n          {isSVOConfigLoaded && <PresetSlider />}\n          {isSVOConfigLoaded && (canReadViewSet(myPermissions) || canEditViewSet(myPermissions)) ? (\n            <div\n              className=\"view-manager\"\n              onClick={() => {\n                this.setState({\n                  viewSetManagerOpen: !this.state.viewSetManagerOpen,\n                });\n              }}\n            >\n              <img src={ViewSetManagerIcon} alt=\"\" />\n              <FormattedMessage id=\"viewSetManager\" />\n            </div>\n          ) : undefined}\n        </div>\n        <button\n          className=\"bottom-hider\"\n          onClick={() => {\n            this.props.setBottomNavHidden(!bottomNavHidden);\n          }}\n        >\n          {bottomNavHidden ? 'show' : 'hide'}\n        </button>\n        {isSVOConfigLoaded && (\n          <div>\n            {this.state.viewSetManagerOpen && (\n              <ViewSetManager\n                onClose={() => this.setState({ viewSetManagerOpen: false })}\n                onSave={onSave}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nBottomNav.propTypes = {\n  setBottomNavHidden: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  bottomNavHidden: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  fullscreenMode: state.viewSet.fullscreenMode,\n  bottomNavHidden: state.viewSet.bottomNavHidden,\n  isSVOConfigLoaded: state.viewSet.isSVOConfigLoaded,\n  myPermissions: state.app.myPermissions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setBottomNavHidden: (hidden) => dispatch(setBottomNavHidden(hidden)),\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(BottomNav));\n","import React from 'react';\nimport Clock from 'react-live-clock';\n\nimport './style.scss';\nimport NavigationItem from '../../../../components/NavigationItem';\n\nconst DateTime = () => (\n  <NavigationItem>\n    <div className=\"date-time-wrapper\">\n      <Clock className=\"date\" format={'DD.MM.YYYY'} ticking />\n      <Clock className=\"time\" format={'HH:mm:ss'} ticking />\n    </div>\n  </NavigationItem>\n);\n\nexport default DateTime;\n","export default __webpack_public_path__ + \"static/media/play-multiple.92160d4a.svg\";","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport iconPause from '../../../../assets/icons/pause.svg';\nimport iconPlayMultiple from '../../../../assets/icons/play-multiple.svg';\nimport iconPlay from '../../../../assets/icons/play.svg';\nimport MenuList from '../../../../components/MenuList';\nimport { canReadInspectionState, canEditInspectionState } from '../../../../utils/permissions';\n\nexport const InspectionStateSwitch = () => {\n  const { proxy, configuration, pausedInspections, myPermissions } = useSelector(\n    (state) => state.app,\n  );\n  const inspections = (configuration && configuration.getInspections()) || [];\n  const allRunning = pausedInspections.length === 0;\n  const canRead = canReadInspectionState(myPermissions);\n  const canEdit = canEditInspectionState(myPermissions);\n  const menuItems = inspections.map((inspection) => {\n    const isPaused = (pausedInspections || []).includes(inspection.id);\n\n    return {\n      key: inspection.id,\n      onClick: () => {\n        isPaused ? proxy.resumeRejectStream(inspection.id) : proxy.pauseRejectStream(inspection.id);\n      },\n      caption: inspection.name,\n      img: isPaused ? iconPlay : iconPause,\n      className: isPaused ? 'paused-inspection' : undefined,\n    };\n  });\n  const globalItem = {\n    key: 'globalResumePause',\n    onClick: () => {\n      allRunning ? proxy.pauseRejectStream() : proxy.resumeRejectStream();\n    },\n    caption: allRunning ? 'Pause all inspections' : 'Resume all inspections',\n    img: allRunning ? iconPause : iconPlay,\n    className: 'all-inspections',\n  };\n  menuItems.unshift(globalItem);\n\n  return canRead || canEdit ? (\n    <div>\n      <MenuList\n        buttonCaption={\n          <FormattedMessage\n            id=\"topNavigation.inspectionState\"\n            values={{\n              runningInspections: inspections.length - pausedInspections.length,\n              numberOfInspections: inspections.length,\n            }}\n          />\n        }\n        buttonIcon={iconPlayMultiple}\n        menuItems={menuItems}\n        onClose={() => void 0}\n        showBottomArrow\n        enabled={canEdit}\n      />\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/language.0be28bcb.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport LanguageIcon from '../../../../assets/icons/language.svg';\nimport MenuList from '../../../../components/MenuList';\nimport { setLocale, addUserSwitchedLanguageNotification } from '../../../../redux/actions';\nimport { languages } from '../../../../translations';\n\nimport './style.scss';\n\nclass LanguageChooser extends Component {\n  changeLocation = (locale) => {\n    const { changeLocale, dispatchUserSwitchedLanguageNotification } = this.props;\n    changeLocale(locale);\n    dispatchUserSwitchedLanguageNotification(locale);\n  };\n\n  render() {\n    const { languages, locale } = this.props;\n    const menuItems = languages.map((language) => ({\n      key: language.locale,\n      caption: language.name,\n      onClick: () => {\n        this.changeLocation(language.locale);\n      },\n    }));\n\n    return (\n      <div className=\"flex\">\n        <MenuList\n          buttonIcon={LanguageIcon}\n          buttonCaption={locale}\n          menuItems={menuItems}\n          showBottomArrow\n          onClose={() => void 0}\n          open={false}\n        />\n      </div>\n    );\n  }\n}\n\nLanguageChooser.propTypes = {\n  languages: PropTypes.arrayOf(\n    PropTypes.shape({\n      locale: PropTypes.string,\n      name: PropTypes.node,\n    }),\n  ),\n  locale: PropTypes.string.isRequired,\n  changeLocale: PropTypes.func.isRequired,\n};\n\nLanguageChooser.defaultProps = {\n  languages,\n};\n\nconst mapStateToProps = (state) => ({\n  locale: state.app.locale,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeLocale: (locale) => dispatch(setLocale(locale)),\n  dispatchUserSwitchedLanguageNotification: (locale) =>\n    dispatch(addUserSwitchedLanguageNotification(locale)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageChooser);\n","export default __webpack_public_path__ + \"static/media/icons8-lock.b22b5188.svg\";","export default __webpack_public_path__ + \"static/media/icons8-padlock.048e7769.svg\";","import Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst AlertDialog = (props) => {\n  return (\n    <Dialog\n      open={props.open}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      disableEscapeKeyDown={true}\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">{props.contentText}</DialogContentText>\n      </DialogContent>\n      <DialogActions>{props.children}</DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AlertDialog;\n","import { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport './style.scss';\r\n\r\nconst TakeoverDialog = (props) => {\r\n  const timeoutInSeconds = 30;\r\n  const isActive = props.open;\r\n  const onAccept = props.onAccept;\r\n  const [timeLeft, setTimeLeft] = useState(timeoutInSeconds);\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        setTimeLeft((timeLeft) => timeLeft - 1);\r\n      }, 1000);\r\n\r\n      if (timeLeft <= 0) {\r\n        onAccept();\r\n        clearInterval(interval);\r\n        setTimeLeft(timeoutInSeconds);\r\n      }\r\n    } else {\r\n      clearInterval(interval);\r\n      setTimeLeft(timeoutInSeconds);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isActive, onAccept, timeLeft]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">{props.contentText}</DialogContentText>\r\n      </DialogContent>\r\n      <Button onClick={props.onAccept} color=\"primary\">\r\n        <FormattedMessage id=\"accept\" />\r\n      </Button>\r\n      <Button onClick={props.onReject} color=\"primary\">\r\n        <FormattedMessage id=\"reject\" />\r\n      </Button>\r\n      <div className=\"auto-accept-container\">\r\n        <p>(auto accept in {timeLeft} seconds)</p>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TakeoverDialog;\r\n","import { useReducer, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport lockIcon from '../../../../../src/assets/icons/icons8-lock.svg';\nimport padlockIcon from '../../../../../src/assets/icons/icons8-padlock.svg';\n\nimport AlertDialog from './alertDialog';\nimport TakeoverDialog from './takeoverDialog';\n\nimport './style.scss';\n\nconst formReducer = (state, event) => {\n  return {\n    ...state,\n    [event.name]: event.value,\n  };\n};\n\nconst LockIcon = () => {\n  return <img src={lockIcon} alt=\"Lock/Takeover the configuration\" title=\"Lock/Takeover config\" />;\n};\n\nconst PadlockIcon = () => {\n  return <img src={padlockIcon} alt=\"Release the configuration lock\" title=\"Release config\" />;\n};\n\nconst LockStateHandler = () => {\n  const proxy = useSelector((state) => state.app.proxy);\n  const configLock = useSelector((state) => state.app.configurationLock);\n  const loggedUser = useSelector((state) => state.app.user);\n  const [openFormDialog, setOpenFormDialog] = useState(false);\n  const [formData, setFormData] = useReducer(formReducer, { scope: 1 });\n\n  const handleChange = (event) => {\n    setFormData({\n      name: event.target.name,\n      value: event.target.value,\n    });\n  };\n\n  const handleClick = () => {\n    if (configLock.isLockedBySameUser(loggedUser)) {\n      proxy.unsubscribeFromLockAcquisitionStream();\n    } else {\n      setOpenFormDialog(true);\n    }\n  };\n\n  const handleClose = () => {\n    setOpenFormDialog(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setOpenFormDialog(false);\n    formData.requestTakeover = configLock.isLockedByOtherUser(loggedUser);\n    proxy.subscribeToLockAcquisitionStream(formData);\n  };\n\n  const renderAlertDialogs = () => {\n    return (\n      <>\n        <AlertDialog\n          open={configLock.isConfigAlreadyLocked()}\n          title={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.lockAlreadyLocked\"\n              values={{ user: configLock.owner }}\n            />\n          }\n          contentText={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.lockDescription\"\n              values={{ description: configLock.lockDescription }}\n            />\n          }\n        >\n          <Button\n            onClick={() => {\n              proxy.closeAlertDialogs();\n            }}\n            color=\"primary\"\n          >\n            <FormattedMessage id=\"close\" />\n          </Button>\n        </AlertDialog>\n        <AlertDialog\n          open={configLock.isOwnerRejectedTakeover()}\n          title={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.ownerRejectedTakeover\"\n              values={{ user: configLock.owner }}\n            />\n          }\n          contentText={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.lockDescription\"\n              values={{ description: configLock.lockDescription }}\n            />\n          }\n        >\n          <Button\n            onClick={() => {\n              proxy.closeAlertDialogs();\n            }}\n            color=\"primary\"\n          >\n            <FormattedMessage id=\"close\" />\n          </Button>\n        </AlertDialog>\n        <AlertDialog\n          open={configLock.isWaitingForTakeoverResponse()}\n          title={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.waitingForTakeoverResponse\"\n              values={{ user: configLock.owner }}\n            />\n          }\n          contentText={\n            <FormattedMessage id=\"lockStateHandler.alertDialog.waitingForResponseInfo\" />\n          }\n        ></AlertDialog>\n        <TakeoverDialog\n          open={configLock.isTakeoverAttemptFromOtherUser()}\n          title={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.takeoverAttempt\"\n              values={{ user: configLock.takeoverUser }}\n            />\n          }\n          contentText={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.takeoverMessage\"\n              values={{ message: configLock.takeoverMessage }}\n            />\n          }\n          onAccept={() => {\n            proxy.passConfigLock({\n              lockId: configLock.lockId,\n              takeoverId: configLock.takeoverId,\n            });\n          }}\n          onReject={() => {\n            proxy.retainConfigLock({ takeoverId: configLock.takeoverId });\n          }}\n        ></TakeoverDialog>\n      </>\n    );\n  };\n\n  const renderFormDialog = () => {\n    return (\n      <Dialog open={openFormDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">\n          {configLock.isLockedByOtherUser(loggedUser) ? (\n            <FormattedMessage id=\"lockStateHandler.formDialog.takeoverConfigRequestTitle\" />\n          ) : (\n            <FormattedMessage id=\"lockStateHandler.formDialog.lockConfigRequestTitle\" />\n          )}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <FormattedMessage id=\"lockStateHandler.formDialog.lockConfigRequestContent\" />\n          </DialogContentText>\n          <TextField\n            InputLabelProps={{ shrink: true }}\n            autoFocus\n            margin=\"dense\"\n            id=\"lock-scope-id\"\n            name=\"scope\"\n            label={<FormattedMessage id=\"lockStateHandler.formDialog.lockScope\" />}\n            type=\"number\"\n            defaultValue=\"1\"\n            disabled={true}\n            onChange={handleChange}\n            fullWidth\n          />\n          <TextField\n            InputLabelProps={{ shrink: true }}\n            margin=\"dense\"\n            id=\"lock-description-id\"\n            name=\"description\"\n            label={<FormattedMessage id=\"lockStateHandler.formDialog.lockDescription\" />}\n            type=\"text\"\n            onChange={handleChange}\n            fullWidth\n          />\n          {configLock.isLockedByOtherUser(loggedUser) && (\n            <>\n              <TextField\n                InputLabelProps={{ shrink: true }}\n                margin=\"dense\"\n                id=\"takeover-message-id\"\n                name=\"takeoverMessage\"\n                label={<FormattedMessage id=\"lockStateHandler.formDialog.takeoverMessage\" />}\n                type=\"text\"\n                onChange={handleChange}\n                fullWidth\n              />\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            <FormattedMessage id=\"cancel\" />\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            <FormattedMessage id=\"submit\" />\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\n  const renderLabelBasedOnLockStatus = () => {\n    if (configLock.isLockedBySameUser(loggedUser)) {\n      return <FormattedMessage id=\"topNavigation.release\" />;\n    } else if (configLock.isLockedByOtherUser(loggedUser)) {\n      return <FormattedMessage id=\"topNavigation.takeover\" />;\n    } else {\n      return <FormattedMessage id=\"topNavigation.lock\" />;\n    }\n  };\n\n  return (\n    <div className=\"lock-state-handler\">\n      <div role=\"button\" tabIndex=\"0\" className=\"lock-config-button\" onClick={handleClick}>\n        {configLock.isLockedBySameUser(loggedUser) ? <PadlockIcon /> : <LockIcon />}\n        <p>{renderLabelBasedOnLockStatus()}</p>\n      </div>\n      <div className=\"lock-status\">\n        <p>Status: {configLock.isLocked() ? 'Locked' : 'Unlocked'}</p>\n        <p>User: {configLock.owner}</p>\n        <p>Host: {configLock.isLocked() ? configLock.host : '0.0.0.0'}</p>\n      </div>\n      {renderFormDialog()}\n      {renderAlertDialogs()}\n    </div>\n  );\n};\n\nexport default LockStateHandler;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport './style.scss';\nimport MenuList from '../../../../components/MenuList';\nimport allModes from '../../../../utils/modes';\nimport { canReadSVOMode, canEditSVOMode } from '../../../../utils/permissions';\n\nconst ModeSwitch = ({ changeMode, currentMode, modes, open, handleClose, enabled }) => {\n  const myPermissions = useSelector((state) => state.app.myPermissions);\n  const selectableModes = Object.keys(modes).filter((m) => m !== 'unknownMode');\n  const canRead = canReadSVOMode(myPermissions);\n  const canEdit = canEditSVOMode(myPermissions);\n  const menuItems = selectableModes.map((key) => ({\n    key: key,\n    onClick: () => {\n      changeMode(key, modes[key].id);\n    },\n    caption: <FormattedMessage id={key} />,\n    img: modes[key].iconSrc,\n  }));\n\n  return canRead || canEdit ? (\n    <div>\n      <MenuList\n        buttonCaption={currentMode}\n        buttonIcon={modes[currentMode.props.id].iconSrc}\n        menuItems={menuItems}\n        onClose={handleClose}\n        open={open}\n        showBottomArrow\n        enabled={enabled && canEdit}\n      />\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n\nModeSwitch.defaultProps = {\n  open: false,\n  currentMode: undefined,\n  modes: allModes,\n  handleClose: () => void 0,\n};\n\nexport const modeShape = PropTypes.shape({\n  id: PropTypes.string,\n  iconSrc: PropTypes.string,\n  text: PropTypes.string,\n});\n\nModeSwitch.propTypes = {\n  changeMode: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n  anchorEl: PropTypes.node,\n  handleRequestClose: PropTypes.func.isRequired,\n  openModePopover: PropTypes.func.isRequired,\n  currentMode: PropTypes.node,\n  modes: modeShape,\n};\n\nexport default ModeSwitch;\n","export default __webpack_public_path__ + \"static/media/description.7b05d18e.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport shortId from 'shortid';\n\nimport './style.scss';\n\nimport OutsideClickHandler from '../../../../../src/components/OutsideClickHandler';\nimport LogIcon from '../../../../assets/icons/description.svg';\nimport { canReadLogs } from '../../../../utils/permissions';\n\nclass StatusReport extends Component {\n  state = {\n    statusListActive: false,\n  };\n\n  closeStatusList = () => {\n    this.setState({ statusListActive: false });\n  };\n\n  render() {\n    const { notifications, myPermissions } = this.props;\n    return canReadLogs(myPermissions) ? (\n      <OutsideClickHandler\n        onOutsideClick={() => {\n          this.closeStatusList();\n        }}\n        ref={(ref) => {\n          this.wrapper = ref;\n        }}\n      >\n        {notifications && notifications.length > 0 ? (\n          <div style={{ position: 'relative' }}>\n            <div\n              role=\"button\"\n              tabIndex=\"0\"\n              className=\"status-bar\"\n              onClick={() => {\n                this.setState({\n                  statusListActive: !this.state.statusListActive,\n                });\n              }}\n            >\n              <img src={LogIcon} alt=\"Log\" />\n              <p className={`${notifications[0].type} pb1 ma0 `}>{notifications[0].message}</p>\n            </div>\n            <div className=\"bottomArrow\"></div>\n            <div className={`status-list ${this.state.statusListActive ? '' : 'hidden'}`}>\n              <div className=\"status-container\">\n                {notifications.map((notification) => (\n                  <p key={shortId.generate()} className={`${notification.type} status`}>\n                    {notification.timestamp}: <b>{notification.message}</b>{' '}\n                    {notification.count > 1 ? `(${notification.count})` : ''}\n                  </p>\n                ))}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </OutsideClickHandler>\n    ) : (\n      <div></div>\n    );\n  }\n}\n\nStatusReport.defaultProps = {\n  notifications: undefined,\n};\n\nStatusReport.propTypes = {\n  notifications: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string,\n    }),\n  ),\n};\n\nconst mapStateToProps = (state) => ({\n  notifications: state.app.notifications,\n  myPermissions: state.app.myPermissions,\n});\n\nexport default connect(mapStateToProps)(injectIntl(StatusReport));\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport KoerberLogo from '../../assets/logo/logo.svg';\nimport Logo from '../../components/layout/Logo';\nimport {\n  setTopNavHidden,\n  setViewSetForMode,\n  setViewSet,\n  setCurrentMode,\n  setPausedInspections,\n} from '../../redux/actions';\nimport modes from '../../utils/modes';\nimport ViewSetFactory from '../ViewSetFactory';\nimport DateTime from './components/DateTime';\nimport { InspectionStateSwitch } from './components/InspectionStateSwitch';\nimport LanguageChoooser from './components/LanguageChooser';\nimport LockStateHandler from './components/LockStateHandler';\nimport ModeSwitch from './components/ModeSwitch';\nimport StatusReport from './components/StatusReport';\nimport UserInfo from './components/UserInfo';\nconst viewSetFactory = new ViewSetFactory();\n\nclass TopNavigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      open: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRequestClose = this.handleRequestClose.bind(this);\n  }\n\n  handleChange = (event, index, value) => this.setState({ value });\n  openModePopover = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      anchorEl: event.currentTarget,\n      open: true,\n    });\n  };\n\n  handleRequestClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  changeMode = (modeKey, modeId) => {\n    this.props.setCurrentMode(modeId);\n    this.handleRequestClose();\n  };\n\n  mapModeIdToKey(modeId) {\n    return Object.keys(modes).find((modeKey) => modes[modeKey].id === modeId);\n  }\n\n  getConfigName = () => {\n    const { configuration, isSVOConfigLoaded } = this.props;\n    if (!isSVOConfigLoaded) {\n      return <FormattedMessage id=\"noConfigName\" />;\n    }\n    if (!configuration || !configuration.name) {\n      return <FormattedMessage id=\"unknownConfigName\" />;\n    }\n    return <span>{configuration.name}</span>;\n  };\n\n  render() {\n    const { topNavHidden, isSVOConfigLoaded } = this.props;\n    const currentMode = this.props.currentMode || modes.unknownMode.id;\n    const currentModeKey = this.mapModeIdToKey(currentMode);\n    const currentModeFormatted = <FormattedMessage id={currentModeKey} />;\n    const configName = this.getConfigName();\n    const navClass = classNames({\n      nav: true,\n      'nav-hidden': topNavHidden,\n    });\n    return (\n      <div className={navClass}>\n        <button\n          className=\"hider\"\n          onClick={() => {\n            this.props.setTopNavHidden(!topNavHidden);\n          }}\n        >\n          {topNavHidden ? 'show' : 'hide'}\n        </button>\n        <div className=\"flex-container\">\n          <div className=\"config-wrapper\">\n            <Logo src={KoerberLogo} title=\"logo\" />\n            {this.props.unsavedChanges ? (\n              <div style={{ fontStyle: 'italic' }}>{configName}*</div>\n            ) : (\n              configName\n            )}\n          </div>\n          <ModeSwitch\n            changeMode={this.changeMode}\n            open={this.state.open}\n            anchorEl={this.state.anchorEl}\n            handleRequestClose={this.handleRequestClose}\n            openModePopover={this.openModePopover}\n            currentMode={currentModeFormatted}\n            enabled={isSVOConfigLoaded}\n          />\n          <StatusReport />\n          {isSVOConfigLoaded && <InspectionStateSwitch />}\n        </div>\n        <div className=\"flex-container\">\n          <LockStateHandler />\n          <UserInfo onChangeUser={() => void 0} onLoggedOut={this.props.onLoggedOut} />\n          <LanguageChoooser />\n          <div className=\"separator\">\n            <DateTime date={new Date()} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTopNavigation.defaultProps = {\n  fullscreenMode: false,\n  currentMode: undefined,\n};\n\nTopNavigation.propTypes = {\n  changeViewSet: PropTypes.func.isRequired,\n  setViewSetForMode: PropTypes.func.isRequired,\n  setTopNavHidden: PropTypes.func.isRequired,\n  setCurrentMode: PropTypes.func.isRequired,\n  setPausedInspections: PropTypes.func.isRequired,\n  saveOperationInProcess: PropTypes.bool.isRequired,\n  currentMode: PropTypes.string,\n  topNavHidden: PropTypes.bool.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTopNavHidden: (hidden) => dispatch(setTopNavHidden(hidden)),\n  setViewSetForMode: (mode) => dispatch(setViewSetForMode(mode)),\n  changeViewSet: (viewSetId) => dispatch(setViewSet(viewSetFactory.getViewSet(viewSetId))),\n  setCurrentMode: (modeId) => dispatch(setCurrentMode(modeId)),\n  setPausedInspections: (pausedInspections) => dispatch(setPausedInspections(pausedInspections)),\n});\n\nconst mapStateToProps = (state) => ({\n  activeAppState: state.app.activeAppState,\n  appStateConnection: state.app.appStateConnection,\n  appMode: state.app.mode,\n  currentMode: state.app.currentMode,\n  fullscreenMode: state.viewSet.fullscreenMode,\n  saveOperationInProcess: state.app.saveOperationInProcess,\n  configuration: state.app.configuration,\n  topNavHidden: state.viewSet.topNavHidden,\n  proxy: state.app.proxy,\n  pausedInspections: state.app.pausedInspections,\n  isSVOConfigLoaded: state.viewSet.isSVOConfigLoaded,\n  unsavedChanges: state.viewSet.unsavedChanges,\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(TopNavigation));\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\n\nclass NoSVOConfigurationLoadedView extends Component {\n  render() {\n    return (\n      <div className=\"no-config-loaded-wrapper\">\n        <FormattedMessage id=\"noConfigLoaded\" />\n      </div>\n    );\n  }\n}\n\nexport default NoSVOConfigurationLoadedView;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nclass ListSelection extends Component {\n  render() {\n    const { headline, selectionItems, onSelection, cancelButtonProps, showCancel } = this.props;\n\n    return (\n      <div>\n        <h3>{headline}</h3>\n        <ul className=\"list-wrapper\">\n          {selectionItems.map((item) => (\n            <li className=\"selection-item\" key={`li${item.id}`}>\n              <Button\n                variant=\"outlined\"\n                key={`button${item.id}`}\n                onClick={() => onSelection(item.id)}\n              >\n                {item.icon && <img src={item.icon} alt=\"inspection.name\" className=\"image-item\" />}\n                {item.text}\n              </Button>\n            </li>\n          ))}\n          {showCancel ? (\n            <li className=\"selection-item\" key=\"liCancel\">\n              <Button variant=\"contained\" color=\"primary\" onClick={cancelButtonProps.goBack}>\n                {cancelButtonProps.icon && (\n                  <img src={cancelButtonProps.icon} alt=\"type.id\" className=\"image-item\" />\n                )}\n                {cancelButtonProps.text}\n              </Button>\n            </li>\n          ) : null}\n        </ul>\n      </div>\n    );\n  }\n}\n\nListSelection.defaultProps = {\n  showCancel: false,\n  headline: '',\n  selectionItems: [],\n  cancelButtonProps: {},\n};\n\nListSelection.propTypes = {\n  headline: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  selectionItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      text: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n      icon: PropTypes.string,\n    }),\n  ),\n  showCancel: PropTypes.bool,\n  onSelection: PropTypes.func.isRequired,\n  cancelButtonProps: PropTypes.shape({\n    text: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    icon: PropTypes.string,\n    goBack: PropTypes.func,\n  }),\n};\n\nexport default ListSelection;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport BackIcon from '../../../../assets/icons/back.svg';\nimport InspectionIcon from '../../../../assets/icons/show.svg';\nimport ListSelection from '../../../../components/ListSelection';\n\nclass InspectionSelection extends Component {\n  getSelectionItems = () => {\n    const { configuration } = this.props;\n    const inspections = (configuration && configuration.getInspections()) || [];\n    const items = inspections.map((inspection) => {\n      return {\n        id: inspection.id,\n        text: inspection.name,\n        icon: InspectionIcon,\n      };\n    });\n\n    return items;\n  };\n\n  render() {\n    const { onSelection, goBack, showCancel } = this.props;\n    const cancelButtonProps = {\n      text: <FormattedMessage id=\"viewTypeSelection.back\" />,\n      icon: BackIcon,\n      goBack,\n    };\n\n    const selectionItems = this.getSelectionItems();\n\n    return (\n      <div>\n        <ListSelection\n          headline={<FormattedMessage id=\"inspectionSelection.selectInspection\" />}\n          onSelection={onSelection}\n          cancelButtonProps={cancelButtonProps}\n          showCancel={showCancel}\n          selectionItems={selectionItems}\n        />\n      </div>\n    );\n  }\n}\n\nInspectionSelection.defaultProps = {};\n\nInspectionSelection.propTypes = {\n  onSelection: PropTypes.func.isRequired,\n  configuration: PropTypes.object,\n  goBack: PropTypes.func,\n  showCancel: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  configuration: state.app.configuration,\n});\n\nexport default connect(mapStateToProps)(InspectionSelection);\n","export default __webpack_public_path__ + \"static/media/filmstrip.c43ef800.svg\";","export default __webpack_public_path__ + \"static/media/list.7380903e.svg\";","export default __webpack_public_path__ + \"static/media/parameter.417d04e6.svg\";","export default __webpack_public_path__ + \"static/media/toolset.f1f1d3b2.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport BackIcon from '../../../../assets/icons/back.svg';\nimport ImageStripViewIcon from '../../../../assets/icons/filmstrip.svg';\nimport ImageViewIcon from '../../../../assets/icons/image.svg';\nimport ListViewIcon from '../../../../assets/icons/list.svg';\nimport ParameterViewIcon from '../../../../assets/icons/parameter.svg';\nimport toolsetIcon from '../../../../assets/icons/toolset.svg';\nimport ListSelection from '../../../../components/ListSelection';\nimport {\n  canAddImageView,\n  canAddListView,\n  canAddImageStripView,\n  canAddParameterView,\n  canAddToolSetView,\n} from '../../../../utils/permissions';\nimport {\n  PARAMETER_VIEW,\n  IMAGE_VIEW,\n  IMAGE_STRIP_VIEW,\n  LIST_VIEW,\n  TOOLSET_VIEW,\n} from '../../../ViewSetFactory';\n\nclass ViewTypeSelection extends Component {\n  render() {\n    const { onSelection, goBack, myPermissions } = this.props;\n    const inspectionTypes = [];\n    if (canAddImageView(myPermissions)) {\n      inspectionTypes.push({\n        id: IMAGE_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.imageView\" />,\n        icon: ImageViewIcon,\n      });\n    }\n\n    if (canAddParameterView(myPermissions)) {\n      inspectionTypes.push({\n        id: PARAMETER_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.parameterView\" />,\n        icon: ParameterViewIcon,\n      });\n    }\n\n    if (canAddImageStripView(myPermissions)) {\n      inspectionTypes.push({\n        id: IMAGE_STRIP_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.imageStripView\" />,\n        icon: ImageStripViewIcon,\n      });\n    }\n\n    if (canAddListView(myPermissions)) {\n      inspectionTypes.push({\n        id: LIST_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.ListView\" />,\n        icon: ListViewIcon,\n      });\n    }\n\n    if (canAddToolSetView(myPermissions)) {\n      inspectionTypes.push({\n        id: TOOLSET_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.toolset\" />,\n        icon: toolsetIcon,\n      });\n    }\n\n    const cancelButtonProps = {\n      text: <FormattedMessage id=\"viewTypeSelection.back\" />,\n      icon: BackIcon,\n      goBack,\n    };\n\n    return (\n      <div>\n        <ListSelection\n          headline={<FormattedMessage id=\"viewTypeSelection.selectViewType\" />}\n          onSelection={onSelection}\n          cancelButtonProps={cancelButtonProps}\n          showCancel={true}\n          selectionItems={inspectionTypes}\n        />\n      </div>\n    );\n  }\n}\n\nViewTypeSelection.defaultProps = {};\n\nViewTypeSelection.propTypes = {\n  onSelection: PropTypes.func.isRequired,\n  goBack: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  myPermissions: state.app.myPermissions,\n});\n\nexport default connect(mapStateToProps)(ViewTypeSelection);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { replaceViewInCurrentViewSet, purgeViewState } from '../../redux/actions';\nimport InspectionSelection from './components/InspectionSelection';\nimport ViewTypeSelection from './components/ViewTypeSelection';\nimport './style.scss';\n\nclass ViewSelection extends Component {\n  state = {\n    visibleComponent: 'ViewTypeSelection',\n    selectedInspectionId: 0,\n    selectedViewType: '',\n  };\n\n  componentDidMount() {\n    const { viewToShowWithoutInspection } = this.props;\n\n    if (viewToShowWithoutInspection) {\n      this.setState({\n        visibleComponent: 'InspectionSelection',\n        selectedViewType: viewToShowWithoutInspection,\n      });\n    }\n  }\n\n  setSelectedInspectionId = (inspectionId) => {\n    this.setState({\n      visibleComponent: '',\n      selectedInspectionId: inspectionId,\n    });\n\n    this.props.changeTitle(inspectionId);\n    this.updateView(inspectionId);\n  };\n\n  setSelectedViewType = (viewType) => {\n    this.setState({\n      visibleComponent: 'InspectionSelection',\n      selectedViewType: viewType,\n    });\n  };\n\n  goBackToViewTypeSelection = () => {\n    this.setState({\n      visibleComponent: 'ViewTypeSelection',\n      selectedInspectionId: 0,\n    });\n  };\n\n  cancelViewSelection = () => {\n    const { changeContent } = this.props;\n    changeContent();\n  };\n\n  updateView = (inspectionId) => {\n    const { replaceViewInCurrentViewSet, viewId, changeContent } = this.props;\n    const { selectedViewType } = this.state;\n\n    replaceViewInCurrentViewSet(viewId, selectedViewType, inspectionId);\n\n    changeContent();\n  };\n\n  render() {\n    const { showCancel } = this.props;\n    const { visibleComponent } = this.state;\n\n    return (\n      <div className=\"view-selection-wrapper\">\n        {(() => {\n          switch (visibleComponent) {\n            case 'InspectionSelection':\n              return (\n                <InspectionSelection\n                  onSelection={this.setSelectedInspectionId}\n                  goBack={this.goBackToViewTypeSelection}\n                  showCancel={showCancel}\n                />\n              );\n            case 'ViewTypeSelection':\n              return (\n                <ViewTypeSelection\n                  onSelection={this.setSelectedViewType}\n                  goBack={this.cancelViewSelection}\n                />\n              );\n            default:\n              return <div></div>;\n          }\n        })()}\n      </div>\n    );\n  }\n}\n\nViewSelection.propTypes = {\n  replaceViewInCurrentViewSet: PropTypes.func.isRequired,\n  viewId: PropTypes.string.isRequired,\n  changeContent: PropTypes.func,\n  changeTitle: PropTypes.func,\n  showCancel: PropTypes.bool,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  replaceViewInCurrentViewSet: (viewId, replacementComponentId, inspectionId) => {\n    dispatch(purgeViewState(undefined, viewId));\n    dispatch(replaceViewInCurrentViewSet(viewId, replacementComponentId, inspectionId));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(ViewSelection);\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { MosaicWindow, SplitButton } from 'react-mosaic-component';\nimport { connect } from 'react-redux';\nimport shortId from 'shortid';\n\nimport CloseIcon from '../../assets/icons/close.svg';\nimport EditIcon from '../../assets/icons/edit.svg';\nimport KeyHandler from '../../components/KeyHandler';\nimport IconButton from '../../components/buttons/IconButton';\nimport { isObjectValid } from '../../utils/objectValidator';\nimport {\n  canEditViewSet,\n  canEditImageView,\n  canEditListView,\n  canEditImageStripView,\n  canEditParameterView,\n  canEditToolSetView,\n  canDeleteImageView,\n  canDeleteListView,\n  canDeleteImageStripView,\n  canDeleteParameterView,\n  canDeleteToolSetView,\n} from '../../utils/permissions';\nimport ViewSetFactory, {\n  IMAGE_VIEW,\n  LIST_VIEW,\n  PARAMETER_VIEW,\n  IMAGE_STRIP_VIEW,\n  TOOLSET_VIEW,\n} from '../../views/ViewSetFactory';\nimport NoSVOConfigurationLoadedView from '../NoSVOConfigurationLoadedView';\nimport ViewSelection from '../ViewSelection';\nimport { mosaicViewType } from './types';\n\nconst viewSetFactory = new ViewSetFactory();\n\nclass SVOView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFullscreen: false,\n      resetView: false,\n      selectedInspectionId: 0,\n      isConfirmOpen: false,\n    };\n  }\n\n  setFullscreen = (isFullscreen) =>\n    // this function can be triggered from reducer\n    // where state modifications are not allowed\n    setTimeout(() => this.setState({ isFullscreen }), 0);\n\n  resetView = () => {\n    this.setState({\n      resetView: true,\n    });\n  };\n\n  removeIdsForUnknownInspectionIds = (currentViewSet, inspectionIds) => {\n    const viewSet = currentViewSet.viewSet;\n\n    Object.keys(viewSet).forEach((viewId) => {\n      const inspectionId = viewSet[viewId].inspectionId;\n      if (!inspectionIds.includes(inspectionId)) {\n        delete viewSet[viewId].id;\n        delete viewSet[viewId].inspectionId;\n      }\n    });\n  };\n\n  canEditCurrentView = () => {\n    const { id, views, myPermissions } = this.props;\n    if (views && views.viewSet && views.viewSet[id]) {\n      switch (views.viewSet[id].viewComponentClassId) {\n        case IMAGE_VIEW:\n          return canEditImageView(myPermissions);\n        case LIST_VIEW:\n          return canEditListView(myPermissions);\n        case IMAGE_STRIP_VIEW:\n          return canEditImageStripView(myPermissions);\n        case PARAMETER_VIEW:\n          return canEditParameterView(myPermissions);\n        case TOOLSET_VIEW:\n          return canEditToolSetView(myPermissions);\n        default:\n          return false;\n      }\n    }\n\n    return false;\n  };\n\n  canDeleteCurrentView = () => {\n    const { id, views, myPermissions } = this.props;\n    if (views && views.viewSet && views.viewSet[id]) {\n      switch (views.viewSet[id].viewComponentClassId) {\n        case IMAGE_VIEW:\n          return canDeleteImageView(myPermissions);\n        case LIST_VIEW:\n          return canDeleteListView(myPermissions);\n        case IMAGE_STRIP_VIEW:\n          return canDeleteImageStripView(myPermissions);\n        case PARAMETER_VIEW:\n          return canDeleteParameterView(myPermissions);\n        case TOOLSET_VIEW:\n          return canDeleteToolSetView(myPermissions);\n        default:\n          return false;\n      }\n    }\n\n    return false;\n  };\n\n  getInspectionId = () => {\n    const { id, views } = this.props;\n    const { selectedInspectionId } = this.state;\n\n    return selectedInspectionId || (views.viewSet[id] && views.viewSet[id].inspectionId);\n  };\n\n  render() {\n    const {\n      configuration,\n      id,\n      path,\n      views,\n      dispatch,\n      editingViewIds,\n      intl,\n      windowName,\n      isSVOConfigLoaded,\n      myPermissions,\n    } = this.props;\n    const { isFullscreen, resetView, selectedInspectionId } = this.state;\n    const viewClass = classNames({\n      fullscreen: isFullscreen,\n      'editing-focus': editingViewIds.includes(id),\n    });\n\n    const inspectionId = this.getInspectionId();\n    let inspectionName = '<UNKNOWN INSPECTION>';\n    if (configuration) {\n      const name = configuration.getInspectionName(inspectionId);\n      if (name && name.length > 0) {\n        inspectionName = `[${name}]`;\n      }\n      if (windowName && !resetView) {\n        inspectionName = `${inspectionName} ${windowName}`;\n      }\n\n      const currentInspections =\n        configuration &&\n        configuration.inspections &&\n        configuration.inspections.map((inspection) => inspection.id);\n      if (currentInspections) {\n        this.removeIdsForUnknownInspectionIds(views, currentInspections);\n      }\n    }\n\n    const hasInspectionId = views.viewSet && views.viewSet[id] && views.viewSet[id].inspectionId;\n    const viewToShowWithoutInspection =\n      !hasInspectionId &&\n      views.viewSet &&\n      views.viewSet[id] &&\n      views.viewSet[id].viewComponentClassId;\n\n    const toolbarControls = [];\n\n    if (canEditViewSet(myPermissions)) {\n      toolbarControls.push(<SplitButton key=\"splitButton\" />);\n    }\n\n    if (this.canEditCurrentView()) {\n      toolbarControls.push(\n        <IconButton\n          tooltip={intl.messages['viewTypeSelection.chooseViewTooltip']}\n          onClick={() => this.resetView(id)}\n          iconUrl={EditIcon}\n          key=\"swapButton\"\n        />,\n      );\n    }\n\n    if (resetView || !hasInspectionId || this.canDeleteCurrentView()) {\n      toolbarControls.push(\n        <IconButton\n          tooltip={intl.messages['svoView.closeView']}\n          onClick={() => this.props.onCloseView()}\n          iconUrl={CloseIcon}\n          key=\"customRemoveButton\"\n          style={{ width: '18px', height: '18px' }}\n        />,\n      );\n    }\n\n    return (\n      <MosaicWindow\n        className={viewClass}\n        createNode={() => shortId.generate()}\n        title={\n          (selectedInspectionId ||\n            (views.viewSet && views.viewSet[id] && views.viewSet[id].titleId)) &&\n          this.props.intl.formatMessage(\n            {\n              id:\n                selectedInspectionId || windowName\n                  ? 'svoView.emptyViewInspectionTemplate'\n                  : views.viewSet[id].titleId,\n            },\n            {\n              inspectionName,\n            },\n          )\n        }\n        toolbarControls={isSVOConfigLoaded ? toolbarControls : []}\n        path={path}\n        draggable={canEditViewSet(myPermissions)}\n      >\n        <KeyHandler view={this} dispatch={dispatch} editingViewIds={editingViewIds}>\n          {!resetView && hasInspectionId ? (\n            viewSetFactory.createViewInstance(views.viewSet[id], {\n              ...views.viewSet[id].passedProps,\n              id,\n              inspectionId: views.viewSet[id].inspectionId,\n            })\n          ) : isSVOConfigLoaded ? (\n            <ViewSelection\n              viewId={id}\n              changeContent={() => this.setState({ resetView: false, selectedInspectionId: 0 })}\n              changeTitle={(selectedInspectionId) => this.setState({ selectedInspectionId })}\n              showCancel={resetView}\n              viewToShowWithoutInspection={viewToShowWithoutInspection}\n            />\n          ) : (\n            <NoSVOConfigurationLoadedView />\n          )}\n        </KeyHandler>\n      </MosaicWindow>\n    );\n  }\n}\n\nSVOView.defaultProps = {\n  editingViewIds: [],\n};\n\nSVOView.propTypes = {\n  id: PropTypes.string.isRequired,\n  path: PropTypes.arrayOf(PropTypes.string).isRequired,\n  views: mosaicViewType.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  editingViewIds: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { views, id } = ownProps;\n  const inspectionId = isObjectValid(() => views.viewSet[id].inspectionId);\n  const configuration = state.app.configuration;\n  const isSVOConfigLoaded = state.viewSet.isSVOConfigLoaded;\n  const myPermissions = state.app.myPermissions;\n\n  let windowName = isObjectValid(() => state.inspections[inspectionId].views[id].windowName);\n  if (windowName) {\n    const inspectionName = configuration.getInspectionName(inspectionId);\n    windowName = windowName.replace(`Inspections.${inspectionName}.`, '');\n    return {\n      configuration,\n      windowName,\n      isSVOConfigLoaded,\n      myPermissions,\n    };\n  }\n  return {\n    configuration,\n    isSVOConfigLoaded,\n    myPermissions,\n  };\n};\n\nconst mapDispatchToProps = () => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(SVOView));\n","import React, { useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Mosaic, MosaicContext } from 'react-mosaic-component';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport {\n  increaseViewSizeChangeCounter,\n  purgeViewState,\n  clearCurrentView,\n} from '../../redux/actions/index';\nimport { canEditViewSet } from '../../utils/permissions';\nimport SVOView from './SVOView';\nimport { mosaicViewType } from './types';\n\nconst ViewSet = ({\n  views,\n  onChange,\n  topNavHidden,\n  bottomNavHidden,\n  increaseChangeCounter,\n  dispatch,\n  inspections,\n  myPermissions,\n}) => {\n  const mosaic = useRef(null);\n  const [viewToClose, setViewToClose] = useState(undefined);\n  const viewSetClass = classNames({\n    'view-set-wrapper': true,\n    'bottom-nav-offset': !bottomNavHidden,\n    'top-nav-hidden': !topNavHidden,\n  });\n\n  if (!views) {\n    return false;\n  }\n  const editingViewIds = Object.keys(inspections).map(\n    (inspection) =>\n      inspections[inspection].sharedState && inspections[inspection].sharedState.editingViewId,\n  );\n\n  const handleConfirmDialogClose = (confirmed) => {\n    if (confirmed) {\n      closeView();\n    }\n    setViewToClose(undefined);\n  };\n\n  const oneViewInViewset = () => {\n    return typeof views.initialValue === 'string';\n  };\n\n  const closeView = () => {\n    const { viewId, path, remove } = viewToClose;\n    const inspectionId = views.viewSet[viewId] && views.viewSet[viewId].inspectionId;\n    if (oneViewInViewset()) {\n      dispatch(clearCurrentView());\n    }\n    dispatch(purgeViewState(inspectionId, viewId));\n\n    remove(path);\n  };\n\n  return (\n    <div className={viewSetClass}>\n      <ConfirmDialog\n        open={viewToClose !== undefined}\n        onClose={(confirmed) => handleConfirmDialogClose(confirmed)}\n        message={<FormattedMessage id=\"svoView.closeViewConfirmation\" />}\n      />\n      <Mosaic\n        onChange={(layout) => {\n          onChange(layout);\n          increaseChangeCounter();\n        }}\n        ref={mosaic}\n        renderTile={(id, path) => (\n          <MosaicContext.Consumer>\n            {({ mosaicActions }) => {\n              const { remove } = mosaicActions;\n              return (\n                <SVOView\n                  id={id}\n                  path={path}\n                  views={views}\n                  dispatch={dispatch}\n                  editingViewIds={editingViewIds}\n                  onCloseView={() => {\n                    setViewToClose({ viewId: id, path, remove });\n                  }}\n                />\n              );\n            }}\n          </MosaicContext.Consumer>\n        )}\n        initialValue={views.initialValue}\n        resize={canEditViewSet(myPermissions) ? '' : 'DISABLED'}\n      />\n    </div>\n  );\n};\n\nViewSet.defaultProps = {\n  topNavHidden: false,\n  bottomNavHidden: false,\n  views: undefined,\n};\n\nViewSet.propTypes = {\n  views: mosaicViewType,\n  onChange: PropTypes.func.isRequired,\n  topNavHidden: PropTypes.bool,\n  bottomNavHidden: PropTypes.bool,\n  increaseChangeCounter: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  inspections: state.inspections,\n  myPermissions: state.app.myPermissions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  increaseChangeCounter: () => dispatch(increaseViewSizeChangeCounter()),\n  dispatch: (action) => dispatch(action),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewSet);\n","import React, { Component } from 'react';\nimport throttle from 'lodash/throttle';\nimport PropTypes from 'prop-types';\nimport { IntlProvider } from 'react-intl';\nimport { connect, ReactReduxContext } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport ModalNotification from '../components/ModalNotification.js';\nimport ProtobufType from '../components/Protobuf/ProtobufType';\nimport {\n  setViewSet,\n  setCurrentLayout,\n  addConnectionEstablishedNotification,\n  addConnectionLostNotification,\n  saveClientChunk,\n  closeHelpView,\n  increaseViewSizeChangeCounter,\n  changeViewSetAfterLoading,\n} from '../redux/actions';\nimport translations from '../translations';\nimport BottomNavigation from '../views/BottomNavigation';\nimport HelpView from '../views/HelpView';\nimport TopNavigation from '../views/TopNavigation';\nimport ViewSet from '../views/ViewSet';\nimport ViewSetFactory, { DEFAULT_VIEWSET } from '../views/ViewSetFactory';\n\nclass SVObserver extends Component {\n  static contextType = ReactReduxContext;\n  state = {\n    viewSetFactory: new ViewSetFactory(),\n    throttledWindwResizeHandler: throttle(() => this.props.increaseChangeCounter(), 500),\n  };\n\n  handleBeforeUnload(event) {\n    event.preventDefault();\n    event.returnValue = '';\n  }\n\n  componentDidMount() {\n    if (!this.props.currentViewSet) {\n      const viewSetId = DEFAULT_VIEWSET;\n      const viewSet = this.state.viewSetFactory.getViewSet(viewSetId);\n      this.props.setViewSet(viewSet, viewSet.id);\n    }\n\n    if (this.props.defaultViewSetName) {\n      this.props.changeViewSetAfterLoading(this.props.defaultViewSetName);\n    }\n\n    if (this.props.protobuf && this.props.socket) {\n      this.onWebsocketConnect(this.props.protobuf);\n    }\n\n    window.addEventListener('resize', this.state.throttledWindwResizeHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.state.throttledWindwResizeHandler);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.socket !== this.props.socket && nextProps.protobuf && nextProps.socket) {\n      this.onWebsocketConnect(nextProps.protobuf);\n    }\n    if (nextProps.socket !== this.props.socket && !nextProps.socket) {\n      this.onWebsocketDisconnect();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { unsavedChanges } = this.props;\n    if (unsavedChanges && prevProps.currentViewSet) {\n      window.addEventListener('beforeunload', this.handleBeforeUnload);\n    } else {\n      window.removeEventListener('beforeunload', this.handleBeforeUnload);\n    }\n  }\n\n  onWebsocketConnect = async () => {\n    this.props.addConnectionEstablishedNotification();\n  };\n\n  onWebsocketDisconnect = () => {\n    this.props.addConnectionLostNotification();\n  };\n\n  render() {\n    const {\n      locale,\n      currentViewSet,\n      bottomNavHidden,\n      topNavHidden,\n      protobuf,\n      modalNotificationData,\n      isHelpViewOpen,\n      closeHelpView,\n    } = this.props;\n\n    if (!this.props.user || !this.props.authToken) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <IntlProvider locale={locale} messages={translations[locale]}>\n        <div className=\"vh-100 center\">\n          <ModalNotification\n            visible={!!modalNotificationData}\n            message={modalNotificationData && modalNotificationData.message}\n          />\n          <TopNavigation onLoggedOut={this.props.onLoggedOut} />\n          <ViewSet\n            views={currentViewSet}\n            onChange={(layout) => {\n              this.props.setLayout(layout);\n            }}\n            bottomNavHidden={bottomNavHidden}\n            topNavHidden={topNavHidden}\n          />\n          <BottomNavigation\n            onSave={() => {\n              const currentState = this.context.store.getState();\n              this.props.saveClientChunk(protobuf, currentState);\n            }}\n          />\n          <HelpView open={isHelpViewOpen} onClose={() => closeHelpView()}></HelpView>\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n\nSVObserver.defaultProps = {\n  bottomNavHidden: false,\n  topNavHidden: false,\n  protobuf: undefined,\n  viewSetTemplate: undefined,\n  user: undefined,\n  authToken: undefined,\n  location: { state: {} },\n  currentViewSet: undefined,\n};\n\nSVObserver.propTypes = {\n  locale: PropTypes.string.isRequired,\n  user: PropTypes.shape({ name: PropTypes.string }),\n  authToken: PropTypes.string,\n  currentViewSet: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({ id: PropTypes.string }),\n  ]),\n  bottomNavHidden: PropTypes.bool,\n  topNavHidden: PropTypes.bool,\n  setLayout: PropTypes.func.isRequired,\n  setViewSet: PropTypes.func.isRequired,\n  viewSetTemplate: PropTypes.string,\n  addConnectionEstablishedNotification: PropTypes.func.isRequired,\n  addConnectionLostNotification: PropTypes.func.isRequired,\n  protobuf: ProtobufType,\n  location: PropTypes.shape({ state: PropTypes.any }),\n};\n\nconst mapStateToProps = (state) => ({\n  isHelpViewOpen: state.app.isHelpViewOpen,\n  locale: state.app.locale,\n  protobuf: state.app.protobuf,\n  socket: state.app.socket,\n  user: state.app.user,\n  authToken: state.app.authToken,\n  currentViewSet: state.viewSet.currentViewSet,\n  bottomNavHidden: state.viewSet.bottomNavHidden,\n  topNavHidden: state.viewSet.topNavHidden,\n  defaultViewSetName: state.viewSet.defaultViewSetName,\n  createdViewSets: state.app.createdViewSets,\n  modalNotificationData: state.app.modalNotificationData,\n  increaseChangeCounter: PropTypes.func.isRequired,\n  unsavedChanges: state.viewSet.unsavedChanges,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  closeHelpView: () => {\n    dispatch(closeHelpView());\n  },\n  setViewSet: (viewSet, viewSetId) => {\n    dispatch(setViewSet(viewSet, viewSetId));\n  },\n  setLayout: (layout) => {\n    dispatch(setCurrentLayout(layout));\n  },\n  addConnectionEstablishedNotification: () => {\n    dispatch(addConnectionEstablishedNotification());\n  },\n  addConnectionLostNotification: () => {\n    dispatch(addConnectionLostNotification());\n  },\n  saveClientChunk: (protobuf, chunk) => {\n    dispatch(saveClientChunk(protobuf, chunk));\n  },\n  increaseChangeCounter: () => {\n    dispatch(increaseViewSizeChangeCounter());\n  },\n  changeViewSetAfterLoading: (name) => {\n    dispatch(changeViewSetAfterLoading(name));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SVObserver);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport DebuggerPage from './pages/DebuggerPage';\nimport HmiLoginPage from './pages/HmiLoginPage';\nimport LogoutPage from './pages/LogoutPage';\nimport PermissionPage from './pages/PermissionPage';\nimport SVObserver from './pages/SVObserver';\n\nconst App = ({ user, authToken, onLoggedOut }) => {\n  const dispatch = useDispatch();\n  dispatch({\n    type: 'LOG_IN',\n    authToken,\n    user,\n  });\n\n  return (\n    <Router>\n      <div>\n        <Route exact path={'/'} render={() => <Redirect to=\"/app\" />} />\n        <Route\n          path={'/app'}\n          render={(props) => <SVObserver {...props} onLoggedOut={onLoggedOut} />}\n        />\n        <Route path={'/hmi-v1'} component={HmiLoginPage} />\n        <Route path={'/permissions'} component={PermissionPage} />\n        <Route\n          path={'/logout'}\n          render={(props) => <LogoutPage {...props} onLoggedOut={onLoggedOut} />}\n        />\n        <Route path={'/debugger'} component={DebuggerPage} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\n\nimport { logIn } from '../utils/authentication';\n\nconst paperStyle = {\n  width: 400,\n  margin: 20,\n  padding: 25,\n  display: 'inline-block',\n};\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      password: null,\n    };\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    logIn(this.state.username, this.state.password)\n      .then((data) => this.props.onLogin(data))\n      .catch(() => this.setState({ loginFailed: true }));\n  };\n\n  render() {\n    return (\n      <div className=\"flex items-center justify-center\" id=\"login-page\">\n        <Paper elevation={5} style={paperStyle}>\n          {this.state.loginFailed ? <p className=\"red\">Log In failed</p> : null}\n          <form onSubmit={this.onSubmit}>\n            <TextField\n              label=\"Username\"\n              style={{ width: '100%' }}\n              margin=\"dense\"\n              type=\"username\"\n              onChange={(e) => {\n                this.setState({\n                  username: e.target.value,\n                });\n              }}\n            />\n            <br />\n            <TextField\n              label=\"Password\"\n              style={{ width: '100%' }}\n              autoComplete=\"current-password\"\n              margin=\"dense\"\n              type=\"password\"\n              onChange={(e) => {\n                this.setState({\n                  password: e.target.value,\n                });\n              }}\n            />\n            <br />\n            <br />\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              LogIn\n            </Button>\n          </form>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  onLogin: PropTypes.func.isRequired,\n};\n\nexport default LoginPage;\n","import isEqual from 'lodash/isEqual';\n\nimport ConfigurationLock from '../../protobuf/ConfigurationLock';\nimport ProtobufConnector from '../../protobuf/ProtobufConnector';\nimport Proxy from '../../protobuf/Proxy';\nimport { resetState, saveState } from '../../utils/localStorage';\nimport logger from '../../utils/logger';\n\nconst NUMBER_OF_NOTIFICATIONS_SHOWN = 50;\n\nfunction createInitialAppState({ websocketUrl, dispatch, user, authToken }) {\n  const connector = new ProtobufConnector(websocketUrl, dispatch, authToken);\n  const proxy = new Proxy(dispatch);\n  const configurationLock = new ConfigurationLock({});\n  const locale = localStorage.getItem('CURRENT_LOCALE');\n  logger.setProxy(proxy);\n  return {\n    connection: null,\n    notifications: [],\n    mode: 0,\n    navigationHidden: false,\n    locale: locale || 'en',\n    authToken,\n    user,\n    currentMode: null,\n    pausedInspections: [],\n    connector,\n    protobuf: undefined,\n    socket: undefined,\n    proxy,\n    saveOperationInProcess: false,\n    currentClientChunkRevision: 0,\n    modalNotificationData: null,\n    focusedViewType: null,\n    isHelpViewOpen: false,\n    configuration: null,\n    configurationLock,\n    isBrowserWindowVisible: true,\n  };\n}\n\nconst appReducer = (params) => {\n  const initalAppState = createInitialAppState(params);\n  return (state = initalAppState, action) => {\n    switch (action.type) {\n      case 'SET_PROTOBUF_STATIC_INITIALIZED':\n        state.proxy.setProtobufStaticInitialized();\n        return state;\n      case 'SET_PROTOBUF': {\n        const { protobuf, socket } = action;\n        protobuf.onConnect(socket);\n        state.proxy.setProtobuf(protobuf);\n        return Object.assign({}, state, { protobuf, socket });\n      }\n      case 'ADD_NOTIFICATION': {\n        const newNotifications = getNewNotifications(action.notification, state);\n\n        return Object.assign({}, state, {\n          notifications: newNotifications,\n        });\n      }\n      case 'LOG_IN':\n        saveState(action.authToken, action.user);\n        state.connector.connectWithToken(action.authToken);\n        return { ...state, authToken: action.authToken, user: action.user };\n      case 'LOG_OUT':\n        resetState();\n        setTimeout(() => state.connector.disconnect());\n        return state;\n      case 'AUTH_TOKEN_EXPIRED':\n        resetState();\n        return { ...state, authToken: undefined, user: undefined };\n      case 'SET_LOCALE':\n        localStorage.setItem('CURRENT_LOCALE', action.locale);\n        return { ...state, locale: action.locale };\n      case 'ON_NAVIGATION_HIDDEN': {\n        return Object.assign({}, state, {\n          navigationHidden: !state.navigationHidden,\n        });\n      }\n      case 'SHOW_GLOBAL_MESSAGE_OVERLAY': {\n        const { message } = action;\n        logger.info({ message }, 'Showing global message overlay');\n        return {\n          ...state,\n          modalNotificationData: {\n            message,\n          },\n        };\n      }\n      case 'HIDE_GLOBAL_MESSAGE_OVERLAY':\n        logger.info('Hiding global message overlay');\n        return {\n          ...state,\n          modalNotificationData: null,\n        };\n      case 'SET_CURRENT_MODE':\n        state.proxy.setMode(action.mode);\n        return state;\n      case 'SET_CURRENT_MODE_DONE':\n        return {\n          ...state,\n          currentMode: action.mode,\n        };\n      case 'SET_PAUSED_INSPECTIONS':\n        return {\n          ...state,\n          pausedInspections: action.pausedInspections,\n        };\n      case 'UPDATE_CLIENT_CHUNK_REVISION':\n        return {\n          ...state,\n          currentClientChunkRevision: action.revision,\n        };\n\n      case 'UPDATE_SAVE_OPERATION_IN_PROCESS':\n        return {\n          ...state,\n          saveOperationInProcess: action.inProcess,\n        };\n      case 'SET_CONFIGURATION':\n        return {\n          ...state,\n          configuration: action.configuration,\n        };\n      case 'SET_CONFIGURATION_LOCK':\n        return {\n          ...state,\n          configurationLock: action.configurationLock,\n        };\n      case 'SET_FOCUSED_VIEW_TYPE':\n        return {\n          ...state,\n          focusedViewType: action.viewType,\n        };\n\n      case 'OPEN_HELP_VIEW':\n        return {\n          ...state,\n          isHelpViewOpen: action.isHelpViewOpen,\n        };\n\n      case 'CLOSE_HELP_VIEW':\n        return {\n          ...state,\n          isHelpViewOpen: action.isHelpViewOpen,\n        };\n\n      case 'SET_GROUP_PERMISSIONS':\n        return {\n          ...state,\n          groupPermissions: action.groupPermissions,\n        };\n\n      case 'SET_MY_PERMISSIONS':\n        return {\n          ...state,\n          myPermissions: action.myPermissions,\n        };\n\n      case 'SET_BROWSER_WINDOW_VISIBILITY':\n        return {\n          ...state,\n          isBrowserWindowVisible: action.visible,\n        };\n      default:\n        return state;\n    }\n  };\n};\n\nfunction getNewNotifications(notification2Add, state) {\n  let newNotifications = [...state.notifications];\n  let notification = addTimestampToNotification(notification2Add, state.locale);\n\n  const equalsLastNotification = equalsLastNotificationCurrentNotification(\n    notification,\n    newNotifications,\n  );\n\n  if (!equalsLastNotification) {\n    notification = setCountForNotification(notification);\n    newNotifications.unshift(notification);\n  } else {\n    newNotifications[0] = setCountForNotification(newNotifications[0]);\n  }\n\n  if (newNotifications && newNotifications.length > NUMBER_OF_NOTIFICATIONS_SHOWN) {\n    newNotifications.splice(-1, 1);\n  }\n\n  return newNotifications;\n}\n\nfunction addTimestampToNotification(notification, locale) {\n  const date = new Date();\n  const dateOptions = { day: '2-digit', month: '2-digit', year: 'numeric' };\n  const timeOptions = { hour: '2-digit', minute: '2-digit', second: '2-digit' };\n  const timestamp = `${date.toLocaleString(locale, dateOptions)} ${date.toLocaleString(\n    locale,\n    timeOptions,\n  )}`;\n\n  notification = {\n    ...notification,\n    timestamp: timestamp,\n  };\n\n  return notification;\n}\n\nfunction equalsLastNotificationCurrentNotification(currentNotification, notifications) {\n  if (notifications && notifications.length > 0) {\n    return isEqual(currentNotification.message, notifications[0].message);\n  }\n\n  return false;\n}\n\nfunction setCountForNotification(notification) {\n  let count = notification.count;\n  if (count === undefined) {\n    count = 1;\n  } else {\n    count++;\n  }\n\n  notification = {\n    ...notification,\n    count,\n  };\n\n  return notification;\n}\n\nexport default appReducer;\n","const initialState = {\n  parameter: [],\n};\n\nconst toolsetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_PARAMETER':\n      return {\n        ...state,\n        parameter: action.parameter,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default toolsetReducer;\n","import omit from 'lodash/omit';\nimport { isObjectValid } from '../../utils/objectValidator';\n\nconst findInspectionForView = (viewId, state) =>\n  Object.keys(state).find(\n    (inspectionId) =>\n      state[inspectionId] && state[inspectionId].views && !!state[inspectionId].views[viewId],\n  );\n\nconst viewDataReducer = (state = {}, action) => {\n  const { inspectionId, viewId, key } = action;\n  switch (action.type) {\n    case 'PURGE_VIEW_STATE': {\n      const inspectionId = action.inspectionId || findInspectionForView(action.viewId, state);\n      if (!inspectionId) {\n        return state;\n      }\n\n      return omit(state, [\n        `${inspectionId}.sharedState.views.${action.viewId}`,\n        `${inspectionId}.views.${action.viewId}`,\n        state[inspectionId].sharedState.editingViewId === action.viewId &&\n          `${inspectionId}.sharedState.editingViewId`,\n      ]);\n    }\n    case 'SET_EDITING_FOCUS': {\n      if (!state[inspectionId]) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...state[inspectionId].sharedState,\n            editingViewId: viewId,\n          },\n        },\n      };\n    }\n\n    case 'SET_LIST_VIEW_ALIASES': {\n      if (!state[inspectionId]) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...state[inspectionId].sharedState,\n            listViewAliases: action.aliases,\n            showAliasesInList: action.showInList,\n          },\n        },\n      };\n    }\n\n    case 'UPDATE_LIST_VIEW_SHOW_ALIASES': {\n      if (!state[inspectionId]) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...state[inspectionId].sharedState,\n            showAliasesInList: action.showInList,\n          },\n        },\n      };\n    }\n\n    case 'SET_VIEW_DATA':\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          views: {\n            ...(state[inspectionId] ? state[inspectionId].views : {}),\n            [viewId]: {\n              ...(state[inspectionId] && state[inspectionId].views\n                ? state[inspectionId].views[viewId]\n                : {}),\n              [key]: action.data,\n            },\n          },\n        },\n      };\n\n    case 'SAVE_IMAGE_SETTINGS':\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          views: {\n            ...(state[inspectionId] ? state[inspectionId].views : {}),\n            [viewId]: {\n              ...(state[inspectionId] && state[inspectionId].views\n                ? state[inspectionId].views[viewId]\n                : {}),\n              zoomFactor: action.zoomFactor,\n              imagePosition: action.imagePosition,\n            },\n          },\n        },\n      };\n\n    case 'SET_SHARED_STATE_DATA': {\n      const editingViewId = action.viewId || state[inspectionId].sharedState.editingViewId;\n      const newState = {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...(state[inspectionId] ? state[inspectionId].sharedState : {}),\n            views: {\n              ...(state[inspectionId] ? state[inspectionId].sharedState.views : {}),\n              [editingViewId]: {\n                ...(state[inspectionId]\n                  ? state[inspectionId].sharedState.views[editingViewId]\n                  : {}),\n                [key]: action.data,\n              },\n            },\n          },\n        },\n      };\n      return newState;\n    }\n\n    case 'INIT_VIEW_STATE': {\n      const { initState, initSharedState } = action;\n\n      const newState = {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...(state[inspectionId] ? state[inspectionId].sharedState : {}),\n            views: {\n              ...(state[inspectionId] ? state[inspectionId].sharedState.views : {}),\n              [viewId]: isObjectValid(() => state[inspectionId].sharedState.views[viewId])\n                ? {\n                    ...initSharedState,\n                    ...state[inspectionId].sharedState.views[viewId],\n                  }\n                : initSharedState,\n            },\n          },\n          views: {\n            ...(state[inspectionId] ? state[inspectionId].views : {}),\n            [viewId]: isObjectValid(() => state[inspectionId].views[viewId])\n              ? { ...initState, ...state[inspectionId].views[viewId] }\n              : initState,\n          },\n        },\n      };\n\n      const listViewAliases =\n        newState[inspectionId] &&\n        newState[inspectionId].sharedState &&\n        (newState[inspectionId].sharedState.listViewAliases || new Map());\n      newState[inspectionId].sharedState.listViewAliases = listViewAliases;\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default viewDataReducer;\n","import ViewSetFactory, { DEFAULT_VIEWSET_NAME } from '../../views/ViewSetFactory';\n\nconst viewSetFactory = new ViewSetFactory();\n\nconst initialState = () => {\n  const hideBottomNavigation = localStorage.getItem('BOTTOM_NAVIGATION_HIDDEN') === 'true';\n  const hideTopNavigation = localStorage.getItem('TOP_NAVIGATION_HIDDEN') === 'true';\n  const defaultViewSetName = localStorage.getItem('DEFAULT_VIEWSET_NAME');\n\n  return {\n    currentViewSet: undefined,\n    createdViewSets: {},\n    fullscreenMode: false,\n    fullscreenComponentDescriptor: undefined,\n    viewSizeChangeCounter: 0,\n    bottomNavHidden: hideBottomNavigation || false,\n    topNavHidden: hideTopNavigation || false,\n    defaultViewSetName: defaultViewSetName || null,\n    isSVOConfigLoaded: false,\n    unsavedChanges: false,\n  };\n};\n\nconst enterFullScreenMode = (componentDescriptor, state) => {\n  componentDescriptor.setFullscreen(true);\n  return {\n    ...state,\n    fullscreenMode: true,\n    fullscreenComponentDescriptor: componentDescriptor,\n  };\n};\n\nconst leaveFullScreenMode = (componentDescriptor, state) => {\n  componentDescriptor.setFullscreen(false);\n  return {\n    ...state,\n    fullscreenMode: false,\n    fullscreenComponentDescriptor: undefined,\n  };\n};\n\nconst findCreatedViewSetWithName = (name, createdViewSets) => {\n  const viewSetId = Object.keys(createdViewSets).find(\n    (viewSetId) => createdViewSets[viewSetId] && createdViewSets[viewSetId].name === name,\n  );\n  return viewSetId && createdViewSets[viewSetId];\n};\n\nconst switchViewSet = (viewSet, state) => {\n  const viewSetId = viewSet.id;\n  const cached = state.createdViewSets[viewSetId];\n  const targetViewSet = cached || viewSetFactory.getViewSet(viewSetId);\n  const createdViewSet = !cached ? { [viewSetId]: targetViewSet } : {};\n\n  const newState = {\n    ...state,\n    currentViewSet: targetViewSet,\n    createdViewSets: Object.assign({}, state.createdViewSets, createdViewSet),\n  };\n  return newState;\n};\n\nconst updateCurrentViewSet = (state, viewSet, viewSetId) => {\n  return {\n    ...state,\n    currentViewSet: viewSet,\n    createdViewSets: {\n      ...state.createdViewSets,\n      [viewSetId]: viewSet,\n    },\n    unsavedChanges: true,\n  };\n};\n\nconst removeViewSet = (state, name) => {\n  const { createdViewSets } = state;\n\n  let newCreatedViewSets = Object.keys(createdViewSets)\n    .filter((id) => id !== name)\n    .reduce((p, c) => ({ ...p, [c]: createdViewSets[c] }), {});\n\n  if (Object.keys(newCreatedViewSets).length === 0) {\n    const name = DEFAULT_VIEWSET_NAME;\n    newCreatedViewSets = {\n      [name]: viewSetFactory.buildEmptyViewSet(name),\n    };\n  }\n\n  return {\n    createdViewSets: newCreatedViewSets,\n    currentViewSet: newCreatedViewSets[Object.keys(newCreatedViewSets)[0]],\n    unsavedChanges: true,\n  };\n};\n\nconst viewSetReducer = (state = initialState(), action) => {\n  switch (action.type) {\n    case 'LOG_OUT':\n      return initialState();\n    case 'SET_VIEWSET':\n      return updateCurrentViewSet(state, action.viewSet, action.viewSetId);\n    case 'REPLACE_VIEW_IN_CURRENT_VIEWSET': {\n      const { viewId, inspectionId, replacementComponentId } = action;\n      const createdView = viewSetFactory.getViewById(replacementComponentId);\n      createdView.inspectionId = inspectionId;\n      const currentViewSetId = state.currentViewSet.id;\n      const updatedViewSet = {\n        ...state.currentViewSet,\n        viewSet: {\n          ...state.currentViewSet.viewSet,\n          [viewId]: createdView,\n        },\n      };\n      return updateCurrentViewSet(state, updatedViewSet, currentViewSetId);\n    }\n    case 'SWITCH_VIEWSET':\n      return switchViewSet(action.viewSet, state);\n    case 'ENTER_FULLSCREEN_MODE': {\n      if (\n        state.fullscreenComponentDescriptor &&\n        state.fullscreenComponentDescriptor.id !== action.componentDescriptor.id\n      ) {\n        leaveFullScreenMode(state.fullscreenComponentDescriptor, state);\n      }\n      return enterFullScreenMode(action.componentDescriptor, state);\n    }\n    case 'LEAVE_FULLSCREEN_MODE': {\n      return leaveFullScreenMode(action.componentDescriptor, state);\n    }\n    case 'TOGGLE_FULLSCREEN_MODE': {\n      if (!state.fullscreenComponentDescriptor) {\n        return enterFullScreenMode(action.componentDescriptor, state);\n      }\n      if (state.fullscreenComponentDescriptor.id === action.componentDescriptor.id) {\n        if (state.fullscreenMode) {\n          return leaveFullScreenMode(action.componentDescriptor, state);\n        }\n        return enterFullScreenMode(action.componentDescriptor, state);\n      }\n      return state;\n    }\n    case 'INCREASE_VIEW_SIZE_CHANGE_COUNTER':\n      return {\n        ...state,\n        viewSizeChangeCounter: state.viewSizeChangeCounter + 1,\n      };\n    case 'SET_BOTTOM_NAV_HIDDEN':\n      localStorage.setItem('BOTTOM_NAVIGATION_HIDDEN', action.hidden);\n      return {\n        ...state,\n        bottomNavHidden: action.hidden,\n      };\n    case 'CHANGE_VIEWSET_AFTER_LOADING':\n      return {\n        ...state,\n        changeViewSetToName: action.name,\n      };\n    case 'SET_TOP_NAV_HIDDEN':\n      localStorage.setItem('TOP_NAVIGATION_HIDDEN', action.hidden);\n      return {\n        ...state,\n        topNavHidden: action.hidden,\n      };\n    case 'SET_DEFAULT_VIEWSET_NAME':\n      localStorage.setItem('DEFAULT_VIEWSET_NAME', action.name);\n      return {\n        ...state,\n        defaultViewSetName: action.name,\n      };\n    case 'NEW_VIEW_SET': {\n      const newViewSet = {\n        [action.name]: viewSetFactory.buildEmptyViewSet(action.name),\n      };\n\n      return {\n        ...state,\n        createdViewSets: {\n          ...state.createdViewSets,\n          ...newViewSet,\n        },\n        unsavedChanges: true,\n      };\n    }\n    case 'REMOVE_VIEWSET': {\n      const { createdViewSets, currentViewSet } = removeViewSet(state, action.name);\n      return {\n        ...state,\n        currentViewSet,\n        createdViewSets,\n        unsavedChanges: true,\n      };\n    }\n    case 'CLEAR_CURRENT_VIEW': {\n      if (!state?.currentViewSet?.name) {\n        return state;\n      }\n\n      const emptyViewSet = viewSetFactory.buildEmptyViewSet(state.currentViewSet.name);\n      state.createdViewSets[state.currentViewSet.name] = emptyViewSet;\n\n      return {\n        ...state,\n        currentViewSet: emptyViewSet,\n        unsavedChanges: true,\n      };\n    }\n    case 'RENAME_VIEWSET': {\n      const viewsetToEdit = state.createdViewSets[action.oldName];\n      const renamedViewSet = {\n        ...viewsetToEdit,\n        id: action.newName,\n        name: action.newName,\n      };\n      const createdViewSets = Object.keys(state.createdViewSets).reduce(\n        (all, id) =>\n          id === action.oldName\n            ? { ...all, [action.newName]: renamedViewSet }\n            : { ...all, [id]: state.createdViewSets[id] },\n        {},\n      );\n\n      if (action.oldName === state.currentViewSet.name) {\n        return {\n          ...state,\n          createdViewSets,\n          currentViewSet: renamedViewSet,\n          unsavedChanges: true,\n        };\n      }\n\n      return {\n        ...state,\n        createdViewSets,\n        unsavedChanges: true,\n      };\n    }\n    case 'SET_CURRENT_LAYOUT':\n      if (!action.layout) {\n        return state;\n      }\n      return {\n        ...state,\n        createdViewSets: Object.assign({}, state.createdViewSets, {\n          [state.currentViewSet.id]: {\n            ...state.currentViewSet,\n            initialValue: action.layout,\n          },\n        }),\n        currentViewSet: {\n          ...state.currentViewSet,\n          initialValue: action.layout,\n        },\n        currentLayout: action.layout,\n        unsavedChanges: true,\n      };\n    case 'LOAD_CLIENT_CHUNK': {\n      if (state.changeViewSetToName) {\n        let loadedViewSet = findCreatedViewSetWithName(\n          state.changeViewSetToName,\n          action.chunk.createdViewSets,\n        );\n\n        if (loadedViewSet) {\n          const newState = {\n            ...state,\n            currentViewSet: loadedViewSet,\n            createdViewSets: action.chunk.createdViewSets,\n            changeViewSetToName: undefined,\n          };\n          return switchViewSet(loadedViewSet, newState);\n        }\n      }\n\n      const config = {\n        createdViewSets: action.chunk.createdViewSets,\n        currentViewSet: action.chunk.currentViewSet,\n      };\n      return {\n        ...state,\n        ...config,\n      };\n    }\n    case 'SET_SVO_CONFIG_LOADED':\n      return {\n        ...state,\n        isSVOConfigLoaded: action.isLoaded,\n        unsavedChanges: false,\n      };\n    case 'SET_SAVE_FLAG':\n      return {\n        ...state,\n        unsavedChanges: action.hasChanges,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default viewSetReducer;\n","import { routerReducer as routing } from 'react-router-redux';\nimport { combineReducers } from 'redux';\n\nimport appReducer from './appReducer';\nimport toolsetReducer from './toolsetReducer';\nimport viewDataReducer from './viewDataReducer';\nimport viewSetReducer from './viewSetReducer';\n\nfunction createReducers(params) {\n  return combineReducers({\n    app: appReducer(params),\n    viewSet: viewSetReducer,\n    toolSet: toolsetReducer,\n    inspections: viewDataReducer,\n    routing,\n  });\n}\n\nexport default createReducers;\n","/* eslint-disable import/order */\nimport React, { useState, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport 'react-tippy/dist/tippy.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\nimport App from './App';\nimport LoginPage from './pages/LoginPage';\nimport Protobuf from './protobuf/Protobuf';\nimport {\n  saveClientChunk,\n  setProtobufStaticInitialized,\n  setBrowserWindowVisibility,\n} from './redux/actions';\nimport createReducers from './redux/reducers';\nimport env from './utils/env';\nimport { loadState } from './utils/localStorage';\n\nimport './App.scss';\nimport './css/utils.css';\nimport './css/reset.scss';\n\nconst PreLogin = () => {\n  const [user, setUser] = useState(null);\n  const [authToken, setAuthToken] = useState('');\n  const [store, setStore] = useState(null);\n\n  const onLoggedIn = (data) => {\n    if (data && data.user && data.authToken) {\n      setUser(data.user);\n      setAuthToken(data.authToken);\n    }\n  };\n\n  const onLoggedOut = () => {\n    setUser(null);\n    setAuthToken('');\n  };\n\n  const create = async () => {\n    const autoSave = (store) => (next) => (action) => {\n      if (env.enableAutoSave) {\n        // TODO: for now trigger an auto-save whenever dispatching a \"SET_*\" action\n        const state = store.getState();\n        if (\n          action.type.substr(0, 4) === 'SET_' &&\n          !state.app.saveOperationInProcess &&\n          state.app.protobuf\n        ) {\n          // only store if we have a valid protobuf connection\n          const { currentClientChunkRevision, protobuf, user } = state.app;\n          store.dispatch(saveClientChunk(protobuf, user, state, currentClientChunkRevision));\n        }\n      }\n      return next(action);\n    };\n\n    const store = createStore(\n      createReducers({\n        websocketUrl: env.websocketServerUrl,\n        dispatch: (action) => store.dispatch(action),\n      }),\n      compose(\n        applyMiddleware(thunk, autoSave),\n        window.devToolsExtension ? window.devToolsExtension() : (f) => f,\n      ),\n    );\n\n    await Protobuf.init();\n    store.dispatch(setProtobufStaticInitialized());\n\n    setStore(store);\n  };\n\n  useEffect(() => {\n    if ((user && authToken) || window.location.pathname === '/hmi-v1') {\n      create();\n    }\n  }, [user, authToken]);\n\n  const fromLocalStorage = loadState();\n  if (fromLocalStorage) {\n    if (fromLocalStorage.user && !user) {\n      setUser(fromLocalStorage.user);\n    }\n\n    if (fromLocalStorage.authToken && !authToken) {\n      setAuthToken(fromLocalStorage.authToken);\n    }\n  }\n\n  if (!(user && authToken) && window.location.pathname !== '/hmi-v1') {\n    return <LoginPage onLogin={(data) => onLoggedIn(data)} />;\n  } else {\n    if (!store) {\n      return <div></div>;\n    }\n\n    document.addEventListener('visibilitychange', function () {\n      if (document.visibilityState === 'visible') {\n        store.dispatch(setBrowserWindowVisibility(true));\n        clearTimeout(this.hibernateTimer);\n      } else {\n        this.hibernateTimer = setTimeout(() => {\n          store.dispatch(setBrowserWindowVisibility(false));\n        }, 10000);\n      }\n    });\n\n    return (\n      <Provider store={store}>\n        <App user={user} authToken={authToken} onLoggedOut={() => onLoggedOut()} />\n      </Provider>\n    );\n  }\n};\n\nexport default PreLogin;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// MUI Seidenader Default Colors\nconst GREY135 = 'rgb(135, 135, 135)';\nconst muiTheme = createMuiTheme({\n  palette: {\n    primary: { main: GREY135 },\n  },\n  typography: {\n    useNextVariants: true,\n    htmlFontSize: 10,\n  },\n});\n\nexport default muiTheme;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport ReactDOM from 'react-dom';\nimport 'react-tippy/dist/tippy.css';\nimport PreLogin from './PreLogin';\nimport muiTheme from './theme';\n\nimport './css/app.scss';\n// eslint-disable-next-line import/order\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={muiTheme}>\n      <PreLogin />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/edit.962e7af9.svg\";","import React, { Component } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MuiMenuList from '@material-ui/core/MenuList';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\nimport OutsideClickHandler from '../../../src/components/OutsideClickHandler';\n\nconst styles = (theme) => ({\n  rootMenu: {\n    overflow: 'visible',\n    backgroundColor: '#f3f3f3',\n    position: 'absolute',\n    '& ul': {\n      padding: 0,\n    },\n  },\n  menuItem: {\n    cursor: 'pointer',\n    display: 'flex',\n    justifyContent: 'space-between',\n    overflow: 'visible',\n    position: 'relative',\n    borderBottom: '0.1rem #cccccc solid',\n    '& a': {\n      color: theme.palette.common.black,\n    },\n  },\n  caption: {\n    alignItems: 'center',\n    display: 'flex',\n    fontSize: '1.4rem',\n    '& img': {\n      marginRight: '0.5rem',\n      maxWidth: '24px',\n    },\n  },\n});\nclass MenuList extends Component {\n  state = {\n    openMenu: false,\n  };\n  renderMenuItems = () => {\n    const { menuItems, onClose, classes, enabled } = this.props;\n    return menuItems.map((menuItem) => {\n      return (\n        <MenuItem\n          disabled={!enabled}\n          key={menuItem.key}\n          onClick={() => {\n            if (enabled) {\n              onClose();\n              this.closeMenu();\n              menuItem.onClick();\n            }\n          }}\n          className={\n            menuItem.className ? classes.menuItem + ' ' + menuItem.className : classes.menuItem\n          }\n        >\n          <div className={classes.caption}>\n            {menuItem.img ? <img src={menuItem.img} alt={menuItem.caption} /> : null}\n            {menuItem.caption}\n          </div>\n        </MenuItem>\n      );\n    });\n  };\n\n  handleClick = () => {\n    this.setState({ openMenu: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ openMenu: false });\n    this.props.onClose();\n  };\n\n  render() {\n    const { buttonIcon, buttonCaption, tooltip, open, onClose, showBottomArrow, classes } =\n      this.props;\n    const { openMenu } = this.state;\n\n    return (\n      <div>\n        <button className={'menu-button'} onClick={this.handleClick} title={tooltip}>\n          {buttonIcon && <img src={buttonIcon} alt={buttonCaption} />}\n          {buttonCaption}\n          {showBottomArrow ? <div className=\"bottomArrow\"></div> : null}\n        </button>\n        <OutsideClickHandler\n          onOutsideClick={() => {\n            this.closeMenu();\n          }}\n        >\n          {openMenu ? (\n            <Paper className={classes.rootMenu}>\n              <MuiMenuList open={open} onClose={onClose}>\n                {this.renderMenuItems()}\n              </MuiMenuList>\n            </Paper>\n          ) : (\n            <div></div>\n          )}\n        </OutsideClickHandler>\n      </div>\n    );\n  }\n}\n\nMenuList.defaultProps = {\n  open: false,\n  enabled: true,\n};\n\nMenuList.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles)(MenuList);\n"],"sourceRoot":""}