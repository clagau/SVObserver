{"version":3,"sources":["assets/icons/plus.svg","utils/downloader.js","components/ConfirmDialog/index.tsx","utils/env.js","utils/jsonMapper.js","utils/stringChunker.js","protobuf/Configuration.js","assets/icons/info.svg","assets/icons/overlay-list.svg","utils/permissions.ts","assets/icons/close.svg","assets/icons/clear.svg","assets/icons/save.svg","views/HelpView/index.js","components/typo/Heading.js","views/HelpView/viewMappings.js","protobuf/ConfigurationLock.js","utils/authentication.js","assets/icons/pause.svg","assets/icons/play.svg","utils/sessionStorage.js","components/buttons/ToggleButton/index.tsx","assets/icons/help.svg","assets/icons/download.svg","assets/icons/show.svg","assets/icons/image.svg","protobuf/Product.js","assets/logo/logo.svg","components/layout/Logo/index.js","protobuf/Mapper.js","components/buttons/IconButton/index.tsx","assets/icons/regression.svg","assets/icons/run.svg","assets/icons/stop.svg","assets/icons/test.svg","utils/modes.js","components/Protobuf/ProxyType.js","components/layout/Container/index.tsx","utils/OverlayRenderer.js","views/ImageStripView/components/FilmStrip/index.js","views/ImageStripView/index.js","assets/icons/downloadWithOverlays.svg","assets/icons/fit-to-height.svg","assets/icons/fit-to-width.svg","assets/icons/one.svg","utils/reduxHelper.ts","components/OverlayList/index.tsx","views/ImageView/components/ImageEditor.js","views/ImageView/components/ImageInfo.js","utils/propHelper.js","views/ImageView/index.js","assets/icons/show-off.svg","assets/icons/drag.svg","components/DraggableTable/index.js","views/ListView/components/List/AliasEditor.js","views/ListView/index.js","assets/icons/delete-dustbin.svg","views/ParameterView/components/Overlay/OverlayPropertyList.tsx","views/ParameterView/components/Overlay/VariableSelection.tsx","views/ParameterView/components/Overlay/index.tsx","views/ParameterView/index.tsx","assets/icons/before.svg","components/layout/ScrollContainer/index.js","views/RecipeView/index.js","webpack:///./src/assets/icons/chevron-double-left.svg?4f15","assets/icons/archive.svg","assets/icons/arrow-top-right.svg","assets/icons/collapse-all.svg","assets/icons/copy.svg","assets/icons/cut.svg","assets/icons/cylindrical-wrap.svg","assets/icons/expand-all.svg","assets/icons/external.svg","assets/icons/function-variant.svg","assets/icons/group.svg","assets/icons/load-image.svg","assets/icons/loop.svg","assets/icons/palette.svg","assets/icons/paste.svg","assets/icons/perspective.svg","assets/icons/polar-transformation.svg","assets/icons/resize.svg","assets/icons/shift.svg","assets/icons/statistics.svg","assets/icons/table-analyzer.svg","assets/icons/table.svg","assets/icons/transformation.svg","assets/icons/window.svg","views/ToolsetView/MathTool/CommentTab.tsx","views/ToolsetView/MathTool/FormulaEditor.tsx","views/ToolsetView/components/TreebeardStyle.ts","views/ToolsetView/MathTool/hooks/useFormulaValidate.ts","views/ToolsetView/common.ts","hooks/useMounted.ts","views/ToolsetView/MathTool/hooks/useIndirectValueObjectName.ts","hooks/useCancellablePromise.ts","views/ToolsetView/MathTool/LinkedValueSelectDialog.tsx","views/ToolsetView/MathTool/ReadonlyFormula.tsx","views/ToolsetView/MathTool/FormulaEditPanel.tsx","views/ToolsetView/MathTool/FormulaTab.tsx","assets/icons/chevron-double-left.svg","assets/icons/chevron-left.svg","views/InputToolView/components/RawEditor.tsx","views/InputToolView/components/NumberEditor.tsx","views/ToolsetView/MathTool/hooks/useRange.ts","views/ToolsetView/MathTool/RangeTab.tsx","views/ToolsetView/MathTool/hooks/useFormula.ts","views/ToolsetView/MathTool/index.tsx","views/ToolsetView/MathTool/hooks/useComment.ts","views/ToolsetView/components/ToolSetBar/index.tsx","assets/icons/down.svg","assets/icons/take-over.svg","assets/icons/up.svg","views/ParameterView/components/Filter/index.tsx","views/ToolsetView/components/ToolSetup.js","views/ToolsetView/index.tsx","views/ViewSetFactory.js","views/TopNavigation/navigation/useUserInfoNavigation.tsx","assets/icons/logout.svg","assets/icons/permissions.svg","assets/icons/shortcut-help.svg","assets/icons/upload.svg","assets/icons/user.svg","views/AboutView/index.js","protobuf/ProtobufConnector.js","protobuf/WebsocketConnector.js","protobuf/Proxy.js","utils/defaultPermissions.js","components/Dialog/index.tsx","views/ShortcutView/components/ShortcutListItem/index.js","views/ShortcutView/components/ShortcutList/index.js","views/ShortcutView/shortcuts.js","views/ShortcutView/index.js","protobuf/ProductHistory.js","protobuf/ProductHistoryManager.js","protobuf/InspectionSubscription.js","protobuf/SubscriptionManager.js","components/ActionBar/index.tsx","utils/localStorage.js","assets/icons/edit.svg","components/OutlinedSelection/index.tsx","utils/objectValidator.ts","types/ActionBarType.ts","utils/logger.ts","components/ObjectSelector/index.tsx","translations/de.js","translations/en.js","translations/es.js","translations/index.tsx","protobuf/Observable.js","protobuf/Protobuf.js","assets/icons/delete.svg","assets/icons/back.svg","components/ModalNotification.js/index.js","components/SuggestionList/index.js","components/AutoComplete/index.js","views/TopNavigation/navigation/AlertDialog.tsx","components/DatabaseGatewayEditor/components/InformationBox/index.tsx","components/DatabaseGatewayEditor/components/ImageForm/index.js","components/DatabaseGatewayEditor/components/TriggerSettings/index.js","components/DatabaseGatewayEditor/components/PropertyForm/index.js","components/DatabaseGatewayEditor/components/BatchSettings/index.js","components/DatabaseGatewayEditor/index.tsx","pages/DatabaseGatewayPage.js","components/RequestParameter/generic/SelectParameter/index.js","components/RequestParameter/generic/ArrayParameter/index.js","components/RequestParameter/specialized/BoolParameter/index.js","components/RequestParameter/specialized/BoolArrayParameter/index.js","components/RequestParameter/specialized/BytesParameter/index.js","components/RequestParameter/generic/SingleParameter/index.js","components/RequestParameter/specialized/DecimalParameter/index.js","components/RequestParameter/specialized/DecimalArrayParameter/index.js","components/RequestParameter/specialized/EnumArrayParameter/index.js","components/RequestParameter/specialized/EnumParameter/index.js","components/RequestParameter/specialized/IntegerParameter/index.js","components/RequestParameter/specialized/IntegerArrayParameter/index.js","components/RequestParameter/specialized/TextParameter/index.js","components/RequestParameter/specialized/TextArrayParameter/index.js","components/RequestParameter/index.js","components/RequestedResponseVisualizer/index.js","components/RequestsList/index.js","components/Debugger/index.js","pages/DebuggerPage.js","pages/HmiLoginPage.js","pages/LogoutPage.js","components/KeyHandler.js","components/PermissionManagement/index.js","pages/PermissionPage.js","components/Protobuf/ProtobufType.js","assets/icons/view-manager.svg","assets/icons/check.svg","assets/icons/export.svg","assets/icons/import.svg","components/InformationDialog/index.js","views/ViewSetManager/index.js","views/ViewSet/types.js","components/NavigationItem/index.js","views/BottomNavigation/components/PresetSlider/components/PresetButton/index.js","views/BottomNavigation/components/PresetSlider/index.js","views/BottomNavigation/index.js","views/TopNavigation/NavigationItem.tsx","views/TopNavigation/components/DateTime/index.tsx","views/TopNavigation/components/LockState/index.tsx","assets/icons/play-multiple.svg","assets/icons/language.svg","assets/icons/icons8-lock.svg","assets/icons/icons8-padlock.svg","views/TopNavigation/navigation/TakeoverDialog.tsx","views/TopNavigation/navigation/useLockStateHandlerNavigation.tsx","views/TopNavigation/navigation/useModeSwitchNavigation.tsx","assets/icons/description.svg","views/TopNavigation/navigation/useNavigation.tsx","views/TopNavigation/navigation/useLanguageChooserNavigation.tsx","views/TopNavigation/navigation/useInspectionStateNavigation.tsx","views/TopNavigation/navigation/useStatusReportNavigation.tsx","views/TopNavigation/index.tsx","views/NoSVOConfigurationLoadedView/index.js","components/ListSelection/index.tsx","views/ViewSelection/components/InspectionSelection/index.js","assets/icons/filmstrip.svg","assets/icons/list.svg","assets/icons/parameter.svg","assets/icons/toolset.svg","views/ViewSelection/components/ViewTypeSelection/index.js","views/ViewSelection/index.js","views/ViewSet/SVOView.js","views/ViewSet/index.tsx","pages/SVObserver.js","App.js","pages/LoginPage.js","redux/reducers/appReducer.js","redux/reducers/toolsetReducer.js","redux/reducers/viewDataReducer.js","redux/reducers/viewSetReducer.js","redux/reducers/index.js","PreLogin.js","theme.js","reportWebVitals.ts","index.tsx","protobuf/Utils.js","utils/clientChunkManager.js","redux/actions/index.js"],"names":["forceDownload","data","fileName","link","document","createElement","download","href","body","appendChild","click","removeChild","logger","info","ConfirmDialog","onClose","open","title","message","className","color","onClick","id","env","authEndpoint","url","parsedUrl","parse","window","location","protocol","replace","host","getEndpoint","process","REACT_APP_WEBSOCKET_SERVER_URL","websocketServerUrl","getDefaultWebsocketUrl","enableAutoSave","replacerMapToJson","key","value","originalObject","this","Map","dataType","reviverJsonToMap","chunkSubstr","str","size","numChunks","Math","ceil","length","chunks","Array","i","o","substr","extractConfigName","filename","slashIdx","lastIndexOf","dotIdx","getConfigName","protobuf","a","request","Protobuf","SvPb","GetConfigurationInfoRequest","create","getInspections","inspectionsReq","GetInspectionsRequest","inspectionsRes","inspections","map","inspection","name","error","getInspectionIds","getInspectionNames","cleanObjectSelectorNodeRecursively","node","type","objectIDIndex","children","selected","cleanedChildren","startsWith","endIdx","indexOf","parseInt","parseObjectIdIndex","getIdNameMappingForInspection","inspectionId","inspectionName","req","GetObjectSelectorItemsRequest","areas","SearchArea","toolsetItems","inspectionID","instanceID","attribute","ObjectAttributes","viewable","wholeArray","ObjectSelectorType","allValueObjects","attributesAllowed","res","tree","entries","queue","slice","head","shift","set","fullLocation","push","getObjectSelectorItemsRequest","requestParameters","getObjectSelectorItemsForInspection","getRemotelySettableObjectSelectorItemsForInspection","remotelySettable","getObjectSelectorImagesForInspection","allImageObjects","archivableImage","getVersion","requestClass","response","version","getPerInspection","inspectionIds","inspectionNames","fn","itemsByInspectionId","item","getConfigurationTree","GetConfigurationTreeRequest","mapInspectionIdtoToolset","inspectionToolsetMappings","configurationTree","isObjectValid","Promise","all","objectID","toolSetId","getToolSetId","InspectionCmdRequest","undefined","getObjectIdRequest","getObjectIdResponse","objectId","getGlobalConstants","constants","reqObj","globalConstantItems","forEach","childLevel1","childLevel2","Configuration","config","filterArrayValuesFromTree","ii","stack","pop","firstChildId","idNameMappings","objectSelectorItems","remotelySettableObjectSelectorItems","objectSelectorImages","versions","globalConstants","Object","keys","assign","isConnected","promises","configName","err","GetSVObserverVersionRequest","GetGatewayVersionRequest","GetWebAppVersionRequest","svObserverVersion","gatewayVersion","webAppVersion","find","mappings","get","mapping","warn","resetInspectionIdToToolsetMappings","chunksString","localStorage","getItem","CONFIGURATION_CHUNK_LIST","chunkList","split","configString","join","decompressFromUTF16","decompressedConfig","JSON","configuration","configInfo","compressToUTF16","stringify","stringifiedConfig","configChunks","configChunkNames","chunk","chunkName","CONFIGURATION_CHUNK_TEMPLATE","setItem","CONFIG_INFO","flattenProtobuf","oldObject","permissions","Set","flattenProtobufRec","currentObject","parentPath","nested","currKey","toLowerCase","currPath","fields","viewTypeProtobuf","lookup","values","viewPath","getViewName","addFieldValues","path","field","add","flattenPermissionsRec","isArray","entry","createObjectFromFlattenedPermissions","obj","v","k","getViewId","substring","view","index","findIndex","getGroupPermissionsFromFlattenedPermissions","flattenedPermissions","result","groupEntry","permissionForUser","groupPermissions","permission","viewType","canSaveConfig","myPermissions","has","canReadLogs","canAddViewSet","canReadViewSet","canEditViewSet","canDeleteViewSet","canAddImageView","canReadImageView","canEditImageView","canDeleteImageView","canAddListView","canReadListView","canEditListView","canDeleteListView","canAddImageStripView","canReadImageStripView","canEditImageStripView","canDeleteImageStripView","canAddParameterView","canReadParameterView","canEditParameterView","canDeleteParameterView","canAddToolSetView","canReadToolSetView","canEditToolSetView","canDeleteToolSetView","canReadSVOMode","canEditSVOMode","canReadInspectionState","canEditInspectionState","canEditTool","canAddTool","canDeleteTool","canReadUserManagement","canEditUserManagement","canReadSVOConfiguration","canWriteSVOConfiguration","HelpView","helpUrl","props","focusedViewType","locale","isFullscreen","style","width","height","src","Component","defaultProps","connect","state","app","Heading","intlId","React","Views","PARAMETER_VIEW","LIST_VIEW","IMAGE_VIEW","PERMISSIONS","DEBUGGER","ConfigurationLock","lock","lockId","takeoverId","owner","takeoverUser","lockDescription","takeoverMessage","status","lockedInSameAppInstance","isTakeoverAttempt","configAlreadyLocked","isWaitingForResponse","ownerRejectedTakeover","user","username","isLocked","isSameUserAsOwner","notification","description","logIn","password","axios","post","loginRes","accessToken","authenticate","authRes","authToken","claims","jwtDecode","pick","logOut","notifyGateway","removeProxy","LOCK_ACQUISITION_REQUEST","ToggleButton","iconUrl","enabled","onClickHandler","intlIdAlternative","iconUrlAlternative","onClickHandlerAlternative","showAlternative","intl","useIntl","tooltip","messages","Product","history","trigger","isReject","useCount","images","imageId","checkNotReleasedYet","imageIds","valueId","valueIds","fallbackValue","toString","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","byteNumbers","charCodeAt","byteArray","Uint8Array","blob","Blob","URL","createObjectURL","imagePromises","image","overlays","rgbData","initImage","valueStr","getValueFromVariant","buildImage","domImage","initOverlayImages","overlayImages","resolve","reject","arrayBufferView","domURL","self","webkitURL","Image","onload","onerror","e","revokeObjectURL","overlaysDesc","overlay","shapeGroups","shapeGroup","shapes","shape","then","releaseProduct","Error","releaseImages","clear","released","releaseImage","overlayImage","remove","Logo","alt","mapProtobufDeviceModeToWebAppMode","deviceMode","DeviceModeType","available","modes","unknownMode","runMode","stopMode","regressionMode","testMode","editMode","modeChanging","mapWebAppModeToProtobufDeviceMode","mode","mapLogLevelNameToProtobufLogSeverity","levelName","LogSeverity","trace","debug","warning","IconButton","pointerEvents","opacity","backgroundImage","backgroundPosition","backgroundSize","iconSrc","unknownIcon","text","runIcon","stopIcon","regressionIcon","testIcon","editIcon","PropTypes","Container","drawInspectionOverlays","drawTarget","zoomFactor","boundingCoordinates","currentMode","targetContext","getContext","setLineDash","colorInt","colorString","getRgbaString","fillStyle","fontSize","lineWidth","font","strokeStyle","boundingShape","OverlayBoundingShape","rect","renderRectangleTool","renderSliceTool","perspective","renderPerspectiveTool","boundingBoxX","abs","minX","x","boundingBoxY","minY","y","boundingBoxWidth","w","boundingBoxHeight","h","displayBounding","overlayTitle","angle","fillText","detailLevel","shapeColor","shapeColorString","shapeType","useRotation","OverlayShape","arrow","rotateContextByAngleAroundPoint","x1","y1","x2","y2","angleBetweenP1andP2","atan2","PI","calcAngleDegrees","beginPath","moveTo","lineTo","theta1","cos","sin","theta2","stroke","closePath","rectArray","rAngle","restore","graph","maxValueX","maxValueY","marker","orientationType","sizeType","strokeHeight","maxValue","strokeWidth","markers","blockMarker","colors","changePos","currentPos","drawImage","save","maxOverlayTextX","measureText","updateBoundingCoordinates","max","translate","rotate","centerX","centerY","innerRadius","outerRadius","startRadian","calculateRadiansFromAngle","endAngle","endRadian","startAngle","arc","textWidth","orientation","isNaN","green","blue","setBoundingCoordinatesForCustomOverlays","product","dispatch","coords","setCustomOverlayCoordinates","getTextWidth","label","setBoundingCoordinatesForInspectionOverlays","setInspectionOverlayCoordinates","ctx","coordinates","offsetLeft","Number","getValueById","offsetLeftVariable","xVariable","offsetTop","offsetTopVariable","yVariable","widthVariable","heightVariable","maxHeightFallback","maxWidthFallback","minHeightFallback","minWidthFallback","addVariableValueShouldBeInTheRangeNotification","correctCoordsWithBoundingCoordinates","actualCoordinates","maxX","maxY","valueObj","getValue","extractInspectionOverlays","getImage","FilmStrip","onImageClick","combinedSrc","ImageStripView","onProduct","release","updateImageDimensions","drawImageAndOverlaysToCanvas","canvas","sort","b","productsToRelease","imageStripLength","splice","setState","releaseProducts","sourceImage","imageWidth","imageHeigt","setSourceImageIndex","setSharedStateData","drawTargetContext","clearRect","toDataURL","renderObjectSelector","overflow","ObjectSelector","singleSelect","onChange","selectedIid","checkedLocation","setViewData","setSaveFlag","setTitleFromConfig","getValueNameForId","showPause","pausedInspections","includes","renderFilmStrip","canEdit","actions","TOGGLE_BUTTON","iconPlay","resumeStream","iconPause","pauseStream","display","ref","selectProduct","ActionBar","isViewAction","productSub","unsubscribeFromProductStream","subscribeToProductStream","proxy","setObjectSelectorImages","setIdNameMappings","dispatchCurrentConfiguration","nextProps","isBrowserWindowVisible","products","desc","startAtTriggerCount","rejectImageIds","allowOldTrigger","manualRelease","replayProduct","resumeRejectStream","pauseRejectStream","imageData","initState","initSharedState","mappedConnect","ownProps","viewId","sharedState","views","initViewState","hasChanges","updateOverlayList","updatedOverlay","overlayList","OverlayList","onSelectAll","updateCurrentOverlay","externalUpdateOverlayList","canSelectRow","hasActionBar","useState","selectAll","setSelectAll","selectedRowIndex","setSelectedRowIndex","useEffect","isActive","headerRenderer","useCallback","columns","columnHeaders","_","columnIndex","Checkbox","checked","target","padding","tableDataFromOverlays","useMemo","getCheckboxDefinition4Cell","currentId","filter","updatedOverlayList","handleSingleSelect","checkbox","columnDefinition4OverlayTable","dataKey","flexGrow","headerHeight","rowHeight","rowEventHandlers","rowIndex","rowClassName","ImageEditor","left","top","currentCursorPosition","canvasDimension","setBoundingCoordinates","getBoundingCoordinatesFromCustomOverlays","getBoundingCoordinatesFromInspectionOverlays","setCanvasDimensions","customOverlays","imageHeight","setImageInfo","isImageInfoOpen","setRgbValues","handleScroll","evt","delta","wheelDelta","detail","offsetX","offsetY","zoom","preventDefault","handleMouseDown","event","dragStart","pageX","pageY","dragStartPos","dragging","handleMouseUp","handleDrag","diffX","diffY","handleMouseMove","cursorPosition","getMouseCoordinatesOnElement","setCursorPosition","element","containerRef","parentNode","trunc","getImageData","red","R","G","B","cursorPositionOnImage","trimPositionsOnImageSize","loadViewSettings","bindEventListeners","prevProps","prevState","productChanged","modeChanged","zoomFactorChanged","customOverlaysChanged","isEqual","imageMoved","saveImageSettings","viewSettings","imagePosition","onImageLoaded","initCanvas","draw","webkitImageSmoothingEnabled","msImageSmoothingEnabled","imageSmoothingEnabled","scale","drawOverlays","console","activeOverlays","colorVariable","lineStyle","drawCustomOverlays","addEventListener","removeEventListener","offX","offY","scaleFactor","pow","leftDiff","topDiff","min","getViewSize","getBoundingClientRect","toBlob","position","compose","forwardRef","ImageInfo","imageInfoClass","rgbValues","imageDimensions","backgroundColor","reduce","acc","getPropsFromInspection","ImageView","viewSizeChangeCounter","isOverlayInfoOpen","canvasInitResize","subscribedSource","updateViewSize","newViewSizeChangeCounter","resubscribeToProductStream","getUsedVariablesFromOverlay","variables","setAllOverlaysActive","updatedOverlays","createActiveOverlayList","createActiveOverlayIdList","toggleOverlayInfo","toggleImageInfo","setSourceImageId","selectedId","renderImageView","viewActions","renderImageViewImpl","oldVariables","newVariables","renderImageEditor","renderImageInfo","renderOverlayList","imageEditor","classNames","imageView","canRead","iconOne","resetZoom","iconFitToWidth","fitToWidth","iconFitToHeight","fitToHeight","SEPARATOR","iconDownload","downloadOriginalImage","iconDownloadWithOverlays","downloadOriginalImageWithOverlays","iconOverlayList","iconInfo","overlayActions","inRunMode","viewSet","addImageNotAvailableNotification","DraggableContainer","sortableContainer","DraggableElement","sortableElement","DraggableHandle","sortableHandle","Row","draggable","rest","DragIcon","DraggableTable","table","createRef","getContainer","current","getDOMNode","querySelector","getHelperContainer","rowProps","args","extraProps","callOrReturn","tagName","handleSortEnd","oldIndex","newIndex","onSequenceChange","removed","useDragHandle","helperContainer","onSortEnd","PureComponent","injectIntl","selectedAlias","alias","oldState","useRef","setAlias","Dialog","isInView","isPopup","TextField","fullWidth","disabled","languages","language","defaultValue","renderLanguageAliases","Button","variant","ListView","setAliasColumnVisibility","visibility","updateListViewShowAliases","showAliases","saveNewOrder","before","after","selection","renderValueSelector","items","filterIgnore","getInspectionName","selectedIds","onExpand","expandedKeys","renderList","getListData","tableData","row","editAlias","isAliasEditorOpen","EditIcon","renderAliasEditor","listValues","currentValueObject","isSaved","closeAliasEditor","aliases","dottedName","isEmpty","newAlias","delete","isSelectionMode","showAliasesInList","setObjectSelectorItems","bind","createListValues","getValuesAsString","listView","iconList","iconShow","iconShowOff","listViewAliases","show","useStyles","makeStyles","header","fontWeight","marginBottom","input","transform","theme","createTheme","typography","useNextVariants","htmlFontSize","OverlayPropertyList","currentOverlay","openSelection","useSelector","useDispatch","classes","minWidth","maxWidth","minHeight","maxHeight","handleChange","changedValue","renderTextField","InputProps","InputLabelProps","root","renderNumberField","inputProps","valueNumber","trimToMinMax","endAdornment","InputAdornment","edge","aria-label","ClearIcon","onFocus","options","OutlinedSelection","selectedValue","onSelectionChanged","renderSelection","VariableSelection","setTree","setFilterIgnore","Overlay","setCurrentOverlay","isObjectSelectorOpen","setIsObjectSelectorOpen","variableName","setVariableName","variableId","setVariableId","selectedVariables","setSelectedVariables","editingViewId","iconPlus","newOverlay","floor","random","String","addNewOverlay","iconDeleteDustbin","newCurrentOverlay","getNeighborOverlayId","deleteCurrentOverlay","setVariableSelection","selectedVariable","ParameterView","parameter","toolSet","component","ScrollContainer","RecipeView","renderConfiguration","option","configurations","shortId","generate","iconBack","iconBefore","iconSave","iconClose","_path","CommentTab","loading","CircularProgress","autoFocus","multiline","minRows","Code","pre","parentElement","Prism","highlightAllUnder","FormulaEditor","forwardedRef","onSelectionChange","moveCursorTo","textarea","_input","focus","pos","setTimeout","setSelectionRange","handleSelection","activeElement","start","selectionStart","end","selectionEnd","useImperativeHandle","getSelectionPosition","moveLeft","moveRight","clsx","placeholder","onValueChange","highlight","code","_extends","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgChevronDoubleLeft","_ref","svgRef","titleId","xmlns","xmlnsXlink","viewBox","d","ForwardRef","TreebeardStyle","base","whiteSpace","listStyle","margin","fontFamily","cursor","activeLink","background","toggle","verticalAlign","marginLeft","wrapper","fill","connector","borderLeft","borderBottom","lineHeight","subtree","paddingLeft","LinkedSelectedOption","ResetType","VARENUM","EmbeddedIdEnum","useFormulaValidate","equationId","mounted","useMounted","validating","setValidating","validatedFormula","setValidatedFormula","validationSuccessResult","setValidationSuccessResult","validationErrorMessages","setValidationErrorMessages","errorPosition","setErrorPosition","reset","sendValidateAndSetEquationRequest","equationText","validateAndSetEquationRequest","bSetValue","validate","success","validateAndSetEquationResponse","validateStatus","resultValue","errors","Messages","m","messageText","bytesToString","bytes","fallback","fromCharCode","from","stringToBytes","useIndirectValueObjectName","cancellable","p","cancel","promise","isCanceled","wrappedPromise","val","catch","useCancellablePromise","setName","setLoading","getObjectNameRequest","BeforeType","getObjectNameResponse","LinkedValueSelectDialog","onSelect","linkName","formulaValidation","treeNodes","setTreeNodes","selectedNode","setSelectedNode","selectedValueNode","setSelectedValueNode","validationError","parseNodes","nodes","leafLink","Boolean","toggled","active","child","traverse","itemName","found","updateTreeModel","targetNode","updateTargetData","updateOtherData","mapToolsetTree","onNodeClicked","handleValueSelect","isPositionAbsolute","onToggle","ReadonlyFormula","codeStyle","codeRef","textOverflow","FormulaEditPanelTitle","conditional","short","internalEquationText","validatedFragment","validatedFormulaCut","FormulaEditPanelBase","setInternalEquationText","onSave","undoAll","resetValidation","panelButtonClasses","formulaEditorRef","setSelection","openLinkedValueSelectDialog","setOpenLinkedValueSelectDialog","validateAndReturn","trim","appendToInternalEquation","editorSelection","shouldAppendSpace","lines","startLi","endLi","startPivot","endPivot","equationPart","lastChar","charAt","digits","numeric","endsWith","cursorOffset","deleteLeft","buttons","createSimpleAppendButtons","labels","symbol","separator","MAX_SAFE_INTEGER","index1","btn","index2","textTransform","validateFragment","validateString","FormulaEditPanel","showInDialog","equationTextUnix","titleProps","panelProps","FormulaTab","toggleOptions","openFormulaEditPanel","setOpenFormulaEditPanel","equationObjectID","alignItems","flexWrap","RawEditor","onBlur","exitEditModeOnBlur","setEditMode","toggleNegative","NumberEditor","onlyIntegers","smallStep","largeStep","hideRawEditor","rawValue","setRawValue","invalidInternalValue","setInvalidInternalValue","clamp","parseRawValue","raw","fix","numberValue","parseFloat","newValue","columnGap","ChevronDoubleLeftIcon","ChevronLeftIcon","Slider","valueLabelDisplay","step","MIN_RANGE_VALUE","MAX_RANGE_VALUE","clampRangeValue","compareRangeValues","IndirectValue","indirectObjectId","Formula","formula","useRange","initialValue","setInitialValue","setValue","rangeObjectID","setRangeObjectID","modified","failHigh","failLow","warnHigh","warnLow","ownerId","infoStruct","objectType","subType","embeddedID","NoEmbeddedId","getEmbeddedValuesRequest","embeddedValues","getEmbeddedValuesResponse","list","getRangeValue","embeddedIdRangeClass","embeddedValue","embeddedId","embeddedValueObjectID","linkedValue","common","rangeClass","DirectValue","directValue","dblVal","indirectIDString","RangeClassFailHighEId","RangeClassFailLowEId","RangeClassWarnHighEId","RangeClassWarnLowEId","range","finally","saveChanges","setEmbeddedValuesRequest","rangeValue","VT_R8","isModified","resetType","RT_FromObject","standardResponse","errorMessages","msg","getRangeClassName","classEnum","RangeValuePreview","onOpenEditView","editButtonEnabled","editButtonProps","IndirectValueObjectName","setError","productValue","RangeValueEditor","onExit","internalValue","setInternalValue","openFormulaEditDialog","setOpenFormulaEditDialog","invalid","Select","MenuItem","validationResultValue","RangeTab","editingValue","setEditingValue","useFormula","getEquationRequest","equationValue","getEquationResponse","isMathTool","objectSubType","noDisplayStyle","MathTool","saving","setSaving","setErrors","setSuccess","showOptions","setShowOptions","commonProps","comment","setEmbeddedValueObjectID","ToolCommentTypeEId","commentValue","strVal","VT_BSTR","useComment","commentErrors","rangeErrors","formulaErrors","conditionalErrors","totalErrors","t","ToolSetBar","tools","tool","SortableItem","SortableElement","SortableList","SortableContainer","Filter","AvailableFilterListItems","AvailableFilterListActions","iconTakeOver","CurrentFilterListItems","CurrentFilterListActions","iconDown","iconUp","localCurrentFilterListItems","setLocalCurrentFilterListItems","helperClass","arrayMove","ToolSetup","setup","setupParameterView","viewSetFactory","ViewSetFactory","ActionType","currentViewSet","setParameter","setViewSet","sortToolSet","ToolsetView","treeModel","setTreeModel","filteredTreeModel","setFilteredTreeModel","setCursor","lastActionsStack","setToolSetId","openConfirmDelete","setOpenConfirmDelete","filterText","setFilterText","setInspectionIdToToolsetMappings","treeDataRaw","getToolsetTreeByInspectionId","createTreeNodes","isValid","toolsetTreeNode","isLeaf","treeNode","openMathToolTab","tabNode","setEditingFocus","SELECT","to","getCursorPositionAndObjectID","setNext","deleteTool","DELETE","copyTool","COPY","cutTool","CUT","pasteTool","PASTE","canDelete","iconCopy","iconCut","iconPaste","iconExpand","iconCollapse","iconDelete","toolActions","addTool","newToolId","ADD","toolId","canAdd","iconWindow","ClassIdEnum","WindowToolClassId","iconFunction","MathToolClassId","iconStatistics","StatisticsToolClassId","iconLinear","RingBufferToolClassId","iconArchive","ArchiveToolClassId","AcquisitionToolClassId","iconTransformation","TransformationToolClassId","iconShift","ShiftToolClassId","iconCylindricalWrap","CylindricalWarpToolClassId","iconPerspective","PerspectiveToolClassId","iconImage","ImageToolClassId","LinearToolClassId","iconColor","ColorToolClassId","iconResize","ResizeToolId","iconLoadImage","LoadImageToolClassId","iconTable","TableToolClassId","iconTableAnalyzer","TableAnalyzerToolClassId","iconPolarTransformation","PolarTransformationToolClassId","iconLoop","LoopToolClassId","iconExternal","ExternalToolClassId","iconGroup","GroupToolClassId","confirmed","handleConfirmDeleteClose","toolName","paddingBottom","ReactDOMServer","renderToString","includesTextInReactElement","mapViewSetArray","CONFIG_VIEW","TOOLSET_VIEW","IMAGE_STRIP_VIEW","DEFAULT_RECIPE_VIEWSET","DEFAULT_VIEWSET","DEFAULT_VIEWSET_NAME","getViewSet","buildEmptyViewSet","createViewInstance","viewDesc","meta","getViewById","viewComponentClassId","passedProps","buildRecipeViewSet","first","direction","splitPercentage","second","emptyViewId","buildEditViewSet","createNewViewSet","useUserInfoNavigation","currentState","unsavedChanges","useHistory","inputFile","shortcutViewOpen","setShortcutViewOpen","isHelpViewOpen","setIsHelpViewOpen","isAboutViewOpen","setIsAboutViewOpen","downloadConfig","downloadSVOConfig","fileData","Date","toISOString","content","icon","saveIcon","saveClientChunk","permissionsIcon","downloadIcon","file","files","fileReader","FileReader","readAsArrayBuffer","arrayBuffer","array","ArrayBuffer","uploadSVOConfig","uploadIcon","helpIcon","container","shortcutHelpIcon","aboutIcon","logoutIcon","unsubscribeFromLockAcquisitionStream","setImmediate","origin","userIcon","fullname","AboutView","REACT_APP_NAME","getWebAppVersion","getSvObserverVersion","getGatewayVersion","KoerberLogo","ProtobufConnector","disconnect","websocketConnector","WebsocketConnector","onConnect","onMessage","onError","connectWithToken","token","closeSocket","readMessage","socket","connectionLost","setProtobuf","ReconnectingWebSocket","binaryType","onopen","onmessage","onclose","onconnecting","log","close","Proxy","sendLogsToServer","logs","mapLogEntry","StoreClientLogsRequest","client","loadProject","loadProjectRequested","showLoadingSplashScreen","getMyPermissions","getDatabaseGatewayConfig","discoverConfiguration","discoverDeviceMode","subscribeToNotificationAndMessageStreams","currentConfiguration","setSVOConfigLoaded","discoverInspectionsWithConfigName","loadClientChunk","resetClientChunk","sessionStorage","reqInfo","requestTakeover","sendLockAcquisitionStreamRequest","hideLoadingSplashScreen","showLoadingErrorOverlay","configLoadedFromCache","setUpProductHistories","discoverPartsInBackground","modeName","GetDeviceModeRequest","oldMode","newMode","newModeName","addModeSwitchNotification","setCurrentModeDone","protobufInitialized","observerNotificationSubscription","observerMessageSubscription","lockAcquisitionSubscription","gatewayNotificationSubscription","gatewayMessageSubscription","nextSubId","productHistoryManager","ProductHistoryManager","subscriptionManager","SubscriptionManager","showConnectingSplashScreen","onCurrentModeChanged","onProtobufChangedImpl","hideConnectingSplashScreen","severity","dispatchConfigurationLock","setCurrentConfiguration","saveToCache","dispatchInspectionToolsetMappings","setInspectionToolsetMappings","INSPECTION_TOOLSET_MAPPINGS","setConfigurationLock","showGlobalMessageOverlay","hideGlobalMessageOverlay","lastModified","loadedSince","cachedConfigInfo","getConfigurationInfo","hash","loadFromCache","cachedMappings","clearCurrentView","SetDeviceModeRequest","hResult","loadDatabaseGatewayConfiguration","subscribeToObserverNotificationStream","subscribeToObserverMessageStream","subscribeToGatewayNotificationStream","subscribeToGatewayMessageStream","unsubscribeFromObserverNotificationStream","GetNotificationStreamRequest","stream","subscribe","next","onObserverNotification","onObserverNotificationError","complete","unsubscribe","NotifyType","getVariantValue","timestamp","addProjectModifiedNotification","updateProject","configLoaded","extractConfigNameFromFileName","addProjectLoadedNotification","configUnloaded","addProjectUnloadedNotification","errorNumber","unsubscribeFromObserverMessageStream","GetMessageStreamRequest","onObserverMessage","onObserverMessageError","messageList","MessageType","startMsgBox","firstMessage","formatMessageNotification","messageCode","endMsgBox","msgLog","addServerMessageNotification","waitForTakeoverResponse","LockAcquisitionStreamRequest","onLockAcquisition","onLockAcquisitionError","removeItem","onLockAcquiredNotification","onLockTakeoverNotification","onLockReleasedNotification","onLockAlreadyLockedNotification","onLockTakeoverRejectedNotification","addConfigAlreadyLockedBySameUser","addTakeoverCandidateNotFoundNotification","addLockAcquisitionErrorNotification","handleLockAcquiredNotification","handleLockTakeoverNotification","handleLockReleasedNotification","handleLockAlreadyLockedNotification","handleLockTakeoverRejectedNotification","resetAlertDialogFlags","LockTakeoverRequest","resetTakeoverAttempt","addLockTakeoverErrorNotification","LockTakeoverRejectedRequest","unsubscribeFromGatewayNotificationStream","GetGatewayNotificationStreamRequest","onGatewayNotification","onGatewayNotificationError","pausedInspectionIds","onPauseNotification","updateConfigLockStatus","unsubscribeFromGatewayMessageStream","GetGatewayMessageStreamRequest","onGatewayMessage","onGatewayMessageError","cb","_getNextSubId","addSubscription","removeSubscription","init","fetchMissingProductData","missingImageIds","getMissingProductImages","missingValueIds","getMissingProductValues","GetProductDataRequest","includeOverlays","addData","getSubscribedImages","getSubscribedValues","addRejectStreamPausedNotification","updatePausedInspections","setPausedInspections","pauseRejectStreamImpl","pause","SetRejectStreamPauseStateRequest","GetMyPermissionsRequest","defaultPermissions","disablePermissionsWhenConfigLocked","setMyPermissions","getGroupPermissions","isUnlocked","isLockedInDifferentAppInstance","GetGroupDetailsRequest","groupDetails","flattenPermissions","setGroupPermissions","groupDetail","users","UpdateGroupPermissionsRequest","updateInspectionIdToToolsetMappings","classId","taskObjectPos","createObjectRequest","updateToolsetData","createObjectResponse","deleteObjectRequest","GetConfigRequest","PutConfigRequest","ConfigCommandRequest","clipboardRequest","action","ClipboardActionEnum","Copy","Cut","Paste","webapp","read","viewset","edit","svobserver","inspectionstate","write","notifications","clientlogs","store","machinestate","command","execute","usermanagement","userpermissions","dialogActions","dialogClass","dialogWrapperClass","dialogContentWrapperClass","closeIcon","ShortcutListItem","isRequired","ShortcutList","shortcuts","shortcut","ShortcutView","ProductHistory","productData","releaseImpl","productHistories","productHistory","addProductData","InspectionSubscription","paused","lastTrigger","subsById","selectedTrigger","baseSub","emitProductToAllSubscriptions","subscription","resubscribeToStream","swapLastProduct","uniqueIds","unsubscribeFromStream","subscribeToStream","params","buildReqParams","GetProductStreamRequest","onStreamEvent","onStreamError","getStartAtTriggerCount","includeFailStatusValues","rejectValueIds","rejectsOnly","isRejectsOnly","imageFormat","ImageFormatEnum","bmp","sub","ids","each","rawEvent","gatherImages","gatherValues","rejectImages","overlaysList","rejectOverlays","idx","rejectValues","emitProductToSubscription","hasRequestedData","hasAllRequestedDataForSubscription","isInterestedIn","isInterestedInNewPorduct","hasDataForSubscriptionInList","lastProduct","requestedIds","arr","inspectionIdBySubId","subsByInspectionId","resume","isPaused","AUTH_TOKEN_KEY","USER_KEY","loadUserInfoFromStorage","userStr","removeAllUserInfoFromStorage","saveUserInfoToStorage","select","paddingTop","inputLabelRef","labelWidth","setLabelWidth","offsetWidth","htmlFor","outlined","native","counter","prop","actionList","arrayOf","string","oneOfType","func","ProxyStream","opts","pendingMessages","currentThrottleTimeout","throttleInterval","throttleRequests","recs","rec","level","sameMessageCount","FormatStream","impl","out","browserStdout","bunyanFormat","outputMode","proxyStream","formatStream","createLogger","streams","setProxy","NUMBER_OF_SELECTABLE_VALUES","expandedFilteredKeys","checkedKeys","filteredCheckedKeys","inputValue","filteredLocations","filteredTree","countedVisibleValues","countedPossibleValues","selectionLimitReached","halfChecked","setExpandedKeys","onCheck","checkProps","limitedCheckedKeys","limitCheckedKeys","checkUnselectingAll","updateCheckedKeys","ensureSingleSelection","setChangedIds","limit","condition","checkedNode","newSelectedKeys","newDeselectedKeys","union","filteredIds","getSelectedLocation","onChangeFilter","initialChars","cutFilterIgnoreWords","abortRecursion","filteredKeys","countSelection","countCtx","countMatches","copy","filterNodesRecursively","countMatchingNodesRecursively","filteredInput","chars","shadowChildren","positions","remainingChars","consumeChars","childMatches","isMatchingSubtree","shadowNode","createFilteredShadowNode","prevIdx","styledText","highlightAtPositions","word","loop","switcherIcon","disableCheckbox","childProps","expanded","rootNode","visibleCheckedKeys","items_number","checkable","showLine","autoExpandParent","defaultExpandParent","showIcon","selectable","withStyles","de","en","es","translations","Observer","observable","closed","onNext","onComplete","Observable","onSubscribe","_onSubscribe","_next","_error","_complete","observer","tearDownCb","pendingRequests","openStreams","prevSocket","cancelAllPendingRequests","SvPenv","Envelope","decode","errorResponse","streamResponse","streamErrorResponse","streamFinish","streamCancel","onResponse","onErrorResponse","onStreamResponse","onStreamErrorResponse","onStreamFinish","onStreamCancel","txId","transactionId","hdl","unwrapResponse","handled","clearTimeout","timeout","unwrapErrorResponse","onErrorResponseImpl","streamId","ackStreamResponse","nextTxId","wrapMessage","buf","serializeEnvelope","onRequestTimeout","send","nextStreamId","streamRequest","cancelStream","fromObject","ackEnv","sequenceNumber","streamAck","wrapOneOf","envelope","payloadType","getPayloadTypeForOneOfMessage","payload","packToAny","unpackFromAny","unwrapOneOf","errorCode","fieldName","getFieldNameForSVRCMessage","SVRCMessages","$type","typeName","fullName","encoded","encode","finish","type_url","any","buffer","byteOffset","loadProto","SvAuth","initialized","namespace","ProtoJs","load","ModalNotification","visible","selectedItem","SuggestionList","currentKey","onCancel","prevFilter","usePrevious","filteredItems","textWithHighlight","menuitems","currentText","isSelected","Paper","Autocomplete","suggestionList","inputRef","setShow","setFilter","setCurrentKey","onChangeAutocompleteText","currentPosition","getFilterText","onKeyDown","onSelectSuggestion","AlertDialog","contentText","aria-labelledby","aria-describedby","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","DialogActions","InformationBox","informationText","showingInfo","setShowingInfo","infoIcon","treeEntityNameGenerator","searchedNodeId","ImageForm","object","propertyName","allowedImageVariables","allowedPathVariables","onDelete","treeStyle","treeNodeId","setTreeNodeId","setPath","samplingRate","setSamplingRate","setEnabled","Box","sx","mr","AutoComplete","required","deleteIcon","COMPONENT_TYPE_AUTOCOMPLETE","fieldsForTreeForValueSelection","triggerPropertiesRequiresName","triggerProperties","informationToFieldsMap","Typography","gutterBottom","TriggerSettings","allowedVariables","allowedAutoCompleteVariables","allowedImagePathVariables","newTriggerProperty","setNewTriggerProperty","update","setUpdate","triggerResult","deleteProperty","remainingTriggerProperties","excludedFields","valueFieldType","addtriggerProp","addNewTriggerProperty","addIcon","PropertyForm","batchPropertiesRequiresName","batchProperties","BatchSettings","newBatchProperty","setNewBatchProperty","batch","batchResult","remainingBatchProperties","addbatchProp","addNewBatchProperty","DatabaseGatewayEditor","databaseGatewayConfig","inspectionSubscriptions","webAppConfiguration","batchVariables","constant","saveConfiguration","simplifyConfiguration","saveDatabaseGatewayConfiguration","names","subscriptions","triggerVariablesAsTree","triggerVariables","filteredInspections","getInspectionId","getTriggerVariablesAsTree","getTriggerVariables","deleteSubscription","inspectionSelection","renderConfig","generateDefaultInspectionSubscription","DatabaseGatewayPage","SelectParameter","changeCallback","removeCallback","valuesWithLabels","localeCompare","ArrayParameter","SingleParameterComponent","numberOfEntries","removeArrayEntry","BoolParameter","BoolArrayParameter","BytesParameter","SingleParameter","fieldType","DecimalParameter","DecimalArrayParameter","EnumArrayParameter","EnumParameter","IntegerParameter","IntegerArrayParameter","TextParameter","TextArrayParameter","RequestParameter","parameters","setParameters","nestedParamsMap","setNestedParamsMap","currentRequestName","setCurrentRequestName","sendRequest","dir","getControlForField","currentPath","currentValue","changeValue","getStringArrayControl","getStringControl","getBoolArrayControl","getBoolControl","getIntegerArrayControl","getIntegerControl","getDecimalArrayControl","getDecimalControl","getBytesControl","constructor","getArrayEnumControl","getEnumControl","newPath","getArrayControlsForType","getControlsForType","newParams","cloneDeep","controls","fieldKeys","oneofs","oneOfKey","oneof","fieldkey","partOf","rule","addArrayEntryForType","RequestedResponseVisualizer","imageUrl","setImageUrl","setFileData","buildUrl","copyResponseToClipboard","navigator","clipboard","writeText","RequestsList","proto","chooseCallback","setActive","requests","requestname","Debugger","currentRequest","setCurrentRequest","setResponse","filteredProto","Link","ArrowIcon","DebuggerPage","parseQueryParams","search","queryParams","part","decodeURIComponent","HmiLoginPage","authenticated","setTopNavHidden","hideTopNavigation","setBottomNavHidden","hideBottomNavigation","setLocale","setDefaultViewSetName","authError","statusText","pathname","viewSetTemplate","hidden","LogoutPage","loggedOut","onLogOut","onLoggedOut","KeyHandler","handleKeyEvent","ctrlKey","toggleFullscreenMode","openHelpView","stopPropagation","handleClick","editingViewIds","helpSection","setFocusedViewType","tabIndex","PermissionManagement","loadCurrentPermissions","initiallySelectedPermissions","currentSelectedPermissions","savePermissions","setUserPermissions","onSaveClicked","onResetClicked","allAvailablePermissions","redirect","Permissions","groupName","newPermissions","am","bm","bs","as","colGroup","permissionsPerGroup","tableheader","dataRow","mapsAreEqual","getColGroup","tablehead","getTableHead","getData","PermissionPage","viewMappings","closeHelpView","InformationDialog","fileChooser","createdViewSets","isImportConfirmOpen","setIsImportConfirmOpen","viewsetToDelete","setViewsetToDelete","currentImportedViewSet","setCurrentImportedViewSet","isInformationDialogOpen","setIsInformationDialogOpen","informationDialogTitle","setInformationDialogTitle","informationDialogMessage","setInformationDialogMessage","shouldCloseViewSetManager","setShouldCloseViewSetManager","viewSetToEdit","setViewSetToEdit","fileLoaderVersion","existsName","addViewSet","newViewSetName","nameToTry","getNextFreeName","newViewSet","exportViewSets","dataToSave","getEditingViewIdsPerInspection","createJsonFileFromObject","closeViewSetManager","inspectionIdStr","json","handleFileData","fileText","equalsViewSetName","setViewSetConfigurationFromFileData","showErrorWhileLoadingFileDialog","handleDeleteConfirmDialogClose","removeViewSet","loadViewSetFromFile","loadSuccessfulInformationDialogText","isMajorVersionCompatible","isMinorVersionNewer","loadVersionChangeInformationDialogText","purgeViewState","showInformationDialog","showIncompatibleVersionErrorDialog","semver","valid","diff","gt","getViewSetEditingIcon","viewsetName","alert","renameViewSet","iconCheck","column","paddingRight","exportIcon","importIcon","removeIcon","handleImportConfirmDialogClose","readAsText","viewSetType","TopNavigationItem","PresetButton","presetButtonClass","PresetSlider","switchViewSet","BottomNav","selectedIndex","viewSetManagerOpen","bottomNavHidden","isSVOConfigLoaded","ViewSetManagerIcon","fullscreenMode","NavigationItem","itemRef","openMenu","setOpenMenu","hasChildren","Popper","anchorEl","placement","zIndex","ClickAwayListener","onClickAway","elevation","DateTime","format","ticking","LockState","configLock","configurationLock","TakeoverDialog","onAccept","timeLeft","setTimeLeft","interval","setInterval","clearInterval","onReject","formReducer","selectableModes","useModeSwitchNavigation","currentModeKey","modeId","modeKey","setCurrentMode","useNavigation","userInfoNavigation","languageChooserNavigation","addUserSwitchedLanguageNotification","languageIcon","useLanguageChooserNavigation","lockStateHandlerNavigation","loggedUser","useReducer","scope","formData","setFormData","openFormDialog","setOpenFormDialog","getLabel","isLockedBySameUser","isLockedByOtherUser","handleClose","padlockIcon","lockIcon","shrink","subscribeToLockAcquisitionStream","isConfigAlreadyLocked","closeAlertDialogs","isOwnerRejectedTakeover","isWaitingForTakeoverResponse","isTakeoverAttemptFromOtherUser","passConfigLock","retainConfigLock","useLockStateHandlerNavigation","inspectionStateNavigation","allRunning","unshift","iconPlayMultiple","runningInspections","numberOfInspections","useInspectionStateNavigation","statusReportNavigation","logIcon","count","useStatusReportNavigation","modeSwitchNavigation","navigation","TopNavigation","topNavHidden","navClass","nav","fontStyle","NoSVOConfigurationLoadedView","ListSelection","headline","selectionItems","onSelection","cancelButtonProps","showCancel","goBack","InspectionSelection","getSelectionItems","InspectionIcon","BackIcon","ViewTypeSelection","inspectionTypes","ImageViewIcon","ParameterViewIcon","ImageStripViewIcon","ListViewIcon","toolsetIcon","ViewSelection","visibleComponent","selectedInspectionId","selectedViewType","setSelectedInspectionId","changeTitle","updateView","setSelectedViewType","goBackToViewTypeSelection","cancelViewSelection","changeContent","replaceViewInCurrentViewSet","viewToShowWithoutInspection","replacementComponentId","SVOView","setFullscreen","resetView","removeIdsForUnknownInspectionIds","canEditCurrentView","canDeleteCurrentView","isConfirmOpen","windowName","viewClass","fullscreen","currentInspections","hasInspectionId","toolbarControls","onCloseView","CloseIcon","createNode","formatMessage","ViewSet","mosaic","viewToClose","setViewToClose","viewSetClass","handleConfirmDialogClose","layout","increaseViewSizeChangeCounter","renderTile","Consumer","mosaicActions","resize","minimumPaneSizePercentage","SVObserver","throttledWindwResizeHandler","throttle","increaseChangeCounter","onWebsocketConnect","addConnectionEstablishedNotification","onWebsocketDisconnect","addConnectionLostNotification","returnValue","viewSetId","defaultViewSetName","changeViewSetAfterLoading","handleBeforeUnload","context","getState","modalNotificationData","setLayout","BottomNavigation","contextType","ReactReduxContext","setCurrentLayout","App","exact","render","paperStyle","LoginPage","onSubmit","onLogin","loginFailed","autoComplete","getNewNotifications","notification2Add","newNotifications","date","dateOptions","day","month","year","timeOptions","hour","minute","toLocaleString","addTimestampToNotification","currentNotification","equalsLastNotificationCurrentNotification","setCountForNotification","appReducer","initalAppState","websocketUrl","connection","navigationHidden","saveOperationInProcess","currentClientChunkRevision","createInitialAppState","setProtobufStaticInitialized","setMode","revision","inProcess","initialState","toolsetReducer","findInspectionForView","viewDataReducer","omit","showInList","newState","fullscreenComponentDescriptor","enterFullScreenMode","componentDescriptor","leaveFullScreenMode","findCreatedViewSetWithName","cached","targetViewSet","createdViewSet","updateCurrentViewSet","newCreatedViewSets","c","viewSetReducer","createdView","currentViewSetId","updatedViewSet","changeViewSetToName","emptyViewSet","viewsetToEdit","oldName","renamedViewSet","newName","currentLayout","loadedViewSet","isLoaded","createReducers","combineReducers","routing","PreLogin","setUser","setAuthToken","setStore","autoSave","createStore","applyMiddleware","thunk","devToolsExtension","f","fromLocalStorage","visibilityState","setBrowserWindowVisibility","hibernateTimer","onLoggedIn","muiTheme","palette","primary","main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","utf8StringToBuffer","len","protobufjs","util","utf8","bufferToUtf8String","DATABASEGATEWAY_CHUNK_FILENAME","WEBAPP_CHUNK_FILENAME","WEBAPP_IDMAPPING_FILENAME","WEBAPP_CHUNK_VERSION","WEBAPP_CHUNK_PARAMETERS","VERSION","SV_OBSERVER_VERSION","GATEWAY_VERSION","WEBAPP_VERSION","CREATED_VIEW_SETS","CURRENT_VIEW_SETS","INSPECTION_OVERLAYS","INSPECTION_LIST_SELECTION","INSPECTION_EDITING_VIEW_IDS","INSPECTION_LIST_ALIASES","INSPECTION_IMAGE_VIEW_SETTINGS","saveChunk","setSaveOperationInProcess","inspectionOverlays","inspectionListSelection","listSelection","inspectionEditingViewIds","inspectionListAliases","convertAliasesToJson","inspectionImageViewSettings","imageViewSettings","PutFileRequest","destinationPath","saveInConfig","loadChunk","setClientChunk","addIncompatibilityDetectedNotification","setListViewAliases","GetFileRequest","sourcePath","updateConfigWithGuidToIntMapping","loadDataForCurrentViewSet","coerce","configVersion","satisfies","receivedConfigParameters","expectedConfigParameters","currentParameterName","setting","resetChunk","emptyViewset","emptyViewSets","idMappingChunk","idMapping","parseGuidToObjectIdMapping","guidToObjectIdMapping","recursivlyUpdateConfigWithGuidToIntMapping","hasError","patchedIds","guid","lookUpKeyInMapping","lowerCaseKey","loadDatabaseGatewayConfig","setDatabaseGatewayChunk","saveDatabaseGatewayConfig","isToolsetViewSet","isImageViewSet","isListViewSet","isImageStripViewSet","newProtobuf","addNotification","configFile","authenticateHelper","logOutHelper"],"mappings":"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DAAAA,I,0CAAAA,I,gEAAAA,I,4CAAAA,I,0DAAAA,I,8BAAAA,I,sCAAAA,I,gDAAAA,I,wDAAAA,I,0CAAAA,I,0CAAAA,I,wCAAAA,I,4CAAAA,I,oDAAAA,I,gDAAAA,I,kDAAAA,I,gDAAAA,I,0CAAAA,I,gDAAAA,I,oDAAAA,I,0CAAAA,I,gDAAAA,I,8CAAAA,I,4CAAAA,I,0DAAAA,I,sDAAAA,I,oDAAAA,I,0DAAAA,I,gEAAAA,I,gEAAAA,I,0DAAAA,I,gEAAAA,I,0DAAAA,I,kCAAAA,I,4CAAAA,I,kCAAAA,I,oDAAAA,I,kCAAAA,I,sDAAAA,I,oCAAAA,I,4CAAAA,I,wCAAAA,I,wCAAAA,I,gCAAAA,I,oCAAAA,I,wCAAAA,I,sCAAAA,I,4BAAAA,I,4BAAAA,I,oCAAAA,I,kCAAAA,I,sCAAAA,I,wCAAAA,I,oDAAAA,I,4DAAAA,I,oDAAAA,I,gEAAAA,I,0CAAAA,I,0CAAAA,I,gDAAAA,I,0DAAAA,I,0DAAAA,I,wCAAAA,I,4CAAAA,I,4DAAAA,I,wEAAAA,I,sCAAAA,I,gDAAAA,I,kDAAAA,I,sDAAAA,I,sDAAAA,I,wDAAAA,I,8DAAAA,I,8CAAAA,I,sDAAAA,I,kDAAAA,I,gDAAAA,I,kDAAAA,I,gDAAAA,I,mEAAAA,I,iEAAAA,I,mEAAAA,I,iEAAAA,I,yCAAAA,I,mDAAAA,I,uDAAAA,I,qDAAAA,I,uDAAAA,I,6CAAAA,I,2DAAAA,I,2DAAAA,I,qDAAAA,I,6CAAAA,I,2CAAAA,I,2CAAAA,I,iDAAAA,I,yCAAAA,I,uCAAAA,I,2CAAAA,I,6CAAAA,I,yCAAAA,I,6CAAAA,I,qEAAAA,I,iEAAAA,I,uEAAAA,I,+DAAAA,I,2DAAAA,I,iGAAAA,I,yDAAAA,I,yCAAAA,I,iDAAAA,I,mDAAAA,I,yCAAAA,I,mDAAAA,I,iDAAAA,I,iDAAAA,I,uCAAAA,I,2CAAAA,I,2CAAAA,I,mDAAAA,I,2CAAAA,I,mDAAAA,I,+DAAAA,I,mDAAAA,I,2DAAAA,I,mDAAAA,I,2DAAAA,I,6CAAAA,I,iDAAAA,I,mDAAAA,I,qCAAAA,I,iEAAAA,I,6BAAAA,I,6BAAAA,I,+BAAAA,I,2BAAAA,I,qDAAAA,I,qDAAAA,I,iBAAAA,I,mBAAAA,I,iBAAAA,I,mBAAAA,I,yBAAAA,I,2BAAAA,I,2BAAAA,I,2BAAAA,I,2CAAAA,I,qCAAAA,I,qCAAAA,I,qCAAAA,I,uCAAAA,I,2CAAAA,I,mCAAAA,I,mCAAAA,I,iCAAAA,I,yBAAAA,I,2BAAAA,I,yCAAAA,I,2CAAAA,I,2CAAAA,I,mDAAAA,I,yDAAAA,I,mDAAAA,I,mDAAAA,I,+BAAAA,I,iCAAAA,I,yCAAAA,I,uCAAAA,I,yCAAAA,I,uCAAAA,I,mDAAAA,I,qCAAAA,I,+CAAAA,I,uCAAAA,I,uCAAAA,I,yCAAAA,I,yCAAAA,I,iDAAAA,I,+DAAAA,I,+DAAAA,I,2DAAAA,I,6DAAAA,I,2EAAAA,I,qFAAAA,I,6DAAAA,I,uFAAAA,I,qDAAAA,I,+BAAAA,I,+CAAAA,I,6BAAAA,I,yCAAAA,I,2BAAAA,I,yCAAAA,I,2CAAAA,I,2CAAAA,I,yCAAAA,I,yCAAAA,I,yCAAAA,I,yCAAAA,I,6BAAAA,I,qCAAAA,I,uCAAAA,I,iDAAAA,I,mCAAAA,I,iDAAAA,I,mDAAAA,I,+CAAAA,I,mDAAAA,I,qEAAAA,I,mEAAAA,I,+DAAAA,I,qEAAAA,I,2DAAAA,I,iEAAAA,I,2BAAAA,I,2DAAAA,I,uDAAAA,I,yDAAAA,I,iDAAAA,I,uCAAAA,I,iCAAAA,I,uCAAAA,I,uEAAAA,I,uEAAAA,I,qEAAAA,I,2CAAAA,I,yCAAAA,I,yCAAAA,I,mDAAAA,I,qEAAAA,I,uFAAAA,I,6EAAAA,I,2EAAAA,I,iFAAAA,I,uEAAAA,I,qEAAAA,I,qEAAAA,I,uFAAAA,I,6EAAAA,I,2EAAAA,I,iFAAAA,I,uEAAAA,I,qEAAAA,I,uEAAAA,I,yFAAAA,I,+EAAAA,I,6EAAAA,I,mFAAAA,I,yEAAAA,I,uEAAAA,I,uEAAAA,I,yFAAAA,I,+EAAAA,I,6EAAAA,I,mFAAAA,I,yEAAAA,I,uEAAAA,I,mDAAAA,I,mDAAAA,I,uDAAAA,I,yCAAAA,I,qDAAAA,I,qDAAAA,I,mCAAAA,I,qEAAAA,I,qEAAAA,I,iCAAAA,I,mCAAAA,I,yDAAAA,I,yDAAAA,I,+EAAAA,I,+EAAAA,I,yEAAAA,I,yEAAAA,I,iFAAAA,I,mDAAAA,I,uCAAAA,I,uCAAAA,I,6CAAAA,I,qDAAAA,I,qDAAAA,I,+CAAAA,I,+CAAAA,I,uDAAAA,I,2CAAAA,I,mEAAAA,I,6DAAAA,I,yCAAAA,I,yCAAAA,I,iDAAAA,I,6CAAAA,I,+CAAAA,I,2CAAAA,I,6DAAAA,I,+CAAAA,I,qDAAAA,I,qEAAAA,I,qEAAAA,I,6EAAAA,I,yEAAAA,I,2EAAAA,I,uEAAAA,I,mEAAAA,I,iEAAAA,I,qEAAAA,I,uEAAAA,I,qCAAAA,I,uCAAAA,I,+DAAAA,I,iEAAAA,I,2DAAAA,I,+CAAAA,I,+CAAAA,I,uDAAAA,I,+DAAAA,I,iDAAAA,I,iDAAAA,I,qDAAAA,I,6CAAAA,I,2BAAAA,I,qDAAAA,I,6BAAAA,I,uCAAAA,I,uCAAAA,I,qCAAAA,I,qCAAAA,I,uCAAAA,I,uCAAAA,I,mDAAAA,I,qDAAAA,I,qCAAAA,I,+CAAAA,I,mDAAAA,I,+BAAAA,I,iDAAAA,I,2CAAAA,I,+CAAAA,I,+CAAAA,I,iDAAAA,I,+CAAAA,I,yDAAAA,I,qDAAAA,I,qCAAAA,I,uDAAAA,I,iFAAAA,I,qCAAAA,I,uCAAAA,I,yCAAAA,I,2CAAAA,I,6CAAAA,I,6CAAAA,I,+CAAAA,I,iDAAAA,I,qEAAAA,I,6DAAAA,I,6DAAAA,I,6DAAAA,I,6DAAAA,I,qDAAAA,I,mCAAAA,I,mCAAAA,I,2CAAAA,I,qEAAAA,I,6CAAAA,I,mCAAAA,I,mCAAAA,I,mCAAAA,I,uCAAAA,I,2BAAAA,I,yDAAAA,I,qDAAAA,I,qDAAAA,I,yDAAAA,I,yDAAAA,I,qDAAAA,I,qDAAAA,I,yDAAAA,I,yDAAAA,I,qDAAAA,I,qDAAAA,I,yDAAAA,I,yDAAAA,I,6DAAAA,I,2CAAAA,I,iDAAAA,I,6CAAAA,I,+DAAAA,I,2DAAAA,I,yCAAAA,I,qDAAAA,I,+DAAAA,I,2CAAAA,I,iDAAAA,I,6CAAAA,I,+DAAAA,I,2DAAAA,I,yCAAAA,I,qDAAAA,I,+DAAAA,I,+DAAAA,I,uCAAAA,I,6DAAAA,I,2CAAAA,I,iDAAAA,I,6CAAAA,I,qCAAAA,I,qCAAAA,I,2CAAAA,I,uDAAAA,I,uDAAAA,I,+CAAAA,I,iCAAAA,I,2CAAAA,I,6CAAAA,I,6CAAAA,I,yBAAAA,I,yBAAAA,I,qEAAAA,I,uEAAAA,I,6EAAAA,I,6EAAAA,I,6DAAAA,I,+DAAAA,I,qEAAAA,I,qEAAAA,I,+CAAAA,I,+DAAAA,I,6BAAAA,I,iCAAAA,I,2CAAAA,I,iEAAAA,I,uDAAAA,I,iEAAAA,I,mEAAAA,I,6DAAAA,I,+DAAAA,I,mFAAAA,I,+DAAAA,I,+DAAAA,I,6DAAAA,I,mDAAAA,I,2DAAAA,I,uEAAAA,I,uEAAAA,I,2DAAAA,I,+DAAAA,I,yEAAAA,I,6DAAAA,I,uEAAAA,I,6DAAAA,I,uEAAAA,I,+BAAAA,I,qCAAAA,I,qCAAAA,I,mDAAAA,I,iCAAAA,I,+CAAAA,I,qCAAAA,I,iDAAAA,I,yDAAAA,I,2CAAAA,I,+DAAAA,I,6FAAAA,I,2EAAAA,I,iEAAAA,I,iEAAAA,I,yEAAAA,I,yEAAAA,I,yEAAAA,I,+BAAAA,I,mDAAAA,I,qCAAAA,I,+BAAAA,I,iCAAAA,I,2CAAAA,I,iDAAAA,I,iEAAAA,I,iDAAAA,I,iEAAAA,I,+CAAAA,I,qCAAAA,I,6BAAAA,I,6CAAAA,I,6CAAAA,I,uEAAAA,I,yEAAAA,I,6DAAAA,I,qEAAAA,I,+DAAAA,I,uEAAAA,I,uEAAAA,I,uEAAAA,I,mEAAAA,I,qEAAAA,I,mFAAAA,I,6FAAAA,I,qEAAAA,I,iCAAAA,I,mCAAAA,I,2DAAAA,I,+CAAAA,I,+CAAAA,I,+CAAAA,I,iCAAAA,I,iCAAAA,I,2BAAAA,I,2BAAAA,I,2BAAAA,I,uEAAAA,I,mDAAAA,I,mDAAAA,I,6CAAAA,I,+DAAAA,I,qDAAAA,I,uCAAAA,I,2CAAAA,I,2CAAAA,I,qCAAAA,I,8CAAAA,I,sDAAAA,I,oCAAAA,I,0CAAAA,I,sDAAAA,I,4CAAAA,I,0DAAAA,I,gDAAAA,I,sCAAAA,I,8CAAAA,I,iDAAAA,I,oDAAAA,I,gDAAAA,I,+CAAAA,I,8CAAAA,I,8CAA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","file":"static/js/main.b22ce715.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/plus.72585b6a.svg\";","import logger from './logger';\nexport const forceDownload = (data, fileName) => {\n  if (!data) {\n    logger.info('forceDownload expects data but did not receive');\n    return;\n  }\n  const link = document.createElement('a');\n  link.download = fileName;\n  link.href = data;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n","import { ReactNode } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\n\nimport Dialog from '../Dialog';\nimport './style.scss';\n\ninterface ConfirmDialogProps {\n  onClose: (confirmed: boolean) => void;\n  open: boolean;\n  title?: ReactNode;\n  message?: ReactNode;\n}\n\nconst ConfirmDialog = ({ onClose, open, title, message }: ConfirmDialogProps) => {\n  return (\n    <div>\n      <Dialog title={title || ''} onClose={() => onClose(false)} open={open}>\n        <div className=\"message-wrapper\">{message}</div>\n        <div className=\"button-wrapper\">\n          <Button color=\"primary\" onClick={() => onClose(true)}>\n            Okay\n          </Button>\n          <Button color=\"primary\" onClick={() => onClose(false)}>\n            <FormattedMessage id=\"cancel\" />\n          </Button>\n        </div>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ConfirmDialog;\n","import { parse } from 'url';\n\nfunction getDefaultWebsocketUrl() {\n  const { host, protocol } = window.location;\n  const wsProtocol = protocol === 'https:' ? 'wss:' : 'ws:';\n  return `${wsProtocol}//${host}`;\n}\n\nfunction getEndpoint(url) {\n  const parsedUrl = url ? parse(url) : window.location;\n  const protocol = parsedUrl.protocol.replace('ws', 'http');\n  return `${protocol}//${parsedUrl.host}`;\n}\n\nconst env = {\n  authEndpoint: getEndpoint(process.env.REACT_APP_WEBSOCKET_SERVER_URL),\n  websocketServerUrl: process.env.REACT_APP_WEBSOCKET_SERVER_URL || getDefaultWebsocketUrl(),\n  enableAutoSave: false,\n};\n\nexport default env;\n","export function replacerMapToJson(key, value) {\n  const originalObject = this[key];\n  if (originalObject instanceof Map) {\n    return {\n      dataType: 'Map',\n      value: [...originalObject],\n    };\n  } else {\n    return value;\n  }\n}\n\nexport function reviverJsonToMap(key, value) {\n  if (typeof value === 'object' && value !== null) {\n    if (value.dataType === 'Map') {\n      return new Map(value.value);\n    }\n  }\n  return value;\n}\n","export const chunkSubstr = (str, size) => {\n  const numChunks = Math.ceil(str.length / size);\n  const chunks = new Array(numChunks);\n\n  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substr(o, size);\n  }\n\n  return chunks;\n};\n","import { compressToUTF16, decompressFromUTF16 } from 'async-lz-string';\nimport { reviverJsonToMap, replacerMapToJson } from '../utils/jsonMapper';\nimport {\n  CONFIG_INFO,\n  CONFIGURATION_CHUNK_TEMPLATE,\n  CONFIGURATION_CHUNK_LIST,\n} from '../utils/localStorage';\nimport logger from '../utils/logger';\nimport { isObjectValid } from '../utils/objectValidator';\nimport { chunkSubstr } from '../utils/stringChunker';\nimport Protobuf from './Protobuf';\n\nconst extractConfigName = (filename) => {\n  if (!filename) {\n    return '';\n  }\n  const slashIdx = filename.lastIndexOf('\\\\');\n  if (slashIdx !== -1) {\n    filename = filename.substr(slashIdx + 1);\n  }\n  const dotIdx = filename.lastIndexOf('.');\n  if (dotIdx !== -1) {\n    filename = filename.substr(0, dotIdx);\n  }\n  return filename;\n};\n\nconst getConfigName = async (protobuf) => {\n  const request = Protobuf.SvPb.GetConfigurationInfoRequest.create();\n  const { fileName } = await protobuf.request(request);\n  return extractConfigName(fileName);\n};\n\nconst getInspections = async (protobuf) => {\n  try {\n    const inspectionsReq = Protobuf.SvPb.GetInspectionsRequest.create({});\n    const inspectionsRes = await protobuf.request(inspectionsReq);\n    return (inspectionsRes.inspections || []).map((inspection) => ({\n      id: inspection.id,\n      name: inspection.name,\n    }));\n  } catch (e) {\n    // ignore error. will fall back to empty inspection name list.\n    logger.error('Error while fetching inspection name list:', e);\n    return [];\n  }\n};\n\nconst getInspectionIds = (inspections) => {\n  return (inspections || []).map((inspection) => inspection.id);\n};\n\nconst getInspectionNames = (inspections) => {\n  return (inspections || []).map((inspection) => inspection.name);\n};\n\n// objectIDIndex has the format:\n//   {#123}\n// and sometimes also an index at the end:\n//   {#123}[10]\n// or this for empty arrays\n//   {#123}[ ]\n// except of the index at the end, it is a normal id\nconst parseObjectIdIndex = (str) => {\n  if (!str.startsWith('{#')) {\n    return;\n  }\n  const endIdx = str.indexOf('}');\n  if (endIdx < 0) {\n    return;\n  }\n  // TODO parse array index\n  str = str.substr(2, endIdx);\n  return parseInt(str, 10);\n};\n\nconst cleanObjectSelectorNodeRecursively = (node) => {\n  const { name, type, location, objectIDIndex, children, selected } = node;\n  const cleanedChildren = (children || []).map(cleanObjectSelectorNodeRecursively);\n  const id = (objectIDIndex && parseObjectIdIndex(objectIDIndex)) || null;\n  return {\n    id,\n    name,\n    type,\n    location,\n    selected,\n    children: cleanedChildren,\n  };\n};\n\nconst getIdNameMappingForInspection = async (protobuf, inspectionId, inspectionName) => {\n  const req = Protobuf.SvPb.GetObjectSelectorItemsRequest.create({\n    areas: [Protobuf.SvPb.SearchArea.toolsetItems],\n    inspectionID: inspectionId,\n    instanceID: 0, // InvalidObjectId\n    attribute: Protobuf.SvPb.ObjectAttributes.viewable,\n    wholeArray: true,\n    type: Protobuf.SvPb.ObjectSelectorType.allValueObjects,\n    attributesAllowed: 1,\n  });\n  const res = await protobuf.request(req);\n  if (!res.tree) {\n    logger.error('GetObjectSelectorItemsRequest response does not contain a tree');\n    return null;\n  }\n\n  const tree = cleanObjectSelectorNodeRecursively(res.tree);\n\n  const entries = new Map();\n  const queue = (tree && tree.children && tree.children.slice(0)) || [];\n  while (queue.length > 0) {\n    const head = queue.shift();\n    const { id, name, type, location, children } = head;\n    if (id) {\n      entries.set(id, {\n        id,\n        name,\n        type,\n        location,\n        fullLocation: 'Inspections.' + inspectionName + '.' + location,\n      });\n    }\n    if (children && children.length) {\n      for (let i = 0; i < children.length; ++i) {\n        queue.push(children[i]);\n      }\n    }\n  }\n\n  return entries;\n};\n\nconst getObjectSelectorItemsRequest = async (protobuf, inspectionId, requestParameters) => {\n  const req = Protobuf.SvPb.GetObjectSelectorItemsRequest.create(requestParameters);\n  let res;\n  try {\n    res = await protobuf.request(req);\n  } catch (error) {\n    logger.error(error);\n    return null;\n  }\n\n  if (!res.tree) {\n    logger.error('GetObjectSelectorItemsRequest response does not contain a tree');\n    return null;\n  }\n\n  const tree = cleanObjectSelectorNodeRecursively(res.tree);\n  return { tree };\n};\n\nconst getObjectSelectorItemsForInspection = async (protobuf, inspectionId) => {\n  return getObjectSelectorItemsRequest(protobuf, inspectionId, {\n    areas: [Protobuf.SvPb.SearchArea.toolsetItems],\n    inspectionID: inspectionId,\n    instanceID: 0, // InvalidObjectId\n    attribute: Protobuf.SvPb.ObjectAttributes.viewable,\n    wholeArray: true,\n    type: Protobuf.SvPb.ObjectSelectorType.allValueObjects,\n    attributesAllowed: 1,\n  });\n};\n\nconst getRemotelySettableObjectSelectorItemsForInspection = async (protobuf, inspectionId) => {\n  return getObjectSelectorItemsRequest(protobuf, inspectionId, {\n    areas: [Protobuf.SvPb.SearchArea.toolsetItems],\n    inspectionID: inspectionId,\n    instanceID: 0, // InvalidObjectId\n    attribute: Protobuf.SvPb.ObjectAttributes.remotelySettable,\n    wholeArray: true,\n    type: Protobuf.SvPb.ObjectSelectorType.allValueObjects,\n    attributesAllowed: 1,\n  });\n};\n\nconst getObjectSelectorImagesForInspection = async (protobuf, inspectionId) => {\n  return getObjectSelectorItemsRequest(protobuf, inspectionId, {\n    areas: [Protobuf.SvPb.SearchArea.toolsetItems],\n    inspectionID: inspectionId,\n    type: Protobuf.SvPb.ObjectSelectorType.allImageObjects,\n    attribute: Protobuf.SvPb.ObjectAttributes.archivableImage,\n    attributesAllowed: 1,\n  });\n};\n\nconst getVersion = async (protobuf, requestClass) => {\n  const request = requestClass.create();\n  const response = await protobuf.request(request);\n  if (!response.version) {\n    logger.error(`Error while reading version via ${requestClass.name}`);\n    return 'Unknown Version';\n  }\n  return response.version;\n};\n\nconst getPerInspection = async (protobuf, inspectionIds, inspectionNames, fn) => {\n  const itemsByInspectionId = new Map();\n  for (let i = 0; i < inspectionIds.length; ++i) {\n    const inspectionId = inspectionIds[i];\n    const inspectionName = inspectionNames[i];\n    const item = await fn(protobuf, inspectionId, inspectionName);\n    if (item) {\n      itemsByInspectionId.set(inspectionId, item);\n    }\n  }\n  return itemsByInspectionId;\n};\n\nconst getConfigurationTree = async (protobuf) => {\n  const request = Protobuf.SvPb.GetConfigurationTreeRequest.create();\n  const response = await protobuf.request(request);\n  if (!response || !response.tree) {\n    logger.error('Cannot get config tree');\n    return false;\n  }\n  return response;\n};\n\nconst mapInspectionIdtoToolset = async (protobuf) => {\n  const inspectionToolsetMappings = new Map();\n\n  const configurationTree = await getConfigurationTree(protobuf);\n  if (!isObjectValid(() => configurationTree.tree.children)) {\n    logger.error('configTree is not valid');\n    return inspectionToolsetMappings;\n  }\n\n  await Promise.all(\n    configurationTree.tree.children.map(async (inspection) => {\n      const inspectionId = inspection.objectID;\n      if (!inspectionId) {\n        logger.error(`Inspection without valid id: ${inspectionId}`);\n        return;\n      }\n\n      let toolSetId = 0;\n      try {\n        toolSetId = await getToolSetId(protobuf, inspectionId, inspection.name);\n      } catch (e) {\n        logger.error(`Could not load tool set id for ${inspection.name} (${inspectionId})`);\n        return;\n      }\n\n      inspectionToolsetMappings.set(inspectionId, { ...inspection, toolSetId });\n    }),\n  );\n\n  return inspectionToolsetMappings;\n};\n\nconst getToolSetId = async (protobuf, inspectionId, inspectionName) => {\n  const request = Protobuf.SvPb.InspectionCmdRequest.create({\n    inspectionID: inspectionId || undefined,\n    getObjectIdRequest: {\n      name: `${inspectionName}.Tool Set`,\n    },\n  });\n\n  try {\n    const response = await protobuf.request(request);\n    return response?.getObjectIdResponse?.objectId;\n  } catch (error) {\n    logger.error(error);\n  }\n};\nconst getGlobalConstants = async (protobuf, inspectionIds) => {\n  const constants = [];\n  if (!inspectionIds || inspectionIds.length === 0) {\n    return constants;\n  }\n  const reqObj = {\n    areas: [Protobuf.SvPb.SearchArea.globalConstantItems],\n    inspectionID: inspectionIds[0],\n    type: Protobuf.SvPb.ObjectSelectorType.allValueObjects,\n    attribute: Protobuf.SvPb.ObjectAttributes.viewable,\n    attributesAllowed: 1,\n  };\n\n  const req = Protobuf.SvPb.GetObjectSelectorItemsRequest.create(reqObj);\n  const res = await protobuf.request(req);\n\n  (res?.tree?.children || []).forEach((childLevel1) => {\n    if (childLevel1.location === 'Global') {\n      (childLevel1.children || []).forEach((childLevel2) => {\n        constants.push(childLevel2.location);\n      });\n    }\n  });\n\n  return constants;\n};\nexport default class Configuration {\n  static async loadFromCache() {\n    try {\n      let configString = '';\n      const chunksString = localStorage.getItem(CONFIGURATION_CHUNK_LIST);\n      const chunkList = chunksString.split(',');\n\n      configString = chunkList.map((key) => localStorage.getItem(key)).join();\n      const decompressedConfig = await decompressFromUTF16(configString);\n      const config = JSON.parse(decompressedConfig, reviverJsonToMap);\n\n      return new Configuration({\n        ...config,\n      });\n    } catch (err) {\n      logger.error({ err }, 'Error loading configuration');\n      return null;\n    }\n  }\n\n  static async saveToCache(configuration, configInfo) {\n    const stringifiedConfig = await compressToUTF16(\n      JSON.stringify(configuration, replacerMapToJson),\n    );\n    const configChunks = chunkSubstr(stringifiedConfig, 1000000); // 1m chars = 1MB chunks\n    let configChunkNames = [];\n\n    for (let i = 0; i < configChunks.length; i++) {\n      const chunk = configChunks[i];\n      const chunkName = `${CONFIGURATION_CHUNK_TEMPLATE}${i}`;\n      localStorage.setItem(chunkName, chunk);\n      configChunkNames.push(chunkName);\n    }\n\n    localStorage.setItem(CONFIGURATION_CHUNK_LIST, configChunkNames.join(','));\n    localStorage.setItem(CONFIG_INFO, JSON.stringify(configInfo));\n  }\n\n  static extractConfigNameFromFileName(filename) {\n    return extractConfigName(filename);\n  }\n\n  async discoverInspectionsWithConfigName(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    try {\n      const promises = await Promise.all([getConfigName(protobuf), getInspections(protobuf)]);\n\n      const [configName, inspections] = promises;\n\n      this.name = configName;\n      this.inspections = inspections;\n      this.inspectionIds = getInspectionIds(inspections);\n      this.inspectionNames = getInspectionNames(inspections);\n    } catch (err) {\n      logger.error({ err }, 'Error while discovering configuration');\n      return;\n    }\n  }\n\n  async discoverPartsInBackground(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    try {\n      const promises = await Promise.all([\n        getVersion(protobuf, Protobuf.SvPb.GetSVObserverVersionRequest),\n        getVersion(protobuf, Protobuf.SvPb.GetGatewayVersionRequest),\n        getVersion(protobuf, Protobuf.SvPb.GetWebAppVersionRequest),\n        getPerInspection(\n          protobuf,\n          this.inspectionIds,\n          this.inspectionNames,\n          getIdNameMappingForInspection,\n        ),\n        getPerInspection(\n          protobuf,\n          this.inspectionIds,\n          this.inspectionNames,\n          getObjectSelectorItemsForInspection,\n        ),\n        getPerInspection(\n          protobuf,\n          this.inspectionIds,\n          this.inspectionNames,\n          getRemotelySettableObjectSelectorItemsForInspection,\n        ),\n        getPerInspection(\n          protobuf,\n          this.inspectionIds,\n          this.inspectionNames,\n          getObjectSelectorImagesForInspection,\n        ),\n        mapInspectionIdtoToolset(protobuf),\n        getGlobalConstants(protobuf, this.inspectionIds),\n      ]);\n      const [\n        svObserverVersion,\n        gatewayVersion,\n        webAppVersion,\n        idNameMappings,\n        objectSelectorItems,\n        remotelySettableObjectSelectorItems,\n        objectSelectorImages,\n        inspectionToolsetMappings,\n        globalConstants,\n      ] = promises;\n\n      this.versions = { svObserverVersion, gatewayVersion, webAppVersion };\n      this.idNameMappings = idNameMappings;\n      this.objectSelectorItems = objectSelectorItems;\n      this.remotelySettableObjectSelectorItems = remotelySettableObjectSelectorItems;\n      this.objectSelectorImages = objectSelectorImages;\n      this.inspectionToolsetMappings = inspectionToolsetMappings;\n      this.globalConstants = globalConstants;\n    } catch (err) {\n      logger.error({ err }, 'Error while discovering configuration');\n      return;\n    }\n  }\n\n  constructor(config) {\n    this.name = '';\n    this.inspections = [];\n    this.inspectionIds = [];\n    this.inspectionNames = [];\n    this.idNameMappings = new Map();\n    this.objectSelectorItems = new Map();\n    this.remotelySettableObjectSelectorItems = new Map();\n    this.objectSelectorImages = new Map();\n    this.versions = {};\n    this.inspectionToolsetMappings = new Map();\n    this.globalConstants = [];\n\n    if (Object.keys(config).length !== 0) {\n      // copy all provided fields into this.\n      // this allows treating the configuration instance like a\n      // normal json object, but with additional helper functions.\n      Object.assign(this, config);\n    }\n  }\n\n  getSvObserverVersion() {\n    return this.versions && this.versions.svObserverVersion;\n  }\n\n  getGatewayVersion() {\n    return this.versions && this.versions.gatewayVersion;\n  }\n\n  getWebAppVersion() {\n    return this.versions && this.versions.webAppVersion;\n  }\n\n  getInspections() {\n    return this.inspections;\n  }\n\n  getInspectionName(inspectionId) {\n    const inspection = (this.inspections || []).find((i) => i.id === inspectionId);\n    return inspection && inspection.name;\n  }\n\n  getValueNameForId(inspectionId, id) {\n    if (typeof inspectionId === 'string') {\n      inspectionId = parseInt(inspectionId, 10);\n    }\n    const mappings = this.idNameMappings.get(inspectionId);\n    if (mappings) {\n      if (typeof id === 'string') {\n        id = parseInt(id, 10);\n      }\n      const mapping = mappings.get(id);\n      if (mapping) {\n        return mapping.fullLocation;\n      }\n    }\n    return null;\n  }\n\n  async setIdNameMappings(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    if (\n      this.idNameMappings.size === 0 &&\n      this.inspectionIds.length !== 0 &&\n      this.inspectionNames.length !== 0\n    ) {\n      const mappings = await getPerInspection(\n        protobuf,\n        this.inspectionIds,\n        this.inspectionNames,\n        getIdNameMappingForInspection,\n      );\n      this.idNameMappings = mappings;\n    } else {\n      logger.warn('setIdNameMappings: id name mappings already set');\n    }\n  }\n\n  getObjectSelectorItemsForInspection(inspectionId) {\n    return this.objectSelectorItems.get(inspectionId);\n  }\n\n  async setObjectSelectorItems(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    if (\n      this.objectSelectorItems.size === 0 &&\n      this.inspectionIds.length !== 0 &&\n      this.inspectionNames.length !== 0\n    ) {\n      const objectSelectorItems = await getPerInspection(\n        protobuf,\n        this.inspectionIds,\n        this.inspectionNames,\n        getObjectSelectorItemsForInspection,\n      );\n      this.objectSelectorItems = objectSelectorItems;\n    } else {\n      logger.warn('setObjectSelectorItems: object selector items already set');\n    }\n  }\n\n  getRemotelySettableObjectSelectorItemsForInspection(inspectionId) {\n    return this.remotelySettableObjectSelectorItems.get(inspectionId);\n  }\n\n  getObjectSelectorImagesForInspection(inspectionId) {\n    return this.objectSelectorImages.get(inspectionId);\n  }\n\n  async setObjectSelectorImages(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    if (\n      this.objectSelectorImages.size === 0 &&\n      this.inspectionIds.length !== 0 &&\n      this.inspectionNames.length !== 0\n    ) {\n      const objectSelectorImages = await getPerInspection(\n        protobuf,\n        this.inspectionIds,\n        this.inspectionNames,\n        getObjectSelectorImagesForInspection,\n      );\n      this.objectSelectorImages = objectSelectorImages;\n    } else {\n      logger.warn('setObjectSelectorImages: object selector images already set');\n    }\n  }\n\n  async setInspectionIdToToolsetMappings(protobuf) {\n    if (this.inspectionToolsetMappings.size === 0) {\n      this.resetInspectionIdToToolsetMappings(protobuf);\n    } else {\n      logger.warn('setInspectionIdToToolsetMappings: mappings already done');\n    }\n  }\n\n  async resetInspectionIdToToolsetMappings(protobuf) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    const mappings = await mapInspectionIdtoToolset(protobuf);\n    this.inspectionToolsetMappings = mappings;\n  }\n\n  async updateInspectionIdToToolsetMappings(protobuf, inspectionId) {\n    if (!protobuf || !protobuf.isConnected()) {\n      logger.error('Protobuf is invalid!');\n      return;\n    }\n\n    const configurationTree = await getConfigurationTree(protobuf);\n    if (!isObjectValid(() => configurationTree.tree.children)) {\n      logger.error('configTree is not valid');\n      return;\n    }\n\n    for (const inspection of configurationTree.tree.children) {\n      const id = inspection.objectID;\n      if (id === inspectionId) {\n        let toolSetId = 0;\n        try {\n          toolSetId = await getToolSetId(protobuf, id, inspection.name);\n        } catch (e) {\n          logger.error(`Could not load tool set id for ${inspection.name} (${id})`);\n          return;\n        }\n\n        this.inspectionToolsetMappings.set(inspectionId, { ...inspection, toolSetId });\n        return;\n      }\n    }\n  }\n\n  // Currently filters array data from values\n  // TODO: array data should be shown in tree, but id must be changed (all have same id atm)\n  filterArrayValuesFromTree = (tree) => {\n    let stack = [],\n      node,\n      ii;\n    stack.push(tree);\n    while (stack.length > 0) {\n      node = stack.pop();\n      if (!node?.id && node?.children?.length) {\n        let firstChildId = '';\n        for (ii = 0; ii < node.children.length; ii += 1) {\n          if (firstChildId === node.children[ii].id) {\n            node.children = [];\n            node.id = firstChildId;\n            break;\n          }\n          if (node.children[ii].id) {\n            firstChildId = node.children[ii].id;\n          }\n        }\n        for (ii = 0; ii < node.children.length; ii += 1) {\n          stack.push(node.children[ii]);\n        }\n      }\n    }\n    return tree;\n  };\n}\n","export default __webpack_public_path__ + \"static/media/info.6a606506.svg\";","export default __webpack_public_path__ + \"static/media/overlay-list.d218d7a4.svg\";","import Protobuf from '../protobuf/Protobuf';\n\nexport const flattenProtobuf = (oldObject: Record<string, any>) => {\n  const permissions = new Set<string>();\n  flattenProtobufRec(oldObject, permissions, '');\n  return permissions;\n};\n\nconst flattenProtobufRec = (\n  currentObject: Record<string, any>,\n  permissions: Set<string>,\n  parentPath: string,\n) => {\n  for (const key in currentObject.nested) {\n    const value = currentObject.nested[key];\n    const currKey = key.toLowerCase();\n    const currPath = parentPath ? `${parentPath}.${currKey}` : currKey;\n    if (!value.nested && value.fields) {\n      if (currPath === 'webapp.view') {\n        const viewTypeProtobuf = Protobuf.SvPb.lookup('ViewType');\n        for (let i = 0; i < Object.keys(viewTypeProtobuf.values).length; i++) {\n          const viewPath = `${currPath}[type=${getViewName(i)}]`;\n          addFieldValues(permissions, viewPath, value.fields);\n        }\n      } else {\n        addFieldValues(permissions, currPath, value.fields);\n      }\n    } else {\n      flattenProtobufRec(value, permissions, currPath);\n    }\n  }\n};\n\nconst addFieldValues = (permissions: Set<string>, path: string, fields: Record<string, any>) => {\n  Object.keys(fields).forEach((key) => {\n    const field = fields[key];\n    if (field.type === 'bool') {\n      const name = field.name.toLowerCase();\n      permissions.add(`${path}.${name}`);\n    }\n  });\n};\n\nexport const flattenPermissionsRec = (\n  currentObject: Record<string, any>,\n  permissions: Set<string>,\n  parentPath: string,\n) => {\n  for (const key in currentObject) {\n    const value = currentObject[key];\n    if (key.indexOf('$') !== -1) {\n      continue;\n    }\n    const currPath = parentPath ? `${parentPath}.${key}` : key;\n    if (Array.isArray(value)) {\n      if (currPath === 'webapp.view') {\n        for (let i = 0; i < value.length; ++i) {\n          const entry = value[i];\n          const viewPath = `${currPath}[type=${getViewName(entry.type)}]`;\n          flattenPermissionsRec(entry, permissions, viewPath);\n        }\n      }\n    } else if (typeof value === 'object') {\n      flattenPermissionsRec(value, permissions, currPath);\n    } else if (typeof value === 'boolean' && value) {\n      permissions.add(currPath);\n    } else {\n      //boolean = false\n      //another type, p.e. number\n    }\n  }\n};\n\nconst createObjectFromFlattenedPermissions = (a: string[], obj: Record<string, any>, v: string) => {\n  if (!a.length) {\n    return;\n  }\n  const k = a.shift() as string;\n\n  if (a.length > 0) {\n    if (k.startsWith('view[')) {\n      const type = getViewId(k.substring(k.indexOf('[type=') + 6, k.indexOf(']')));\n\n      if (!obj.view) {\n        obj.view = [];\n      }\n      const index = obj.view.findIndex((view: any) => view.type === type);\n      if (index !== -1) {\n        obj.view[index] = { ...obj.view[index], [a[0]]: true };\n      } else {\n        obj.view.push({ type, [a[0]]: true });\n      }\n    } else {\n      if (Object(obj[k]) !== obj[k]) {\n        obj[k] = {};\n      }\n\n      createObjectFromFlattenedPermissions(a, obj[k], v);\n    }\n  } else {\n    obj[k] = true;\n  }\n};\n\nexport const getGroupPermissionsFromFlattenedPermissions = (flattenedPermissions: any[]) => {\n  const result: { name: number; permissions: Record<string, any> }[] = [];\n  flattenedPermissions.forEach((groupEntry, name) => {\n    const permissionForUser: Record<string, any> = {};\n    groupEntry.groupPermissions.forEach((permission: string) => {\n      createObjectFromFlattenedPermissions(\n        permission.split('.'),\n        permissionForUser,\n        permissionForUser[permission],\n      );\n    });\n    result.push({\n      name,\n      permissions: permissionForUser,\n    });\n  });\n\n  return result;\n};\n\nconst getViewName = (viewType: number) => {\n  switch (viewType) {\n    case 0:\n      return 'AnyView';\n    case 1:\n      return 'ImageView';\n    case 2:\n      return 'ListView';\n    case 3:\n      return 'ImageStripView';\n    case 4:\n      return 'ParameterView';\n    case 5:\n      return 'ToolSetView';\n    default:\n      return '';\n  }\n};\n\nconst getViewId = (viewType: string) => {\n  switch (viewType) {\n    case 'AnyView':\n      return 0;\n    case 'ImageView':\n      return 1;\n    case 'ListView':\n      return 2;\n    case 'ImageStripView':\n      return 3;\n    case 'ParameterView':\n      return 4;\n    case 'ToolSetView':\n      return 5;\n    default:\n      return 0;\n  }\n};\n\nexport const canSaveConfig = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('webapp.configuration.save') : false;\n};\n\nexport const canReadLogs = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('webapp.logs.read') : false;\n};\n\nexport const canAddViewSet = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.add') : false;\n};\n\nexport const canReadViewSet = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.read') : false;\n};\n\nexport const canEditViewSet = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.edit') : false;\n};\n\nexport const canDeleteViewSet = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('webapp.viewset.remove') : false;\n};\n\nexport const canAddImageView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadImageView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditImageView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteImageView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddListView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadListView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditListView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteListView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ListView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddImageStripView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadImageStripView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditImageStripView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteImageStripView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ImageStripView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddParameterView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadParameterView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditParameterView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteParameterView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ParameterView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddToolSetView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canReadToolSetView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].read') ||\n        myPermissions.has('webapp.view[type=AnyView].read')\n    : false;\n};\n\nexport const canEditToolSetView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteToolSetView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=ToolSetView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canAddInputToolView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=InputToolView].add') ||\n        myPermissions.has('webapp.view[type=AnyView].add')\n    : false;\n};\n\nexport const canEditInputToolView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=InputToolView].edit') ||\n        myPermissions.has('webapp.view[type=AnyView].edit')\n    : false;\n};\n\nexport const canDeleteInputToolView = (myPermissions: Set<string>) => {\n  return myPermissions\n    ? myPermissions.has('webapp.view[type=InputToolView].remove') ||\n        myPermissions.has('webapp.view[type=AnyView].remove')\n    : false;\n};\n\nexport const canReadSVOMode = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.mode.read') : false;\n};\n\nexport const canEditSVOMode = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.mode.edit') : false;\n};\n\nexport const canReadInspectionState = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.inspectionstate.read') : false;\n};\n\nexport const canEditInspectionState = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.inspectionstate.edit') : false;\n};\n\nexport const canReadValue = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.value.read') : false;\n};\n\nexport const canEditValue = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.value.edit') : false;\n};\n\nexport const canReadTool = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.read') : false;\n};\n\nexport const canEditTool = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.edit') : false;\n};\n\nexport const canAddTool = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.add') : false;\n};\n\nexport const canDeleteTool = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.tool.remove') : false;\n};\n\nexport const canReadUserManagement = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('usermanagement.userpermissions.read') : false;\n};\n\nexport const canEditUserManagement = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('usermanagement.userpermissions.edit') : false;\n};\n\nexport const canReadSVOConfiguration = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.configuration.read') : false;\n};\n\nexport const canWriteSVOConfiguration = (myPermissions: Set<string>) => {\n  return myPermissions ? myPermissions.has('svobserver.configuration.write') : false;\n};\n","export default __webpack_public_path__ + \"static/media/close.f005b782.svg\";","export default __webpack_public_path__ + \"static/media/clear.1114cb53.svg\";","export default __webpack_public_path__ + \"static/media/save.a6a0528c.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\n\nimport Dialog from '../../components/Dialog';\nimport map from './viewMappings';\n\nclass HelpView extends Component {\n  render() {\n    const { onClose, open, focusedViewType, locale } = this.props;\n    let helpUrl;\n    switch (locale) {\n      case 'en':\n        helpUrl = `/help/en/SVOWebApp_WebHelp.htm#cshid=${map[focusedViewType]}`;\n        break;\n\n      case 'de':\n        helpUrl = `/help/de/SVOWebApp_WebHelp.htm#cshid=${map[focusedViewType]}`;\n        break;\n\n      default:\n        helpUrl = `/help/en/SVOWebApp_WebHelp.htm#cshid=${map[focusedViewType]}`;\n        break;\n    }\n    return (\n      <Dialog isFullscreen title={<FormattedMessage id=\"helpView\" />} onClose={onClose} open={open}>\n        <iframe\n          className=\"help-frame\"\n          title=\"help\"\n          style={{ width: '100%', height: '97%' }}\n          src={helpUrl}\n        />\n      </Dialog>\n    );\n  }\n}\n\nHelpView.defaultProps = {\n  open: false,\n  locale: 'en',\n};\n\nHelpView.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  locale: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  focusedViewType: state.app.focusedViewType,\n  locale: state.app.locale,\n});\n\nexport default connect(mapStateToProps)(HelpView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\n\nconst Heading = ({ type, intlId }) =>\n  React.createElement(\n    type,\n    {\n      className: 'heading',\n    },\n    <FormattedMessage id={`${intlId}` || 'none'} />,\n  );\n\nHeading.defaultProps = {\n  intlId: 'none',\n};\n\nHeading.propTypes = {\n  type: PropTypes.string.isRequired,\n  intlId: PropTypes.string,\n};\n\nexport default Heading;\n","import { IMAGE_VIEW, PARAMETER_VIEW, LIST_VIEW } from '../ViewSetFactory';\n\nexport const PERMISSIONS = 'PERMISSIONS';\nexport const DEBUGGER = 'DEBUGGER';\n\nconst Views = {\n  PARAMETER_VIEW,\n  LIST_VIEW,\n  IMAGE_VIEW,\n  PERMISSIONS,\n  DEBUGGER,\n};\n\nexport default Views;\n","export default class ConfigurationLock {\r\n  constructor(lock) {\r\n    this.lockId = undefined;\r\n    this.takeoverId = undefined;\r\n    this.owner = undefined;\r\n    this.takeoverUser = undefined;\r\n    this.host = '';\r\n    this.lockDescription = '';\r\n    this.takeoverMessage = '';\r\n    this.status = 0;\r\n\r\n    // Workaround for checking if config lock is already owned by the same logged user in Proxy.js.\r\n    // In this file (Proxy.js) we don't have an access to redux state.app.user,\r\n    // but we know that it is the same logged user only when LockAcquiredNotification comes\r\n    // from SVOGateway. In result this member is set only in this one place\r\n    // and reset while releasing or passing the lock to other user.\r\n    this.lockedInSameAppInstance = false;\r\n\r\n    // Flags to control alert dialogs\r\n    this.isTakeoverAttempt = false;\r\n    this.configAlreadyLocked = false;\r\n    this.isWaitingForResponse = false;\r\n    this.ownerRejectedTakeover = false;\r\n\r\n    if (Object.keys(lock).length !== 0) {\r\n      Object.assign(this, lock);\r\n    }\r\n  }\r\n\r\n  isLocked() {\r\n    return this.status === 1;\r\n  }\r\n\r\n  isUnlocked() {\r\n    return this.status === 0;\r\n  }\r\n\r\n  isSameUserAsOwner(user) {\r\n    return user.username === this.owner;\r\n  }\r\n\r\n  isLockedBySameUser(user) {\r\n    return this.isLocked() && this.isSameUserAsOwner(user);\r\n  }\r\n\r\n  isLockedByOtherUser(user) {\r\n    return this.isLocked() && !this.isSameUserAsOwner(user);\r\n  }\r\n\r\n  isLockedInDifferentAppInstance() {\r\n    return this.isLocked() && !this.lockedInSameAppInstance;\r\n  }\r\n\r\n  isTakeoverAttemptFromOtherUser() {\r\n    return this.isTakeoverAttempt;\r\n  }\r\n\r\n  isConfigAlreadyLocked() {\r\n    return this.configAlreadyLocked;\r\n  }\r\n\r\n  isWaitingForTakeoverResponse() {\r\n    return this.isWaitingForResponse;\r\n  }\r\n\r\n  isOwnerRejectedTakeover() {\r\n    return this.ownerRejectedTakeover;\r\n  }\r\n\r\n  resetTakeoverAttempt() {\r\n    this.isTakeoverAttempt = false;\r\n  }\r\n\r\n  resetAlertDialogFlags() {\r\n    this.configAlreadyLocked = false;\r\n    this.ownerRejectedTakeover = false;\r\n  }\r\n\r\n  handleLockAcquiredNotification(notification) {\r\n    this.lockId = notification.lockId;\r\n    this.owner = notification.user;\r\n    this.host = notification.host;\r\n    this.lockDescription = notification.description;\r\n    this.status = 1; // Locked\r\n    this.lockedInSameAppInstance = true;\r\n\r\n    this.isWaitingForResponse = false;\r\n  }\r\n\r\n  handleLockTakeoverNotification(notification) {\r\n    this.takeoverId = notification.takeoverId;\r\n    this.takeoverMessage = notification.message;\r\n    this.takeoverUser = notification.user;\r\n\r\n    this.isTakeoverAttempt = true;\r\n  }\r\n\r\n  handleLockReleasedNotification() {\r\n    this.lockId = undefined;\r\n    this.owner = undefined;\r\n    this.host = '0.0.0.0';\r\n    this.lockDescription = '';\r\n    this.status = 0; // Unlocked\r\n  }\r\n\r\n  handleLockAlreadyLockedNotification(notification) {\r\n    this.lockId = notification.lockId;\r\n    this.owner = notification.user;\r\n    this.host = notification.host;\r\n    this.lockDescription = notification.description;\r\n    this.status = 1; // Locked\r\n\r\n    this.configAlreadyLocked = true;\r\n  }\r\n\r\n  handleLockTakeoverRejectedNotification() {\r\n    this.isWaitingForResponse = false;\r\n    this.ownerRejectedTakeover = true;\r\n  }\r\n\r\n  waitForTakeoverResponse() {\r\n    this.isWaitingForResponse = true;\r\n  }\r\n}\r\n","import axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport pick from 'lodash/pick';\nimport env from '../utils/env';\nimport logger from '../utils/logger';\n\nexport const logIn = async (username, password) => {\n  const url = `${env.authEndpoint}/login`;\n  const loginRes = await axios.post(url, { username, password });\n  const { accessToken } = loginRes.data;\n  return await authenticate(accessToken);\n};\n\nexport const authenticate = async (accessToken) => {\n  const url = `${env.authEndpoint}/auth`;\n  const authRes = await axios.post(url, { accessToken });\n  const { authToken } = authRes.data;\n  // TODO verify the token signature\n  const claims = jwtDecode(authToken);\n  const user = pick(claims, ['email', 'fullname', 'username']);\n  return { authToken, user };\n};\n\nexport const logOut =\n  (notifyGateway = true) =>\n  async () => {\n    logger.removeProxy();\n    if (notifyGateway) {\n      const url = `${env.authEndpoint}/logout`;\n      try {\n        await axios.post(url, {});\n      } catch (err) {\n        logger.warn({ err }, 'Error while calling /logout');\n      }\n    }\n  };\n","export default __webpack_public_path__ + \"static/media/pause.ea3fe966.svg\";","export default __webpack_public_path__ + \"static/media/play.f6ca6855.svg\";","export const LOCK_ACQUISITION_REQUEST = 'lockAcquisitionRequest';\r\n","import { Key } from 'react';\nimport { useIntl } from 'react-intl';\nimport logger from '../../../utils/logger';\nimport IconButton from '../IconButton';\n\nimport './style.scss';\n\ninterface ToggleButtonProps {\n  id?: Key;\n  intlId?: string;\n  iconUrl: string;\n  enabled: boolean | any;\n  onClickHandler?: () => void;\n  showAlternative?: boolean;\n  intlIdAlternative?: string;\n  iconUrlAlternative?: string;\n  onClickHandlerAlternative?: () => void;\n}\n\nexport const ToggleButton = ({\n  id,\n  intlId,\n  iconUrl,\n  enabled,\n  onClickHandler,\n  intlIdAlternative,\n  iconUrlAlternative,\n  onClickHandlerAlternative,\n  showAlternative,\n}: ToggleButtonProps) => {\n  if (\n    !intlId ||\n    !iconUrl ||\n    !onClickHandler ||\n    (showAlternative && (!intlIdAlternative || !iconUrlAlternative || !onClickHandlerAlternative))\n  ) {\n    logger.error('ToggleButton component did not receive required parameters');\n  }\n\n  const intl = useIntl();\n\n  return showAlternative ? (\n    <IconButton\n      key={id}\n      tooltip={intl.messages[`${intlIdAlternative}` as never]}\n      onClick={() => {\n        onClickHandlerAlternative?.();\n      }}\n      iconUrl={iconUrlAlternative ?? ''}\n      enabled={enabled}\n    />\n  ) : (\n    <IconButton\n      key={intlId}\n      tooltip={intl.messages[`${intlId}` as never]}\n      onClick={() => onClickHandler?.()}\n      iconUrl={iconUrl}\n      enabled={enabled}\n    />\n  );\n};\n","export default __webpack_public_path__ + \"static/media/help.64b70362.svg\";","export default __webpack_public_path__ + \"static/media/download.c1bdaf13.svg\";","export default __webpack_public_path__ + \"static/media/show.6ac709c0.svg\";","export default __webpack_public_path__ + \"static/media/image.ab9e385a.svg\";","export default class Product {\n  constructor({ history, trigger, isReject }) {\n    this.history = history;\n    this.trigger = trigger;\n    this.isReject = isReject;\n    this.useCount = 0;\n    this.images = new Map();\n    this.values = new Map();\n  }\n\n  getImage(imageId) {\n    this.checkNotReleasedYet();\n    return this.images.get(imageId);\n  }\n\n  getImages(imageIds) {\n    this.checkNotReleasedYet();\n    return (imageIds || []).map((imageId) => this.images.get(imageId));\n  }\n\n  getValue(valueId) {\n    this.checkNotReleasedYet();\n    return this.values.get(valueId);\n  }\n\n  getValuesAsString(valueIds, fallbackValue = '<UNAVAILABLE>') {\n    this.checkNotReleasedYet();\n    return (valueIds || []).map((valueId) => {\n      let value = this.values.has(valueId) && this.values.get(valueId).value;\n\n      if (value === undefined) {\n        value = fallbackValue;\n      }\n      return {\n        id: valueId,\n        value: value.toString(),\n      };\n    });\n  }\n\n  buildUrl(b64Data, contentType = '', sliceSize = 512) {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n\n    const blob = new Blob(byteArrays, { type: contentType });\n    return URL.createObjectURL(blob);\n  }\n\n  async addData({ images, values }) {\n    this.checkNotReleasedYet();\n\n    const imagePromises = [];\n    images.forEach(({ id, image, overlays }) => {\n      if (!this.images.has(id) && image && image.rgbData) {\n        imagePromises.push(this.initImage(id, image, overlays));\n      }\n    });\n\n    values.forEach(({ id, value }) => {\n      if (!this.values.has(id) && value) {\n        const valueStr = this.getValueFromVariant(value);\n        this.values.set(id, {\n          id,\n          value: valueStr,\n        });\n      }\n    });\n\n    await Promise.all(imagePromises);\n  }\n\n  async initImage(id, image, overlays) {\n    const { domImage, url } = await this.buildImage(image);\n    const overlayImages = await this.initOverlayImages(overlays);\n    this.images.set(id, {\n      id,\n      image,\n      domImage,\n      overlays,\n      overlayImages,\n      url,\n    });\n  }\n\n  buildImage({ rgbData, type }) {\n    return new Promise((resolve, reject) => {\n      const arrayBufferView = new Uint8Array(rgbData);\n      const blob = new Blob([arrayBufferView], { type: type || 'image/bmp' });\n      const domURL = self.URL || self.webkitURL || self; // eslint-disable-line\n      const url = domURL.createObjectURL(blob);\n      const domImage = new Image();\n      domImage.onload = () => {\n        resolve({ domImage, url });\n      };\n      domImage.onerror = (e) => {\n        domURL.revokeObjectURL(url);\n        reject(e);\n      };\n      domImage.src = url;\n    });\n  }\n\n  initOverlayImages(overlaysDesc) {\n    const promises = [];\n    ((overlaysDesc && overlaysDesc.overlays) || []).forEach((overlay) => {\n      (overlay.shapeGroups || []).forEach((shapeGroup) => {\n        (shapeGroup.shapes || []).forEach((shape) => {\n          if (shape && shape.image && shape.image.image && shape.image.image.rgbData) {\n            promises.push(\n              this.buildImage(shape.image.image).then(({ domImage, url }) => {\n                shape.image.domImage = domImage;\n                shape.image.url = url;\n                return shape.image;\n              }),\n            );\n          }\n        });\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  getValueFromVariant(v) {\n    if (!v) {\n      return undefined;\n    }\n    return v[v.data];\n  }\n\n  lock() {\n    this.useCount++;\n  }\n\n  release() {\n    this.history?.releaseProduct(this.trigger);\n  }\n\n  releaseImpl() {\n    if (this.useCount <= 0) {\n      throw new Error(`Invalid use count ${this.useCount} in Product::release()`);\n    }\n\n    this.useCount--;\n    if (this.useCount > 0) {\n      return false;\n    }\n\n    this.releaseImages();\n\n    this.images.clear();\n    this.values.clear();\n    this.history = null;\n    this.released = true;\n\n    return true;\n  }\n\n  releaseImages() {\n    this.images.forEach((image) => {\n      this.releaseImage(image);\n\n      image.overlayImages.forEach((overlayImage) => {\n        this.releaseImage(overlayImage);\n      });\n    });\n  }\n\n  releaseImage(image) {\n    if (image.domImage) {\n      image.domImage.onload = undefined;\n      image.domImage.onerror = undefined;\n      image.domImage.remove(); // explicitly remove the image from the DOM\n      image.domImage = null;\n    }\n\n    if (image.url) {\n      const domURL = self.URL || self.webkitURL || self; // eslint-disable-line\n      domURL.revokeObjectURL(image.url);\n    }\n  }\n\n  checkNotReleasedYet() {\n    if (this.released) {\n      throw new Error('Can not use Product after releasing it!');\n    }\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.a5b69c2a.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nconst Logo = ({ src, title }) => (\n  <div className=\"logo-wrapper\">\n    <img src={src} alt={title} />\n  </div>\n);\n\nLogo.propTypes = {\n  src: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Logo;\n","import modes from '../utils/modes';\nimport Protobuf from './Protobuf';\n\nexport const mapProtobufDeviceModeToWebAppMode = (deviceMode) => {\n  switch (deviceMode) {\n    case Protobuf.SvPb.DeviceModeType.available:\n      return modes.unknownMode.id;\n    case Protobuf.SvPb.DeviceModeType.runMode:\n      return modes.runMode.id;\n    case Protobuf.SvPb.DeviceModeType.stopMode:\n      return modes.stopMode.id;\n    case Protobuf.SvPb.DeviceModeType.regressionMode:\n      return modes.regressionMode.id;\n    case Protobuf.SvPb.DeviceModeType.testMode:\n      return modes.testMode.id;\n    case Protobuf.SvPb.DeviceModeType.editMode:\n      return modes.editMode.id;\n    case Protobuf.SvPb.DeviceModeType.modeChanging:\n      return modes.unknownMode.id;\n    default:\n      throw new Error(`Unsupported device mode ${deviceMode}`);\n  }\n};\n\nexport const mapWebAppModeToProtobufDeviceMode = (mode) => {\n  switch (mode) {\n    case modes.unknownMode.id:\n      return Protobuf.SvPb.DeviceModeType.available;\n    case modes.runMode.id:\n      return Protobuf.SvPb.DeviceModeType.runMode;\n    case modes.stopMode.id:\n      return Protobuf.SvPb.DeviceModeType.stopMode;\n    case modes.regressionMode.id:\n      return Protobuf.SvPb.DeviceModeType.regressionMode;\n    case modes.testMode.id:\n      return Protobuf.SvPb.DeviceModeType.testMode;\n    case modes.editMode.id:\n      return Protobuf.SvPb.DeviceModeType.editMode;\n    default:\n      throw new Error(`Unsupported mode ${mode}`);\n  }\n};\n\nexport const mapLogLevelNameToProtobufLogSeverity = (levelName) => {\n  switch (levelName) {\n    case 'trace':\n      return Protobuf.SvPb.LogSeverity.trace;\n    case 'debug':\n      return Protobuf.SvPb.LogSeverity.debug;\n    case 'info':\n      return Protobuf.SvPb.LogSeverity.info;\n    case 'warn':\n      return Protobuf.SvPb.LogSeverity.warning;\n    case 'error':\n      return Protobuf.SvPb.LogSeverity.error;\n    default:\n      return Protobuf.SvPb.LogSeverity.error;\n  }\n};\n","import Tooltip from '@material-ui/core/Tooltip';\nimport './style.scss';\n\nexport interface IconButtonProps {\n  iconUrl: string;\n  onClick?: () => void;\n  tooltip?: string;\n  style?: React.CSSProperties;\n  enabled?: boolean;\n}\n\nconst IconButton = ({ iconUrl, onClick, tooltip, style = {}, enabled = true }: IconButtonProps) => (\n  <div\n    className=\"icon-button-wrapper\"\n    style={{\n      pointerEvents: enabled ? 'auto' : 'none',\n      opacity: enabled ? '1.0' : '0.3',\n    }}\n  >\n    <Tooltip title={tooltip ?? ''}>\n      <button\n        style={{\n          ...style,\n          backgroundImage: `url(${iconUrl})`,\n          backgroundPosition: 'center',\n          backgroundSize: '100% 100%',\n        }}\n        onClick={onClick}\n        className=\"icon-button\"\n      />\n    </Tooltip>\n  </div>\n);\n\nexport default IconButton;\n","export default __webpack_public_path__ + \"static/media/regression.f027695f.svg\";","export default __webpack_public_path__ + \"static/media/run.eb40f6de.svg\";","export default __webpack_public_path__ + \"static/media/stop.44c5645f.svg\";","export default __webpack_public_path__ + \"static/media/test.47d9c7ad.svg\";","import editIcon from '../assets/icons/edit.svg';\nimport unknownIcon from '../assets/icons/help.svg';\nimport regressionIcon from '../assets/icons/regression.svg';\nimport runIcon from '../assets/icons/run.svg';\nimport stopIcon from '../assets/icons/stop.svg';\nimport testIcon from '../assets/icons/test.svg';\n\nconst modes = {\n  unknownMode: {\n    id: 'UNKNOWN_MODE',\n    iconSrc: unknownIcon,\n    text: '',\n  },\n  runMode: {\n    id: 'RUN_MODE',\n    iconSrc: runIcon,\n    text: '',\n  },\n  stopMode: {\n    id: 'STOP_MODE',\n    iconSrc: stopIcon,\n    text: '',\n  },\n  regressionMode: {\n    id: 'REGRESSION_MODE',\n    iconSrc: regressionIcon,\n    text: '',\n  },\n  testMode: {\n    id: 'TEST_MODE',\n    iconSrc: testIcon,\n    text: '',\n  },\n  editMode: {\n    id: 'EDIT_MODE',\n    iconSrc: editIcon,\n    text: '',\n  },\n};\n\nexport default modes;\n","import PropTypes from 'prop-types';\n\nconst ProxyType = PropTypes.shape({});\n\nexport default ProxyType;\n","import React from 'react';\nimport './style.scss';\n\nconst Container = ({\n  children,\n  style,\n}: {\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n}) => (\n  <div className=\"container\" style={style}>\n    {children}\n  </div>\n);\n\nexport default Container;\n","import Protobuf from '../protobuf/Protobuf';\nimport { addVariableValueShouldBeInTheRangeNotification } from '../redux/actions/index';\nimport modes from '../utils/modes';\nimport logger from './logger';\n\nconst MID_SHORT_SIZE = 20;\n\nexport const drawInspectionOverlays = ({\n  drawTarget,\n  zoomFactor,\n  overlays,\n  boundingCoordinates,\n  width,\n  height,\n  currentMode,\n}) => {\n  if (!overlays || overlays.length === 0) {\n    logger.error('drawInspectionOverlays expects overlays but did not receive');\n    return;\n  }\n  const targetContext = drawTarget.getContext('2d');\n  zoomFactor = zoomFactor || 1;\n  if (overlays && overlays.length > 0) {\n    targetContext.setLineDash([]);\n    overlays.forEach((overlay) => {\n      const colorInt = (overlay.color && overlay.color.value) || 0;\n      const colorString = getRgbaString(colorInt);\n      targetContext.fillStyle = colorString;\n      const fontSize = 10 / zoomFactor;\n      targetContext.lineWidth = 1 / zoomFactor;\n      targetContext.font = fontSize + 'px Arial';\n      targetContext.strokeStyle = colorString;\n\n      const boundingShape = overlay.boundingShape.shape;\n\n      switch (boundingShape) {\n        case Protobuf.SvPb.OverlayBoundingShape.fields.rect.name:\n          renderRectangleTool(\n            targetContext,\n            zoomFactor,\n            fontSize,\n            colorString,\n            overlay,\n            boundingCoordinates,\n            currentMode,\n          );\n          break;\n        case Protobuf.SvPb.OverlayBoundingShape.fields.slice.name:\n          renderSliceTool(targetContext, overlay, boundingCoordinates);\n          break;\n        case Protobuf.SvPb.OverlayBoundingShape.fields.perspective.name:\n          renderPerspectiveTool(\n            targetContext,\n            zoomFactor,\n            overlay,\n            boundingCoordinates,\n            width,\n            height,\n          );\n          break;\n        default:\n          logger.error('Unknown boundingShape received');\n          return;\n      }\n    });\n  }\n};\n\nconst renderRectangleTool = (\n  targetContext,\n  zoomFactor,\n  fontSize,\n  colorString,\n  overlay,\n  boundingCoordinates,\n  currentMode,\n) => {\n  const boundingBoxX = Math.abs(boundingCoordinates.minX) + overlay.boundingShape.rect.x.value || 0;\n  const boundingBoxY = Math.abs(boundingCoordinates.minY) + overlay.boundingShape.rect.y.value || 0;\n  const boundingBoxWidth = overlay.boundingShape.rect.w.value || 0;\n  const boundingBoxHeight = overlay.boundingShape.rect.h.value || 0;\n  const { displayBounding, shapeGroups, name: overlayTitle } = overlay;\n\n  const angle = overlay.boundingShape.rect.angle && overlay.boundingShape.rect.angle.value;\n\n  targetContext.fillText(overlayTitle, boundingBoxX, boundingBoxY - 10 / zoomFactor);\n\n  shapeGroups &&\n    shapeGroups.forEach((shapeGroup) => {\n      // Do not show detailLevel 2 OverlayShapes in run mode\n      if (shapeGroup.detailLevel === 2 && currentMode === modes.runMode.id) {\n        return;\n      }\n\n      shapeGroup.shapes.forEach((shape) => {\n        const shapeColor = shape.color && shape.color.value;\n        const shapeColorString = getRgbaString(shapeColor);\n        const { shape: shapeType } = shape;\n\n        const useRotation =\n          angle && angle > 0 && shapeType !== Protobuf.SvPb.OverlayShape.fields.arrow.name;\n\n        if (useRotation) {\n          rotateContextByAngleAroundPoint(targetContext, angle, boundingBoxX, boundingBoxY);\n        }\n\n        switch (shapeType) {\n          case Protobuf.SvPb.OverlayShape.fields.arrow.name:\n            {\n              const x1 = Math.abs(boundingCoordinates.minX) + shape.arrow.x1.value || 0;\n              const y1 = Math.abs(boundingCoordinates.minY) + shape.arrow.y1.value || 0;\n              const x2 = Math.abs(boundingCoordinates.minX) + shape.arrow.x2.value || 0;\n              const y2 = Math.abs(boundingCoordinates.minY) + shape.arrow.y2.value || 0;\n\n              const calcAngleDegrees = (x, y) => (Math.atan2(y, x) * 180) / Math.PI;\n\n              const angleBetweenP1andP2 = calcAngleDegrees(x2 - x1, y2 - y1);\n\n              targetContext.beginPath();\n              targetContext.strokeStyle = shapeColorString || colorString;\n\n              // line\n              targetContext.moveTo(x1, y1);\n              targetContext.lineTo(x2, y2);\n\n              // arrow\n              targetContext.moveTo(x2, y2);\n              // arrow length\n              const r = 15;\n              // calculate one side of arrow and convert to deg\n              const theta1 = (Math.PI * (angleBetweenP1andP2 + 135)) / 180.0;\n              targetContext.lineTo(x2 + r * Math.cos(theta1), y2 + r * Math.sin(theta1));\n\n              targetContext.moveTo(x2, y2);\n              // calculate another side of arrow and convert to deg\n              const theta2 = (Math.PI * (angleBetweenP1andP2 - 135)) / 180.0;\n              targetContext.lineTo(x2 + r * Math.cos(theta2), y2 + r * Math.sin(theta2));\n\n              targetContext.stroke();\n              targetContext.closePath();\n            }\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.rectArray.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n            shape.rectArray.rectArray.forEach((rect) => {\n              const rAngle = -rect.angle;\n              if (rAngle && rAngle < 0) {\n                rotateContextByAngleAroundPoint(\n                  targetContext,\n                  rAngle,\n                  boundingBoxX + rect.x,\n                  boundingBoxY + rect.y,\n                );\n              }\n              targetContext.rect(\n                boundingBoxX + rect.x || 0,\n                boundingBoxY + rect.y || 0,\n                rect.w || 0,\n                rect.h || 0,\n              );\n              if (rAngle && rAngle < 0) {\n                targetContext.restore();\n              }\n            });\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.graph.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n\n            if (shape.graph.x.length === shape.graph.y.length && shape.graph.x.length > 0) {\n              targetContext.moveTo(\n                boundingBoxX + (shape.graph.x[0] * boundingBoxWidth) / shape.graph.maxValueX,\n                boundingBoxY + (shape.graph.y[0] * boundingBoxHeight) / shape.graph.maxValueY,\n              );\n              for (let i = 0; i < shape.graph.x.length; i++) {\n                targetContext.lineTo(\n                  boundingBoxX + (shape.graph.x[i] * boundingBoxWidth) / shape.graph.maxValueX,\n                  boundingBoxY +\n                    boundingBoxHeight -\n                    (shape.graph.y[i] * boundingBoxHeight) / shape.graph.maxValueY,\n                ); //x\n              }\n            }\n\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.marker.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n\n            if (shape.marker.orientationType === 1) {\n              if (shape.marker.sizeType === 1) {\n                const strokeHeight = MID_SHORT_SIZE;\n                targetContext.moveTo(\n                  boundingBoxX + shape.marker.value.value,\n                  boundingBoxY + boundingBoxHeight / 2 - strokeHeight / 2,\n                );\n                targetContext.lineTo(\n                  boundingBoxX + shape.marker.value.value,\n                  boundingBoxY + boundingBoxHeight / 2 + strokeHeight / 2,\n                );\n              } else {\n                targetContext.moveTo(\n                  boundingBoxX +\n                    (shape.marker.value.value * boundingBoxWidth) / shape.marker.maxValue +\n                    1,\n                  boundingBoxY,\n                );\n                targetContext.lineTo(\n                  boundingBoxX +\n                    (shape.marker.value.value * boundingBoxWidth) / shape.marker.maxValue +\n                    1,\n                  boundingBoxY + boundingBoxHeight,\n                );\n              }\n            } else {\n              if (shape.marker.sizeType === 1) {\n                const strokeWidth = MID_SHORT_SIZE;\n                targetContext.moveTo(\n                  boundingBoxX + boundingBoxWidth / 2 - strokeWidth / 2,\n                  boundingBoxY + shape.marker.value.value,\n                );\n                targetContext.lineTo(\n                  boundingBoxX + boundingBoxWidth / 2 + strokeWidth / 2,\n                  boundingBoxY + shape.marker.value.value,\n                );\n              } else {\n                targetContext.moveTo(\n                  boundingBoxX,\n                  boundingBoxY +\n                    boundingBoxHeight -\n                    (shape.marker.value.value * boundingBoxHeight) / shape.marker.maxValue +\n                    1,\n                );\n                targetContext.lineTo(\n                  boundingBoxX + boundingBoxWidth,\n                  boundingBoxY +\n                    boundingBoxHeight -\n                    (shape.marker.value.value * boundingBoxHeight) / shape.marker.maxValue +\n                    1,\n                );\n              }\n            }\n\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.markers.name:\n            targetContext.beginPath();\n            targetContext.strokeStyle = shapeColorString || colorString;\n\n            if (shape.markers.orientationType === 1) {\n              if (shape.markers.sizeType === 1) {\n                const strokeWidth = MID_SHORT_SIZE;\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(\n                    boundingBoxX + shape.markers.value[i],\n                    boundingBoxY + boundingBoxHeight / 2 - strokeWidth / 2,\n                  );\n                  targetContext.lineTo(\n                    boundingBoxX + shape.markers.value[i],\n                    boundingBoxY + boundingBoxHeight / 2 + strokeWidth / 2,\n                  );\n                }\n              } else {\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(boundingBoxX + shape.markers.value[i], boundingBoxY);\n                  targetContext.lineTo(\n                    boundingBoxX + shape.markers.value[i],\n                    boundingBoxY + boundingBoxHeight,\n                  );\n                }\n              }\n            } else {\n              if (shape.markers.sizeType === 1) {\n                const strokeHeight = MID_SHORT_SIZE;\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(\n                    boundingBoxX + boundingBoxWidth / 2 - strokeHeight / 2,\n                    boundingBoxY + shape.markers.value[i],\n                  );\n                  targetContext.lineTo(\n                    boundingBoxX + boundingBoxWidth / 2 + strokeHeight / 2,\n                    boundingBoxY + shape.markers.value[i],\n                  );\n                }\n              } else {\n                for (let i = 0; i < shape.markers.value.length; i++) {\n                  targetContext.moveTo(boundingBoxX, boundingBoxY + shape.markers.value[i]);\n                  targetContext.lineTo(\n                    boundingBoxX + boundingBoxWidth,\n                    boundingBoxY + shape.markers.value[i],\n                  );\n                }\n              }\n            }\n\n            targetContext.stroke();\n            targetContext.closePath();\n\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.blockMarker.name:\n            {\n              const colors = shape.blockMarker.colors;\n              const changePos = shape.blockMarker.changePos;\n              let currentPos = 0;\n\n              for (let i = 0; i <= changePos.length; i++) {\n                targetContext.beginPath();\n                targetContext.lineWidth = 10 / zoomFactor;\n                targetContext.strokeStyle = getRgbaString(colors[i % colors.length]);\n                targetContext.moveTo(\n                  boundingBoxX + currentPos,\n                  boundingBoxY + boundingBoxHeight / 2,\n                );\n\n                if (i < changePos.length) {\n                  targetContext.lineTo(\n                    boundingBoxX + changePos[i],\n                    boundingBoxY + boundingBoxHeight / 2,\n                  );\n                } else {\n                  targetContext.lineTo(\n                    boundingBoxX + boundingBoxWidth,\n                    boundingBoxY + boundingBoxHeight / 2,\n                  );\n                }\n\n                currentPos = changePos[i];\n                targetContext.stroke();\n                targetContext.closePath();\n                targetContext.lineWidth = 1 / zoomFactor;\n              }\n            }\n            break;\n\n          case Protobuf.SvPb.OverlayShape.fields.image.name:\n            {\n              const { domImage, x, y, w, h } = shape.image;\n              if (domImage) {\n                // TODO incorporate boundingBoxWidth and boundingBoxHeight\n                targetContext.drawImage(\n                  domImage,\n                  boundingBoxX + ((x && x.value) || 0),\n                  boundingBoxY + ((y && y.value) || 0),\n                  (w && w.value) || 100, // TODO better fallback than 100!\n                  (h && h.value) || 100, // TODO better fallback than 100!\n                );\n              }\n            }\n            break;\n\n          default:\n            logger.warn('Received unknown overlay shape', shapeType);\n            break;\n        }\n        if (useRotation) {\n          targetContext.restore();\n        }\n      });\n    });\n\n  if (displayBounding) {\n    if (angle && angle > 0) {\n      rotateContextByAngleAroundPoint(targetContext, angle, boundingBoxX, boundingBoxY);\n    }\n\n    targetContext.save();\n    targetContext.beginPath();\n    targetContext.strokeStyle = colorString;\n    targetContext.rect(boundingBoxX, boundingBoxY, boundingBoxWidth, boundingBoxHeight);\n    targetContext.stroke();\n    targetContext.closePath();\n\n    if (angle && angle > 0) {\n      targetContext.restore();\n    }\n  }\n\n  targetContext.restore();\n  const maxOverlayTextX = boundingBoxX + targetContext.measureText(overlayTitle).width;\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    boundingBoxX,\n    boundingBoxY - fontSize,\n    Math.max(boundingBoxX + boundingBoxWidth, maxOverlayTextX),\n    boundingBoxY + boundingBoxHeight,\n  );\n};\n\nconst rotateContextByAngleAroundPoint = (targetContext, angle, x, y) => {\n  targetContext.save();\n  targetContext.translate(x, y);\n  targetContext.rotate((angle * Math.PI) / 180);\n  targetContext.translate(-x, -y);\n};\n\nconst renderSliceTool = (targetContext, overlay, boundingCoordinates) => {\n  const { name: overlayTitle } = overlay;\n\n  const centerX = Math.abs(boundingCoordinates.minX) + overlay.boundingShape.slice.centerX.value;\n  const centerY = Math.abs(boundingCoordinates.minY) + overlay.boundingShape.slice.centerY.value;\n  const innerRadius = overlay.boundingShape.slice.innerRadius.value;\n  const outerRadius = overlay.boundingShape.slice.outerRadius.value;\n  const startRadian = calculateRadiansFromAngle(overlay.boundingShape.slice.endAngle.value);\n  const endRadian = calculateRadiansFromAngle(overlay.boundingShape.slice.startAngle.value);\n\n  targetContext.fillText(overlayTitle, centerX - 20, centerY + 20);\n\n  targetContext.beginPath();\n\n  // Maximum a full circle\n  if (endRadian - startRadian <= 2 * Math.PI) {\n    targetContext.arc(centerX, centerY, innerRadius, startRadian, endRadian);\n    targetContext.lineTo(centerX, centerY);\n    targetContext.arc(centerX, centerY, outerRadius, startRadian, endRadian);\n    targetContext.lineTo(centerX, centerY);\n  } else {\n    targetContext.arc(centerX, centerY, innerRadius, startRadian, startRadian + 1.99 * Math.PI);\n    targetContext.arc(\n      centerX,\n      centerY,\n      innerRadius + 1,\n      startRadian + 1.99 * Math.PI,\n      startRadian + 2 * Math.PI,\n    );\n    targetContext.arc(\n      centerX,\n      centerY,\n      innerRadius + 2,\n      startRadian + 2 * Math.PI,\n      startRadian + 2.01 * Math.PI,\n    );\n    targetContext.arc(centerX, centerY, innerRadius + 3, startRadian + 2.01 * Math.PI, endRadian);\n    targetContext.lineTo(centerX, centerY);\n    targetContext.arc(centerX, centerY, outerRadius, startRadian, startRadian + 1.99 * Math.PI);\n    targetContext.arc(\n      centerX,\n      centerY,\n      outerRadius + 1,\n      startRadian + 1.99 * Math.PI,\n      startRadian + 2 * Math.PI,\n    );\n    targetContext.arc(\n      centerX,\n      centerY,\n      outerRadius + 2,\n      startRadian + 2 * Math.PI,\n      startRadian + 2.01 * Math.PI,\n    );\n    targetContext.arc(centerX, centerY, outerRadius + 3, startRadian + 2.01 * Math.PI, endRadian);\n    targetContext.lineTo(centerX, centerY);\n  }\n\n  targetContext.stroke();\n  targetContext.closePath();\n\n  const maxOverlayTextX = centerX - 20 + targetContext.measureText(overlayTitle).width;\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    centerX - outerRadius,\n    centerY - outerRadius,\n    Math.max(centerX + outerRadius, maxOverlayTextX),\n    centerY + outerRadius,\n  );\n};\n\nconst calculateRadiansFromAngle = (angle) => {\n  return ((360 - angle) * Math.PI) / 180;\n};\n\nconst renderPerspectiveTool = (\n  targetContext,\n  zoomFactor,\n  overlay,\n  boundingCoordinates,\n  width,\n  height,\n) => {\n  const { name: overlayTitle } = overlay;\n\n  const textWidth = targetContext.measureText(overlayTitle).width;\n\n  targetContext.fillText(overlayTitle, width / 2 - textWidth / 2, 50);\n\n  const boundingBoxX = Math.abs(boundingCoordinates.minX) || 0;\n  const boundingBoxY = Math.abs(boundingCoordinates.minY) || 0;\n  const boundingBoxWidth = width || 0;\n  const boundingBoxHeight = height || 0;\n  const offset =\n    overlay.boundingShape.perspective.offset && overlay.boundingShape.perspective.offset.value;\n  const orientation = overlay.boundingShape.perspective.orientation;\n\n  // Orientation x\n  if (orientation === 0) {\n    targetContext.moveTo(boundingBoxX, boundingBoxY + boundingBoxHeight / 2);\n    targetContext.lineTo(boundingBoxX + offset, boundingBoxY + 1 / zoomFactor);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth - offset, boundingBoxY + 1 / zoomFactor);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth, boundingBoxY + boundingBoxHeight / 2);\n    targetContext.lineTo(\n      boundingBoxX + boundingBoxWidth - offset,\n      boundingBoxY + boundingBoxHeight - 1 / zoomFactor,\n    );\n    targetContext.lineTo(boundingBoxX + offset, boundingBoxY + boundingBoxHeight - 1 / zoomFactor);\n    targetContext.lineTo(boundingBoxX, boundingBoxY + boundingBoxHeight / 2);\n  }\n\n  // Orientation y\n  if (orientation === 1) {\n    targetContext.moveTo(boundingBoxX + 1 / zoomFactor, boundingBoxY + offset);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth / 2, boundingBoxY);\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth - 1 / zoomFactor, boundingBoxY + offset);\n    targetContext.lineTo(\n      boundingBoxX + boundingBoxWidth - 1 / zoomFactor,\n      boundingBoxY + boundingBoxHeight - offset,\n    );\n    targetContext.lineTo(boundingBoxX + boundingBoxWidth / 2, boundingBoxY + boundingBoxHeight);\n    targetContext.lineTo(boundingBoxX + 1 / zoomFactor, boundingBoxY + boundingBoxHeight - offset);\n    targetContext.lineTo(boundingBoxX + 1 / zoomFactor, boundingBoxY + offset);\n  }\n\n  targetContext.stroke();\n  targetContext.closePath();\n};\n\nconst getRgbaString = (colorInt) => {\n  if (typeof colorInt !== 'number' || isNaN(colorInt)) {\n    logger.debug('Could not parse value into color.');\n    // fall back to pink when no valid rgba color value provided\n    return 'pink';\n  }\n  const red = colorInt & 0xff;\n  const green = (colorInt >> 8) & 0xff;\n  const blue = (colorInt >> 16) & 0xff;\n  const alpha = 1;\n  return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n};\n\nexport const setBoundingCoordinatesForCustomOverlays = ({\n  overlay,\n  product,\n  fontSize,\n  boundingCoordinates,\n  dispatch,\n}) => {\n  const coords = { x: 0, y: 0, width: 0, height: 0 };\n  setCustomOverlayCoordinates(product, overlay, coords, dispatch);\n  const textWidth = getTextWidth(overlay.label, fontSize);\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    coords.x,\n    coords.y - fontSize * 2,\n    Math.max(coords.x + coords.width, coords.x + textWidth),\n    coords.y + coords.height,\n  );\n};\n\nexport const setBoundingCoordinatesForInspectionOverlays = ({\n  overlay,\n  fontSize,\n  boundingCoordinates,\n}) => {\n  const coords = { x: 0, y: 0, width: 0, height: 0 };\n  setInspectionOverlayCoordinates(overlay, coords);\n  const textWidth = getTextWidth(overlay.name, fontSize);\n  updateBoundingCoordinates(\n    boundingCoordinates,\n    coords.x,\n    coords.y - fontSize * 2,\n    Math.max(coords.x + coords.width, coords.x + textWidth),\n    coords.y + coords.height,\n  );\n};\n\nconst getTextWidth = (text, fontSize) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.font = fontSize + 'px Arial';\n  return ctx.measureText(text).width;\n};\n\nconst setCustomOverlayCoordinates = (product, overlay, coordinates, dispatch = () => void 0) => {\n  const offsetLeft =\n    Number(getValueById(product, overlay.offsetLeftVariable)) || overlay.offsetLeft;\n  const x = Number(getValueById(product, overlay.xVariable)) || overlay.x;\n  coordinates.x = x + offsetLeft;\n\n  const offsetTop = Number(getValueById(product, overlay.offsetTopVariable)) || overlay.offsetTop;\n  const y = Number(getValueById(product, overlay.yVariable)) || overlay.y;\n  coordinates.y = y + offsetTop;\n\n  coordinates.width = Number(getValueById(product, overlay.widthVariable)) || overlay.width;\n  coordinates.height = Number(getValueById(product, overlay.heightVariable)) || overlay.height;\n\n  // we need to wait here for the fallback values to initialize\n  if (\n    overlay.maxHeightFallback !== 0 &&\n    overlay.maxWidthFallback !== 0 &&\n    overlay.minHeightFallback !== 0 &&\n    overlay.minWidthFallback !== 0\n  ) {\n    if (coordinates.x < overlay.minWidthFallback) {\n      coordinates.x = overlay.minWidthFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'X',\n          `${overlay.minWidthFallback}  -   ${overlay.maxWidthFallback}`,\n        ),\n      );\n    }\n\n    if (coordinates.x > overlay.maxWidthFallback) {\n      coordinates.x = overlay.maxWidthFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'X',\n          `${overlay.minWidthFallback}  -   ${overlay.maxWidthFallback}`,\n        ),\n      );\n    }\n\n    if (coordinates.y < overlay.minHeightFallback) {\n      coordinates.y = overlay.minHeightFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'Y',\n          `${overlay.minHeightFallback}  -   ${overlay.maxHeightFallback}`,\n        ),\n      );\n    }\n\n    if (coordinates.y > overlay.maxHeightFallback) {\n      coordinates.y = overlay.maxHeightFallback;\n      dispatch(\n        addVariableValueShouldBeInTheRangeNotification(\n          'Y',\n          `${overlay.minHeightFallback}  -   ${overlay.maxHeightFallback}`,\n        ),\n      );\n    }\n  }\n};\n\nconst setInspectionOverlayCoordinates = (overlay, coordinates) => {\n  if (overlay.boundingShape.rect) {\n    coordinates.x = overlay.boundingShape.rect.x.value || 0;\n    coordinates.y = overlay.boundingShape.rect.y.value || 0;\n    coordinates.width = overlay.boundingShape.rect.w.value || 0;\n    coordinates.height = overlay.boundingShape.rect.h.value || 0;\n  }\n};\n\nexport const drawCustomOverlays = ({\n  drawTarget,\n  customOverlays,\n  product,\n  zoomFactor,\n  boundingCoordinates,\n}) => {\n  if (!customOverlays || customOverlays.length === 0) {\n    return;\n  }\n\n  const targetContext = drawTarget.getContext('2d');\n  const activeOverlays = customOverlays.filter((overlay) => overlay.isActive);\n  zoomFactor = zoomFactor || 1;\n  activeOverlays.forEach((overlay) => {\n    targetContext.beginPath();\n\n    const coords = { x: 0, y: 0, width: 0, height: 0 };\n    setCustomOverlayCoordinates(product, overlay, coords);\n    correctCoordsWithBoundingCoordinates(coords, boundingCoordinates);\n\n    const colorVariable = getValueById(product, overlay.colorVariable);\n    let color;\n    if (!colorVariable) {\n      color = overlay.color;\n    } else {\n      color = getRgbaString(colorVariable);\n    }\n\n    targetContext.rect(coords.x, coords.y, coords.width, coords.height);\n\n    targetContext.fillStyle = color;\n    targetContext.lineWidth = 1 / zoomFactor;\n    const fontSize = 10 / zoomFactor;\n    targetContext.font = fontSize + 'px Arial';\n    targetContext.fillText(overlay.label, coords.x, coords.y - fontSize);\n\n    switch (overlay.lineStyle) {\n      case 'dashed':\n        targetContext.setLineDash([5]);\n        break;\n\n      case 'dotted':\n        targetContext.setLineDash([2, 5]);\n        break;\n\n      default:\n        targetContext.setLineDash([]);\n    }\n    targetContext.strokeStyle = color;\n    targetContext.stroke();\n\n    targetContext.closePath();\n  });\n};\n\nconst correctCoordsWithBoundingCoordinates = (actualCoordinates, boundingCoordinates) => {\n  actualCoordinates.x += Math.abs(boundingCoordinates.minX);\n  actualCoordinates.y += Math.abs(boundingCoordinates.minY);\n};\n\nconst updateBoundingCoordinates = (boundingCoordinates, minX, minY, maxX, maxY) => {\n  if (minX < boundingCoordinates.minX) {\n    boundingCoordinates.minX = minX;\n  }\n\n  if (minY < boundingCoordinates.minY) {\n    boundingCoordinates.minY = minY;\n  }\n\n  if (maxX > boundingCoordinates.maxX) {\n    boundingCoordinates.maxX = maxX;\n  }\n\n  if (maxY > boundingCoordinates.maxY) {\n    boundingCoordinates.maxY = maxY;\n  }\n};\n\nconst getValueById = (product, id) => {\n  if (!product || !id) {\n    return;\n  }\n  const valueObj = product.getValue(id);\n  return valueObj && valueObj.value;\n};\n\nexport const extractInspectionOverlays = (product, imageId) => {\n  if (!product || product.released) {\n    return undefined;\n  }\n\n  const image = product.getImage(imageId);\n\n  if (!image) {\n    return undefined;\n  }\n\n  return (\n    (image &&\n      image.overlays &&\n      image.overlays.overlays &&\n      image.overlays.overlays.length > 0 &&\n      image.overlays.overlays) ||\n    []\n  );\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\n// eslint-disable-next-line\nclass FilmStrip extends Component {\n  render() {\n    const { images, onImageClick } = this.props;\n    return (\n      <div className=\"film-strip-container\">\n        {images.map((image) => (\n          <button\n            key={image.product.trigger}\n            className=\"reject-image\"\n            onClick={() => {\n              onImageClick(image.product);\n            }}\n          >\n            <img src={image.combinedSrc} alt=\"\" />\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\n\nFilmStrip.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.string,\n    }),\n  ).isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n\nexport default FilmStrip;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './styles.scss';\nimport iconPause from '../../assets/icons/pause.svg';\nimport iconPlay from '../../assets/icons/play.svg';\n\nimport ActionBar from '../../components/ActionBar';\nimport ObjectSelector from '../../components/ObjectSelector';\nimport ProxyType from '../../components/Protobuf/ProxyType';\nimport Container from '../../components/layout/Container';\nimport { initViewState, setViewData, setSharedStateData, setSaveFlag } from '../../redux/actions';\nimport { TOGGLE_BUTTON } from '../../types/ActionBarType';\nimport { drawInspectionOverlays, extractInspectionOverlays } from '../../utils/OverlayRenderer';\nimport logger from '../../utils/logger';\nimport {\n  canReadImageStripView,\n  canEditImageStripView,\n  canEditInspectionState,\n} from '../../utils/permissions';\nimport FilmStrip from './components/FilmStrip';\n\nclass ImageStripView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n      data: null,\n    };\n    this.productSub = null;\n    this.imageStripLength = 10;\n  }\n\n  async componentDidMount() {\n    if (this.props.sourceImage) {\n      this.unsubscribeFromProductStream();\n      this.subscribeToProductStream(this.props.sourceImage);\n    }\n\n    const { configuration, proxy } = this.props;\n    if (configuration && proxy) {\n      if (configuration.objectSelectorImages?.size === 0) {\n        await configuration.setObjectSelectorImages(proxy.protobuf);\n      }\n      if (configuration.idNameMappings?.size === 0) {\n        await configuration.setIdNameMappings(proxy.protobuf);\n      }\n      proxy.dispatchCurrentConfiguration(configuration);\n    }\n  }\n\n  componentDidUpdate(nextProps) {\n    if (nextProps.sourceImage && nextProps.sourceImage !== this.props.sourceImage) {\n      this.unsubscribeFromProductStream();\n      this.subscribeToProductStream(nextProps.sourceImage);\n    }\n\n    if (\n      this.props.isBrowserWindowVisible !== undefined &&\n      this.props.isBrowserWindowVisible !== nextProps.isBrowserWindowVisible\n    ) {\n      if (nextProps.isBrowserWindowVisible) {\n        this.subscribeToProductStream(nextProps.sourceImage);\n      } else {\n        this.unsubscribeFromProductStream();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { images } = this.state;\n    const products = (images || []).map((e) => e.product);\n    this.releaseProducts(products);\n    // TODO resume stream when paused?\n    this.unsubscribeFromProductStream();\n  }\n\n  subscribeToProductStream(sourceImage) {\n    if (!this.productSub) {\n      const { inspectionId } = this.props;\n      const desc = {\n        inspectionId,\n        startAtTriggerCount: -1 * this.imageStripLength,\n        rejectImageIds: [sourceImage],\n        allowOldTrigger: true,\n        manualRelease: true,\n      };\n      this.productSub = this.props.proxy.subscribeToProductStream(desc, this.onProduct);\n    }\n  }\n\n  unsubscribeFromProductStream() {\n    if (this.productSub) {\n      this.props.proxy.unsubscribeFromProductStream(this.productSub);\n      this.productSub = null;\n    }\n\n    (this.state.images || []).forEach((image) => {\n      image.product?.release();\n    });\n    this.setState({ images: [] });\n  }\n\n  onProduct = ({ product }) => {\n    const entry = this.state.images.find((e) => e.product === product);\n    if (entry) {\n      // we can free this reference. the second reference to the\n      // same product will be released in this.releaseProducts().\n      product.release();\n      return;\n    }\n\n    // TODO: Image dimensions won't change for a subscription\n    // better to update `onSubscribed`\n    this.updateImageDimensions(product);\n\n    const combinedSrc = this.drawImageAndOverlaysToCanvas({\n      drawTarget: this.canvas,\n      product,\n    });\n    const images = [{ combinedSrc, product }, ...this.state.images];\n\n    // sort descending by trigger count. can happen at beginning of stream.\n    images.sort((a, b) => b.product.trigger - a.product.trigger);\n\n    let productsToRelease = [];\n    if (images.length > this.imageStripLength) {\n      productsToRelease = images.splice(this.imageStripLength).map((e) => e.product);\n    }\n\n    this.setState({ images });\n\n    this.releaseProducts(productsToRelease);\n  };\n\n  releaseProducts(products) {\n    (products || []).forEach((product) => product.release());\n  }\n\n  updateImageDimensions = (product) => {\n    if (!product) {\n      logger.error(`updateImageDimensions requires product but did not receive.`);\n      return;\n    }\n\n    if (!product.isReject) {\n      logger.error(`updateImageDimensions requires product that is a reject.`);\n      return;\n    }\n\n    const { sourceImage } = this.props;\n    const { image } = product.getImage(sourceImage);\n\n    if (!image) {\n      logger.error(`Product does not contain an Image.`);\n      return;\n    }\n\n    const { height, width } = image;\n\n    if (\n      !this.state.imageWidth ||\n      !this.state.imageHeigt ||\n      this.state.imageWidth !== width ||\n      this.state.imageHeigt !== height\n    ) {\n      this.setState({ imageHeigt: height, imageWidth: width });\n    }\n  };\n\n  setSourceImageIndex = (id) => {\n    if (!id) {\n      logger.error(`OjectSelector did not return a valid id.`);\n      return;\n    }\n    this.props.setSharedStateData('sourceImage', id);\n  };\n\n  drawImageAndOverlaysToCanvas = ({ drawTarget, product }) => {\n    if (!drawTarget || !product) {\n      logger.error(\n        'drawImageAndOverlaysToCanvas expects drawTarget and product but did not receive.',\n      );\n      return;\n    }\n\n    const imageId = this.props.sourceImage;\n    const image = product.getImage(imageId);\n    if (!image || !image.domImage) {\n      logger.warn(`ImageStrip expected an image onReject but didn't receive`);\n      return;\n    }\n\n    const drawTargetContext = drawTarget.getContext('2d');\n    drawTargetContext.clearRect(0, 0, drawTarget.width, drawTarget.height);\n    drawTargetContext.drawImage(image.domImage, 0, 0);\n\n    const overlays = extractInspectionOverlays(product, imageId);\n    const boundingCoordinates = {\n      minX: 0,\n      minY: 0,\n      maxX: image.width || 0,\n      maxY: image.height || 0,\n    };\n\n    drawInspectionOverlays({\n      drawTarget,\n      overlays,\n      zoomFactor: 1,\n      boundingCoordinates,\n      width: image.width,\n      height: image.height,\n    });\n    return this.canvas.toDataURL('image/bmp');\n  };\n\n  renderObjectSelector = () => {\n    const { configuration, inspectionId } = this.props;\n    if (!configuration || !inspectionId) {\n      return;\n    }\n\n    const images = configuration.getObjectSelectorImagesForInspection(inspectionId);\n\n    return (\n      <div style={{ width: '100%', overflow: 'auto' }}>\n        {images && (\n          <ObjectSelector\n            singleSelect\n            data={images.tree}\n            onChange={(selectedIid, checkedLocation) => {\n              this.setSourceImageIndex(selectedIid);\n              this.props.setViewData('windowName', checkedLocation);\n              this.props.setSaveFlag(true);\n            }}\n          />\n        )}\n      </div>\n    );\n  };\n\n  selectProduct(product) {\n    this.pauseStream();\n    this.props.proxy.replayProduct(this.props.inspectionId, product);\n    // TODO some highlights?\n  }\n\n  resumeStream() {\n    this.props.proxy.resumeRejectStream(this.props.inspectionId);\n    this.props.setSaveFlag(true);\n  }\n\n  pauseStream() {\n    this.props.proxy.pauseRejectStream(this.props.inspectionId);\n    this.props.setSaveFlag(true);\n  }\n\n  setTitleFromConfig = () => {\n    const { sourceImage, inspectionId, configuration } = this.props;\n    if (configuration) {\n      const path = configuration.getValueNameForId(inspectionId, sourceImage);\n      if (path) {\n        this.props.setViewData('windowName', path);\n      }\n    }\n  };\n\n  showPause = () => {\n    const { pausedInspections, inspectionId } = this.props;\n    let showPause = false;\n    if (inspectionId) {\n      if (!pausedInspections.includes(inspectionId)) {\n        showPause = true;\n      }\n    }\n    return showPause;\n  };\n\n  renderFilmStrip = () => {\n    const { inspectionId, myPermissions } = this.props;\n    const { imageWidth, imageHeigt } = this.state;\n    const canEdit = canEditInspectionState(myPermissions);\n    const actions = [\n      {\n        type: TOGGLE_BUTTON,\n        id: inspectionId,\n        intlId: 'imageStripView.play',\n        iconUrl: iconPlay,\n        enabled: canEdit,\n        onClickHandler: () => {\n          this.resumeStream();\n        },\n        intlIdAlternative: 'imageStripView.pause',\n        iconUrlAlternative: iconPause,\n        onClickHandlerAlternative: () => {\n          this.pauseStream();\n        },\n        showAlternative: this.showPause(),\n      },\n    ];\n\n    return (\n      <div className=\"reject-view-container\">\n        <Container>\n          <canvas\n            style={{ display: 'none' }}\n            width={imageWidth}\n            height={imageHeigt}\n            className=\"imageCanvas\"\n            ref={(canvas) => {\n              this.canvas = canvas;\n            }}\n          />\n          {this.state.images && this.state.images.length > 0 && (\n            <FilmStrip\n              onImageClick={(product) => this.selectProduct(product)}\n              images={this.state.images}\n            />\n          )}\n          <ActionBar isViewAction actions={actions} />\n        </Container>\n      </div>\n    );\n  };\n\n  render() {\n    const { sourceImage, myPermissions } = this.props;\n\n    this.setTitleFromConfig();\n    const canEdit = canEditImageStripView(myPermissions);\n    const canRead = canReadImageStripView(myPermissions);\n\n    if (canRead || canEdit) {\n      return (\n        <div className=\"reject-view-container\">\n          {!sourceImage && canEdit ? this.renderObjectSelector() : this.renderFilmStrip()}\n        </div>\n      );\n    }\n\n    return <div></div>;\n  }\n}\n\nImageStripView.defaultProps = {\n  imageData: [],\n  proxy: undefined,\n  configuration: null,\n};\n\nImageStripView.propTypes = {\n  proxy: ProxyType,\n  configuration: PropTypes.object,\n  sourceImage: PropTypes.number,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  try {\n    return {\n      proxy: state.app.proxy,\n      configuration: state.app.configuration,\n      sourceImage: Number(state.inspections[inspectionId].sharedState?.views[viewId].sourceImage),\n      pausedInspections: state.app.pausedInspections,\n      myPermissions: state.app.myPermissions,\n      isBrowserWindowVisible: state.app.isBrowserWindowVisible,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nconst initState = {};\n\nconst initSharedState = {\n  sourceImage: 0,\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  dispatch(initViewState(inspectionId, viewId, initState, initSharedState));\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    setSharedStateData: (key, data) =>\n      dispatch(setSharedStateData(inspectionId, key, data, viewId)),\n    setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n  };\n};\n\nconst mappedConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default mappedConnect(ImageStripView);\n","export default __webpack_public_path__ + \"static/media/downloadWithOverlays.0ec8c060.svg\";","export default __webpack_public_path__ + \"static/media/fit-to-height.be413aab.svg\";","export default __webpack_public_path__ + \"static/media/fit-to-width.ea508053.svg\";","export default __webpack_public_path__ + \"static/media/one.0123db23.svg\";","export interface OverlaySchema {\n  id: number;\n  color: string;\n  colorVariable?: string;\n  isActive: boolean;\n  label: string;\n  lineStyle: string;\n  maxHeightFallback?: number;\n  maxWidthFallback?: number;\n  minHeightFallback?: number;\n  minWidthFallback?: number;\n  offsetLeft: number | null;\n  offsetLeftVariable?: string;\n  offsetTop: number | null;\n  offsetTopVariable?: string;\n  width: number;\n  widthVariable?: string;\n  height: number;\n  heightVariable?: string;\n  x: number;\n  xVariable?: string;\n  y: number;\n  yVariable?: string;\n}\n\nexport const updateOverlayList = (updatedOverlay: OverlaySchema, overlayList: OverlaySchema[]) =>\n  overlayList.map((overlay) => (overlay.id === updatedOverlay.id ? updatedOverlay : overlay));\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport Table, { AutoResizer, CallOrReturn, ColumnShape } from 'react-base-table';\n\nimport { OverlaySchema, updateOverlayList } from '../../utils/reduxHelper';\n\nimport 'react-base-table/styles.css';\nimport './style.scss';\n\ninterface OverlayListProps {\n  overlays: OverlaySchema[];\n  updateCurrentOverlay: (overlay: OverlaySchema) => void;\n  updateOverlayList: (overlays: OverlaySchema[]) => void;\n  onSelectAll: (selectAll: boolean) => void;\n  hasActionBar?: boolean;\n  canSelectRow?: boolean;\n}\n\nexport const OverlayList = ({\n  overlays,\n  onSelectAll,\n  updateCurrentOverlay,\n  updateOverlayList: externalUpdateOverlayList,\n  canSelectRow,\n  hasActionBar = true,\n}: OverlayListProps) => {\n  const [selectAll, setSelectAll] = useState(false);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(-1);\n\n  useEffect(() => {\n    setSelectedRowIndex(canSelectRow ? 0 : -1);\n  }, [canSelectRow]);\n\n  useEffect(() => {\n    setSelectAll(() => {\n      for (const overlay of overlays || []) {\n        if (!overlay.isActive) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }, [overlays]);\n\n  const headerRenderer: CallOrReturn<\n    React.ReactNode,\n    {\n      cells: React.ReactNode[];\n      columns: ColumnShape<unknown>;\n      headerIndex: number;\n    }\n  > = useCallback(\n    ({ columns }) => {\n      const handleSelectAll = (checked: boolean) => {\n        setSelectAll(checked);\n        onSelectAll(checked);\n      };\n\n      const columnHeaders: JSX.Element[] = [];\n      columns.forEach((_: never, columnIndex: number) => {\n        if (columnIndex === 0) {\n          columnHeaders.push(\n            <div\n              className=\"base-table-header-column\"\n              style={{ width: columns[columnIndex].width }}\n              key={`header_${columnIndex}`}\n            >\n              <Checkbox\n                checked={selectAll}\n                onChange={(e) => handleSelectAll(e.target.checked)}\n                style={{\n                  padding: 0,\n                }}\n                color=\"primary\"\n                key=\"select-all-checkbox\"\n              />\n            </div>,\n          );\n        } else {\n          columnHeaders.push(\n            <div\n              className=\"base-table-header-column\"\n              key={`header_${columnIndex}`}\n              style={{ padding: ' 0 7.5px' }}\n            >\n              {columns[columnIndex].title}\n            </div>,\n          );\n        }\n      });\n\n      return columnHeaders;\n    },\n    [onSelectAll, selectAll],\n  );\n\n  const tableDataFromOverlays = useMemo(() => {\n    const handleSingleSelect = (checked: boolean, overlay: OverlaySchema) => {\n      const updatedOverlay = { ...overlay, isActive: checked };\n      const updatedOverlayList = updateOverlayList(updatedOverlay, overlays);\n\n      externalUpdateOverlayList(updatedOverlayList);\n    };\n\n    const getCheckboxDefinition4Cell = (currentId: number) => {\n      const overlay = overlays.filter((item) => item.id === currentId)[0];\n      const isActive = overlay ? overlay.isActive : false;\n      return (\n        <Checkbox\n          checked={isActive}\n          onChange={(e) => handleSingleSelect(e.target.checked, overlay)}\n          style={{\n            padding: 0,\n          }}\n          color=\"primary\"\n          key={`checkbox_${currentId}`}\n        />\n      );\n    };\n\n    const data =\n      overlays &&\n      overlays.map((overlay) => {\n        return {\n          checkbox: getCheckboxDefinition4Cell(overlay.id),\n          name: overlay.label,\n          id: overlay.id,\n        };\n      });\n    return data;\n  }, [externalUpdateOverlayList, overlays]);\n\n  const columnDefinition4OverlayTable = useMemo(() => {\n    return [\n      {\n        key: 'checkbox',\n        dataKey: 'checkbox',\n        title: '',\n        width: 40,\n      },\n      {\n        key: 'name',\n        dataKey: 'name',\n        title: 'Overlays',\n        width: 0,\n        flexGrow: 1,\n      },\n    ];\n  }, []);\n\n  if (!overlays) return null;\n\n  return (\n    <AutoResizer key=\"autoresizer\">\n      {({ width, height }) => (\n        <Table\n          headerRenderer={headerRenderer}\n          columns={columnDefinition4OverlayTable}\n          data={tableDataFromOverlays}\n          width={width}\n          height={hasActionBar ? height - 30 : height}\n          headerHeight={30}\n          rowHeight={30}\n          key=\"overlay-table\"\n          rowEventHandlers={\n            canSelectRow\n              ? {\n                  onClick: ({ rowIndex }) => {\n                    setSelectedRowIndex(rowIndex);\n                    updateCurrentOverlay(\n                      overlays.filter((item) => item.id === overlays[rowIndex].id)[0],\n                    );\n                  },\n                }\n              : undefined\n          }\n          rowClassName={({ rowIndex }) =>\n            selectedRowIndex === rowIndex ? 'overlay-table-selected-row' : ''\n          }\n        />\n      )}\n    </AutoResizer>\n  );\n};\n","import React, { Component } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { setViewData, saveImageSettings } from '../../../redux/actions';\nimport {\n  drawCustomOverlays,\n  drawInspectionOverlays,\n  setBoundingCoordinatesForCustomOverlays,\n  setBoundingCoordinatesForInspectionOverlays,\n  extractInspectionOverlays,\n} from '../../../utils/OverlayRenderer';\nimport { forceDownload } from '../../../utils/downloader';\nimport logger from '../../../utils/logger';\nimport { isObjectValid } from '../../../utils/objectValidator';\nimport { canEditImageView } from '../../../utils/permissions';\n\nclass ImageEditor extends Component {\n  state = {\n    image: new Image(),\n    left: 0,\n    top: 0,\n    zoomFactor: 1,\n    currentCursorPosition: { x: 0, y: 0 },\n    canvasDimension: { width: 0, height: 0 },\n  };\n\n  componentDidMount() {\n    this.loadViewSettings();\n    this.props.product.lock();\n    this.initImage(this.props);\n    this.bindEventListeners();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { zoomFactor, left, top } = this.state;\n\n    this.bindEventListeners();\n\n    const productChanged = prevProps.product !== this.props.product;\n    const modeChanged = prevProps.currentMode !== this.props.currentMode;\n    const zoomFactorChanged = prevState.zoomFactor !== zoomFactor;\n    const customOverlaysChanged = !isEqual(this.props.customOverlays, prevProps.customOverlays);\n    const imageMoved = prevState.left !== left || prevState.top !== top;\n\n    if (productChanged) {\n      prevProps.product.release();\n      this.props.product.lock();\n    }\n\n    if (productChanged || modeChanged || zoomFactorChanged || customOverlaysChanged) {\n      this.initImage(this.props);\n    }\n\n    if (zoomFactorChanged || imageMoved) {\n      this.props.saveImageSettings(zoomFactor, { left, top });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.product.release();\n  }\n\n  loadViewSettings() {\n    const { zoomFactor, imagePosition } = this.props.viewSettings;\n    if (zoomFactor) {\n      this.setState({ zoomFactor });\n    }\n\n    if (imagePosition && imagePosition.left) {\n      this.setState({ left: imagePosition.left });\n    }\n\n    if (imagePosition && imagePosition.top) {\n      this.setState({ top: imagePosition.top });\n    }\n  }\n\n  initImage(props) {\n    if (props && props.product && props.imageId) {\n      const image = props.product.getImage(props.imageId);\n      if (image && image.domImage) {\n        this.onImageLoaded(image.domImage);\n      }\n    }\n  }\n\n  onImageLoaded(image) {\n    const { zoomFactor, canvasDimension } = this.state;\n    const { height, width } = canvasDimension;\n    this.setState({ image });\n    this.initCanvas({ canvas: this.canvas, height, width, zoomFactor });\n    this.props.setViewData('imageDimensions', { width: image.width, height: image.height });\n    this.draw(this.canvas, image, zoomFactor);\n    this.setImageInfo();\n  }\n\n  initCanvas({ canvas, height, width, zoomFactor }) {\n    canvas.width = Math.ceil(width * zoomFactor);\n    canvas.height = Math.ceil(height * zoomFactor);\n\n    this.props.setViewData('imageDimensions', { width, height });\n  }\n\n  draw(canvas, image, zoomFactor) {\n    if (!canvas || !image) {\n      console.error('Can not draw because we do not have a canvas');\n      return;\n    }\n\n    const boundingCoordinates = this.setBoundingCoordinates(image, zoomFactor);\n\n    this.setCanvasDimensions(canvas, boundingCoordinates, zoomFactor);\n\n    const ctx = canvas.getContext('2d');\n    ctx.webkitImageSmoothingEnabled = false;\n    ctx.msImageSmoothingEnabled = false;\n    ctx.imageSmoothingEnabled = false;\n    ctx.save();\n    ctx.clearRect(\n      0,\n      0,\n      Math.abs(boundingCoordinates.minX) + boundingCoordinates.maxX,\n      Math.abs(boundingCoordinates.minY) + boundingCoordinates.maxY,\n    );\n    ctx.scale(zoomFactor, zoomFactor);\n    ctx.drawImage(image, Math.abs(boundingCoordinates.minX), Math.abs(boundingCoordinates.minY));\n    this.drawOverlays(canvas, zoomFactor, boundingCoordinates, image.width, image.height);\n    ctx.restore();\n  }\n\n  setBoundingCoordinates = (image, zoomFactor) => {\n    const boundingCoordinates = {\n      minX: 0,\n      minY: 0,\n      maxX: image.width || 0,\n      maxY: image.height || 0,\n    };\n    const fontSize = 10 / zoomFactor;\n    this.getBoundingCoordinatesFromCustomOverlays(boundingCoordinates, fontSize);\n    this.getBoundingCoordinatesFromInspectionOverlays(boundingCoordinates, fontSize);\n\n    return boundingCoordinates;\n  };\n\n  setCanvasDimensions = (canvas, boundingCoordinates, zoomFactor) => {\n    const width = Math.abs(boundingCoordinates.minX) + boundingCoordinates.maxX;\n    const height = Math.abs(boundingCoordinates.minY) + boundingCoordinates.maxY;\n\n    canvas.width = Math.ceil(width * zoomFactor);\n    canvas.height = Math.ceil(height * zoomFactor);\n\n    this.setState({ canvasDimension: { width, height }, boundingCoordinates });\n  };\n\n  drawOverlays(drawTarget, zoomFactor, boundingCoordinates, width, height) {\n    const { product, customOverlays, imageId, currentMode } = this.props;\n    const overlays = extractInspectionOverlays(product, imageId);\n\n    drawCustomOverlays({\n      drawTarget,\n      customOverlays,\n      product,\n      zoomFactor,\n      boundingCoordinates,\n    });\n    drawInspectionOverlays({\n      drawTarget,\n      overlays,\n      zoomFactor,\n      boundingCoordinates,\n      width,\n      height,\n      currentMode,\n    });\n  }\n\n  getBoundingCoordinatesFromCustomOverlays = (boundingCoordinates, fontSize) => {\n    const { product, customOverlays } = this.props;\n    const { image } = this.state;\n\n    const imageWidth = image?.width;\n    const imageHeight = image?.height;\n\n    const minWidthFallback = Number(-imageWidth * 2);\n    const maxWidthFallback = Number(imageWidth * 2);\n\n    const minHeightFallback = Number(-imageHeight * 2);\n    const maxHeightFallback = Number(imageHeight * 2);\n\n    let overlays;\n    overlays = customOverlays.filter((overlay) => overlay.isActive);\n    overlays.map((overlay) =>\n      Object.assign(overlay, {\n        minWidthFallback,\n        maxWidthFallback,\n        minHeightFallback,\n        maxHeightFallback,\n      }),\n    );\n\n    overlays.forEach((overlay) => {\n      setBoundingCoordinatesForCustomOverlays({\n        overlay,\n        product,\n        fontSize,\n        boundingCoordinates,\n        dispatch: this.props.dispatch,\n      });\n    });\n  };\n\n  getBoundingCoordinatesFromInspectionOverlays = (boundingCoordinates, fontSize) => {\n    const { product, imageId } = this.props;\n    const overlays = extractInspectionOverlays(product, imageId);\n\n    overlays &&\n      overlays.forEach((overlay) => {\n        setBoundingCoordinatesForInspectionOverlays({ overlay, fontSize, boundingCoordinates });\n      });\n  };\n\n  setImageInfo = () => {\n    const { isImageInfoOpen } = this.props;\n    const { currentCursorPosition } = this.state;\n\n    if (currentCursorPosition && isImageInfoOpen) {\n      const { x, y } = currentCursorPosition;\n      this.setRgbValues(x, y);\n    }\n  };\n\n  bindEventListeners() {\n    if (canEditImageView(this.props.myPermissions)) {\n      this.containerRef.addEventListener('mousewheel', this.handleScroll);\n      this.containerRef.addEventListener('DOMMouseScroll', this.handleScroll);\n      this.containerRef.addEventListener('mousedown', this.handleMouseDown);\n      this.containerRef.addEventListener('mouseup', this.handleMouseUp);\n      this.containerRef.addEventListener('mouseleave', this.handleMouseUp);\n      this.containerRef.addEventListener('mousemove', this.handleDrag);\n    } else {\n      this.containerRef.removeEventListener('mousewheel', this.handleScroll);\n      this.containerRef.removeEventListener('DOMMouseScroll', this.handleScroll);\n      this.containerRef.removeEventListener('mousedown', this.handleMouseDown);\n      this.containerRef.removeEventListener('mouseup', this.handleMouseUp);\n      this.containerRef.removeEventListener('mouseleave', this.handleMouseUp);\n      this.containerRef.removeEventListener('mousemove', this.handleDrag);\n    }\n\n    this.containerRef.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  handleScroll = (evt) => {\n    const delta = evt.wheelDelta ? evt.wheelDelta / 40 : evt.detail ? -evt.detail : 0;\n    if (delta) {\n      const { offsetX, offsetY } = evt;\n      this.zoom(delta, offsetX, offsetY);\n    }\n    evt.preventDefault();\n    return false;\n  };\n\n  handleMouseDown = (event) => {\n    const dragStart = { x: event.pageX, y: event.pageY };\n    const { left, top } = this.state;\n    const dragStartPos = { left, top };\n    this.setState({ dragging: true, dragStart, dragStartPos });\n  };\n\n  handleMouseUp = () => {\n    this.setState({ dragging: false, dragStart: null });\n  };\n\n  handleDrag = (event) => {\n    const { dragging, dragStart, dragStartPos } = this.state;\n    if (!dragging) {\n      return;\n    }\n\n    const diffX = event.pageX - dragStart.x;\n    const diffY = event.pageY - dragStart.y;\n    this.setState({\n      left: dragStartPos.left + diffX,\n      top: dragStartPos.top + diffY,\n    });\n  };\n\n  handleMouseMove = (event) => {\n    const { isImageInfoOpen } = this.props;\n\n    if (isImageInfoOpen) {\n      const cursorPosition = this.getMouseCoordinatesOnElement(event, this.canvas);\n\n      this.setCursorPosition(cursorPosition);\n      this.setRgbValues(cursorPosition.x, cursorPosition.y);\n    }\n  };\n\n  getMouseCoordinatesOnElement = (event) => {\n    const { zoomFactor, boundingCoordinates } = this.state;\n    let offsetX = event.offsetX;\n    let offsetY = event.offsetY;\n    let element = event.target;\n\n    while (element !== this.containerRef) {\n      offsetX += element.offsetLeft;\n      offsetY += element.offsetTop;\n      element = element.parentNode;\n    }\n\n    let x = (offsetX - this.canvas.offsetLeft) / zoomFactor;\n    let y = (offsetY - this.canvas.offsetTop) / zoomFactor;\n\n    if (boundingCoordinates) {\n      x += boundingCoordinates.minX;\n      y += boundingCoordinates.minY;\n    }\n\n    return {\n      x: Math.trunc(x),\n      y: Math.trunc(y),\n    };\n  };\n\n  setRgbValues = (x, y) => {\n    const { image } = this.state;\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(image, 0, 0);\n\n    const colors = ctx.getImageData(x, y, 1, 1).data;\n    const red = colors[0];\n    const green = colors[1];\n    const blue = colors[2];\n    this.props.setViewData('rgbValues', { R: red, G: green, B: blue });\n  };\n\n  setCursorPosition = (cursorPosition) => {\n    const { currentCursorPosition } = this.state;\n    const cursorPositionOnImage = this.trimPositionsOnImageSize(cursorPosition);\n    this.props.setViewData('cursorPosition', cursorPositionOnImage);\n\n    if (\n      currentCursorPosition.x !== cursorPositionOnImage.x ||\n      currentCursorPosition.y !== cursorPositionOnImage.y\n    ) {\n      this.setState({ currentCursorPosition: cursorPosition });\n    }\n  };\n\n  trimPositionsOnImageSize = (cursorPosition) => {\n    const { image } = this.state;\n    if (\n      cursorPosition.x < 0 ||\n      cursorPosition.y < 0 ||\n      cursorPosition.x > image.width ||\n      cursorPosition.y > image.height\n    ) {\n      return { x: 0, y: 0 };\n    }\n\n    return cursorPosition;\n  };\n\n  zoom(delta, offX, offY) {\n    const SCALE_BASE = 1.1;\n    const MIN_ZOOM_FACTOR = 0.05;\n    const MAX_ZOOM_FACTOR = 20;\n    const MAX_CANVAS_SIZE = 4096;\n\n    const scaleFactor = Math.pow(SCALE_BASE, delta);\n    const zoomFactor = this.state.zoomFactor * scaleFactor;\n    if (zoomFactor < MIN_ZOOM_FACTOR || zoomFactor > MAX_ZOOM_FACTOR) {\n      return;\n    }\n\n    const { canvasDimension } = this.state;\n    const longestSide = Math.max(\n      canvasDimension.width * zoomFactor,\n      canvasDimension.height * zoomFactor,\n    );\n    if (longestSide > MAX_CANVAS_SIZE) {\n      return;\n    }\n\n    const { left, top } = this.state;\n    const leftDiff = offX * (1 - scaleFactor);\n    const topDiff = offY * (1 - scaleFactor);\n    this.setState({\n      left: left + leftDiff,\n      top: top + topDiff,\n      zoomFactor,\n    });\n  }\n\n  clamp(v, min, max) {\n    return Math.max(Math.min(v, max), min);\n  }\n\n  resetZoom() {\n    const { boundingCoordinates, zoomFactor } = this.state;\n    this.setState({\n      zoomFactor: 1,\n      left: boundingCoordinates.minX * zoomFactor,\n      top: boundingCoordinates.minY * zoomFactor,\n    });\n  }\n\n  fitToHeight() {\n    const { height } = this.getViewSize();\n    const { image, boundingCoordinates, zoomFactor } = this.state;\n    this.setState({\n      zoomFactor: height / image.height,\n      left: boundingCoordinates.minX * zoomFactor,\n      top: boundingCoordinates.minY * zoomFactor,\n    });\n  }\n\n  fitToWidth() {\n    const { width } = this.getViewSize();\n    const { image, boundingCoordinates, zoomFactor } = this.state;\n    this.setState({\n      zoomFactor: width / image.width,\n      left: boundingCoordinates.minX * zoomFactor,\n      top: boundingCoordinates.minY * zoomFactor,\n    });\n  }\n\n  getViewSize() {\n    return {\n      width: (this.containerRef && this.containerRef.getBoundingClientRect().width) || 200,\n      height: (this.containerRef && this.containerRef.getBoundingClientRect().height) || 200,\n    };\n  }\n\n  downloadOriginalImage() {\n    if (!isObjectValid(() => this.state.image.src)) {\n      logger.info('downloadOriginalImage can not find image source');\n      return;\n    }\n    forceDownload(this.state.image.src, 'image.bmp');\n  }\n\n  downloadOriginalImageWithOverlays() {\n    const { canvasDimension, image } = this.state;\n    const canvas = document.createElement('canvas');\n    canvas.width = canvasDimension.width;\n    canvas.height = canvasDimension.height;\n    this.draw(canvas, image, 1);\n\n    canvas.toBlob((blob) => {\n      const domURL = self.URL || self.webkitURL || self; // eslint-disable-line\n      const url = domURL.createObjectURL(blob);\n      forceDownload(url);\n      domURL.revokeObjectURL(url);\n    });\n  }\n\n  render() {\n    const { zoomFactor, canvasDimension, left, top } = this.state;\n    const height = canvasDimension.height * zoomFactor;\n    const width = canvasDimension.width * zoomFactor;\n\n    return (\n      <div\n        style={{ height: '100%', width: '100%' }}\n        ref={(ref) => {\n          this.containerRef = ref;\n        }}\n      >\n        <canvas\n          className=\"imageCanvas\"\n          style={{\n            position: 'absolute',\n            left,\n            top,\n            width,\n            height,\n          }}\n          ref={(canvas) => {\n            this.canvas = canvas;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst propTypes = {\n  imageSrc: PropTypes.string,\n};\n\nImageEditor.propTypes = propTypes;\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  try {\n    return {\n      customOverlays: state.inspections[inspectionId].sharedState?.views[viewId].overlays,\n      currentMode: state.app.currentMode,\n      viewSettings: state.inspections[inspectionId].views[viewId],\n      myPermissions: state.app.myPermissions,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    saveImageSettings: (zoomFactor, imagePosition) =>\n      dispatch(saveImageSettings(inspectionId, viewId, zoomFactor, imagePosition)),\n    dispatch: (...args) => dispatch(...args),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(ImageEditor),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport { getPropsFromInspection } from '../../../utils/propHelper';\n\nclass ImageInfo extends Component {\n  render() {\n    const { imageInfoClass, cursorPosition, rgbValues, imageDimensions } = this.props;\n    return (\n      <div className={imageInfoClass}>\n        <div className=\"info-table\">\n          <div className=\"th\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.info\" />\n            </div>\n          </div>\n\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.width\" />\n            </div>\n            <div className=\"td\">{imageDimensions.width}</div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.height\" />\n            </div>\n            <div className=\"td\">{imageDimensions.height}</div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">{`${rgbValues.R}, ${rgbValues.G}, ${rgbValues.B}`}</div>\n            <div\n              className=\"td\"\n              style={{\n                backgroundColor: `rgb(${rgbValues.R},${rgbValues.G},${rgbValues.B})`,\n              }}\n            />\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.x\" />\n            </div>\n            <div className=\"td\">{cursorPosition.x}</div>\n          </div>\n          <div className=\"tr\">\n            <div className=\"td\">\n              <FormattedMessage id=\"imageView.y\" />\n            </div>\n            <div className=\"td\">{cursorPosition.y}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nImageInfo.defaultProps = {\n  imageInfoClass: '',\n  rgbValues: { R: 0, G: 0, B: 0 },\n  cursorPosition: { width: 0, height: 0 },\n  imageDimensions: { width: 0, height: 0 },\n};\n\nImageInfo.propTypes = {\n  imageInfoClass: PropTypes.string,\n  rgbValues: PropTypes.shape({\n    R: PropTypes.number,\n    G: PropTypes.number,\n    B: PropTypes.number,\n  }),\n  imageDimensions: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number,\n  }),\n  cursorPosition: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }),\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  return getPropsFromInspection(state, inspectionId, viewId, {\n    imageDimensions: 'imageDimensions',\n    cursorPosition: 'cursorPosition',\n    rgbValues: 'rgbValues',\n  });\n};\n\nexport default connect(mapStateToProps)(ImageInfo);\n","export const getPropsFromInspection = (state, inspectionId, viewId, props) => {\n  return Object.keys(props).reduce(\n    (acc, key) => ({\n      ...acc,\n      [key]: state.inspections[inspectionId].views[viewId][key],\n    }),\n    {},\n  );\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport isEqual from 'lodash/isEqual';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport iconDownload from '../../assets/icons/download.svg';\nimport iconDownloadWithOverlays from '../../assets/icons/downloadWithOverlays.svg';\nimport iconFitToHeight from '../../assets/icons/fit-to-height.svg';\nimport iconFitToWidth from '../../assets/icons/fit-to-width.svg';\nimport iconInfo from '../../assets/icons/info.svg';\nimport iconOne from '../../assets/icons/one.svg';\nimport iconOverlayList from '../../assets/icons/overlay-list.svg';\n\nimport ActionBar from '../../components/ActionBar';\nimport ObjectSelector from '../../components/ObjectSelector';\nimport { OverlayList } from '../../components/OverlayList';\nimport ProxyType from '../../components/Protobuf/ProxyType';\nimport {\n  initViewState,\n  setViewData,\n  setSharedStateData,\n  addImageNotAvailableNotification,\n  setSaveFlag,\n} from '../../redux/actions/index';\nimport ActionBarType, { SEPARATOR } from '../../types/ActionBarType';\nimport logger from '../../utils/logger';\nimport { canReadImageView, canEditImageView } from '../../utils/permissions';\nimport ImageEditor from './components/ImageEditor';\nimport ImageInfo from './components/ImageInfo';\n\nclass ImageView extends Component {\n  state = {\n    viewSizeChangeCounter: this.props.viewSizeChangeCounter,\n    isOverlayInfoOpen: false,\n    isImageInfoOpen: false,\n    canvasInitResize: false,\n    subscribedSource: undefined,\n  };\n\n  async componentDidMount() {\n    if (this.props.sourceImage) {\n      this.unsubscribeFromProductStream();\n      this.resubscribeToProductStream(this.props.sourceImage, this.props.overlays);\n    }\n\n    const { configuration, proxy } = this.props;\n    if (configuration?.objectSelectorImages?.size === 0) {\n      await configuration.setObjectSelectorImages(proxy.protobuf);\n    }\n    if (configuration?.idNameMappings?.size === 0) {\n      await configuration.setIdNameMappings(proxy.protobuf);\n    }\n    proxy.dispatchCurrentConfiguration(configuration);\n  }\n\n  componentDidUpdate(nextProps) {\n    this.updateViewSize(nextProps.viewSizeChangeCounter);\n\n    const oldVariables = this.getUsedVariablesFromOverlay(this.props.overlays);\n    const newVariables = this.getUsedVariablesFromOverlay(nextProps.overlays);\n    if (\n      !isEqual(oldVariables, newVariables) ||\n      (this.state.subscribedSource !== nextProps.sourceImage && nextProps.sourceImage)\n    ) {\n      this.resubscribeToProductStream(nextProps.sourceImage, nextProps.overlays);\n    }\n\n    if (this.props.isBrowserWindowVisible !== nextProps.isBrowserWindowVisible) {\n      if (nextProps.isBrowserWindowVisible) {\n        this.resubscribeToProductStream(this.props.sourceImage, this.props.overlays);\n      } else {\n        this.unsubscribeFromProductStream();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromProductStream();\n  }\n\n  updateViewSize = (newViewSizeChangeCounter) => {\n    if (\n      newViewSizeChangeCounter > this.state.viewSizeChangeCounter ||\n      this.state.viewSizeChangeCounter === undefined\n    ) {\n      this.setState({ viewSizeChangeCounter: newViewSizeChangeCounter });\n    }\n  };\n\n  resubscribeToProductStream = (imageId, overlays) => {\n    if (imageId) {\n      this.unsubscribeFromProductStream();\n      this.subscribeToProductStream(imageId, overlays);\n      this.setState({ subscribedSource: imageId });\n    }\n  };\n\n  subscribeToProductStream = (imageId, overlays) => {\n    if (!this.productSub) {\n      const { inspectionId } = this.props;\n      const startAtTriggerCount = -1; // image view can only show one item at a time\n      const imageIds = [imageId];\n      const valueIds = this.getUsedVariablesFromOverlay(overlays);\n      const desc = { inspectionId, imageIds, valueIds, startAtTriggerCount };\n      this.productSub = this.props.proxy.subscribeToProductStream(desc, this.onProduct);\n    }\n  };\n\n  unsubscribeFromProductStream = () => {\n    if (this.productSub) {\n      this.props.proxy.unsubscribeFromProductStream(this.productSub);\n      this.productSub = null;\n    }\n  };\n\n  getUsedVariablesFromOverlay = (overlays) => {\n    const variables = [];\n    overlays &&\n      overlays.forEach((overlay) => {\n        Object.keys(overlay).forEach((key) => {\n          if (key.indexOf('Variable') > -1 && overlay[key] && !variables.includes(overlay[key])) {\n            variables.push(overlay[key]);\n          }\n        });\n      });\n    return variables;\n  };\n\n  setAllOverlaysActive = (isActive) => {\n    const updatedOverlays = this.props.overlays.map((overlay) => ({\n      ...overlay,\n      isActive,\n    }));\n    this.props.setSharedStateData('overlays', updatedOverlays);\n    this.props.setSaveFlag(true);\n  };\n\n  createActiveOverlayList = (overlays) => overlays.filter((overlay) => overlay.isActive);\n\n  createActiveOverlayIdList = (overlays) => {\n    const activeOverlays = overlays.filter((overlay) => overlay.isActive);\n    return activeOverlays.map((overlay) => overlay.id);\n  };\n\n  onProduct = ({ product }) => {\n    const imageId = this.props.sourceImage;\n\n    this.setState({ imageId, product });\n    if (!this.state.canvasInitResize) {\n      this.setState({ canvasInitResize: true });\n    }\n  };\n\n  toggleOverlayInfo = () => {\n    this.setState({\n      isOverlayInfoOpen: !this.state.isOverlayInfoOpen,\n      isImageInfoOpen: false,\n    });\n  };\n\n  toggleImageInfo = () => {\n    this.setState({\n      isImageInfoOpen: !this.state.isImageInfoOpen,\n      isOverlayInfoOpen: false,\n    });\n  };\n\n  setSourceImageId = (id) => {\n    if (!id) {\n      logger.error(`OjectSelector did not return a valid id ${id}.`);\n      return;\n    }\n    this.props.setSharedStateData('sourceImage', id);\n  };\n\n  updateOverlayList = (updatedOverlayList) => {\n    this.props.setSharedStateData('overlays', updatedOverlayList);\n    this.props.setSaveFlag(true);\n  };\n\n  setTitleFromConfig = () => {\n    const { sourceImage, inspectionId, configuration } = this.props;\n    if (configuration) {\n      const path = configuration.getValueNameForId(inspectionId, sourceImage);\n      if (path) {\n        this.props.setViewData('windowName', path);\n      }\n    }\n  };\n\n  renderObjectSelector = () => {\n    const { configuration, inspectionId } = this.props;\n    if (!configuration || !inspectionId) {\n      return;\n    }\n\n    const images = configuration.getObjectSelectorImagesForInspection(inspectionId);\n\n    return (\n      <div style={{ width: '100%', overflow: 'auto' }}>\n        {images && (\n          <ObjectSelector\n            singleSelect\n            data={images.tree}\n            onChange={(selectedId, checkedLocation) => {\n              this.setSourceImageId(selectedId);\n              this.props.setViewData('windowName', checkedLocation);\n              this.props.setSaveFlag(true);\n            }}\n          />\n        )}\n      </div>\n    );\n  };\n\n  renderImageView = () => {\n    const { viewActions } = this.props;\n\n    return (\n      <div style={{ height: '100%', width: '100%' }}>\n        <div style={{ height: '100%', width: '100%' }}>{this.renderImageViewImpl()}</div>\n        <ActionBar isViewAction actions={viewActions(this)} />\n      </div>\n    );\n  };\n\n  renderImageViewImpl() {\n    const { product } = this.state;\n    if (!product || product.released) {\n      return <div>&lt;UNAVAILABLE&gt;</div>;\n    }\n\n    return [this.renderImageEditor(), this.renderImageInfo(), this.renderOverlayList()];\n  }\n\n  renderImageEditor() {\n    const { inspectionId, id } = this.props;\n    const { product, imageId, isImageInfoOpen } = this.state;\n\n    return (\n      <ImageEditor\n        ref={(ref) => {\n          this.imageEditor = ref;\n        }}\n        id={id}\n        inspectionId={inspectionId}\n        imageId={imageId}\n        product={product}\n        key={`ImageEditor${id}`}\n        isImageInfoOpen={isImageInfoOpen}\n      />\n    );\n  }\n\n  renderImageInfo() {\n    const { inspectionId, id } = this.props;\n    const { isImageInfoOpen } = this.state;\n\n    if (!isImageInfoOpen) {\n      return;\n    }\n\n    return (\n      <ImageInfo\n        id={id}\n        key={`ImageInfo${id}`}\n        inspectionId={inspectionId}\n        imageInfoClass={classNames({ 'info-box': true })}\n      />\n    );\n  }\n\n  renderOverlayList() {\n    const { overlays, id } = this.props;\n    const { isOverlayInfoOpen } = this.state;\n\n    if (!isOverlayInfoOpen) {\n      return;\n    }\n\n    return (\n      <div className={classNames({ 'info-box': true })} key={`OverlayList${id}`}>\n        <OverlayList\n          overlays={overlays}\n          updateOverlayList={this.updateOverlayList}\n          canSelectRow={false}\n          onSelectAll={(checked) => this.setAllOverlaysActive(checked)}\n          hasActionBar={false}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { sourceImage, myPermissions } = this.props;\n\n    this.setTitleFromConfig();\n\n    if (canReadImageView(myPermissions) || canEditImageView(myPermissions)) {\n      return (\n        <div className=\"image-view-wrapper\">\n          {sourceImage ? this.renderImageView() : this.renderObjectSelector()}\n        </div>\n      );\n    }\n\n    return <div></div>;\n  }\n}\n\nImageView.defaultProps = {\n  viewActions: (imageView) => {\n    const canEdit = canEditImageView(imageView.props.myPermissions);\n    const canRead = canReadImageView(imageView.props.myPermissions);\n    const actions = [\n      {\n        intlId: 'imageView.zoomOut',\n        iconUrl: iconOne,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.resetZoom();\n          }\n        },\n        enabled: canEdit,\n      },\n      {\n        intlId: 'imageView.fitToWidth',\n        iconUrl: iconFitToWidth,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.fitToWidth();\n          }\n        },\n        enabled: canEdit,\n      },\n      {\n        intlId: 'imageView.fitToHeight',\n        iconUrl: iconFitToHeight,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.fitToHeight();\n          }\n        },\n        enabled: canEdit,\n      },\n      {\n        type: SEPARATOR,\n      },\n      {\n        intlId: 'imageView.save',\n        iconUrl: iconDownload,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.downloadOriginalImage();\n          }\n        },\n        enabled: canRead || canEdit,\n      },\n      {\n        intlId: 'imageView.saveWithOverlays',\n        iconUrl: iconDownloadWithOverlays,\n        onClickHandler: () => {\n          if (imageView.imageEditor) {\n            imageView.imageEditor.downloadOriginalImageWithOverlays();\n          }\n        },\n        enabled: canRead || canEdit,\n      },\n      {\n        type: SEPARATOR,\n      },\n      {\n        intlId: 'imageView.overlayListToggle',\n        iconUrl: iconOverlayList,\n        onClickHandler: () => {\n          imageView.toggleOverlayInfo();\n        },\n        enabled: canRead || canEdit,\n      },\n      {\n        intlId: 'imageView.imageInfoToggle',\n        iconUrl: iconInfo,\n        onClickHandler: () => {\n          imageView.toggleImageInfo();\n        },\n        enabled: canRead || canEdit,\n      },\n    ];\n\n    return actions;\n  },\n  overlayActions: () => [],\n  inRunMode: false,\n  currentMode: undefined,\n  proxy: undefined,\n  rgbValues: { R: 0, G: 0, B: 0 },\n  cursorPosition: { width: 0, height: 0 },\n};\n\nImageView.propTypes = {\n  viewActions: ActionBarType,\n  overlayActions: ActionBarType,\n  currentMode: PropTypes.string,\n  viewSizeChangeCounter: PropTypes.number,\n  overlays: PropTypes.array, //eslint-disable-line\n  proxy: ProxyType,\n  sourceImage: PropTypes.number,\n};\n\nconst initState = {\n  scaleFactor: 0,\n  rgbValues: { R: 0, G: 0, B: 0 },\n  imageDimensions: { width: 0, height: 0 },\n  cursorPosition: { x: 0, y: 0 },\n};\n\nconst initSharedState = {\n  overlays: [],\n  sourceImage: 0,\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  dispatch(initViewState(inspectionId, viewId, initState, initSharedState));\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    setSharedStateData: (key, data) =>\n      dispatch(setSharedStateData(inspectionId, key, data, viewId)),\n    addImageNotAvailableNotification: () => dispatch(addImageNotAvailableNotification()),\n    setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n  };\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id: viewId } = ownProps;\n  const result = {\n    proxy: state.app.proxy,\n    configuration: state.app.configuration,\n    currentMode: state.app.currentMode,\n    viewSizeChangeCounter: state.viewSet.viewSizeChangeCounter,\n    myPermissions: state.app.myPermissions,\n    isBrowserWindowVisible: state.app.isBrowserWindowVisible,\n  };\n\n  try {\n    return {\n      ...result,\n      overlays: state.inspections[inspectionId].sharedState?.views[viewId].overlays,\n      sourceImage: Number(state.inspections[inspectionId].sharedState?.views[viewId].sourceImage),\n    };\n  } catch (error) {\n    return result;\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageView);\n","export default __webpack_public_path__ + \"static/media/show-off.8787321d.svg\";","export default __webpack_public_path__ + \"static/media/drag.a4b2fa8c.svg\";","import React from 'react';\nimport Table, { callOrReturn } from 'react-base-table';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\n\nimport DragIcon from '../../assets/icons/drag.svg';\n\nimport './style.css';\n\nconst DraggableContainer = sortableContainer(({ children }) => children);\nconst DraggableElement = sortableElement(({ children }) => children);\nconst DraggableHandle = sortableHandle(({ children }) => children);\n\nconst Row = ({ key, index, children, draggable, ...rest }) => {\n  if (!draggable) {\n    return <div {...rest}>{children}</div>;\n  }\n\n  return (\n    <DraggableElement key={key} index={index}>\n      <div {...rest}>\n        <DraggableHandle>\n          <div className=\"draggable-table-handle\">\n            <img src={DragIcon} alt=\"Drag\" />\n          </div>\n        </DraggableHandle>\n        {children}\n      </div>\n    </DraggableElement>\n  );\n};\n\nclass DraggableTable extends React.PureComponent {\n  state = {\n    data: this.props.data,\n  };\n\n  table = React.createRef();\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      const data = [...this.props.data];\n      this.setState({ data });\n    }\n  }\n\n  getContainer = () => {\n    return this.table.current.getDOMNode().querySelector('.BaseTable__body');\n  };\n\n  getHelperContainer = () => {\n    return this.table.current.getDOMNode().querySelector('.BaseTable__table');\n  };\n\n  rowProps = (args) => {\n    const extraProps = callOrReturn(this.props.rowProps);\n    return {\n      ...extraProps,\n      draggable: this.props.draggable,\n      tagName: Row,\n      index: args.rowIndex,\n    };\n  };\n\n  handleSortEnd = ({ oldIndex, newIndex }) => {\n    this.props.onSequenceChange(oldIndex, newIndex);\n    const data = [...this.state.data];\n    const [removed] = data.splice(oldIndex, 1);\n    data.splice(newIndex, 0, removed);\n    this.setState({ data });\n  };\n\n  render() {\n    if (!this.props.draggable) {\n      return (\n        <Table {...this.props} ref={this.table} data={this.state.data} rowProps={this.rowProps} />\n      );\n    }\n\n    return (\n      <DraggableContainer\n        useDragHandle\n        getContainer={this.getContainer}\n        helperContainer={this.getHelperContainer}\n        onSortEnd={this.handleSortEnd}\n      >\n        <Table\n          {...this.props}\n          ref={this.table}\n          data={this.state.data}\n          rowProps={this.rowProps}\n          className=\"draggable\"\n        />\n      </DraggableContainer>\n    );\n  }\n}\n\nDraggableTable.defaultProps = {\n  draggable: true,\n};\n\nexport default DraggableTable;\n","import React, { useState, useRef } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport Dialog from '../../../../components/Dialog';\nimport { languages } from '../../../../translations';\nimport './styles.scss';\n\nconst AliasEditor = ({ open, onClose, selectedAlias, intl }) => {\n  if (!selectedAlias.alias) {\n    selectedAlias.alias = {};\n  }\n\n  const oldState = useRef({ ...selectedAlias.alias });\n  const [alias, setAlias] = useState(selectedAlias || {});\n\n  if (alias.id !== selectedAlias.id) {\n    setAlias(selectedAlias);\n  }\n\n  const renderLanguageAliases = () => {\n    const result = [];\n    (languages || []).forEach((language) => {\n      result.push(\n        <div className=\"row\" key={`rowDiv${language.locale}${selectedAlias.id}`}>\n          <div className=\"label\">Alias {language.name}:</div>\n          <div className=\"textfield\">\n            <TextField\n              id={`aliasLabel${language.locale}`}\n              fullWidth\n              defaultValue={selectedAlias.alias && selectedAlias.alias[language.locale]}\n              onChange={(e) => {\n                alias.alias[language.locale] = e.target.value;\n              }}\n            />\n          </div>\n        </div>,\n      );\n    });\n    return result;\n  };\n\n  return (\n    <Dialog\n      isInView\n      isPopup\n      title={intl.messages['listView.AliasEditor.title']}\n      onClose={() => {\n        alias.alias = oldState.current;\n        onClose(alias);\n      }}\n      open={open}\n    >\n      <div className=\"alias-editor-wrapper\">\n        <div className=\"row\">\n          <div className=\"label\">\n            <FormattedMessage id=\"listView.AliasEditor.dottedName\" />:\n          </div>\n          <div className=\"textfield\">\n            <TextField id=\"dottedNameLabel\" fullWidth value={selectedAlias.name} disabled />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"label\">\n            <FormattedMessage id=\"listView.AliasEditor.value\" />:\n          </div>\n          <div className=\"textfield\">\n            <TextField id=\"valueLabel\" fullWidth disabled value={selectedAlias.value} />\n          </div>\n        </div>\n        {renderLanguageAliases()}\n        <div className=\"buttons\">\n          <Button variant=\"contained\" color=\"primary\" onClick={() => onClose(alias, true)}>\n            <FormattedMessage id=\"listView.AliasEditor.button\" />\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default injectIntl(AliasEditor);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AutoResizer } from 'react-base-table';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport 'react-base-table/styles.css';\n\nimport EditIcon from '../../assets/icons/edit.svg';\nimport iconList from '../../assets/icons/overlay-list.svg';\nimport iconShowOff from '../../assets/icons/show-off.svg';\nimport iconShow from '../../assets/icons/show.svg';\nimport ActionBar from '../../components/ActionBar';\nimport DraggableTable from '../../components/DraggableTable';\nimport ObjectSelector from '../../components/ObjectSelector';\nimport ProxyType from '../../components/Protobuf/ProxyType';\nimport IconButton from '../../components/buttons/IconButton';\nimport {\n  initViewState,\n  setViewData,\n  setSharedStateData,\n  setSaveFlag,\n  updateListViewShowAliases,\n} from '../../redux/actions/index';\nimport ActionBarType, { TOGGLE_BUTTON } from '../../types/ActionBarType';\nimport logger from '../../utils/logger';\nimport { canReadListView, canEditListView } from '../../utils/permissions';\n\nimport AliasEditor from './components/List/AliasEditor';\n\nimport './style.scss';\n\nclass ListView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listValues: [],\n      expandedKeys: [],\n      isAliasEditorOpen: false,\n      selectedAlias: {},\n      showAliases: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.unsubscribeFromProductStream();\n    if (!this.props.isSelectionMode && this.props.selection.length > 0) {\n      this.subscribeToProductStream();\n    }\n\n    if (this.props.showAliasesInList) {\n      this.setState({ showAliases: true });\n    }\n\n    const { configuration, proxy } = this.props;\n    if (configuration && proxy) {\n      if (configuration.objectSelectorItems?.size === 0) {\n        await configuration.setObjectSelectorItems(proxy.protobuf);\n      }\n      if (configuration.idNameMappings?.size === 0) {\n        await configuration.setIdNameMappings(proxy.protobuf);\n      }\n      proxy.dispatchCurrentConfiguration(configuration);\n    }\n  }\n\n  componentDidUpdate(nextProps) {\n    this.unsubscribeFromProductStream();\n    if (!nextProps.isSelectionMode && nextProps.selection.length > 0) {\n      this.subscribeToProductStream();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromProductStream();\n  }\n\n  subscribeToProductStream() {\n    if (!this.productSub) {\n      const { inspectionId, selection } = this.props;\n      const startAtTriggerCount = -1; // list view can only show one item at a time\n      const desc = { inspectionId, valueIds: selection, startAtTriggerCount };\n      this.productSub = this.props.proxy.subscribeToProductStream(desc, this.onProduct.bind(this));\n    }\n  }\n\n  unsubscribeFromProductStream() {\n    if (this.productSub) {\n      this.props.proxy.unsubscribeFromProductStream(this.productSub);\n      this.productSub = null;\n    }\n  }\n\n  onProduct({ product }) {\n    const listValues = this.createListValues(product);\n    this.setState({ listValues });\n    return Promise.resolve();\n  }\n\n  createListValues(product) {\n    const { configuration, inspectionId, selection } = this.props;\n    const values = product.getValuesAsString(selection);\n    return values.map((entry) => ({\n      ...entry,\n      name: configuration.getValueNameForId(inspectionId, entry.id) || '',\n    }));\n  }\n\n  setAliasColumnVisibility = (visibility) => {\n    this.props.updateListViewShowAliases(visibility);\n    this.props.setSaveFlag(true);\n    this.setState({ showAliases: visibility });\n  };\n\n  saveNewOrder = (before, after) => {\n    const { selection } = this.props;\n    const [removed] = selection.splice(before, 1);\n    selection.splice(after, 0, removed);\n    this.props.setViewData('selection', selection);\n    this.props.setSaveFlag(true);\n  };\n\n  renderValueSelector = () => {\n    const { configuration, inspectionId, selection } = this.props;\n\n    if (!configuration || !inspectionId) {\n      return;\n    }\n\n    const items = configuration.getObjectSelectorItemsForInspection(inspectionId);\n    if (!items) {\n      return <div style={{ width: '100%', overflow: 'auto', height: '100%' }}></div>;\n    }\n\n    let tree = items.tree;\n    tree = configuration.filterArrayValuesFromTree(tree);\n\n    const filterIgnore = [];\n    const name = configuration.getInspectionName(inspectionId);\n\n    filterIgnore.push(`Inspections.${name}`);\n    filterIgnore.push(`Inspections${name}`);\n    filterIgnore.push(name);\n\n    return (\n      <div style={{ width: '100%', overflow: 'auto', height: '100%' }}>\n        <ObjectSelector\n          data={tree}\n          onChange={(selectedIds) => {\n            this.props.setViewData('selection', selectedIds);\n            this.props.setSaveFlag(true);\n          }}\n          onExpand={(expandedKeys) => this.setState({ expandedKeys })}\n          selection={selection}\n          expandedKeys={this.state.expandedKeys}\n          filterIgnore={filterIgnore}\n        />\n      </div>\n    );\n  };\n\n  renderList = () => {\n    const { intl, locale, myPermissions } = this.props;\n    const { showAliases } = this.state;\n    const data = this.getListData();\n    const columns = [\n      {\n        key: showAliases ? 'Alias/Name' : 'Name',\n        dataKey: 'name',\n        title: showAliases ? (\n          <FormattedMessage id=\"listView.aliasName\" />\n        ) : (\n          <FormattedMessage id=\"listView.name\" />\n        ),\n        width: 0,\n        flexGrow: 2,\n      },\n      {\n        key: 'Values',\n        dataKey: 'value',\n        title: <FormattedMessage id=\"listView.values\" />,\n        width: 0,\n        flexGrow: 1,\n      },\n    ];\n\n    if (canEditListView(myPermissions)) {\n      columns.push({\n        key: '',\n        dataKey: 'editAlias',\n        title: '',\n        width: 50,\n      });\n    }\n\n    const tableData = data.map((row) => {\n      row.name = showAliases ? (row.alias && row.alias[locale]) || row.name : row.name;\n      return {\n        ...row,\n        editAlias: (\n          <IconButton\n            tooltip={intl.messages['listView.AliasEditor.title']}\n            onClick={() => this.setState({ selectedAlias: row, isAliasEditorOpen: true })}\n            iconUrl={EditIcon}\n            key=\"editAlias\"\n          />\n        ),\n      };\n    });\n\n    return (\n      <div style={{ height: '100%' }}>\n        <AutoResizer>\n          {({ width, height }) => (\n            <DraggableTable\n              columns={columns}\n              data={tableData}\n              width={width}\n              height={height}\n              headerHeight={30}\n              rowHeight={30}\n              onSequenceChange={(before, after) => this.saveNewOrder(before, after)}\n            />\n          )}\n        </AutoResizer>\n        {this.renderAliasEditor()}\n      </div>\n    );\n  };\n\n  renderAliasEditor = () => {\n    const { selectedAlias, listValues, isAliasEditorOpen } = this.state;\n    const currentValueObject = (listValues || []).find((value) => value.id === selectedAlias.id);\n\n    if (!currentValueObject || !isAliasEditorOpen) {\n      return;\n    }\n\n    return (\n      <AliasEditor\n        onClose={(alias, isSaved = false) => this.closeAliasEditor(alias, isSaved)}\n        open={this.state.isAliasEditorOpen}\n        selectedAlias={currentValueObject}\n      />\n    );\n  };\n\n  getListData = () => {\n    const { aliases } = this.props;\n    const data = this.state.listValues;\n\n    if (aliases) {\n      (data || []).map((entry) => {\n        if (aliases.has(entry.id)) {\n          const alias = aliases.get(entry.id);\n          if (!alias) {\n            logger.error(`Could not load alias for objectId ${entry.id}`);\n            return entry;\n          }\n\n          if (!alias.alias) {\n            logger.info(`There is no alias value stored for ${alias.dottedName}.`);\n            return entry;\n          }\n\n          entry.alias = alias.alias;\n        }\n        return entry;\n      });\n    }\n    return data;\n  };\n\n  closeAliasEditor = (alias, isSaved) => {\n    if (alias) {\n      const { aliases } = this.props;\n\n      Object.keys(alias.alias).forEach((language) => {\n        if (alias.alias[language] === '') {\n          delete alias.alias[language];\n        }\n      });\n\n      const isEmpty = Object.keys(alias.alias).length === 0;\n      if (aliases.has(alias.id)) {\n        const newAlias = aliases.get(alias.id);\n        newAlias.alias = alias.alias;\n\n        if (isEmpty) {\n          aliases.delete(alias.id);\n        } else {\n          aliases.set(alias.id, newAlias);\n        }\n      } else {\n        if (!isEmpty) {\n          aliases.set(alias.id, { objectId: alias.id, dottedName: alias.name, alias: alias.alias });\n        }\n      }\n    }\n\n    this.setState({ isAliasEditorOpen: false });\n    if (isSaved) {\n      this.props.setSaveFlag(true);\n    }\n  };\n\n  render() {\n    const { viewActions, isSelectionMode, myPermissions } = this.props;\n    const canEdit = canEditListView(myPermissions);\n\n    if (canReadListView(myPermissions) || canEdit) {\n      return (\n        <div className=\"list-view-wrapper\">\n          {isSelectionMode && canEdit ? this.renderValueSelector() : this.renderList()}\n          <ActionBar isViewAction actions={viewActions(this)} />\n        </div>\n      );\n    }\n\n    return <div></div>;\n  }\n}\n\nListView.defaultProps = {\n  viewActions: (listView) => {\n    const actions = [\n      {\n        intlId: 'listView.save',\n        iconUrl: iconList,\n        onClickHandler: () => {\n          listView.props.setViewData('isSelectionMode', !listView.props.isSelectionMode);\n          listView.props.setSaveFlag(true);\n        },\n        enabled: canEditListView(listView.props.myPermissions),\n      },\n      {\n        type: TOGGLE_BUTTON,\n        id: listView.props.inspectionId,\n        intlId: 'listView.Actionbar.showAliases',\n        iconUrl: iconShow,\n        onClickHandler: () => {\n          listView.setAliasColumnVisibility(true);\n        },\n        intlIdAlternative: 'listView.Actionbar.hideAliases',\n        iconUrlAlternative: iconShowOff,\n        onClickHandlerAlternative: () => {\n          listView.setAliasColumnVisibility(false);\n        },\n        showAlternative: listView.props.showAliasesInList,\n      },\n    ];\n\n    return actions;\n  },\n  currentMode: undefined,\n  proxy: undefined,\n  isSelectionMode: true,\n  inspections: {},\n  selection: [],\n};\n\nListView.propTypes = {\n  viewActions: ActionBarType.isRequired,\n  currentMode: PropTypes.string,\n  proxy: ProxyType,\n  inspections: PropTypes.object,\n  selection: PropTypes.array,\n  isSelectionMode: PropTypes.bool,\n};\n\nconst initState = {\n  selection: [],\n  isSelectionMode: true,\n};\n\nconst initSharedState = {};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  dispatch(initViewState(inspectionId, viewId, initState, initSharedState));\n  return {\n    setViewData: (key, data) => dispatch(setViewData(inspectionId, viewId, key, data)),\n    setSharedStateData: (key, data) => dispatch(setSharedStateData(inspectionId, key, data)),\n    updateListViewShowAliases: (show) => dispatch(updateListViewShowAliases(inspectionId, show)),\n    setSaveFlag: (hasChanges) => dispatch(setSaveFlag(hasChanges)),\n  };\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { inspectionId, id } = ownProps;\n  const viewId = id;\n  try {\n    return {\n      proxy: state.app.proxy,\n      configuration: state.app.configuration,\n      currentMode: state.app.currentMode,\n      selection: state.inspections[inspectionId].views[viewId].selection,\n      isSelectionMode: state.inspections[inspectionId].views[viewId].isSelectionMode,\n      aliases: state.inspections[inspectionId].sharedState?.listViewAliases,\n      showAliasesInList: state.inspections[inspectionId].sharedState?.showAliasesInList,\n      locale: state.app.locale,\n      myPermissions: state.app.myPermissions,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(ListView));\n","export default __webpack_public_path__ + \"static/media/delete-dustbin.8c1d9e0c.svg\";","import { ReactElement, useEffect } from 'react';\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { MuiThemeProvider, createTheme, makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ClearIcon from '../../../../assets/icons/clear.svg';\nimport { OutlinedSelection } from '../../../../components/OutlinedSelection';\nimport Configuration from '../../../../protobuf/Configuration';\nimport type Proxy from '../../../../protobuf/Proxy';\nimport { setSaveFlag } from '../../../../redux/actions';\nimport { canEditParameterView } from '../../../../utils/permissions';\nimport { OverlaySchema } from '../../../../utils/reduxHelper';\n\nconst useStyles = makeStyles(() => ({\n  header: {\n    fontSize: '1.8rem',\n    fontWeight: 'bold',\n    marginBottom: 30,\n  },\n  input: {\n    height: 37,\n    fontSize: '1.4rem',\n  },\n  label: {\n    fontSize: '1.4rem',\n    transform: 'translate(14px, 11px) scale(1)',\n  },\n}));\n\nconst theme = createTheme({\n  typography: {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    //@ts-ignore\n    useNextVariants: true,\n    htmlFontSize: 10,\n  },\n});\n\ninterface OverlayPropertyListProps {\n  inspectionId: string;\n  viewId: string;\n  currentOverlay: OverlaySchema;\n  imageDimensions?: { width: number; height: number };\n  onChange: (changedValue: Partial<OverlaySchema>) => void;\n  openSelection: (variableName: any, variableId: keyof OverlaySchema) => void;\n}\n\nexport const OverlayPropertyList = ({\n  inspectionId,\n  currentOverlay,\n  imageDimensions,\n  onChange,\n  openSelection,\n}: OverlayPropertyListProps) => {\n  const proxy = useSelector<any>((state) => state.app?.proxy) as Proxy;\n  const configuration = useSelector<any>((state) => state.app?.configuration) as Configuration;\n  const myPermissions = useSelector<any>((state) => state.app?.myPermissions) as Set<string>;\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (configuration.idNameMappings.size === 0) {\n      configuration.setIdNameMappings(proxy.protobuf).then(() => {\n        proxy.dispatchCurrentConfiguration(configuration);\n      });\n    }\n  }, [configuration, proxy]);\n\n  const imageWidth = imageDimensions?.width ?? 0;\n  const imageHeight = imageDimensions?.height ?? 0;\n\n  const minWidth = Number(-imageWidth * 2);\n  const maxWidth = Number(imageWidth * 2);\n\n  const minHeight = Number(-imageHeight * 2);\n  const maxHeight = Number(imageHeight * 2);\n\n  const canEdit = canEditParameterView(myPermissions);\n\n  const handleChange = (changedValue: Partial<OverlaySchema>) => {\n    dispatch(setSaveFlag(true));\n    onChange(changedValue);\n  };\n\n  type CommonFieldProps = {\n    name: ReactElement;\n    id: keyof OverlaySchema;\n    disabled: boolean;\n  };\n\n  const renderTextField = ({ name, id, disabled }: CommonFieldProps) => {\n    return (\n      <TextField\n        label={name}\n        style={{ width: '100%' }}\n        id={id}\n        type=\"text\"\n        variant=\"outlined\"\n        disabled={disabled || !currentOverlay}\n        InputProps={{ classes: { input: classes.input } }}\n        InputLabelProps={{ classes: { root: classes.label } }}\n        value={(currentOverlay && currentOverlay[id]) || ''}\n        onChange={(e) => handleChange({ [id]: e.target.value })}\n      />\n    );\n  };\n\n  const renderNumberField = ({\n    name,\n    id,\n    min,\n    max,\n    disabled,\n  }: CommonFieldProps & { min: number; max: number }) => {\n    const value = (currentOverlay && currentOverlay[id]) || '';\n    const trimToMinMax = (min: number, max: number, value: string) => {\n      let valueNumber = Number(value);\n      if (valueNumber > max) {\n        valueNumber = max;\n      }\n      if (valueNumber < min) {\n        valueNumber = min;\n      }\n\n      return valueNumber;\n    };\n    return (\n      <TextField\n        label={name}\n        style={{ width: '100%' }}\n        id={id}\n        type=\"number\"\n        variant=\"outlined\"\n        disabled={disabled || !currentOverlay}\n        InputProps={{\n          classes: { input: classes.input },\n          inputProps: { min, max },\n        }}\n        InputLabelProps={{ classes: { root: classes.label } }}\n        value={value}\n        onChange={(e) => handleChange({ [id]: trimToMinMax(min, max, e.target.value) })}\n      />\n    );\n  };\n\n  const renderSelection = ({\n    name,\n    id,\n    options,\n    disabled,\n  }: CommonFieldProps & { options: string[] }) => {\n    return (\n      <OutlinedSelection\n        selectedValue={currentOverlay && currentOverlay[id]}\n        values={options}\n        onSelectionChanged={handleChange}\n        name={name}\n        id={id}\n        disabled={disabled || !currentOverlay}\n      />\n    );\n  };\n\n  const renderObjectSelector = ({ name, id, disabled }: CommonFieldProps) => {\n    const value =\n      (currentOverlay &&\n        currentOverlay[id] &&\n        configuration.getValueNameForId(inspectionId, currentOverlay[id])) ||\n      '';\n\n    return (\n      <TextField\n        label={name}\n        style={{ width: '100%' }}\n        id={id}\n        type=\"text\"\n        variant=\"outlined\"\n        disabled={disabled || !currentOverlay}\n        InputProps={{\n          classes: { input: classes.input },\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"clear\"\n                onClick={() => handleChange({ [id]: '' })}\n                title={id}\n              >\n                <img src={ClearIcon} alt=\"x\" />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{ classes: { root: classes.label } }}\n        value={value}\n        onFocus={() => openSelection(name, id)}\n      />\n    );\n  };\n\n  return (\n    <div className=\"parameter-view-overlay-overlaypropertylist\">\n      <MuiThemeProvider theme={theme}>\n        <label className={classes.header}>\n          <FormattedMessage id=\"parameterview.overlay.parameters\" />\n        </label>\n        {renderTextField({\n          name: <FormattedMessage id=\"parameterview.overlay.label\" />,\n          id: 'label',\n          disabled: !canEdit,\n        })}\n\n        {renderNumberField({\n          name: <FormattedMessage id=\"parameterview.overlay.x\" />,\n          id: 'x',\n          min: minWidth,\n          max: maxWidth,\n          disabled: !canEdit,\n        })}\n        {renderObjectSelector({\n          name: <FormattedMessage id=\"parameterview.overlay.xVariable\" />,\n          id: 'xVariable',\n          disabled: !canEdit,\n        })}\n\n        {renderNumberField({\n          name: <FormattedMessage id=\"parameterview.overlay.offsetLeft\" />,\n          id: 'offsetLeft',\n          min: minWidth,\n          max: maxWidth,\n          disabled: !canEdit,\n        })}\n        {renderObjectSelector({\n          name: <FormattedMessage id=\"parameterview.overlay.offsetLeftVariable\" />,\n          id: 'offsetLeftVariable',\n          disabled: !canEdit,\n        })}\n\n        {renderNumberField({\n          name: <FormattedMessage id=\"parameterview.overlay.y\" />,\n          id: 'y',\n          min: minHeight,\n          max: maxHeight,\n          disabled: !canEdit,\n        })}\n        {renderObjectSelector({\n          name: <FormattedMessage id=\"parameterview.overlay.yVariable\" />,\n          id: 'yVariable',\n          disabled: !canEdit,\n        })}\n\n        {renderNumberField({\n          name: <FormattedMessage id=\"parameterview.overlay.offsetTop\" />,\n          id: 'offsetTop',\n          min: minHeight,\n          max: maxHeight,\n          disabled: !canEdit,\n        })}\n        {renderObjectSelector({\n          name: <FormattedMessage id=\"parameterview.overlay.offsetTopVariable\" />,\n          id: 'offsetTopVariable',\n          disabled: !canEdit,\n        })}\n\n        {renderNumberField({\n          name: <FormattedMessage id=\"parameterview.overlay.width\" />,\n          id: 'width',\n          min: minWidth,\n          max: maxWidth,\n          disabled: !canEdit,\n        })}\n        {renderObjectSelector({\n          name: <FormattedMessage id=\"parameterview.overlay.widthVariable\" />,\n          id: 'widthVariable',\n          disabled: !canEdit,\n        })}\n\n        {renderNumberField({\n          name: <FormattedMessage id=\"parameterview.overlay.height\" />,\n          id: 'height',\n          min: minHeight,\n          max: maxHeight,\n          disabled: !canEdit,\n        })}\n        {renderObjectSelector({\n          name: <FormattedMessage id=\"parameterview.overlay.heightVariable\" />,\n          id: 'heightVariable',\n          disabled: !canEdit,\n        })}\n        {renderTextField({\n          name: <FormattedMessage id=\"parameterview.overlay.color\" />,\n          id: 'color',\n          disabled: !canEdit,\n        })}\n        {renderObjectSelector({\n          name: <FormattedMessage id=\"parameterview.overlay.colorVariable\" />,\n          id: 'colorVariable',\n          disabled: !canEdit,\n        })}\n\n        {renderSelection({\n          name: <FormattedMessage id=\"parameterview.overlay.lineStyle\" />,\n          id: 'lineStyle',\n          options: ['solid', 'dotted', 'dashed'],\n          disabled: !canEdit,\n        })}\n      </MuiThemeProvider>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Dialog from '../../../../components/Dialog';\nimport ObjectSelector, { TreeNodeSchema } from '../../../../components/ObjectSelector';\nimport Configuration from '../../../../protobuf/Configuration';\nimport type Proxy from '../../../../protobuf/Proxy';\n\ninterface VariableSelectionProps {\n  inspectionId: string;\n  open: boolean;\n  onClose?: (selectedId?: React.Key | React.Key[]) => void;\n  title?: string;\n}\n\nexport const VariableSelection = ({\n  inspectionId,\n  open,\n  onClose,\n  title = '',\n}: VariableSelectionProps) => {\n  const proxy = useSelector<any>((state) => state.app?.proxy) as Proxy;\n  const configuration = useSelector<any>((state) => state.app?.configuration) as Configuration;\n\n  const [tree, setTree] = useState<TreeNodeSchema | null>(null);\n  const [filterIgnore, setFilterIgnore] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (configuration.objectSelectorItems?.size === 0) {\n      configuration.setObjectSelectorItems(proxy.protobuf).then(() => {\n        proxy.dispatchCurrentConfiguration(configuration);\n      });\n    }\n  }, [configuration, proxy]);\n\n  useEffect(() => {\n    const items = configuration.getObjectSelectorItemsForInspection(inspectionId);\n    if (!items) {\n      return;\n    }\n\n    let tree: TreeNodeSchema = items.tree;\n    tree = configuration.filterArrayValuesFromTree(tree);\n\n    setTree(tree);\n\n    setFilterIgnore(() => {\n      const filterIgnore: string[] = [];\n      const name = configuration.getInspectionName(inspectionId);\n\n      filterIgnore.push(`Inspections.${name}`);\n      filterIgnore.push(`Inspections${name}`);\n      filterIgnore.push(name);\n\n      return filterIgnore;\n    });\n  }, [configuration, inspectionId]);\n\n  if (!configuration || !inspectionId || !tree) {\n    return null;\n  }\n\n  return (\n    <Dialog isInView isPopup title={title} onClose={onClose} open={open}>\n      <div className=\"objectselector-in-dialog-wrapper\">\n        <ObjectSelector\n          singleSelect\n          data={tree}\n          onChange={(selectedId) => onClose?.(selectedId)}\n          filterIgnore={filterIgnore}\n        />\n      </div>\n    </Dialog>\n  );\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport iconDeleteDustbin from '../../../../assets/icons/delete-dustbin.svg';\nimport iconPlus from '../../../../assets/icons/plus.svg';\nimport ActionBar, { ActionBarType } from '../../../../components/ActionBar/index';\nimport { OverlayList } from '../../../../components/OverlayList';\nimport { initViewState, setSharedStateData, setSaveFlag } from '../../../../redux/actions';\n\nimport logger from '../../../../utils/logger';\nimport { canEditParameterView } from '../../../../utils/permissions';\nimport { OverlaySchema, updateOverlayList } from '../../../../utils/reduxHelper';\nimport { OverlayPropertyList } from './OverlayPropertyList';\nimport { VariableSelection } from './VariableSelection';\n\nimport './style.scss';\n\ninterface OverlayProps {\n  id: string;\n  inspectionId: string;\n}\n\nexport const Overlay = ({ id: viewId, inspectionId }: OverlayProps) => {\n  const myPermissions = useSelector<any>((state) => state.app?.myPermissions) as Set<string>;\n  const inspections = useSelector<any>((state) => state.inspections) as any;\n  const dispatch = useDispatch();\n\n  const [currentOverlay, setCurrentOverlay] = useState<OverlaySchema | undefined>(undefined);\n  const [isObjectSelectorOpen, setIsObjectSelectorOpen] = useState(false);\n  const [variableName, setVariableName] = useState('Variables');\n  const [variableId, setVariableId] = useState<keyof OverlaySchema | ''>('');\n  const [selectedVariables, setSelectedVariables] = useState<(React.Key | React.Key[])[]>([]);\n\n  useEffect(() => {\n    dispatch(initViewState(inspectionId, viewId, {}, {}));\n  }, [dispatch, inspectionId, viewId]);\n\n  const [editingViewId, overlays, imageDimensions] = useMemo(() => {\n    const editingViewId = inspections[inspectionId]?.sharedState?.editingViewId;\n    const overlays: OverlaySchema[] =\n      inspections[inspectionId]?.sharedState?.views[editingViewId]?.overlays;\n    const imageDimensions: { width: number; height: number } =\n      inspections[inspectionId]?.views[editingViewId]?.imageDimensions;\n\n    return [editingViewId, overlays, imageDimensions];\n  }, [inspectionId, inspections]);\n\n  useEffect(() => {\n    if (overlays && currentOverlay) {\n      const overlay = overlays.find((item) => item.id === currentOverlay.id);\n      if (overlay && overlay !== currentOverlay) {\n        setCurrentOverlay(overlay);\n      }\n    }\n\n    if (!currentOverlay && overlays?.length > 0) {\n      setCurrentOverlay(overlays[0]);\n    }\n  }, [currentOverlay, overlays, editingViewId]);\n\n  useEffect(() => {\n    setCurrentOverlay(overlays?.[0]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editingViewId]);\n\n  const overlayActions = useMemo(() => {\n    const addNewOverlay = () => {\n      const newOverlay: OverlaySchema = {\n        color: '#ebfc02',\n        height: 100,\n        id: Math.floor(Math.random() * 10000),\n        isActive: true,\n        label: 'Overlay',\n        lineStyle: 'solid',\n        width: 100,\n        x: 10,\n        y: 20,\n        offsetLeft: null,\n        offsetTop: null,\n      };\n      try {\n        dispatch(setSharedStateData(inspectionId, 'overlays', [...overlays, newOverlay]));\n        setCurrentOverlay(newOverlay);\n      } catch (e) {\n        logger.error(e instanceof Error ? e.message : String(e));\n      }\n    };\n\n    const getNeighborOverlayId = (id: number, overlays: OverlaySchema[]) => {\n      for (let i = 0; i < overlays.length; i++) {\n        if (overlays[i]['id'] === id) {\n          if (overlays[i - 1]) {\n            return overlays[i - 1]['id'];\n          } else if (overlays[i + 1]) {\n            return overlays[i + 1]['id'];\n          }\n        }\n      }\n      return -1;\n    };\n\n    const deleteCurrentOverlay = () => {\n      if (!currentOverlay) {\n        return;\n      }\n\n      try {\n        const updatedOverlays = overlays.filter((overlay) => overlay.id !== currentOverlay.id);\n        dispatch(setSharedStateData(inspectionId, 'overlays', updatedOverlays));\n\n        const newCurrentOverlay = getNeighborOverlayId(currentOverlay.id, overlays);\n        setCurrentOverlay(overlays.filter((item) => item.id === newCurrentOverlay)[0]);\n      } catch (e) {\n        logger.error(e instanceof Error ? e.message : String(e));\n      }\n    };\n\n    const canEdit = canEditParameterView(myPermissions);\n    const actions: ActionBarType[] = [\n      {\n        intlId: 'parameterview.overlay.add',\n        iconUrl: iconPlus,\n        onClickHandler: () => {\n          dispatch(setSaveFlag(true));\n          addNewOverlay();\n        },\n        enabled: canEdit,\n      },\n      {\n        intlId: 'parameterview.overlay.delete',\n        iconUrl: iconDeleteDustbin,\n        onClickHandler: () => {\n          dispatch(setSaveFlag(true));\n          deleteCurrentOverlay();\n        },\n        enabled: canEdit,\n      },\n    ];\n\n    return actions;\n  }, [currentOverlay, dispatch, inspectionId, myPermissions, overlays]);\n\n  const handleUpdateOverlayList = (updatedOverlayList: OverlaySchema[]) => {\n    dispatch(setSharedStateData(inspectionId, 'overlays', updatedOverlayList));\n    dispatch(setSaveFlag(true));\n  };\n\n  const setVariableSelection = useCallback(\n    (selectedVariable?: React.Key | React.Key[]) => {\n      if (!selectedVariable || variableId === '' || !currentOverlay) {\n        setIsObjectSelectorOpen(false);\n        return;\n      }\n\n      if (selectedVariable && !selectedVariables.includes(selectedVariable)) {\n        setSelectedVariables([...selectedVariables, selectedVariable]);\n      }\n\n      const updatedOverlay: OverlaySchema = {\n        ...currentOverlay,\n        [variableId]: selectedVariable,\n      };\n\n      const updatedOverlayList = updateOverlayList(updatedOverlay, overlays);\n      dispatch(setSharedStateData(inspectionId, 'overlays', updatedOverlayList));\n      setIsObjectSelectorOpen(false);\n      dispatch(setSaveFlag(true));\n    },\n    [currentOverlay, dispatch, inspectionId, overlays, selectedVariables, variableId],\n  );\n\n  if (!overlays) {\n    return (\n      <div className=\"parameter-view-overlay-placeholder\">\n        Please select a source for this parameter view.\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"parameter-view-overlay-wrapper\">\n      <div className=\"parameter-view-overlay-table-wrapper\">\n        <OverlayList\n          overlays={overlays}\n          updateCurrentOverlay={setCurrentOverlay}\n          updateOverlayList={handleUpdateOverlayList}\n          canSelectRow={true}\n          onSelectAll={(isActive) => {\n            try {\n              const updatedOverlays = overlays.map((overlay) => ({\n                ...overlay,\n                isActive,\n              }));\n              dispatch(setSharedStateData(inspectionId, 'overlays', updatedOverlays));\n              dispatch(setSaveFlag(true));\n            } catch (e) {\n              logger.error(e instanceof Error ? e.message : String(e));\n            }\n          }}\n        />\n        <ActionBar actions={overlayActions} />\n      </div>\n      {currentOverlay && (\n        <OverlayPropertyList\n          inspectionId={inspectionId}\n          viewId={viewId}\n          currentOverlay={currentOverlay}\n          imageDimensions={imageDimensions}\n          onChange={(changedValue) => {\n            const updatedOverlay = { ...currentOverlay, ...changedValue };\n            const updatedOverlayList = updateOverlayList(updatedOverlay, overlays);\n            dispatch(setSharedStateData(inspectionId, 'overlays', updatedOverlayList));\n            setCurrentOverlay(updatedOverlay);\n          }}\n          openSelection={(variableName, variableId) => {\n            setIsObjectSelectorOpen(true);\n            setVariableName(variableName);\n            setVariableId(variableId);\n          }}\n        />\n      )}\n      <VariableSelection\n        title={variableName}\n        onClose={setVariableSelection}\n        open={isObjectSelectorOpen}\n        inspectionId={inspectionId}\n      />\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport ActionBar, { ActionBarType } from '../../components/ActionBar';\nimport Container from '../../components/layout/Container';\nimport modes from '../../utils/modes';\n\nimport { canReadParameterView, canEditParameterView } from '../../utils/permissions';\nimport { Overlay } from './components/Overlay';\n\nimport './style.scss';\n\ninterface ParameterViewProps {\n  viewActions?: ActionBarType[];\n\n  id: string;\n  inspectionId: string;\n}\n\nconst ParameterView = ({ id, inspectionId, viewActions = [] }: ParameterViewProps) => {\n  const myPermissions = useSelector<any>((state) => state.app?.myPermissions) as Set<string>;\n  const currentMode = useSelector<any>((state) => state.app?.proxy.mode) as string;\n  const parameter = useSelector<any>((state) => state.toolSet?.parameter) as\n    | { component: React.ReactNode }\n    | undefined;\n\n  if (canReadParameterView(myPermissions) || canEditParameterView(myPermissions)) {\n    return (\n      <div className=\"parameter-view-wrapper\">\n        <Container\n          style={\n            !viewActions?.length\n              ? {\n                  marginBottom: 0,\n                  pointerEvents:\n                    canEditParameterView(myPermissions) && currentMode === modes.editMode.id\n                      ? 'auto'\n                      : 'none',\n                  opacity:\n                    canEditParameterView(myPermissions) && currentMode === modes.editMode.id\n                      ? '1.0'\n                      : '0.3',\n                }\n              : {}\n          }\n        >\n          {parameter?.component || <Overlay inspectionId={inspectionId} id={id} />}\n        </Container>\n        {!!viewActions?.length && <ActionBar isViewAction actions={viewActions} />}\n      </div>\n    );\n  }\n  return <div></div>;\n};\n\nexport default ParameterView;\n","export default __webpack_public_path__ + \"static/media/before.53297893.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScrollContainer = ({ children }) => (\n  <div className=\"overflow-scroll absolute w-100 h-100 pa2 top-0 left-0\">{children}</div>\n);\n\nScrollContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ScrollContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport shortId from 'shortid';\n\nimport iconBack from '../../assets/icons/back.svg';\nimport iconBefore from '../../assets/icons/before.svg';\nimport iconClose from '../../assets/icons/close.svg';\nimport iconSave from '../../assets/icons/save.svg';\nimport ActionBar from '../../components/ActionBar';\nimport ScrollContainer from '../../components/layout/ScrollContainer';\nimport Heading from '../../components/typo/Heading';\n\nclass RecipeView extends Component {\n  renderConfiguration = (configuration) => (\n    <div className=\"flex\">\n      <span className=\"sans-serif mr2 basis-100\">\n        <FormattedMessage id={configuration.intlId} />:\n      </span>\n      <span className=\"basis-100\">\n        <select className=\"bn w-100 tc\">\n          {configuration.options.map((option) => (\n            <option key={option.title} value={option.value}>\n              {option.title}\n            </option>\n          ))}\n        </select>\n      </span>\n    </div>\n  );\n\n  render() {\n    const { configurations, viewActions } = this.props;\n    return (\n      <div>\n        <ScrollContainer>\n          <div className=\"pa3 flex items-center\">\n            <div className=\"basis-100\">\n              <div>\n                <Heading type=\"h3\" intlId=\"name\" />\n                <input\n                  type=\"text\"\n                  className=\"w-100 bg-near-white mb3 ba b--near-white outline-0 pa1\"\n                />\n              </div>\n              <div>\n                <Heading type=\"h3\" intlId=\"comment\" />\n                <textarea className=\"w-100 h4 bg-near-white ba b--near-white outline-0 pa1\" />\n              </div>\n            </div>\n            <div className=\"basis-100 pa4 pt0 self-baseline\">\n              <Heading type=\"h3\" intlId=\"configuration\" />\n              {configurations.map((configuration) => (\n                <div className=\"bb b--near-white pa1 mb1\" key={shortId.generate()}>\n                  {this.renderConfiguration(configuration)}\n                </div>\n              ))}\n            </div>\n          </div>\n        </ScrollContainer>\n        <ActionBar isViewAction actions={viewActions} />\n      </div>\n    );\n  }\n}\n\nRecipeView.propTypes = {\n  configurations: PropTypes.arrayOf(\n    PropTypes.shape({\n      intlId: PropTypes.string,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string,\n          value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        }),\n      ),\n    }),\n  ).isRequired,\n  viewActions: PropTypes.arrayOf(\n    PropTypes.shape({\n      intlId: PropTypes.string,\n    }),\n  ),\n};\n\nRecipeView.defaultProps = {\n  viewActions: [\n    { intlId: 'back', iconUrl: iconBack },\n    { intlId: 'before', iconUrl: iconBefore },\n    { intlId: 'save', iconUrl: iconSave },\n    { intlId: 'cancel', iconUrl: iconClose },\n  ],\n};\n\nexport default injectIntl(RecipeView);\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChevronDoubleLeft(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.41,7.41L17,6L11,12L17,18L18.41,16.59L13.83,12L18.41,7.41M12.41,7.41L11,6L5,12L11,18L12.41,16.59L7.83,12L12.41,7.41Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronDoubleLeft);\nexport default __webpack_public_path__ + \"static/media/chevron-double-left.d02c0bfd.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/archive.b8680473.svg\";","export default __webpack_public_path__ + \"static/media/arrow-top-right.4113715e.svg\";","export default __webpack_public_path__ + \"static/media/collapse-all.5ae8f8d4.svg\";","export default __webpack_public_path__ + \"static/media/copy.1e95e110.svg\";","export default __webpack_public_path__ + \"static/media/cut.bf9e7e56.svg\";","export default __webpack_public_path__ + \"static/media/cylindrical-wrap.b75ac8f0.svg\";","export default __webpack_public_path__ + \"static/media/expand-all.9aefbbb5.svg\";","export default __webpack_public_path__ + \"static/media/external.36cd89bf.svg\";","export default __webpack_public_path__ + \"static/media/function-variant.c7f405a8.svg\";","export default __webpack_public_path__ + \"static/media/group.00737002.svg\";","export default __webpack_public_path__ + \"static/media/load-image.c627eeb8.svg\";","export default __webpack_public_path__ + \"static/media/loop.d385a57c.svg\";","export default __webpack_public_path__ + \"static/media/palette.ebdcc61c.svg\";","export default __webpack_public_path__ + \"static/media/paste.767ba7ae.svg\";","export default __webpack_public_path__ + \"static/media/perspective.b5973ac2.svg\";","export default __webpack_public_path__ + \"static/media/polar-transformation.bca0f07a.svg\";","export default __webpack_public_path__ + \"static/media/resize.34a01621.svg\";","export default __webpack_public_path__ + \"static/media/shift.788a6731.svg\";","export default __webpack_public_path__ + \"static/media/statistics.4012e027.svg\";","export default __webpack_public_path__ + \"static/media/table-analyzer.edbb56e2.svg\";","export default __webpack_public_path__ + \"static/media/table.8752185b.svg\";","export default __webpack_public_path__ + \"static/media/transformation.6c296033.svg\";","export default __webpack_public_path__ + \"static/media/window.4e0082b0.svg\";","import { CircularProgress, TextField } from '@material-ui/core';\nimport { CommonMathToolProps } from '../common';\n\nexport const CommentTab = ({ value, onChange, loading }: CommonMathToolProps<string>) => {\n  const handleChange: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement> = (\n    event,\n  ) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <div className=\"tab-body\">\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <TextField\n          autoFocus\n          multiline\n          minRows={4}\n          value={value}\n          onChange={handleChange}\n          variant=\"outlined\"\n          fullWidth\n        />\n      )}\n    </div>\n  );\n};\n","import { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\nimport Prism from 'prismjs';\nimport { useIntl } from 'react-intl';\nimport Editor from 'react-simple-code-editor';\nimport 'prismjs/components/prism-sql';\nimport 'prismjs/plugins/match-braces/prism-match-braces.js';\n\nimport 'prismjs/themes/prism-solarizedlight.css';\nimport 'prismjs/plugins/match-braces/prism-match-braces.css';\nimport './FormulaEditor.scss';\n\nconst language = 'sql';\n\nexport interface FormulaEditorRef {\n  getSelectionPosition: () => { start: number; end: number };\n  focus: (selectionStart?: number, selectionEnd?: number) => void;\n  moveLeft: () => void;\n  moveRight: () => void;\n  moveCursorTo: (position: number) => void;\n}\n\ninterface FormulaEditorProps {\n  value: string;\n  onChange: (value: string) => void;\n  onSelectionChange?: (selection: { start: number; end: number }) => void;\n  error?: boolean;\n}\n\nconst Code = ({ children }: { children: string }) => {\n  const ref = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    const pre = ref.current?.parentElement;\n    if (pre) {\n      Prism.highlightAllUnder(pre, false);\n    }\n  }, [children]);\n\n  return <code ref={ref}>{children}</code>;\n};\n\nexport const FormulaEditor = forwardRef<FormulaEditorRef, FormulaEditorProps>(\n  ({ value, onChange, onSelectionChange, error }, forwardedRef) => {\n    const intl = useIntl();\n    const ref = useRef<any>(null);\n\n    const moveCursorTo = (position: number) => {\n      const textarea: HTMLTextAreaElement = ref.current?._input;\n      if (!textarea) {\n        return;\n      }\n      textarea.focus();\n      const pos = Math.min(value.length, Math.max(0, position));\n      setTimeout(() => textarea.setSelectionRange(pos, pos), 0);\n    };\n\n    useEffect(() => {\n      if (!onSelectionChange) {\n        return;\n      }\n      const handleSelection = () => {\n        if (!ref.current?._input || ref.current._input !== document.activeElement) {\n          return;\n        }\n        const textarea: HTMLTextAreaElement = ref.current._input;\n        onSelectionChange({\n          start: textarea.selectionStart,\n          end: textarea.selectionEnd,\n        });\n      };\n\n      document.addEventListener('selectionchange', handleSelection);\n\n      return () => {\n        document.removeEventListener('selectionchange', handleSelection);\n      };\n    }, [onSelectionChange]);\n\n    useImperativeHandle(forwardedRef, () => ({\n      getSelectionPosition: () => {\n        return {\n          start: ref.current?._input?.selectionStart ?? 0,\n          end: ref.current?._input?.selectionEnd ?? 0,\n        };\n      },\n      focus: (selectionStart, selectionEnd) => {\n        const textarea: HTMLTextAreaElement = ref.current?._input;\n        if (!textarea) {\n          return;\n        }\n        textarea.focus();\n        if (typeof selectionStart === 'number') {\n          setTimeout(\n            () => textarea.setSelectionRange(selectionStart, selectionEnd ?? selectionStart),\n            0,\n          );\n        }\n      },\n      moveCursorTo,\n      moveLeft: () => moveCursorTo((ref.current?._input?.selectionStart ?? 0) - 1),\n      moveRight: () => moveCursorTo((ref.current?._input?.selectionStart ?? 0) + 1),\n    }));\n\n    return (\n      <Editor\n        className={clsx(\n          'formula-editor-field',\n          error && 'markError',\n          `language-${language}`,\n          'match-braces',\n          'rainbow-braces',\n        )}\n        ref={ref}\n        value={value ?? ''}\n        placeholder={intl.messages['toolsetView.formula']}\n        onValueChange={onChange}\n        highlight={(code) => <Code>{code || ''}</Code>}\n        padding={8}\n        style={{\n          fontSize: 14,\n        }}\n        autoFocus\n      />\n    );\n  },\n);\n","import { TreeTheme } from 'react-treebeard-ts';\n\nconst TreebeardStyle: TreeTheme = {\n  tree: {\n    base: {\n      whiteSpace: 'nowrap',\n      listStyle: 'none',\n      backgroundColor: 'transparent',\n      margin: 0,\n      padding: 0,\n      color: 'black',\n      fontFamily: 'lucida grande ,tahoma,verdana,arial,sans-serif',\n      fontSize: '14px',\n    },\n    node: {\n      base: {\n        position: 'relative',\n      },\n      link: {\n        cursor: 'pointer',\n        position: 'relative',\n        padding: '0px 5px',\n        display: 'block',\n      },\n      activeLink: {\n        background: 'rgb(135, 135, 135)',\n      },\n      toggle: {\n        base: {\n          position: 'relative',\n          display: 'inline-block',\n          verticalAlign: 'top',\n          marginLeft: '-5px',\n          height: '24px',\n          width: '24px',\n        },\n        wrapper: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          margin: '-7px 0 0 -7px',\n          height: '10px',\n        },\n        height: 10,\n        width: 10,\n        arrow: {\n          fill: '#9DA5AB',\n          strokeWidth: 0,\n        },\n      },\n      header: {\n        base: {\n          display: 'inline-block',\n          verticalAlign: 'top',\n          color: 'black',\n        },\n        connector: {\n          width: '2px',\n          height: '12px',\n          borderLeft: 'solid 2px black',\n          borderBottom: 'solid 2px black',\n          position: 'absolute',\n          top: '0px',\n          left: '-21px',\n        },\n        title: {\n          lineHeight: '24px',\n          verticalAlign: 'middle',\n        },\n      },\n      subtree: {\n        listStyle: 'none',\n        paddingLeft: '10px',\n      },\n      loading: {\n        color: '#E2C089',\n      },\n    },\n  },\n};\n\nexport default TreebeardStyle;\n","import { useState, useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useMounted } from '../../../../hooks/useMounted';\nimport Protobuf from '../../../../protobuf/Protobuf';\nimport type Proxy from '../../../../protobuf/Proxy';\nimport logger from '../../../../utils/logger';\n\nexport const useFormulaValidate = (inspectionID: number, equationId: number) => {\n  const proxy = useSelector<any>((state) => state?.app?.proxy) as Proxy;\n  const mounted = useMounted();\n\n  const [validating, setValidating] = useState(false);\n  const [validatedFormula, setValidatedFormula] = useState('');\n  const [validationSuccessResult, setValidationSuccessResult] = useState<number | null>(null);\n  const [validationErrorMessages, setValidationErrorMessages] = useState<string[]>([]);\n  const [errorPosition, setErrorPosition] = useState<number | null>(null);\n\n  const reset = useCallback(() => {\n    setValidatedFormula('');\n    setValidationSuccessResult(null);\n    setValidationErrorMessages([]);\n    setErrorPosition(null);\n  }, []);\n\n  const sendValidateAndSetEquationRequest = useCallback(\n    (equationText: string) =>\n      proxy.protobuf.request(\n        Protobuf.SvPb.InspectionCmdRequest.create({\n          inspectionID,\n          validateAndSetEquationRequest: {\n            objectId: equationId,\n            equationText: equationText.replace(/([^\\r])\\n/g, '$1\\r\\n'),\n            bSetValue: false,\n          },\n        }),\n      ),\n    [equationId, inspectionID, proxy.protobuf],\n  );\n\n  const validate = useCallback(\n    async (equationText: string) => {\n      try {\n        setValidating(true);\n        const res = await sendValidateAndSetEquationRequest(equationText);\n        if (!mounted) {\n          return { success: false };\n        }\n        setValidating(false);\n\n        setValidatedFormula(equationText);\n\n        const status = res?.validateAndSetEquationResponse?.validateStatus; //it is also position of the error\n\n        if (status === -1) {\n          setValidationSuccessResult(res?.validateAndSetEquationResponse?.result ?? null);\n          setValidationErrorMessages([]);\n          return {\n            success: true,\n            resultValue: res?.validateAndSetEquationResponse?.result ?? null,\n          };\n        } else {\n          const errors = (res?.validateAndSetEquationResponse?.Messages?.messages ?? []).map(\n            (m: any) => m.messageText,\n          );\n          if (!errors.length) {\n            errors.push('Incorrect formula');\n          }\n          setValidationErrorMessages(errors);\n          setValidationSuccessResult(null);\n          setErrorPosition(status);\n          return { success: false, errorPosition: status };\n        }\n      } catch (e) {\n        logger.error(e instanceof Error ? e.message : String(e));\n        setValidationErrorMessages([]);\n      }\n      setValidationSuccessResult(null);\n      return { success: false };\n    },\n    [mounted, sendValidateAndSetEquationRequest],\n  );\n\n  return useMemo(\n    () => ({\n      validate,\n      validating,\n      validatedFormula,\n      reset,\n      validationSuccessResult,\n      validationErrorMessages,\n      errorPosition,\n    }),\n    [\n      errorPosition,\n      reset,\n      validate,\n      validatedFormula,\n      validating,\n      validationErrorMessages,\n      validationSuccessResult,\n    ],\n  );\n};\n","import { ToolsetTreeNode } from '.';\n\nexport function bytesToString(bytes: Uint8Array | undefined, fallback = '') {\n  if (!(bytes instanceof Uint8Array)) {\n    return fallback;\n  }\n  return String.fromCharCode(...Array.from(bytes));\n}\n\nexport function stringToBytes(str = '') {\n  return new Uint8Array(str.split('').map((a) => a.charCodeAt(0)));\n}\n\ninterface Variant {\n  type: number;\n  count?: number;\n\n  bVal?: boolean;\n  lVal?: number;\n  llVal?: number;\n  ulVal?: number;\n  ullVal?: number;\n  dblVal?: number;\n  fltVal?: number;\n  strVal?: string;\n  // bytes bytesVal = 11;\n}\n\ninterface Value {\n  value: Variant;\n  defaultValue: Variant;\n}\n\nexport interface LinkedValue extends Value {\n  option: LinkedSelectedOption;\n  directValue?: Variant;\n  indirectIDString?: Uint8Array;\n  formula?: Uint8Array;\n  readonly equationId: number;\n}\n\nexport interface EmbeddedValue {\n  readonly objectId: number;\n  embeddedId: EmbeddedIdEnum;\n  value?: Value;\n  linkedValue?: LinkedValue;\n}\n\nexport interface CommonHookProps {\n  inspectionID: number;\n  data: ToolsetTreeNode;\n}\n\nexport interface CommonMathToolProps<ValueType> {\n  inspectionID: number;\n  value: ValueType;\n  onChange: (value: ValueType) => void;\n  loading: boolean;\n  toggleOptions: (show: boolean) => void;\n}\n\nexport enum LinkedSelectedOption {\n  // None = 0, // not used\n  DirectValue = 1,\n  IndirectValue = 2,\n  Formula = 3,\n}\n\nexport enum ResetType {\n  RT_None = 0,\n  RT_FromObject = 1, //use resettype from embeddet variable only used in Request not in Response\n  RT_OWNER = 2,\n  RT_Tool = 3,\n  RT_IP = 4,\n}\n\n/** {@link https://docs.microsoft.com/en-us/windows/win32/api/wtypes/ne-wtypes-varenum} */\nexport enum VARENUM {\n  VT_EMPTY = 0,\n  VT_NULL = 1,\n  VT_I2 = 2,\n  VT_I4 = 3,\n  VT_R4 = 4,\n  VT_R8 = 5,\n  VT_CY = 6,\n  VT_DATE = 7,\n  VT_BSTR = 8,\n  VT_DISPATCH = 9,\n  VT_ERROR = 10,\n  VT_BOOL = 11,\n  VT_VARIANT = 12,\n  VT_UNKNOWN = 13,\n  VT_DECIMAL = 14,\n  VT_I1 = 16,\n  VT_UI1 = 17,\n  VT_UI2 = 18,\n  VT_UI4 = 19,\n  VT_I8 = 20,\n  VT_UI8 = 21,\n  VT_INT = 22,\n  VT_UINT = 23,\n  VT_VOID = 24,\n  VT_HRESULT = 25,\n  VT_PTR = 26,\n  VT_SAFEARRAY = 27,\n  VT_CARRAY = 28,\n  VT_USERDEFINED = 29,\n  VT_LPSTR = 30,\n  VT_LPWSTR = 31,\n  VT_RECORD = 36,\n  VT_INT_PTR = 37,\n  VT_UINT_PTR = 38,\n  VT_FILETIME = 64,\n  VT_BLOB = 65,\n  VT_STREAM = 66,\n  VT_STORAGE = 67,\n  VT_STREAMED_OBJECT = 68,\n  VT_STORED_OBJECT = 69,\n  VT_BLOB_OBJECT = 70,\n  VT_CF = 71,\n  VT_CLSID = 72,\n  VT_VERSIONED_STREAM = 73,\n  VT_BSTR_BLOB = 0xfff,\n  VT_VECTOR = 0x1000,\n  VT_ARRAY = 0x2000,\n  VT_BYREF = 0x4000,\n  VT_RESERVED = 0x8000,\n  VT_ILLEGAL = 0xffff,\n  VT_ILLEGALMASKED = 0xfff,\n  VT_TYPEMASK = 0xfff,\n}\n\nexport enum EmbeddedIdEnum {\n  NoEmbeddedId = 0,\n  StringValueEId = 1,\n  TaskObjectClassIsObjectValidEId = 2,\n  RootEId = 3,\n  ToolSetEnabledEId = 4,\n  ToolEnabledEId = 5,\n  ToolSelectedForOperatorMoveEId = 6,\n  ToolPositionEId = 7,\n  ToolTimeEId = 8,\n  MinToolSetTimeEId = 9,\n  MaxToolSetTimeEId = 10,\n  ResetInspectionCountsEId = 11,\n  TriggerCountEId = 12,\n  PPQIndexEId = 13,\n  TriggerDeltaEId = 14,\n  TriggerToCompletionEId = 15,\n  TriggerToStartEId = 16,\n  TriggerToAcquisitionStartEId = 17,\n  AcquisitionTimeEId = 18,\n  EnableAuxiliaryExtentsEId = 21,\n  ObjectIDEId = 22,\n  TriggerIndexEId = 23,\n  InspectedObjectIDEId = 24,\n  InspectedObjectIDLinkEId = 25, //obsolete, but needed for loading configs older than 10.20\n  LuminanceValueEId = 26,\n  HistogramValueEId = 27,\n  HistogramMeanEId = 28,\n  HistogramStdDevEId = 29,\n  HistogramRangeStartEId = 30,\n  HistogramRangeEndEId = 31,\n  HistogramRangeSizeEId = 32,\n  HistogramMaxPixelEId = 33,\n  HistogramScaleEId = 34,\n  HistogramMinPixelEId = 35,\n  HistogramPixelCountEId = 36,\n  HistogramImageEId = 37,\n  HistogramHighPeakEId = 38,\n  HistogramLowPeakEId = 39,\n  HistogramValleyEId = 40,\n  HistogramPeakThresholdEId = 41,\n  HistogramDefaultPeakEId = 42,\n  HistogramAccumulateEId = 43,\n  HistogramMinPeakHeightEId = 44,\n  HistogramValleyLowerBoundEId = 45,\n  HistogramValleyUpperBoundEId = 46,\n  HistogramValleyDefaultEId = 47,\n  HistogramFixedHeightValueEId = 48,\n  HistogramDynamicHeightEId = 49,\n  CalcStdDevEId = 50,\n  PixelColorIndexEId = 51,\n  PixelCountEId = 52,\n  BlobEnabledFeaturesEId = 53,\n  NbrOfBlobsEId = 54,\n  MaxBlobDataArraySizeEId = 55,\n  SortFeatureEId = 56,\n  NbrOfBlobsFoundEId = 57,\n  SortAscendingEId = 58,\n  ExcludeFailedEId = 59,\n  BlobColorEId = 60,\n  BlobUseFillEId = 61,\n  BlobFillColorEId = 62,\n  BlobFillTypeEId = 63,\n  StatMinEId = 64,\n  StatMaxEId = 65,\n  StatAverageEId = 66,\n  StatStdDevEId = 67,\n  StatVarianceEId = 68,\n  StatTestValueEId = 69,\n  StatNbrOfOccurancesEId = 70,\n  StatPercentOfOccurancesEId = 71,\n  StatEnabledFeaturesEId = 72,\n  StatVariableNameToMonitorEId = 74,\n  UpperThresholdEId = 76,\n  LowerThresholdEId = 77,\n  ThresholdActivateEId = 78,\n  UpperThresholdActivateEId = 79,\n  LowerThresholdActivateEId = 80,\n  AutoThresholdEId = 81,\n  BlackBackgroundEId = 82,\n  AutoThresholdMultiplierEId = 83,\n  RingBuffer_FlagOfOutputImagesEId = 84,\n  FilterKernelEId = 85,\n  FilterKernelWidthEId = 86,\n  FilterKernelHeightEId = 87,\n  CustomFilterClippingEId = 88,\n  CustomFilterAbsoluteEId = 89,\n  CustomFilterTransformEId = 90,\n  RankingFilterRankingRankEId = 93,\n  RingBuffer_DepthEId = 94,\n  RingBufferLink_DepthEId = 95, //obsolete, but needed for loading configs older than 10.20\n  RangeClassFailHighEId = 96,\n  RangeClassFailLowEId = 97,\n  RangeClassWarnHighEId = 98,\n  RangeClassWarnLowEId = 99,\n  RangeClassFailHighIndirectEId = 100, //obsolete, but needed for loading configs older than 10.20\n  RangeClassFailLowIndirectEId = 101, //obsolete, but needed for loading configs older than 10.20\n  RangeClassWarnHighIndirectEId = 102, //obsolete, but needed for loading configs older than 10.20\n  RangeClassWarnLowIndirectEId = 103, //obsolete, but needed for loading configs older than 10.20\n  OCVPerformOCREId = 104,\n  OCVMatchLineNumberEId = 105,\n  OCVHighestMatchScoreEId = 106,\n  OCVLowestMatchScoreEId = 107,\n  OCVAverageMatchScoreEId = 108,\n  OCVFontFileNameEId = 109,\n  OCVMatchStringFileNameEId = 110,\n  OCVConstraintsFileNameEId = 111,\n  OCVControlsFileNameEId = 112,\n  OCVUseMatchFileEId = 113,\n  OCVMatchStringEId = 114,\n  OCVFoundStringEId = 115,\n  OCVCharacterValueEId = 116,\n  OCVExtentLeftEId = 117,\n  OCVExtentTopEId = 118,\n  OCVExtentWidthEId = 119,\n  OCVExtentHeightEId = 120,\n  OCVMatchScoreEId = 121,\n  ArchiveFilePathEId = 122,\n  ArchiveImageGuids_OBSOLETE_EId = 123,\n  ArchiveImageFileRootPart1EId = 124,\n  ArchiveResultGuids_OBSOLETE_EId = 125,\n  ArchiveAppendArchiveFileEId = 126,\n  ArchiveStopAtMaxImagesEId = 127,\n  ArchiveUseTriggerCountForImages_obsolete_EId = 128,\n  ArchiveMaxImagesCountEId = 129,\n  ArchiveMethodEId = 130,\n  ArchiveUseHeadersEId = 131,\n  ArchiveHeaderLabelEId = 132,\n  ArchiveHeaderEId = 133,\n  ArchiveResultNamesEId = 134,\n  ArchiveImageNamesEId = 135,\n  BaseDirectorynameEId = 136,\n  BaseFilenameEId = 137,\n  CenterFilenameEId = 138,\n  FilenameIndex1EId = 139,\n  FilenameIndex1LinkEId = 140, //obsolete, but needed for loading configs older than 10.20\n  FilenameIndex2EId = 141,\n  FilenameIndex2LinkEId = 142, //obsolete, but needed for loading configs older than 10.20\n  UseAlternativeImagePathsEId = 143,\n  SubfolderSelectionEId = 144,\n  SubfolderSelectionLinkEId = 145, //obsolete, but needed for loading configs older than 10.20\n  DirectorynameIndexEId = 146,\n  DirectorynameIndexLinkEId = 147, //obsolete, but needed for loading configs older than 10.20\n  EquationEnabledEId = 148,\n  ConditionalResultEId = 149,\n  MathEquationResultEId = 150,\n  LinearEdgesEId = 151,\n  ConditionalEditFreezeFlagEId = 152,\n  DPEdgeAEId = 156,\n  DPEdgeBEId = 157,\n  DPCenterEId = 158,\n  DWidthEId = 159,\n  LinearDistanceEdgeAEId = 160,\n  LinearDistanceEdgeBEId = 161,\n  XEId = 162,\n  DXEId = 163,\n  YEId = 164,\n  DYEId = 165,\n  ValueEId = 166,\n  FailedEId = 167,\n  WarnedEId = 168,\n  PassedEId = 169,\n  ExplicitFailedEId = 170,\n  PassedCountEId = 171,\n  FailedCountEId = 172,\n  WarnedCountEId = 173,\n  EnabledCountEId = 174,\n  ProcessedCountEId = 175,\n  BlackPixelEId = 176,\n  WhitePixelEId = 177,\n  EdgeCountEId = 178,\n  ColorEId = 179,\n  StatusEId = 180,\n  RotationAngleEId = 182,\n  RotationPointXEId = 183,\n  RotationPointYEId = 184,\n  ProfileOrientationEId = 185,\n  LinearToolUseRotationEId = 186,\n  TranslationXOffsetEId = 187,\n  TranslationYOffsetEId = 188,\n  WarpTypeEId = 189,\n  WarpAngleEId = 190,\n  EnableOffsetAEId = 191,\n  OffsetAPointEId = 192,\n  EnableOffsetBEId = 193,\n  OffsetBPointEId = 194,\n  ArithmeticOperatorEId = 195,\n  MaskEnabledEId = 196,\n  MaskUseImageMaskEId = 197,\n  MaskOperatorEId = 198,\n  MaskFillAreaEId = 199,\n  MaskFillColorEId = 200,\n  ShapeMaskTypeEId = 201,\n  ShapeMaskMaskAreaEId = 202,\n  ShapeMaskPropertyCenterXEId = 203,\n  ShapeMaskPropertyCenterYEId = 204,\n  ShapeMaskPropertyWidthEId = 205,\n  ShapeMaskPropertyHeightEId = 206,\n  ShapeMaskPropertySideThicknessEId = 207,\n  ShapeMaskPropertyTopBottomThicknessEId = 208,\n  ShapeMaskPropertyOffsetEId = 209,\n  ShapeMaskPropertySymmetryOrientationEId = 210,\n  ShapeMaskAutoResizeEId = 211,\n  PathNameEId = 212,\n  ContinuousReloadEId = 213,\n  BarCodeEId = 214,\n  RegExpressionEId = 215,\n  BCTypeEId = 216,\n  BCOrientationEId = 217,\n  BCSkewNegativeEId = 218,\n  BCSkewPositiveEId = 219,\n  BCCellMinSizeEId = 220,\n  BCCellMaxSizeEId = 221,\n  BCCellNumberXEId = 222,\n  BCCellNumberYEId = 223,\n  BCSpeedEId = 224,\n  BCThresholdEId = 225,\n  BCStringSizeEId = 226,\n  BCErrorCorrectionEId = 227,\n  BCEncodingEId = 228,\n  BCForegroundColorEId = 229,\n  BCSaveStringInFileEId = 230,\n  BCStringFileNameEId = 231,\n  BCWarnOnFailedReadEId = 232,\n  WatershedFilterMinVariationEId = 233,\n  WatershedFilterControlFlagEId = 234,\n  WatershedFilterUseMarkerEId = 235,\n  ThickeningFilterItterationsEId = 236,\n  ThickeningFilterGrayOnEId = 237,\n  ThinningFilterItterationsEId = 238,\n  GrayOnEId = 239,\n  BCUseSingleMatchStringEId = 240,\n  BCUseMatchStringFileEId = 241,\n  BCMatchStringFileNameEId = 242,\n  BCMatchStringLineEId = 243,\n  BCMatchScoreEId = 244,\n  BCTimeoutEId = 245,\n  BCUnevenGridEId = 246,\n  UpperThresholdEquationResultEId = 247,\n  LowerThresholdEquationResultEId = 248,\n  AutoThresholdEquationResultEId = 249,\n  UseExternalATMEId = 250,\n  UseExternalLTEId = 251,\n  UseExternalUTEId = 252,\n  RegressionTestModeEId = 253,\n  UseLowerThresholdSelectableEId = 254,\n  UseLowerThresholdMaxMinusPercentDiffEId = 255,\n  UseLowerThresholdMaxMinusOffsetEId = 256,\n  UseLowerThresholdMinPlusOffsetEId = 257,\n  LowerThresholdMaxMinusPercentDiffEId = 258,\n  LowerThresholdMaxMinusOffsetEId = 259,\n  LowerThresholdMinPlusOffsetEId = 260,\n  UseUpperThresholdSelectableEId = 261,\n  UseUpperThresholdMaxMinusPercentDiffEId = 262,\n  UseUpperThresholdMaxMinusOffsetEId = 263,\n  UseUpperThresholdMinPlusOffsetEId = 264,\n  UpperThresholdMaxMinusPercentDiffEId = 265,\n  UpperThresholdMaxMinusOffsetEId = 266,\n  UpperThresholdMinPlusOffsetEId = 267,\n  UseLowerThresholdSelectableBEId = 268,\n  UseLowerThresholdMaxMinusPercentDiffBEId = 269,\n  UseLowerThresholdMaxMinusOffsetBEId = 270,\n  UseLowerThresholdMinPlusOffsetBEId = 271,\n  LowerThresholdMaxMinusPercentDiffBEId = 272,\n  LowerThresholdMaxMinusOffsetBEId = 273,\n  LowerThresholdMinPlusOffsetBEId = 274,\n  UseUpperThresholdSelectableBEId = 275,\n  UseUpperThresholdMaxMinusPercentDiffBEId = 276,\n  UseUpperThresholdMaxMinusOffsetBEId = 277,\n  UseUpperThresholdMinPlusOffsetBEId = 278,\n  UpperThresholdMaxMinusPercentDiffBEId = 279,\n  UpperThresholdMaxMinusOffsetBEId = 280,\n  UpperThresholdMinPlusOffsetBEId = 281,\n  LinearThresholdMaxEId = 282,\n  LinearThresholdMinEId = 283,\n  LinearThresholdDeltaEId = 284,\n  ShiftToolModeEId = 285,\n  ShiftToolReferenceXEId = 286,\n  ShiftToolReferenceYEId = 287,\n  ContRecalcEId = 288,\n  ImageTransformDisplacementXEId = 289,\n  ImageTransformDisplacementYEId = 290,\n  TopResultEId = 291,\n  LeftResultEId = 292,\n  ImageTransformSourceXEId = 293,\n  ImageTransformSourceYEId = 294,\n  OutputEvaluateTranslationXResultEId = 295,\n  OutputEvaluateTranslationYResultEId = 296,\n  OutputEvaluateRotationXResultEId = 297,\n  OutputEvaluateRotationYResultEId = 298,\n  OutputEvaluateRotationAngleResultEId = 299,\n  PerformTranslationEId = 300,\n  TranslationXEId = 301,\n  TranslationYEId = 302,\n  PerformRotationEId = 303,\n  LearnedTranslationXEId = 304,\n  LearnedTranslationYEId = 305,\n  LearnedRotationXEId = 306,\n  LearnedRotationYEId = 307,\n  LearnedRotationAngleEId = 308,\n  UseExtentsOnlyEId = 309,\n  ConditionalToolSetDrawFlagEId = 310,\n  ConditionalToolDrawFlagEId = 311,\n  OutputCenterXEId = 312,\n  OutputCenterYEId = 313,\n  OutputStartRadiusEId = 314,\n  OutputEndRadiusEId = 315,\n  OutputStartAngleEId = 316,\n  OutputEndAngleEId = 317,\n  OutputInterpolationModeEId = 318,\n  OutputUseFormulaEId = 319,\n  OutputAngularMethodEId = 320,\n  OutputEvaluateCenterXResultEId = 321,\n  OutputEvaluateCenterYResultEId = 322,\n  OutputEvaluateStartRadiusResultEId = 323,\n  OutputEvaluateEndRadiusResultEId = 324,\n  OutputEvaluateStartAngleResultEId = 325,\n  OutputEvaluateEndAngleResultEId = 326,\n  ExtentRelativeLeftPositionEId = 327,\n  ExtentRelativeTopPositionEId = 328,\n  ExtentRelativeRightPositionEId = 329,\n  ExtentRelativeBottomPositionEId = 330,\n  ExtentWidthEId = 331,\n  ExtentHeightEId = 332,\n  ExtentWidthFactorContentEId = 333,\n  ExtentHeightFactorContentEId = 334,\n  UpdateAuxiliaryExtentsEId = 335,\n  AuxiliarySourceXEId = 336,\n  AuxiliarySourceYEId = 337,\n  AuxiliarySourceAngleEId = 338,\n  AuxiliarySourceImageNameEId = 339,\n  AuxiliaryDrawTypeEId = 340,\n  //LUTIndexVariableEId = 341,\n  LUTEquationResultEId = 342,\n  LUTEquationClipFlagEId = 343,\n  OutputLUTVectorEId = 344,\n  UseLUTEId = 345,\n  ContinuousRecalcLUTEId = 346,\n  LUTModeEId = 347,\n  LUTUpperClipEId = 348,\n  LUTLowerClipEId = 349,\n  LUTMinInputEId = 350,\n  LUTMaxInputEId = 351,\n  LUTMinOutputEId = 352,\n  LUTMaxOutputEId = 353,\n  PatAcceptThresholdEId = 354,\n  PatCertainThresholdEId = 355,\n  PatAccuracyEId = 356,\n  PatMaxOccurancesEId = 357,\n  PatSearchAngleModeEId = 358,\n  PatSpeedEId = 359,\n  PatModelImageFileEId = 360,\n  PatSearchAngleEId = 361,\n  PatAngleDeltaNegEId = 362,\n  PatAngleDeltaPosEId = 363,\n  PatAngleToleranceEId = 364,\n  PatAngleAccuracyEId = 365,\n  PatAngleInterpolationEId = 366,\n  PatCircularOverscanEId = 367,\n  PatDontCareEId = 368,\n  PatDontCareImageFileEId = 369,\n  PatPreliminaryAcceptanceThresholdEId = 370,\n  PatFastFindEId = 371,\n  PatModelStepEId = 372,\n  PatModelWidthEId = 373,\n  PatModelHeightEId = 374,\n  PatModelCenterXEId = 375,\n  PatModelCenterYEId = 376,\n  PatDontCareWidthEId = 377,\n  PatDontCareHeightEId = 378,\n  PatBeginningResolutionLevelEId = 379,\n  PatFinalResolutionLevelEId = 380,\n  PatAdditionalCandidatesEId = 381,\n  PatCandidateSpacingXMinEId = 382,\n  PatCandidateSpacingYMinEId = 383,\n  PatResultMatchScoreEId = 384,\n  PatResultXEId = 385,\n  PatResultYEId = 386,\n  PatResultAngleEId = 387,\n  PatResultNumFoundOccurancesEId = 388,\n  LinearDataClassEId = 389,\n  Band0ImageEId = 390,\n  Band1ImageEId = 391,\n  Band2ImageEId = 392,\n  ConvertToHSIEId = 393,\n  HasROIEId = 394,\n  ColorThresholdEnabledEId = 395,\n  Band0UpperThresholdEId = 396,\n  Band0LowerThresholdEId = 397,\n  Band0ThresholdExcludeEId = 398,\n  Band0ThresholdEnabledEId = 399,\n  Band1UpperThresholdEId = 400,\n  Band1LowerThresholdEId = 401,\n  Band1ThresholdExcludeEId = 402,\n  Band1ThresholdEnabledEId = 403,\n  Band2UpperThresholdEId = 404,\n  Band2LowerThresholdEId = 405,\n  Band2ThresholdExcludeEId = 406,\n  Band2ThresholdEnabledEId = 407,\n  EdgeUpperThresholdValueEId = 408,\n  EdgeADirectionEId = 409,\n  EdgeAPolarisationEId = 410,\n  EdgeAEdgeSelectEId = 411,\n  EdgeAEdgeSelectThisValueEId = 412,\n  EdgeAIsFixedEdgeMarkerEId = 413,\n  EdgeAPositionEId = 414,\n  EdgeAPositionOffsetEId = 415,\n  EdgeALowerThresholdValueEId = 416,\n  EdgeBDirectionEId = 418,\n  EdgeBPolarisationEId = 419,\n  EdgeBEdgeSelectEId = 420,\n  EdgeBEdgeSelectThisValueEId = 421,\n  EdgeBIsFixedEdgeMarkerEId = 422,\n  EdgeBPositionEId = 423,\n  EdgeBPositionOffsetEId = 424,\n  EdgeBLowerThresholdValueEId = 425,\n  EdgeBUpperThresholdValueEId = 426,\n  DrawCriteriaEId = 427,\n  ResizeInterpolationModeEId = 428,\n  ResizeOverscanEId = 429,\n  ResizePerformanceEId = 430,\n  LogicalROIImageEId = 431,\n  DllFileNameEId = 432,\n  DllToolNameEId = 433,\n  DllToolVersionEId = 434,\n  ShowAllEdgeAOverlaysEId = 435,\n  ShowAllEdgeBOverlaysEId = 436,\n  SourceImageNamesEId = 437,\n  BCRawDataEId = 438,\n  BCStringFormatEId = 439,\n  BCThresholdTypeEId = 440,\n  ToolCommentTypeEId = 441,\n  NotUsed1 = 442,\n  NotUsed2 = 443,\n  ToolSizeAdjustSizeWidthModeEId = 445,\n  ToolSizeAdjustSizeHeightModeEId = 446,\n  ToolSizeAdjustSizePositionXModeEId = 447,\n  ToolSizeAdjustSizePositionYModeEId = 448,\n  EQAdjustSizeWidthResultEId = 449,\n  EQAdjustSizeHeightResultEId = 450,\n  EQAdjustSizePositionXResultEId = 451,\n  EQAdjustSizePositionYResultEId = 452,\n  TableTool_MaxRowEId = 453,\n  TableObject_NumberOfRowsEId = 454,\n  RootUidEId = 456,\n  GlobalUidEId = 457,\n  EnvironmentUidEId = 458,\n  EnvironmentModelNumberUidEId = 459,\n  EnvironmentWinKeyUidEId = 460,\n  EnvironmentImageUpdateUidEId = 461,\n  EnvironmentResultUpdateUidEId = 462,\n  EnvironmentModeIsRunUidEId = 463,\n  EnvironmentModeIsStopUidEId = 464,\n  EnvironmentModeIsRegressionTestUidEId = 465,\n  EnvironmentModeIsTestUidEId = 466,\n  EnvironmentModeIsEditUidEId = 467,\n  EnvironmentModeValueUidEId = 468,\n  EnvironmentModeUidEId = 469,\n  EnvironmentAutoSaveUidEId = 470,\n  EnvironmentDiskProtectionUidEId = 471,\n  EnvironmentStartLastConfiEIdEId = 472,\n  TableAnaylzerSortIsASCEId = 474,\n  TableAnaylzerExcludeHighEId = 475,\n  TableAnaylzerExcludeHigh_LinkEId = 476, //obsolete, but needed for loading configs older than 10.20\n  TableAnaylzerExcludeLowEId = 477,\n  TableAnaylzerExcludeLow_LinkEId = 478, //obsolete, but needed for loading configs older than 10.20\n  TableAnaylzerLimitValueEId = 479,\n  TableAnaylzerLimitValue_LinkEId = 480, //obsolete, but needed for loading configs older than 10.20\n  MaxLoopsEId = 481,\n  LoopCounterEId = 482,\n  LinkedLoopsEId = 483,\n  LinkedLoops_LinkedEId = 484, //obsolete, but needed for loading configs older than 10.20\n  LoopBreakEId = 485,\n  LoopBreak_LinkedEId = 486, //obsolete, but needed for loading configs older than 10.20\n  TriggerTimeEId = 487,\n  SubfolderLocationEId = 488,\n  SubfolderLocationLinkEId = 489, //obsolete, but needed for loading configs older than 10.20\n  InspectionNameEId = 490,\n  FormatArchiveToolResultsEId = 491,\n  ArchiveResultsMinimumNumberOfCharactersEId = 492,\n  ArchiveResultsNumberOfDecimalsEId = 493,\n  ArchiveImageFileRootPart2EId = 494,\n  ArchiveImageFileRootPart3EId = 495,\n  ArchiveImageFileRootPart1LinkEId = 496, //obsolete, but needed for loading configs older than 10.20\n  ArchiveImageFileRootPart2LinkEId = 497, //obsolete, but needed for loading configs older than 10.20\n  ArchiveImageFileRootPart3LinkEId = 498, //obsolete, but needed for loading configs older than 10.20\n  IsClosedEId = 499,\n  TriggerPerObjectIDEId = 500,\n\n  FeatureTypeEId = 501,\n  SortEnumEId = 502,\n  IsExcludeEId = 503,\n  IsInnerExcludeEId = 504,\n  ExcludeLowerBoundEId = 505,\n  ExcludeLowerBoundIndirectEId = 506, //obsolete, but needed for loading configs older than 10.20\n  ExcludeUpperBoundEId = 507,\n  ExcludeUpperBoundIndirectEId = 508, //obsolete, but needed for loading configs older than 10.20\n  ConnectivityBlobEId = 509,\n  IsGrayImageEId = 510,\n  IsRangeEId = 511,\n  IsCustomFeatureEId = 512,\n  NumberOfObjectsEId = 513,\n  ExtentWidthFactorContentLinkEId = 514, //obsolete, but needed for loading configs older than 10.20\n  ExtentHeightFactorContentLinkEId = 515, //obsolete, but needed for loading configs older than 10.20\n  ExtentWidthFactorFormatEId = 516,\n  ExtentWidthFactorFormatLinkEId = 517, //obsolete, but needed for loading configs older than 10.20\n  ExtentHeightFactorFormatEId = 518,\n  ExtentHeightFactorFormatLinkEId = 519, //obsolete, but needed for loading configs older than 10.20\n  ShapeMaskPropertyCenterXLinkEId = 534, //obsolete, but needed for loading configs older than 10.20\n  ShapeMaskPropertyCenterYLinkEId = 635, //obsolete, but needed for loading configs older than 10.20\n  ShapeMaskPropertyWidthLinkEId = 536, //obsolete, but needed for loading configs older than 10.20\n  ShapeMaskPropertyHeightLinkEId = 537, //obsolete, but needed for loading configs older than 10.20\n  ShapeMaskPropertySideThicknessLinkEId = 538, //obsolete, but needed for loading configs older than 10.20\n  ShapeMaskPropertyTopBottomThicknessLinkEId = 539, //obsolete, but needed for loading configs older than 10.20\n  ShapeMaskPropertyOffsetLinkEId = 540, //obsolete, but needed for loading configs older than 10.20\n  MaskImageEId = 541,\n  ObjectTypeEId = 542,\n  IsColorAdditionalImageEId = 543,\n  BackgroundColor1EId = 544,\n  BackgroundColor2EId = 545,\n  BackgroundColor3EId = 546,\n  DrawTypesEId = 547,\n  BlobTypesEId = 548,\n  Color1EId = 549,\n  Color2EId = 550,\n  Color3EId = 551,\n  DrawAdditionalImageStepNamesEId = 552,\n  UseAdditionalImageEId = 553,\n  LinkedValueContentEId = 554,\n  LinkedValueTypeEId = 555,\n\n  StatNumberOfValidSamplesEId = 560, //Statistics Tool: number of valid values considered in statistic\n\n  ImageToolEnabledGainId = 561,\n  ImageToolGainId = 562,\n  ImageToolOffsetId = 563,\n  ImageToolUseLutId = 566,\n\n  //The following Ids are the first of an array and must have 100 reserved Ids\n  OutputImageEId = 1000, //Output Images, e.g. External needs 4\n  RingBufferIndexEId = 1100, //For ringBuffer index of output images (by now 2 indexes)\n  RingBufferIndexLinkEId = 1150, //obsolete, but needed for loading configs older than 10.20\n  FilterCellEId = 1200, //Cells of the custom and rank filter (49 cells)\n  ExternalInputEId = 1300, //External Dll (50)\n  ExternalInputLinkedEId = 1400, //obsolete, but needed for loading configs older than 10.20\n  ExternalResultEId = 1500, //External Dll (50)\n  DllDependencyFileNameEId = 1600, //External Dll (50)\n  TableColumnValueEId = 1700, //Table Object Column (50)\n  BlobFeatureEId = 1800, //Blob Feature (SvOi::SV_NUMBER_OF_BLOB_FEATURES)\n  InputObjectTypeEId = 1900, //Type for Input Object\n  ResultObjectValueEId = 2000, //Result value object (for e.g. Result in Group Tool)\n  ResultObjectLinkedEId = 2100, //obsolete, but needed for loading configs older than 10.20\n  ResultObjectTypeEId = 2200, //Type for Result Object (for e.g. Result in Group Tool)\n\n  //IDs for Inputs\n  LUTOperatorInputEId = 100000,\n  GrayImageInputEId = 100001,\n  NewColumnInputEId = 100002,\n  ExcludeColumnInputEId = 100003,\n  SortColumnInputEId = 100004,\n  ProfileOrientationInputEId = 100005,\n  UseRoationAngleInputEId = 100006,\n  MarkerImageInputEId = 100007,\n  SeedImageInputEId = 100008,\n  MinThresholdInputEId = 100009,\n  MaxThresholdInputEId = 100010,\n  DeltaThresholdInputEId = 100011,\n  LinearDataInputEId = 100012,\n  ResultInputEId = 100013,\n  UpperThresholdInputEId = 100014,\n  LowerThresholdInputEId = 100015,\n  AutoThresholdInputEId = 100016,\n  TranslationXResultInputEId = 100017,\n  TranslationYResultInputEId = 100018,\n  RotationXResultInputEId = 100019,\n  RotationYResultInputEId = 100020,\n  RotationAngleResultInputEId = 100021,\n  CenterXResultInputEId = 100022,\n  CenterYResultInputEId = 100023,\n  StartRadiusResultInputEId = 100024,\n  EndRadiusResultInputEId = 100025,\n  StartAngleResultInputEId = 100026,\n  EndAngleResultInputEId = 100027,\n  ImageArithmeticAImageInputEId = 100028,\n  ImageArithmeticAEnableOffsetInputEId = 100029,\n  ImageArithmeticAOffsetPointInputEId = 100030,\n  ImageArithmeticBImageInputEId = 100031,\n  ImageArithmeticBEnableOffsetInputEId = 100032,\n  ImageArithmeticBOffsetPointInputEId = 100033,\n  ImageArithmeticOperatorInputEId = 100034,\n  WidthInputEId = 100035,\n  HeightInputEId = 100036,\n  PositionXInputEId = 100037,\n  PositionYInputEId = 100038,\n  RangeValueInputEId = 100039,\n  Band0ImageInputEId = 100040,\n  Band1ImageInputEId = 100041,\n  Band2ImageInputEId = 100042,\n  UserMaskImageInputEId = 100043,\n  ToolSetConditionalInputEId = 100044,\n  SourceTableInputEId = 100045,\n  TranslationXInputEId = 100046,\n  TranslationYInputEId = 100047,\n  AuxImageInputEId = 100048,\n  ToolConditionalInputEId = 100049,\n  OverlayColorInputEId = 100050,\n  BarCodeResultEId = 100051,\n  ImageArithmeticGainEnabledEId = 100052,\n  ImageArithmeticGainEId = 100053,\n  ImageArithmeticOffsetEId = 100054,\n  ImageArithmeticUseLutEId = 100055,\n  MissingImageCountEId = 100056,\n  NotCompleteCountEId = 100057,\n  //The following Ids are the first of an array and must have 100 reserved Ids\n  ImageInputEId = 150000,\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useMounted() {\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  return mounted;\n}\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport useCancellablePromise from '../../../../hooks/useCancellablePromise';\nimport Protobuf from '../../../../protobuf/Protobuf';\nimport type Proxy from '../../../../protobuf/Proxy';\nimport { bytesToString } from '../../common';\n\nexport const useIndirectValueObjectName = (inspectionID: number, objectId?: number) => {\n  const proxy = useSelector<any>((state) => state?.app?.proxy) as Proxy;\n  const cancellable = useCancellablePromise();\n\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!objectId) {\n      return;\n    }\n    setLoading(true);\n    cancellable(\n      proxy.protobuf.request(\n        Protobuf.SvPb.InspectionCmdRequest.create({\n          inspectionID,\n          getObjectNameRequest: {\n            BeforeType: 0x00001102, //SVObjectTypeEnum.BlobDrawObjectType\n            objectId,\n          },\n        }),\n      ),\n    )\n      .then((res: any) => {\n        setName(\n          bytesToString(res?.getObjectNameResponse?.name) || res?.getObjectNameResponse?.name,\n        );\n        setLoading(false);\n      })\n      .catch((error: any) => error && setLoading(false));\n  }, [cancellable, inspectionID, objectId, proxy.protobuf]);\n\n  return { name, loading };\n};\n","import { useCallback, useEffect, useRef } from 'react';\n\nexport default function useCancellablePromise() {\n  const promises = useRef<{ promise: Promise<unknown>; cancel: () => void; restore: () => void }[]>(\n    [],\n  );\n\n  useEffect(() => {\n    promises.current?.forEach((p) => p.restore());\n    return () => {\n      promises.current?.forEach((p) => p.cancel());\n      promises.current = [];\n    };\n  }, []);\n\n  const cancellablePromise = useCallback(<T extends Promise<unknown>>(promise: T): T => {\n    let isCanceled = false;\n\n    const wrappedPromise = new Promise<unknown>((resolve, reject) => {\n      promise\n        .then((val) => (isCanceled ? reject(null) : resolve(val)))\n        .catch((error) => (isCanceled ? reject(null) : reject(error)));\n    }) as T;\n\n    promises.current?.push({\n      promise: wrappedPromise,\n      cancel: () => {\n        isCanceled = true;\n      },\n      restore: () => {\n        isCanceled = false;\n      },\n    });\n\n    return wrappedPromise;\n  }, []);\n\n  return cancellablePromise;\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Treebeard, TreeNode } from 'react-treebeard-ts';\nimport { ReactComponent as ChevronDoubleLeftIcon } from '../../../assets/icons/chevron-double-left.svg';\nimport Dialog from '../../../components/Dialog';\nimport Configuration from '../../../protobuf/Configuration';\nimport TreebeardStyle from '../components/TreebeardStyle';\nimport { useFormulaValidate } from './hooks/useFormulaValidate';\nimport { useIndirectValueObjectName } from './hooks/useIndirectValueObjectName';\n\nimport './LinkedValueSelectDialog.scss';\n\ninterface TreeNodeWithLocation extends TreeNode {\n  location: string;\n  children?: TreeNodeWithLocation[];\n}\ninterface LinkedValueTreeNode extends TreeNodeWithLocation {\n  values: LinkedValueTreeNode[];\n  children?: LinkedValueTreeNode[];\n  link?: string;\n  location: string;\n}\n\ninterface LinkedValueSelectDialogProps {\n  inspectionID: number;\n  equationId?: number;\n  value?: number;\n  onClose: () => void;\n  onSelect: (indirectObjectId: number, link: string) => void;\n}\n\nexport const LinkedValueSelectDialog = ({\n  inspectionID,\n  equationId = 0,\n  value,\n  onClose,\n  onSelect,\n}: LinkedValueSelectDialogProps) => {\n  const configuration = useSelector<any>((state) => state?.app?.configuration) as Configuration;\n  const intl = useIntl();\n\n  const { name: linkName, loading } = useIndirectValueObjectName(inspectionID, value);\n  const formulaValidation = useFormulaValidate(inspectionID, equationId);\n\n  const [treeNodes, setTreeNodes] = useState<LinkedValueTreeNode[]>([]);\n  const [selectedNode, setSelectedNode] = useState<LinkedValueTreeNode | null>(null);\n  const [selectedValueNode, setSelectedValueNode] = useState<\n    LinkedValueTreeNode['values'][number] | null\n  >(null);\n\n  const link = selectedValueNode?.link ?? selectedNode?.link;\n  const validationError = formulaValidation.validationErrorMessages?.length > 0;\n\n  useEffect(() => {\n    const items = configuration.getObjectSelectorItemsForInspection(inspectionID);\n\n    const parseNodes = (\n      nodes: TreeNodeWithLocation[] | undefined,\n      link = '',\n    ): LinkedValueTreeNode[] | undefined => {\n      if (!nodes?.length) {\n        return undefined;\n      }\n\n      return nodes?.map((node) => {\n        const leafLink = [link, node.name].filter(Boolean).join('.');\n        return {\n          ...node,\n          toggled: node.name === 'Tool Set' ? true : node.active,\n          link: leafLink,\n          children: parseNodes(\n            node.children?.filter((child) => child.children?.length),\n            leafLink,\n          ),\n          values:\n            parseNodes(\n              node.children?.filter((child) => !child.children?.length),\n              leafLink,\n            ) ?? [],\n        };\n      });\n    };\n\n    if (items?.tree?.children) {\n      setTreeNodes(parseNodes(items.tree.children) ?? []);\n    }\n  }, [configuration, inspectionID]);\n\n  useEffect(() => {\n    if (loading) {\n      return;\n    }\n    const path = linkName.split('.');\n    path.shift(); //removes inspection name\n    path.pop(); //removes value name\n\n    const traverse = (\n      nodes: LinkedValueTreeNode[] | undefined,\n      path: string[],\n    ): LinkedValueTreeNode[] | undefined => {\n      if (!path.length) {\n        return nodes;\n      }\n      return nodes?.map((node) => {\n        const itemName = path[0];\n        const found = node.name === itemName;\n\n        if (found && path.length === 1) {\n          setSelectedNode(node);\n        }\n\n        return {\n          ...node,\n          children: found ? traverse(node.children, path.slice(1)) : node.children,\n          toggled: found ? true : node.toggled,\n          active: found && path.length === 1,\n          name: (found ? (\n            <span className=\"selected-path-node\">{node.name}</span>\n          ) : (\n            node.name\n          )) as never,\n        };\n      });\n    };\n\n    setTreeNodes((nodes) => traverse(nodes, path) ?? []);\n  }, [linkName, loading]);\n\n  useEffect(() => {\n    if (!link) {\n      return;\n    }\n    formulaValidation.validate(`\"${link}\"`);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [link]);\n\n  const updateTreeModel = useCallback(\n    (\n      targetNode: LinkedValueTreeNode | ((node: LinkedValueTreeNode) => boolean),\n      updateTargetData: (node: LinkedValueTreeNode) => Partial<LinkedValueTreeNode>,\n      updateOtherData?: (node: LinkedValueTreeNode) => Partial<LinkedValueTreeNode>,\n    ) => {\n      const mapToolsetTree = (tree: LinkedValueTreeNode[]): LinkedValueTreeNode[] => {\n        return tree.map((node) => {\n          const children = node.children?.length ? mapToolsetTree(node.children) : node.children;\n          if (typeof targetNode === 'function' ? targetNode(node) : node === targetNode) {\n            return { ...node, children, ...updateTargetData(node) };\n          } else {\n            return updateOtherData ? { ...node, children, ...updateOtherData(node) } : node;\n          }\n        });\n      };\n      setTreeNodes(mapToolsetTree);\n    },\n    [],\n  );\n\n  const onNodeClicked = useCallback(\n    (node: LinkedValueTreeNode, toggled: boolean) => {\n      updateTreeModel(\n        node,\n        (node) => ({\n          active: true,\n          toggled: node.children?.length ? toggled || !node.active : false,\n        }),\n        () => ({ active: false }),\n      );\n      setSelectedNode(node);\n      setSelectedValueNode(null);\n    },\n    [updateTreeModel],\n  );\n\n  const handleValueSelect = useCallback(\n    (node: LinkedValueTreeNode['values'][number]) => {\n      updateTreeModel(\n        () => true,\n        () => ({ active: false }),\n        undefined,\n      );\n      setSelectedValueNode(node);\n    },\n    [updateTreeModel],\n  );\n\n  return (\n    <Dialog\n      className=\"linked-value-select-dialog\"\n      title={<strong>{intl.messages['toolsetView.selectLinkedValue']}</strong>}\n      onClose={onClose}\n      open\n      isPositionAbsolute\n    >\n      <div className=\"linked-value-select-dialog-main\">\n        <div className=\"top-info\">\n          <span>{intl.messages['toolsetView.highlightedNode']}:</span>&ensp;\n          <strong>{link ?? '-'}</strong>\n        </div>\n        <div className=\"top-info\">\n          <span>{intl.messages['toolsetView.evaluatedValue']}:</span>&ensp;\n          {formulaValidation.validating ? (\n            <CircularProgress size=\"16px\" />\n          ) : validationError ? (\n            <span className=\"error\">{intl.messages['toolsetView.validationError']}</span>\n          ) : (\n            <strong>{formulaValidation.validationSuccessResult}</strong> ?? <span>-</span>\n          )}\n        </div>\n        <div className=\"linked-value-select-dialog-body\">\n          <div>\n            <Treebeard\n              data={treeNodes}\n              onToggle={(node, toggled) => onNodeClicked(node as LinkedValueTreeNode, toggled)}\n              style={TreebeardStyle}\n            />\n          </div>\n          <div className=\"values-list\">\n            {selectedNode?.values?.map((node) => (\n              <div\n                key={node.id}\n                className={clsx(selectedValueNode === node && 'selected')}\n                onClick={() => handleValueSelect(node)}\n              >\n                {node.name}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"options\">\n          <Button variant=\"outlined\" color=\"primary\" onClick={onClose}>\n            {intl.messages['cancel']}\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color={validationError ? 'secondary' : 'primary'}\n            disabled={!selectedNode && !selectedValueNode}\n            onClick={() =>\n              onSelect(parseInt(selectedValueNode?.id ?? selectedNode?.id ?? ''), link ?? '')\n            }\n          >\n            {intl.messages['ok']}\n            <ChevronDoubleLeftIcon\n              className={clsx('chevron-double-button-icon', validationError && 'error')}\n            />\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n","import { CSSProperties, useEffect, useRef } from 'react';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-sql';\nimport 'prismjs/plugins/match-braces/prism-match-braces.js';\n\nimport 'prismjs/themes/prism-solarizedlight.css';\nimport 'prismjs/plugins/match-braces/prism-match-braces.css';\nimport './ReadonlyFormula.scss';\n\nconst language = 'sql';\n\nexport const ReadonlyFormula = ({\n  children,\n  style = {},\n  codeStyle = {},\n}: {\n  children?: string;\n  style?: CSSProperties;\n  codeStyle?: CSSProperties;\n  errorPosition?: number;\n}) => {\n  const codeRef = useRef<HTMLPreElement>(null);\n\n  useEffect(() => {\n    if (codeRef.current && children) {\n      Prism.highlightAllUnder(codeRef.current, false);\n    }\n  }, [children]);\n\n  return (\n    <pre\n      ref={codeRef}\n      style={{\n        display: 'inline',\n        whiteSpace: 'break-spaces',\n        margin: 0,\n        position: 'relative',\n        background: 'none',\n        padding: 0,\n        ...style,\n      }}\n      className={`language-${language} match-braces rainbow-braces`}\n    >\n      <code\n        style={{\n          fontFamily: 'Calibri, sans-serif',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          ...codeStyle,\n        }}\n      >\n        {children}\n      </code>\n    </pre>\n  );\n};\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\nimport Dialog from '../../../components/Dialog';\nimport { FormulaEditor, FormulaEditorRef } from './FormulaEditor';\nimport { LinkedValueSelectDialog } from './LinkedValueSelectDialog';\nimport { ReadonlyFormula } from './ReadonlyFormula';\nimport { useFormulaValidate } from './hooks/useFormulaValidate';\n\nimport './FormulaEditPanel.scss';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '0 6px',\n    minWidth: 26,\n    minHeight: 'auto',\n  },\n});\n\ninterface FormulaEditPanelTitleProps extends ReturnType<typeof useFormulaValidate> {\n  conditional?: boolean;\n  short?: boolean;\n  internalEquationText: string;\n}\n\nconst FormulaEditPanelTitle = ({\n  conditional,\n  short,\n  internalEquationText,\n  validating,\n  validatedFormula,\n  validationSuccessResult,\n  validationErrorMessages,\n  errorPosition,\n}: FormulaEditPanelTitleProps) => {\n  const intl = useIntl();\n\n  const validatedFragment = validatedFormula !== internalEquationText;\n\n  const validatedFormulaCut = useMemo(() => {\n    if (validatedFormula.includes('\\n')) {\n      return validatedFormula.split('\\n')[0] + '...';\n    } else {\n      return validatedFormula;\n    }\n  }, [validatedFormula]);\n\n  return (\n    <div className=\"formula-edit-panel-title\">\n      {!short && <div>{intl.messages['toolsetView.formula']}</div>}\n      {validating && <div>{intl.messages['toolsetView.validating']}...</div>}\n      {validatedFormula && (\n        <div className=\"result\">\n          {validationSuccessResult !== null && (\n            <div>\n              <span className=\"validation-success-info\">\n                {intl.messages['toolsetView.validationSuccess']}.\n              </span>\n              &ensp;\n              <span>{intl.messages['toolsetView.result']}:</span>&ensp;\n              <strong>\n                {conditional && !validatedFragment\n                  ? validationSuccessResult\n                    ? 'TRUE'\n                    : 'FALSE'\n                  : validationSuccessResult}\n              </strong>\n            </div>\n          )}\n          {validationErrorMessages?.length > 0 && (\n            <div>\n              <span>{intl.messages['toolsetView.validationError']}.</span>&ensp;\n              <span className=\"validation-error-info\">{validationErrorMessages.join('. ')}</span>\n            </div>\n          )}\n          {validatedFragment && (\n            <div className=\"validated-formula-info\">\n              <span>{intl.messages['toolsetView.validatedFormula']}:</span>\n              <ReadonlyFormula\n                style={{\n                  whiteSpace: 'nowrap',\n                  display: 'inline-flex',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                }}\n                errorPosition={errorPosition ?? undefined}\n              >\n                {validatedFormulaCut}\n              </ReadonlyFormula>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\ninterface FormulaEditPanelBaseProps\n  extends ReturnType<typeof useFormulaValidate>,\n    Omit<FormulaEditPanelProps, 'showInDialog'> {\n  internalEquationText: string;\n  setInternalEquationText: React.Dispatch<React.SetStateAction<string>>;\n  undoAll: () => void;\n}\n\nconst FormulaEditPanelBase = ({\n  inspectionID,\n  internalEquationText,\n  equationText,\n  equationId,\n  setInternalEquationText,\n  onSave,\n  onClose,\n  undoAll,\n  validate,\n  validating,\n  reset: resetValidation,\n  validatedFormula,\n  validationErrorMessages,\n}: FormulaEditPanelBaseProps) => {\n  const intl = useIntl();\n  const panelButtonClasses = useStyles();\n\n  const formulaEditorRef = useRef<FormulaEditorRef>(null);\n\n  const [selection, setSelection] = useState<{ start: number; end: number }>({\n    start: internalEquationText.length,\n    end: internalEquationText.length,\n  });\n  const [openLinkedValueSelectDialog, setOpenLinkedValueSelectDialog] = useState(false);\n\n  const validateAndReturn = useCallback(async () => {\n    const result = await validate(internalEquationText);\n    if (result.success) {\n      onSave(internalEquationText.trim(), result.resultValue);\n    }\n    return result;\n  }, [validate, internalEquationText, onSave]);\n\n  const appendToInternalEquation = useCallback(\n    (value: string, options: { cursorOffset?: number } = {}) => {\n      const editorSelection = formulaEditorRef.current?.getSelectionPosition() ?? {\n        start: internalEquationText.length,\n        end: internalEquationText.length,\n      };\n\n      const shouldAppendSpace = () => {\n        if (['\\n'].includes(value)) {\n          return false;\n        }\n\n        const lines = internalEquationText.split('\\n');\n        let startLi = 0,\n          endLi = 0;\n        let startPivot = editorSelection.start;\n        let endPivot = editorSelection.end;\n        for (; startLi < lines.length; endLi++) {\n          startPivot -= lines[startLi].length + 1;\n          endPivot -= lines[startLi].length + 1;\n          if (startPivot >= 0) {\n            startLi++;\n          }\n          if (endPivot < 0) {\n            break;\n          }\n        }\n        const equationPart = lines.slice(startLi, Math.min(lines.length, endLi + 1)).join('\\n');\n\n        if (equationPart.length === 0) {\n          return false;\n        }\n        const lastChar = equationPart.charAt(equationPart.length - 1);\n        const digits = '1234567890'.split('');\n        const numeric = [...digits, ...['.', ',', '(', ')']];\n        if (\n          (numeric.includes(lastChar) && numeric.includes(value)) ||\n          (digits.includes(lastChar) && ['b', 'h'].includes(value))\n        ) {\n          return false;\n        }\n        return !equationPart.endsWith(' ');\n      };\n\n      if (editorSelection.start === editorSelection.end) {\n        setInternalEquationText(\n          internalEquationText.slice(0, editorSelection.start) +\n            (shouldAppendSpace() ? ' ' : '') +\n            value +\n            internalEquationText.slice(editorSelection.end),\n        );\n        formulaEditorRef.current?.focus(\n          editorSelection.start +\n            (options.cursorOffset ?? 0) +\n            (shouldAppendSpace() ? 1 : 0) +\n            value.length,\n        );\n      } else {\n        setInternalEquationText(\n          internalEquationText.slice(0, editorSelection.start) +\n            value +\n            internalEquationText.slice(editorSelection.end),\n        );\n        formulaEditorRef.current?.focus(\n          editorSelection.start +\n            (typeof options.cursorOffset === 'number' ? options.cursorOffset : value.length),\n        );\n      }\n    },\n    [internalEquationText, setInternalEquationText],\n  );\n\n  const deleteLeft = useCallback(() => {\n    const editorSelection = formulaEditorRef.current?.getSelectionPosition() ?? {\n      start: internalEquationText.length,\n      end: internalEquationText.length,\n    };\n    const start = Math.max(\n      0,\n      editorSelection.start - (editorSelection.start === editorSelection.end ? 1 : 0),\n    );\n\n    setInternalEquationText(\n      internalEquationText.slice(0, start) + internalEquationText.slice(editorSelection.end),\n    );\n    formulaEditorRef.current?.focus(start);\n  }, [internalEquationText, setInternalEquationText]);\n\n  const buttons = useMemo<{ label?: string; onClick?: () => void; separator?: boolean }[][]>(() => {\n    const createSimpleAppendButtons = <OptionsType extends Record<string, unknown>>(\n      labels: string[],\n      options?: OptionsType,\n    ) => {\n      return labels.map((symbol) => ({\n        label: symbol,\n        onClick: () => appendToInternalEquation(symbol),\n        ...(options ?? {}),\n      }));\n    };\n\n    return [\n      // External and numeric system letters\n      [\n        {\n          label: 'Add linked value',\n          onClick: () => setOpenLinkedValueSelectDialog(true),\n        },\n        {\n          separator: true,\n        },\n        {\n          label: '↞',\n          onClick: () => formulaEditorRef.current?.moveCursorTo(0),\n        },\n        {\n          label: '⇠',\n          onClick: () => formulaEditorRef.current?.moveLeft(),\n        },\n        {\n          label: '⇢',\n          onClick: () => formulaEditorRef.current?.moveRight(),\n        },\n        {\n          label: '↠',\n          onClick: () => formulaEditorRef.current?.moveCursorTo(Number.MAX_SAFE_INTEGER),\n        },\n        {\n          separator: true,\n        },\n        ...createSimpleAppendButtons(['b', 'h']),\n      ],\n\n      // Digits and dot\n      createSimpleAppendButtons('0123456789.'.split('')),\n\n      // Logical and basic math operators\n      [\n        ...createSimpleAppendButtons(['AND', 'OR', 'NOT', 'XOR']),\n        {\n          label: 'IF',\n          onClick: () => appendToInternalEquation('IF(  )\\nTHEN {}\\nELSE {}', { cursorOffset: 4 }),\n        },\n        ...createSimpleAppendButtons(['+', '-']),\n        {\n          label: '×',\n          onClick: () => appendToInternalEquation('*'),\n        },\n        {\n          label: '÷',\n          onClick: () => appendToInternalEquation('/'),\n        },\n      ],\n\n      // Comparators, parenthesis and coma\n      [\n        ...createSimpleAppendButtons(['<', '>']),\n        {\n          label: '≤',\n          onClick: () => appendToInternalEquation('<='),\n        },\n        {\n          label: '≥',\n          onClick: () => appendToInternalEquation('>='),\n        },\n        {\n          label: '=',\n          onClick: () => appendToInternalEquation('='),\n        },\n        {\n          label: '≠',\n          onClick: () => appendToInternalEquation('<>'),\n        },\n        ...createSimpleAppendButtons(['(', ')', '{', '}', ',']),\n      ],\n\n      // Advanced\n      [\n        {\n          label: 'Sin',\n          onClick: () => appendToInternalEquation('SIN('),\n        },\n        {\n          label: 'Cos',\n          onClick: () => appendToInternalEquation('COS('),\n        },\n        {\n          label: 'Tan',\n          onClick: () => appendToInternalEquation('TAN('),\n        },\n        {\n          label: 'Sin⁻¹',\n          onClick: () => appendToInternalEquation('ASIN('),\n        },\n        {\n          label: 'Cos⁻¹',\n          onClick: () => appendToInternalEquation('ACOS('),\n        },\n        {\n          label: 'Tan⁻¹',\n          onClick: () => appendToInternalEquation('ATAN('),\n        },\n        {\n          label: 'Min',\n          onClick: () => appendToInternalEquation('MIN(,', { cursorOffset: 4 }),\n        },\n        {\n          label: 'Max',\n          onClick: () => appendToInternalEquation('MAX(,', { cursorOffset: 4 }),\n        },\n        {\n          label: 'Avg',\n          onClick: () => appendToInternalEquation('AVG(,', { cursorOffset: 4 }),\n        },\n        {\n          label: 'Med',\n          onClick: () => appendToInternalEquation('MED(,', { cursorOffset: 4 }),\n        },\n        {\n          label: 'Sum',\n          onClick: () => appendToInternalEquation('SUM(,', { cursorOffset: 4 }),\n        },\n        {\n          label: 'Std dev',\n          onClick: () => appendToInternalEquation('STDDEV(,', { cursorOffset: 7 }),\n        },\n        {\n          label: 'Mod',\n          onClick: () => appendToInternalEquation('MOD(,', { cursorOffset: 4 }),\n        },\n        {\n          label: 'Abs',\n          onClick: () => appendToInternalEquation('ABS('),\n        },\n        {\n          label: 'Sqr',\n          onClick: () => appendToInternalEquation('SQR('),\n        },\n        {\n          label: 'Sqrt',\n          onClick: () => appendToInternalEquation('SQRT('),\n        },\n        {\n          label: 'Trunc',\n          onClick: () => appendToInternalEquation('TRUNC('),\n        },\n        {\n          label: 'Pow',\n          onClick: () => appendToInternalEquation('POW(,', { cursorOffset: 4 }),\n        },\n      ],\n\n      // Overall options\n      [\n        {\n          label: 'Delete',\n          onClick: deleteLeft,\n        },\n        {\n          label: '⎵',\n          onClick: () => appendToInternalEquation(' '),\n        },\n        {\n          label: '↵',\n          onClick: () => appendToInternalEquation('\\n'),\n        },\n      ],\n    ];\n  }, [appendToInternalEquation, deleteLeft]);\n\n  return (\n    <>\n      <div className=\"formula-edit-panel\">\n        <div className=\"panel-container\">\n          <div className=\"panel\">\n            <div className=\"panel-buttons\">\n              {buttons.map((row, index1) => (\n                <div key={index1}>\n                  {row.map((btn, index2) =>\n                    btn.separator ? (\n                      <span\n                        key={index1.toString() + (btn.label ?? '_') + index2.toString()}\n                        style={{ flexGrow: 1 }}\n                      />\n                    ) : (\n                      <Button\n                        key={index1.toString() + (btn.label ?? '_') + index2.toString()}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={btn.onClick}\n                        classes={panelButtonClasses}\n                        style={{\n                          textTransform: 'none',\n                        }}\n                      >\n                        {btn.label}\n                      </Button>\n                    ),\n                  )}\n                </div>\n              ))}\n            </div>\n            <div className=\"equation-textfield-container\">\n              <FormulaEditor\n                ref={formulaEditorRef}\n                value={internalEquationText}\n                error={validationErrorMessages?.length > 0}\n                onSelectionChange={setSelection}\n                onChange={(value) => {\n                  resetValidation();\n                  setInternalEquationText(value);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"options\">\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ minWidth: 96 }}\n            disabled={!internalEquationText || validating}\n            onClick={() => {\n              const validateFragment =\n                selection.start !== selection.end && selection.end - selection.start > 0;\n              const validateString = validateFragment\n                ? internalEquationText.substring(selection.start, selection.end)\n                : internalEquationText;\n              validate(validateString).then((result) => {\n                if (result.success) {\n                  formulaEditorRef.current?.focus(selection.start, selection.end);\n                } else if (result.errorPosition) {\n                  formulaEditorRef.current?.focus(\n                    result.errorPosition + (validateFragment ? selection.start : 0),\n                  );\n                }\n              });\n            }}\n          >\n            {selection.start !== selection.end && selection.end - selection.start > 0\n              ? intl.messages['toolsetView.validateSelection']\n              : intl.messages['toolsetView.validate']}\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ minWidth: 96 }}\n            onClick={() => {\n              resetValidation();\n              undoAll();\n            }}\n            disabled={internalEquationText === equationText || validating}\n          >\n            {intl.messages['toolsetView.undoAll']}\n          </Button>\n          <span style={{ marginLeft: 16 }} />\n          <Button variant=\"outlined\" color=\"primary\" style={{ minWidth: 96 }} onClick={onClose}>\n            {intl.messages['cancel']}\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ minWidth: 96 }}\n            disabled={\n              !internalEquationText ||\n              validating ||\n              internalEquationText === equationText ||\n              (!!validatedFormula && validationErrorMessages?.length > 0)\n            }\n            onClick={() => {\n              validateAndReturn().then((result) => {\n                if (result.success) {\n                  formulaEditorRef.current?.focus(selection.start, selection.end);\n                } else if (result.errorPosition) {\n                  formulaEditorRef.current?.focus(result.errorPosition);\n                }\n              });\n            }}\n          >\n            {intl.messages['ok']}\n          </Button>\n        </div>\n      </div>\n      {openLinkedValueSelectDialog && (\n        <LinkedValueSelectDialog\n          inspectionID={inspectionID}\n          equationId={equationId}\n          onClose={() => setOpenLinkedValueSelectDialog(false)}\n          onSelect={(_, link) => {\n            if (!link) {\n              return;\n            }\n            appendToInternalEquation(`\"${link}\"`);\n            setOpenLinkedValueSelectDialog(false);\n          }}\n        />\n      )}\n    </>\n  );\n};\n\ninterface FormulaEditPanelProps {\n  showInDialog?: boolean;\n  inspectionID: number;\n  equationText: string | undefined;\n  equationId: number;\n  onClose: () => void;\n  onSave: (equationText: string, validationResultValue: number | null) => void;\n  conditional?: boolean;\n}\n\nexport const FormulaEditPanel = ({\n  showInDialog,\n  inspectionID,\n  equationText,\n  equationId,\n  onClose,\n  onSave,\n  conditional,\n}: FormulaEditPanelProps) => {\n  const [internalEquationText, setInternalEquationText] = useState('');\n\n  const formulaValidation = useFormulaValidate(inspectionID, equationId);\n\n  const equationTextUnix = (equationText ?? '').replace(/\\r\\n/g, '\\n');\n\n  useEffect(() => {\n    setInternalEquationText(equationTextUnix);\n  }, [equationTextUnix]);\n\n  const undoAll = useCallback(() => {\n    setInternalEquationText(equationTextUnix);\n  }, [equationTextUnix]);\n\n  const titleProps: FormulaEditPanelTitleProps = {\n    ...formulaValidation,\n    conditional,\n    short: !showInDialog,\n    internalEquationText,\n  };\n\n  const panelProps: FormulaEditPanelBaseProps = {\n    ...formulaValidation,\n    onSave,\n    onClose,\n    inspectionID,\n    equationId,\n    equationText: equationTextUnix,\n    internalEquationText,\n    setInternalEquationText,\n    undoAll,\n  };\n\n  if (showInDialog) {\n    return (\n      <Dialog\n        title={<FormulaEditPanelTitle {...titleProps} />}\n        onClose={onClose}\n        open\n        isPositionAbsolute\n      >\n        <FormulaEditPanelBase {...panelProps} />\n      </Dialog>\n    );\n  } else {\n    return (\n      <div>\n        <FormulaEditPanelTitle {...titleProps} />\n        <FormulaEditPanelBase {...panelProps} />\n      </div>\n    );\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport EditIcon from '../../../assets/icons/edit.svg';\nimport IconButton from '../../../components/buttons/IconButton';\nimport modes from '../../../utils/modes';\nimport { canEditParameterView } from '../../../utils/permissions';\nimport { CommonMathToolProps } from '../common';\nimport { FormulaEditPanel } from './FormulaEditPanel';\nimport { ReadonlyFormula } from './ReadonlyFormula';\nimport { EquationValue } from './hooks/useFormula';\nimport { useFormulaValidate } from './hooks/useFormulaValidate';\n\nimport './FormulaTab.scss';\n\nexport const FormulaTab = ({\n  inspectionID,\n  value,\n  onChange,\n  toggleOptions,\n  loading,\n  conditional,\n}: CommonMathToolProps<EquationValue | null> & { conditional?: boolean }) => {\n  const intl = useIntl();\n\n  const [openFormulaEditPanel, setOpenFormulaEditPanel] = useState(false);\n\n  const myPermissions = useSelector<any>((state) => state.app?.myPermissions) as Set<string>;\n  const currentMode = useSelector<any>((state) => state.app?.proxy.mode) as string;\n\n  useEffect(() => {\n    toggleOptions(!openFormulaEditPanel);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [openFormulaEditPanel]);\n\n  const {\n    validate,\n    validating,\n    validatedFormula,\n    validationErrorMessages,\n    validationSuccessResult,\n  } = useFormulaValidate(inspectionID, value?.equationObjectID ?? 0);\n\n  useEffect(() => {\n    if (value?.equationText) {\n      validate(value.equationText);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value?.equationText]);\n\n  useEffect(() => {\n    if (\n      openFormulaEditPanel &&\n      (!canEditParameterView(myPermissions) || currentMode !== modes.editMode.id)\n    ) {\n      setOpenFormulaEditPanel(false);\n    }\n  }, [openFormulaEditPanel, myPermissions, currentMode]);\n\n  return (\n    <div className=\"tab-body\">\n      {loading || !value ? (\n        <CircularProgress />\n      ) : openFormulaEditPanel ? (\n        <FormulaEditPanel\n          conditional={conditional}\n          inspectionID={inspectionID}\n          equationId={value.equationObjectID}\n          equationText={value.equationText}\n          onClose={() => setOpenFormulaEditPanel(false)}\n          onSave={(equationText) => {\n            onChange({\n              ...value,\n              equationText,\n            });\n            setOpenFormulaEditPanel(false);\n          }}\n        />\n      ) : (\n        <div className=\"formula-tab\">\n          <label>{intl.messages['toolsetView.value']}:</label>\n          <span>\n            {validating\n              ? intl.messages['toolsetView.validating']\n              : validatedFormula && (\n                  <>\n                    {validationSuccessResult !== null &&\n                      (conditional\n                        ? validationSuccessResult\n                          ? 'TRUE'\n                          : 'FALSE'\n                        : validationSuccessResult)}\n                    {validationErrorMessages?.length > 0 && (\n                      <span>\n                        <span>{intl.messages['toolsetView.validationError']}.</span>&ensp;\n                        <span className=\"validation-error-info\">\n                          {validationErrorMessages.join('. ')}\n                        </span>\n                      </span>\n                    )}\n                  </>\n                )}\n          </span>\n          <label>{intl.messages['toolsetView.formula']}:</label>\n          <span\n            style={{\n              display: 'flex',\n              alignItems: 'flex-start',\n              flexWrap: 'wrap',\n              overflow: 'hidden',\n            }}\n          >\n            <ReadonlyFormula\n              style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}\n              codeStyle={{ whiteSpace: 'break-spaces' }}\n            >\n              {value.equationText}\n            </ReadonlyFormula>\n            <IconButton\n              onClick={() => setOpenFormulaEditPanel(true)}\n              style={{\n                height: 20,\n                width: 20,\n                marginLeft: 8,\n              }}\n              iconUrl={EditIcon}\n              tooltip={intl.messages['inputToolView.edit']}\n              enabled={canEditParameterView(myPermissions) && currentMode === modes.editMode.id}\n            />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/chevron-double-left.d02c0bfd.svg\";","export default __webpack_public_path__ + \"static/media/chevron-left.d49f6e12.svg\";","import { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\nimport EditIcon from '../../../assets/icons/edit.svg';\nimport IconButton from '../../../components/buttons/IconButton';\nimport { CommonEditorProps } from './common';\n\nimport './RawEditor.scss';\n\ninterface RawEditorProps {\n  numeric?: boolean;\n  onBlur?: () => void;\n  exitEditModeOnBlur?: boolean;\n}\n\nexport const RawEditor = ({\n  numeric,\n  value,\n  onChange,\n  onBlur,\n  exitEditModeOnBlur,\n}: CommonEditorProps<string> & RawEditorProps) => {\n  const intl = useIntl();\n\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <div className=\"raw-editor\">\n      {editMode ? (\n        <TextField\n          type={numeric ? 'number' : 'text'}\n          fullWidth\n          value={value}\n          onChange={(event) => onChange(event.target.value ?? '')}\n          onBlur={() => {\n            if (exitEditModeOnBlur) {\n              setEditMode(false);\n            }\n            onBlur?.();\n          }}\n          autoFocus\n        />\n      ) : (\n        <div className=\"view-mode\">\n          <span>{value}</span>\n          <IconButton\n            tooltip={intl.messages['inputToolView.edit']}\n            onClick={() => setEditMode(true)}\n            style={{ height: 20, width: 20 }}\n            iconUrl={EditIcon}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { Button, Slider } from '@material-ui/core';\nimport clsx from 'clsx';\nimport ChevronDoubleLeftIcon from '../../../assets/icons/chevron-double-left.svg';\nimport ChevronLeftIcon from '../../../assets/icons/chevron-left.svg';\nimport IconButton from '../../../components/buttons/IconButton';\nimport { RawEditor } from './RawEditor';\nimport { CommonEditorProps } from './common';\n\nimport './NumberEditor.scss';\n\nconst toggleNegative = (value: string) =>\n  value.startsWith('-') ? value.substring(1) : `-${value}`;\n\ninterface NumberEditorProps {\n  onlyIntegers?: boolean;\n  min?: number;\n  max?: number;\n  smallStep?: number;\n  largeStep?: number;\n  hideRawEditor?: boolean;\n}\n\nexport const NumberEditor = ({\n  value,\n  onChange,\n  onlyIntegers,\n  min,\n  max,\n  smallStep = 1,\n  largeStep = 10,\n  hideRawEditor,\n}: CommonEditorProps<number> & NumberEditorProps) => {\n  const [rawValue, setRawValue] = useState('');\n  const [invalidInternalValue, setInvalidInternalValue] = useState(false);\n\n  useEffect(() => {\n    setRawValue(value?.toString() ?? '');\n  }, [value]);\n\n  const clamp = (value: number) => {\n    if (typeof min === 'number' && value < min) return min;\n    if (typeof max === 'number' && value > max) return max;\n    return value;\n  };\n\n  const parseRawValue = (raw: string, fix = false) => {\n    setRawValue(raw);\n\n    const numberValue = onlyIntegers ? parseInt(raw) : parseFloat(raw);\n    if (\n      !isNaN(numberValue) &&\n      (typeof min !== 'number' || numberValue >= min) &&\n      (typeof max !== 'number' || numberValue <= max)\n    ) {\n      setInvalidInternalValue(false);\n      onChange(numberValue);\n    } else if (fix) {\n      setInvalidInternalValue(false);\n      const newValue = clamp(numberValue || 0);\n      onChange(newValue);\n      setRawValue(newValue.toString());\n    } else {\n      setInvalidInternalValue(true);\n    }\n  };\n\n  const keys = useMemo(\n    () => [...new Array(10).fill(0).map((_, i) => i.toString()), ...(onlyIntegers ? [] : ['.'])],\n    [onlyIntegers],\n  );\n\n  return (\n    <div className={clsx('number-editor', invalidInternalValue && 'invalid')}>\n      {!hideRawEditor && (\n        <RawEditor\n          numeric\n          value={rawValue}\n          onChange={parseRawValue}\n          onBlur={() => {\n            setRawValue(value.toString());\n            setInvalidInternalValue(false);\n          }}\n          exitEditModeOnBlur\n        />\n      )}\n      <div className=\"slider\">\n        <div style={{ display: 'flex', columnGap: 8 }}>\n          <IconButton\n            iconUrl={ChevronDoubleLeftIcon}\n            onClick={() => onChange(clamp(value - largeStep))}\n          />\n          <IconButton\n            iconUrl={ChevronLeftIcon}\n            onClick={() => onChange(clamp(value - smallStep))}\n          />\n        </div>\n        {typeof min === 'number' && typeof max === 'number' && (\n          <div className=\"slider-widget-container\">\n            <Slider\n              color=\"primary\"\n              value={value || 0}\n              onChange={(_, value) => onChange((Array.isArray(value) ? value[0] : value) || 0)}\n              valueLabelDisplay=\"auto\"\n              min={min}\n              max={max}\n              step={1}\n            />\n          </div>\n        )}\n        <div style={{ display: 'flex', columnGap: 8 }}>\n          <IconButton\n            style={{ transform: 'scaleX(-1)' }}\n            iconUrl={ChevronLeftIcon}\n            onClick={() => onChange(clamp(value + smallStep))}\n          />\n          <IconButton\n            style={{ transform: 'scaleX(-1)' }}\n            iconUrl={ChevronDoubleLeftIcon}\n            onClick={() => onChange(clamp(value + largeStep))}\n          />\n        </div>\n      </div>\n      <div className=\"keys\">\n        {(typeof min !== 'number' || min < 0) && (\n          <Button\n            variant=\"contained\"\n            disabled={\n              (typeof min === 'number' && parseFloat(toggleNegative(rawValue)) < min) ||\n              (typeof max === 'number' && parseFloat(toggleNegative(rawValue)) > max)\n            }\n            onClick={() => parseRawValue(toggleNegative(rawValue), true)}\n          >\n            -\n          </Button>\n        )}\n        {keys.map((key) => (\n          <Button\n            key={key}\n            variant=\"contained\"\n            disabled={\n              (key === '.' && rawValue.includes('.')) ||\n              (typeof max === 'number' &&\n                '1234567890'.includes(key) &&\n                parseFloat(rawValue + key) > max) ||\n              (typeof min === 'number' &&\n                '1234567890'.includes(key) &&\n                parseFloat(rawValue + key) < min)\n            }\n            onClick={() => {\n              if (key === '.' && rawValue.includes('.')) {\n                return;\n              }\n              parseRawValue(rawValue + key, true);\n            }}\n          >\n            {key}\n          </Button>\n        ))}\n        <Button\n          variant=\"contained\"\n          onClick={() =>\n            parseRawValue(rawValue.substring(0, Math.max(0, rawValue.length - 1)), true)\n          }\n        >\n          DEL\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport Protobuf from '../../../../protobuf/Protobuf';\nimport type Proxy from '../../../../protobuf/Proxy';\nimport logger from '../../../../utils/logger';\nimport modes from '../../../../utils/modes';\nimport {\n  bytesToString,\n  CommonHookProps,\n  EmbeddedIdEnum,\n  EmbeddedValue,\n  LinkedSelectedOption,\n  ResetType,\n  stringToBytes,\n  VARENUM,\n} from '../../common';\n\ninterface RangeValueBase {\n  rangeClass:\n    | EmbeddedIdEnum.RangeClassFailHighEId\n    | EmbeddedIdEnum.RangeClassFailLowEId\n    | EmbeddedIdEnum.RangeClassWarnHighEId\n    | EmbeddedIdEnum.RangeClassWarnLowEId;\n  inspectionID: number;\n  value: number;\n  equationId: number;\n  embeddedValueObjectID?: number;\n}\n\ninterface DirectRangeValue extends RangeValueBase {\n  option: LinkedSelectedOption.DirectValue;\n}\n\ninterface IndirectRangeValue extends RangeValueBase {\n  option: LinkedSelectedOption.IndirectValue;\n  indirectObjectId?: number;\n}\n\ninterface FormulaRangeValue extends RangeValueBase {\n  option: LinkedSelectedOption.Formula;\n  formula?: string;\n}\n\nexport type RangeValue = DirectRangeValue | IndirectRangeValue | FormulaRangeValue;\n\nexport interface Range {\n  failHigh?: RangeValue;\n  failLow?: RangeValue;\n  warnHigh?: RangeValue;\n  warnLow?: RangeValue;\n}\n\nexport const MIN_RANGE_VALUE = -1700000;\nexport const MAX_RANGE_VALUE = 1700000;\n\nexport function clampRangeValue(val: number) {\n  return Math.max(MIN_RANGE_VALUE, Math.min(MAX_RANGE_VALUE, val));\n}\n\nexport function compareRangeValues(a: RangeValue | undefined, b: RangeValue | undefined) {\n  if (a === b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  if (a.option !== b.option || a.value !== b.value) {\n    return false;\n  }\n  switch (a.option) {\n    case LinkedSelectedOption.IndirectValue:\n      if (a.indirectObjectId !== (b as typeof a).indirectObjectId) {\n        return false;\n      }\n      break;\n    case LinkedSelectedOption.Formula:\n      if (a.formula !== (b as typeof a).formula) {\n        return false;\n      }\n      break;\n  }\n\n  return true;\n}\n\nfunction getDefaultValue(rangeClass: RangeValueBase['rangeClass']) {\n  if (\n    [EmbeddedIdEnum.RangeClassFailHighEId, EmbeddedIdEnum.RangeClassWarnHighEId].includes(\n      rangeClass,\n    )\n  ) {\n    return 99999;\n  }\n  return 0;\n}\n\nexport const useRange = ({ inspectionID, data }: CommonHookProps) => {\n  const proxy = useSelector<any>((state) => state?.app?.proxy) as Proxy;\n  const currentMode = useSelector<any>((state) => state.app?.proxy.mode) as string;\n\n  const [loading, setLoading] = useState(false);\n  const [initialValue, setInitialValue] = useState<Range>({});\n  const [value, setValue] = useState<Range>({});\n  const [rangeObjectID, setRangeObjectID] = useState(0);\n\n  const modified =\n    value &&\n    initialValue &&\n    (!compareRangeValues(value.failHigh, initialValue.failHigh) ||\n      !compareRangeValues(value.failLow, initialValue.failLow) ||\n      !compareRangeValues(value.warnHigh, initialValue.warnHigh) ||\n      !compareRangeValues(value.warnLow, initialValue.warnLow));\n\n  useEffect(() => {\n    const getRange = (objectId: number) => {\n      return proxy.protobuf.request(\n        Protobuf.SvPb.InspectionCmdRequest.create({\n          inspectionID,\n          getEmbeddedValuesRequest: {\n            objectId,\n          },\n        }),\n      );\n    };\n\n    if (currentMode !== modes.unknownMode.id) {\n      const request = Protobuf.SvPb.InspectionCmdRequest.create({\n        inspectionID,\n        getObjectIdRequest: {\n          info: {\n            ownerId: parseInt(data.objectID ?? ''),\n            infoStruct: {\n              objectType: 0x00200000, //SVObjectTypeEnum.SVRangeObjectType\n              subType: 0, //SVObjectSubTypeEnum.SVNotSetSubObjectType\n              embeddedID: EmbeddedIdEnum.NoEmbeddedId,\n            },\n          },\n        },\n      });\n      setLoading(true);\n      proxy.protobuf\n        .request(request)\n        .then((res: any) => {\n          setRangeObjectID(res?.getObjectIdResponse?.objectId);\n          getRange(rangeObjectID).then(async (res: any) => {\n            const embeddedValues: EmbeddedValue[] = res?.getEmbeddedValuesResponse?.list ?? [];\n\n            const getRangeValue = async (\n              embeddedIdRangeClass: RangeValueBase['rangeClass'],\n            ): Promise<RangeValue | undefined> => {\n              const embeddedValue = embeddedValues.find(\n                (entry) => entry.embeddedId === embeddedIdRangeClass,\n              );\n\n              const embeddedValueObjectID = embeddedValue?.objectId;\n\n              const linkedValue = embeddedValue?.linkedValue;\n              if (!linkedValue) {\n                return undefined;\n              }\n\n              const common = {\n                inspectionID,\n                rangeClass: embeddedIdRangeClass,\n                option: linkedValue.option,\n                embeddedValueObjectID,\n                equationId: linkedValue.equationId,\n              };\n\n              switch (linkedValue.option) {\n                case LinkedSelectedOption.DirectValue:\n                  return {\n                    ...common,\n                    value:\n                      linkedValue.directValue?.dblVal ??\n                      linkedValue.value.dblVal ??\n                      linkedValue.defaultValue.dblVal ??\n                      0,\n                  };\n                case LinkedSelectedOption.IndirectValue: {\n                  return {\n                    ...common,\n                    value: linkedValue.value.dblVal ?? linkedValue.defaultValue.dblVal ?? 0,\n                    indirectObjectId: (() => {\n                      try {\n                        return parseInt(\n                          bytesToString(linkedValue.indirectIDString ?? new Uint8Array()).replace(\n                            /[^\\d]/g,\n                            '',\n                          ),\n                        );\n                      } catch (e) {\n                        logger.error(e instanceof Error ? e.message : String(e));\n                      }\n                    })(),\n                  };\n                }\n                case LinkedSelectedOption.Formula:\n                  return {\n                    ...common,\n                    value: linkedValue.value.dblVal ?? linkedValue.defaultValue.dblVal ?? 0,\n                    formula: bytesToString(linkedValue.formula),\n                  };\n              }\n            };\n            const range = {\n              failHigh: await getRangeValue(EmbeddedIdEnum.RangeClassFailHighEId),\n              failLow: await getRangeValue(EmbeddedIdEnum.RangeClassFailLowEId),\n              warnHigh: await getRangeValue(EmbeddedIdEnum.RangeClassWarnHighEId),\n              warnLow: await getRangeValue(EmbeddedIdEnum.RangeClassWarnLowEId),\n            };\n\n            setInitialValue(range);\n            setValue(range);\n          });\n        })\n        .catch(logger.error)\n        .finally(() => setLoading(false));\n    }\n  }, [data.objectID, inspectionID, proxy.protobuf, rangeObjectID, currentMode]);\n\n  const saveChanges = useCallback(async () => {\n    if (!modified) {\n      return [];\n    }\n\n    if (\n      value.failHigh?.option === LinkedSelectedOption.DirectValue &&\n      value.failLow?.option === LinkedSelectedOption.DirectValue &&\n      value.failHigh?.value < value.failLow?.value\n    ) {\n      return ['Fail low value is bigger than fail high value'];\n    }\n\n    if (\n      value.warnHigh?.option === LinkedSelectedOption.DirectValue &&\n      value.warnLow?.option === LinkedSelectedOption.DirectValue &&\n      value.warnHigh?.value < value.warnLow?.value\n    ) {\n      return ['Warn low value is bigger than warn high value'];\n    }\n    const req = Protobuf.SvPb.InspectionCmdRequest.create({\n      inspectionID,\n      setEmbeddedValuesRequest: {\n        objectId: rangeObjectID,\n        list: Object.values(value).reduce(\n          (\n            acc: { values: EmbeddedValue; isModified: boolean }[],\n            rangeValue: RangeValue | undefined,\n          ) => {\n            if (!rangeValue) {\n              return acc;\n            }\n            acc.push({\n              values: {\n                objectId: rangeValue.embeddedValueObjectID ?? 0,\n                embeddedId: rangeValue.rangeClass ?? EmbeddedIdEnum.NoEmbeddedId,\n                linkedValue: {\n                  option: rangeValue.option,\n                  defaultValue: {\n                    type: VARENUM.VT_R8,\n                    dblVal: getDefaultValue(rangeValue.rangeClass),\n                  },\n                  value: { type: VARENUM.VT_R8, dblVal: clampRangeValue(rangeValue.value ?? 0) },\n                  directValue:\n                    rangeValue.option === LinkedSelectedOption.DirectValue\n                      ? { type: VARENUM.VT_R8, dblVal: clampRangeValue(rangeValue.value ?? 0) }\n                      : undefined,\n                  indirectIDString:\n                    rangeValue.option === LinkedSelectedOption.IndirectValue\n                      ? stringToBytes(`{#${rangeValue.indirectObjectId}}`)\n                      : undefined,\n                  equationId: rangeValue.equationId,\n                  formula:\n                    rangeValue.option === LinkedSelectedOption.Formula\n                      ? stringToBytes(rangeValue.formula?.replace(/\\n/g, ''))\n                      : undefined,\n                },\n              },\n              isModified: true,\n            });\n            return acc;\n          },\n          [],\n        ),\n        resetType: ResetType.RT_FromObject,\n      },\n    });\n    const res = await proxy.protobuf.request(req);\n    const errors: string[] = res?.standardResponse?.errorMessages?.messages?.map(\n      (msg: any) => msg.messageText,\n    );\n    if (!errors?.length) {\n      setInitialValue(value);\n    }\n    return errors ?? [];\n  }, [inspectionID, modified, proxy.protobuf, value, rangeObjectID]);\n\n  return { value, setValue, modified, loading, saveChanges };\n};\n","import { useEffect, useState } from 'react';\nimport { Button, CircularProgress, MenuItem, Select, TextField } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport EditIcon from '../../../assets/icons/edit.svg';\nimport IconButton, { IconButtonProps } from '../../../components/buttons/IconButton';\nimport Product from '../../../protobuf/Product';\nimport type Proxy from '../../../protobuf/Proxy';\nimport modes from '../../../utils/modes';\nimport { canEditParameterView } from '../../../utils/permissions';\nimport { NumberEditor } from '../../InputToolView/components/NumberEditor';\nimport { CommonMathToolProps, EmbeddedIdEnum, LinkedSelectedOption } from '../common';\nimport { FormulaEditPanel } from './FormulaEditPanel';\nimport { LinkedValueSelectDialog } from './LinkedValueSelectDialog';\nimport { ReadonlyFormula } from './ReadonlyFormula';\nimport { useIndirectValueObjectName } from './hooks/useIndirectValueObjectName';\nimport {\n  clampRangeValue,\n  compareRangeValues,\n  MAX_RANGE_VALUE,\n  MIN_RANGE_VALUE,\n  Range,\n  RangeValue,\n} from './hooks/useRange';\n\nimport './RangeTab.scss';\n\nfunction getRangeClassName(classEnum: RangeValue['rangeClass']) {\n  switch (classEnum) {\n    case EmbeddedIdEnum.RangeClassFailHighEId:\n      return 'Fail high';\n    case EmbeddedIdEnum.RangeClassFailLowEId:\n      return 'Fail low';\n    case EmbeddedIdEnum.RangeClassWarnHighEId:\n      return 'Warn high';\n    case EmbeddedIdEnum.RangeClassWarnLowEId:\n      return 'Warn low';\n  }\n}\n\nconst RangeValuePreview = ({\n  inspectionID,\n  rangeValue,\n  onOpenEditView,\n  editButtonEnabled,\n}: {\n  inspectionID: number;\n  rangeValue?: RangeValue;\n  onOpenEditView: (value: RangeValue) => void;\n  editButtonEnabled: boolean;\n}) => {\n  const intl = useIntl();\n\n  if (!rangeValue) {\n    return <span>-</span>;\n  }\n\n  const editButtonProps: IconButtonProps = {\n    onClick: () => onOpenEditView(rangeValue),\n    style: { height: 20, width: 20 },\n    iconUrl: EditIcon,\n    tooltip: intl.messages['inputToolView.edit'],\n    enabled: editButtonEnabled,\n  };\n\n  switch (rangeValue.option) {\n    case LinkedSelectedOption.DirectValue:\n      return (\n        <div className=\"range-value-preview\">\n          <span>{rangeValue.value}</span>\n          <IconButton {...editButtonProps} />\n        </div>\n      );\n    case LinkedSelectedOption.IndirectValue:\n      return (\n        <div className=\"range-value-preview\">\n          <IndirectValue\n            inspectionId={inspectionID}\n            objectId={rangeValue.indirectObjectId}\n            defaultValue={rangeValue.value}\n          />\n          <IconButton {...editButtonProps} />\n          <span className=\"info\">\n            ({intl.messages['toolsetView.link']}:&ensp;\n            <i>\n              <IndirectValueObjectName\n                inspectionID={inspectionID}\n                value={rangeValue.indirectObjectId}\n              />\n            </i>\n            )\n          </span>\n        </div>\n      );\n    case LinkedSelectedOption.Formula:\n      return (\n        <div className=\"range-value-preview\">\n          <span>{rangeValue.value}</span>\n          <IconButton {...editButtonProps} />\n          <span className=\"info\">\n            (Formula:&ensp;\n            <i>\n              <ReadonlyFormula style={{ whiteSpace: 'nowrap' }}>\n                {rangeValue.formula}\n              </ReadonlyFormula>\n            </i>\n            )\n          </span>\n        </div>\n      );\n  }\n};\n\nconst IndirectValueObjectName = ({\n  inspectionID,\n  value,\n}: {\n  inspectionID: number;\n  value?: number;\n}) => {\n  const { name } = useIndirectValueObjectName(inspectionID, value);\n\n  return <span>{name}</span>;\n};\n\nconst IndirectValue = ({\n  inspectionId,\n  objectId,\n  defaultValue,\n}: {\n  inspectionId: number;\n  objectId?: number;\n  defaultValue: number;\n}) => {\n  const proxy = useSelector<any>((state) => state?.app?.proxy) as Proxy;\n\n  const [value, setValue] = useState(defaultValue);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const onProduct = ({ product }: { product: Product }) => {\n      const productValue = product\n        ?.getValuesAsString([objectId], '')\n        ?.find((entry: any) => parseInt(entry.id) === objectId)?.value;\n\n      setError(productValue === '');\n      setValue(productValue || defaultValue);\n      return Promise.resolve();\n    };\n\n    const startAtTriggerCount = -1;\n    const desc = {\n      inspectionId,\n      valueIds: [objectId],\n      startAtTriggerCount,\n    };\n    const productSub = proxy.subscribeToProductStream(desc, onProduct);\n\n    return () => {\n      if (productSub) {\n        proxy.unsubscribeFromProductStream(productSub);\n      }\n    };\n  }, [defaultValue, inspectionId, objectId, proxy]);\n\n  return <span className={clsx(error && 'indirect-value-error')}>{value ?? '-'}</span>;\n};\n\nconst RangeValueEditor = ({\n  inspectionID,\n  value,\n  onExit,\n  onChange,\n}: Omit<CommonMathToolProps<RangeValue>, 'loading' | 'toggleOptions'> & { onExit: () => void }) => {\n  const intl = useIntl();\n\n  const [internalValue, setInternalValue] = useState(value);\n  const [openLinkedValueSelectDialog, setOpenLinkedValueSelectDialog] = useState(false);\n  const [openFormulaEditDialog, setOpenFormulaEditDialog] = useState(false);\n\n  const myPermissions = useSelector<any>((state) => state.app?.myPermissions) as Set<string>;\n  const currentMode = useSelector<any>((state) => state.app?.proxy.mode) as string;\n\n  useEffect(() => {\n    setInternalValue(value);\n  }, [value]);\n\n  useEffect(() => {\n    if (\n      openLinkedValueSelectDialog &&\n      (!canEditParameterView(myPermissions) || currentMode !== modes.editMode.id)\n    ) {\n      setOpenLinkedValueSelectDialog(false);\n    }\n  }, [openLinkedValueSelectDialog, myPermissions, currentMode]);\n\n  useEffect(() => {\n    if (\n      openFormulaEditDialog &&\n      (!canEditParameterView(myPermissions) || currentMode !== modes.editMode.id)\n    ) {\n      setOpenFormulaEditDialog(false);\n    }\n  }, [openFormulaEditDialog, myPermissions, currentMode]);\n\n  const applyChanges = () => {\n    onChange(internalValue);\n    onExit();\n  };\n\n  const modified = !compareRangeValues(value, internalValue);\n  const invalid =\n    (internalValue.option === LinkedSelectedOption.IndirectValue &&\n      !internalValue.indirectObjectId) ||\n    (internalValue.option === LinkedSelectedOption.Formula && !internalValue.formula);\n\n  return (\n    <div className=\"range-value-editor\">\n      <header>{getRangeClassName(internalValue.rangeClass)}</header>\n      <div className=\"type-options\">\n        <label>{intl.messages['inputToolView.type']}:</label>\n        <Select\n          defaultValue={internalValue.option}\n          value={internalValue.option}\n          onChange={(event) =>\n            setInternalValue({\n              ...internalValue,\n              option: event.target.value as LinkedSelectedOption,\n            })\n          }\n          style={{ minWidth: 128, width: 'auto' }}\n        >\n          <MenuItem value={LinkedSelectedOption.DirectValue}>\n            {intl.messages['toolsetView.value']}\n          </MenuItem>\n          <MenuItem value={LinkedSelectedOption.IndirectValue}>\n            {intl.messages['toolsetView.link']}\n          </MenuItem>\n          <MenuItem value={LinkedSelectedOption.Formula}>\n            {intl.messages['toolsetView.formula']}\n          </MenuItem>\n        </Select>\n      </div>\n      {internalValue.option === LinkedSelectedOption.DirectValue && (\n        <div className=\"direct-editor-container\">\n          <div className=\"direct-editor\">\n            <label>{intl.messages['toolsetView.value']}:</label>\n            <TextField\n              fullWidth\n              type=\"number\"\n              value={internalValue.value}\n              onChange={(event) =>\n                setInternalValue({\n                  ...internalValue,\n                  value: clampRangeValue(parseFloat(event.target.value ?? 0)),\n                })\n              }\n              autoFocus\n            />\n          </div>\n          <NumberEditor\n            value={internalValue.value}\n            onChange={(value) =>\n              setInternalValue({\n                ...internalValue,\n                value: clampRangeValue(value),\n              })\n            }\n            min={MIN_RANGE_VALUE}\n            max={MAX_RANGE_VALUE}\n            hideRawEditor\n          />\n        </div>\n      )}\n      {internalValue.option === LinkedSelectedOption.IndirectValue && (\n        <div className=\"indirect-editor\">\n          <label>{intl.messages['toolsetView.value']}:</label>\n          <IndirectValue\n            inspectionId={inspectionID}\n            objectId={internalValue.indirectObjectId}\n            defaultValue={internalValue.value}\n          />\n          <label>{intl.messages['toolsetView.link']}:</label>\n          <span style={{ display: 'flex', alignItems: 'center' }}>\n            <IndirectValueObjectName\n              inspectionID={inspectionID}\n              value={internalValue.indirectObjectId}\n            />\n            <IconButton\n              onClick={() => setOpenLinkedValueSelectDialog(true)}\n              style={{ height: 20, width: 20, marginLeft: 8 }}\n              iconUrl={EditIcon}\n              tooltip={intl.messages['inputToolView.edit']}\n              enabled={canEditParameterView(myPermissions) && currentMode === modes.editMode.id}\n            />\n          </span>\n          {openLinkedValueSelectDialog && (\n            <LinkedValueSelectDialog\n              inspectionID={internalValue.inspectionID}\n              equationId={internalValue.equationId}\n              value={internalValue.indirectObjectId}\n              onClose={() => setOpenLinkedValueSelectDialog(false)}\n              onSelect={(objectId) => {\n                setInternalValue({\n                  ...internalValue,\n                  indirectObjectId: objectId,\n                });\n                setOpenLinkedValueSelectDialog(false);\n              }}\n            />\n          )}\n        </div>\n      )}\n      {internalValue.option === LinkedSelectedOption.Formula && (\n        <div className=\"formula-editor\">\n          <label>{intl.messages['toolsetView.value']}:</label>\n          <span>{internalValue.value}</span>\n          <label>{intl.messages['toolsetView.formula']}:</label>\n          <span style={{ display: 'flex', alignItems: 'center' }}>\n            <ReadonlyFormula>{internalValue.formula}</ReadonlyFormula>\n            <IconButton\n              onClick={() => setOpenFormulaEditDialog(true)}\n              style={{ height: 20, width: 20, marginLeft: 8 }}\n              iconUrl={EditIcon}\n              tooltip={intl.messages['inputToolView.edit']}\n              enabled={canEditParameterView(myPermissions) && currentMode === modes.editMode.id}\n            />\n          </span>\n          {openFormulaEditDialog && (\n            <FormulaEditPanel\n              showInDialog\n              inspectionID={internalValue.inspectionID}\n              equationId={internalValue.equationId}\n              equationText={internalValue.formula}\n              onClose={() => setOpenFormulaEditDialog(false)}\n              onSave={(equationText, validationResultValue) => {\n                setInternalValue({\n                  ...internalValue,\n                  formula: equationText,\n                  value: validationResultValue ?? internalValue.value,\n                });\n                setOpenFormulaEditDialog(false);\n              }}\n            />\n          )}\n        </div>\n      )}\n      <div className=\"options\">\n        <Button variant=\"outlined\" color=\"primary\" onClick={onExit} style={{ minWidth: 128 }}>\n          {intl.messages['cancel']}\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={applyChanges}\n          style={{ minWidth: 128 }}\n          disabled={!modified || invalid}\n        >\n          {intl.messages['ok']}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport const RangeTab = ({\n  inspectionID,\n  value,\n  onChange,\n  toggleOptions,\n  loading,\n}: CommonMathToolProps<Range>) => {\n  const [editingValue, setEditingValue] = useState<RangeValue | null>(null);\n\n  const myPermissions = useSelector<any>((state) => state.app?.myPermissions) as Set<string>;\n  const currentMode = useSelector<any>((state) => state.app?.proxy.mode) as string;\n\n  useEffect(() => {\n    toggleOptions(!editingValue);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [!!editingValue]);\n\n  useEffect(() => {\n    if (\n      editingValue &&\n      (!canEditParameterView(myPermissions) || currentMode !== modes.editMode.id)\n    ) {\n      setEditingValue(null);\n    }\n  }, [editingValue, myPermissions, currentMode]);\n\n  const handleChange = (rangeValue: RangeValue) => {\n    setEditingValue(rangeValue);\n\n    switch (rangeValue.rangeClass) {\n      case EmbeddedIdEnum.RangeClassFailHighEId:\n        onChange({ ...value, failHigh: rangeValue });\n        break;\n      case EmbeddedIdEnum.RangeClassFailLowEId:\n        onChange({ ...value, failLow: rangeValue });\n        break;\n      case EmbeddedIdEnum.RangeClassWarnHighEId:\n        onChange({ ...value, warnHigh: rangeValue });\n        break;\n      case EmbeddedIdEnum.RangeClassWarnLowEId:\n        onChange({ ...value, warnLow: rangeValue });\n        break;\n    }\n  };\n\n  return (\n    <div className=\"tab-body range-tab\">\n      {loading ? (\n        <CircularProgress />\n      ) : editingValue ? (\n        <RangeValueEditor\n          inspectionID={inspectionID}\n          value={editingValue}\n          onExit={() => setEditingValue(null)}\n          onChange={handleChange}\n        />\n      ) : (\n        <div className=\"values-list\">\n          <label>{getRangeClassName(EmbeddedIdEnum.RangeClassFailHighEId)}:</label>\n          <RangeValuePreview\n            inspectionID={inspectionID}\n            rangeValue={value.failHigh}\n            onOpenEditView={setEditingValue}\n            editButtonEnabled={\n              canEditParameterView(myPermissions) && currentMode === modes.editMode.id\n            }\n          />\n          <label>{getRangeClassName(EmbeddedIdEnum.RangeClassWarnHighEId)}:</label>\n          <RangeValuePreview\n            inspectionID={inspectionID}\n            rangeValue={value.warnHigh}\n            onOpenEditView={setEditingValue}\n            editButtonEnabled={\n              canEditParameterView(myPermissions) && currentMode === modes.editMode.id\n            }\n          />\n          <label>{getRangeClassName(EmbeddedIdEnum.RangeClassWarnLowEId)}:</label>\n          <RangeValuePreview\n            inspectionID={inspectionID}\n            rangeValue={value.warnLow}\n            onOpenEditView={setEditingValue}\n            editButtonEnabled={\n              canEditParameterView(myPermissions) && currentMode === modes.editMode.id\n            }\n          />\n          <label>{getRangeClassName(EmbeddedIdEnum.RangeClassFailLowEId)}:</label>\n          <RangeValuePreview\n            inspectionID={inspectionID}\n            rangeValue={value.failLow}\n            onOpenEditView={setEditingValue}\n            editButtonEnabled={\n              canEditParameterView(myPermissions) && currentMode === modes.editMode.id\n            }\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Protobuf from '../../../../protobuf/Protobuf';\nimport type Proxy from '../../../../protobuf/Proxy';\nimport logger from '../../../../utils/logger';\nimport modes from '../../../../utils/modes';\nimport { CommonHookProps, EmbeddedIdEnum } from '../../common';\n\nexport interface EquationValue {\n  equationText: string;\n  equationObjectID: number;\n}\n\nexport const useFormula = ({\n  inspectionID,\n  data,\n  conditional,\n}: CommonHookProps & { conditional?: boolean }) => {\n  const proxy = useSelector<any>((state) => state?.app?.proxy) as Proxy;\n  const currentMode = useSelector<any>((state) => state.app?.proxy.mode) as string;\n\n  const [loading, setLoading] = useState(false);\n  const [initialValue, setInitialValue] = useState<EquationValue | null>(null);\n  const [value, setValue] = useState<EquationValue | null>(null);\n\n  const modified = value !== initialValue;\n\n  useEffect(() => {\n    const getEquation = (objectId: number) => {\n      return proxy.protobuf.request(\n        Protobuf.SvPb.InspectionCmdRequest.create({\n          inspectionID,\n          getEquationRequest: {\n            objectId,\n          },\n        }),\n      );\n    };\n\n    if (currentMode !== modes.unknownMode.id) {\n      const request = Protobuf.SvPb.InspectionCmdRequest.create({\n        inspectionID,\n        getObjectIdRequest: {\n          info: {\n            ownerId: parseInt(data.objectID ?? ''),\n            infoStruct: {\n              objectType: 8, //SVObjectTypeEnum.SVEquationObjectType\n              subType: conditional ? 1024 : 1025, //conditional ? SVObjectSubTypeEnum.SVConditionalObjectType : SVObjectSubTypeEnum.SVMathEquationObjectType\n              embeddedID: EmbeddedIdEnum.NoEmbeddedId,\n            },\n          },\n        },\n      });\n      setLoading(true);\n      proxy.protobuf\n        .request(request)\n        .then((res: any) => {\n          const equationObjectID: number = res?.getObjectIdResponse?.objectId;\n          getEquation(equationObjectID).then((res: any) => {\n            const equationValue: EquationValue = {\n              equationText: res?.getEquationResponse?.equationText ?? '',\n              equationObjectID,\n            };\n            setValue(equationValue);\n            setInitialValue(equationValue);\n          });\n        })\n        .catch(logger.error)\n        .finally(() => setLoading(false));\n    }\n  }, [conditional, data.objectID, inspectionID, proxy.protobuf, currentMode]);\n\n  const saveChanges = useCallback(async () => {\n    if (!modified || !value) {\n      return [];\n    }\n\n    const res = await proxy.protobuf.request(\n      Protobuf.SvPb.InspectionCmdRequest.create({\n        inspectionID,\n        validateAndSetEquationRequest: {\n          objectId: value.equationObjectID,\n          equationText: value.equationText.replace(/([^\\r])\\n/g, '$1\\r\\n'),\n          bSetValue: true,\n        },\n      }),\n    );\n\n    const errors: string[] = res?.standardResponse?.errorMessages?.messages?.map(\n      (msg: any) => msg.messageText,\n    );\n    if (!errors?.length) {\n      setInitialValue(value);\n    }\n    return errors ?? [];\n  }, [inspectionID, modified, proxy.protobuf, value]);\n\n  return { value, setValue, modified, loading, saveChanges };\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\nimport { ToolsetTreeNode } from '..';\nimport logger from '../../../utils/logger';\nimport { CommonHookProps, CommonMathToolProps } from '../common';\nimport { CommentTab } from './CommentTab';\nimport { FormulaTab } from './FormulaTab';\nimport { RangeTab } from './RangeTab';\nimport { useComment } from './hooks/useComment';\nimport { useFormula } from './hooks/useFormula';\nimport { useRange } from './hooks/useRange';\n\nimport './style.scss';\n\nexport function isMathTool(node?: ToolsetTreeNode) {\n  if (!node) {\n    return false;\n  }\n  return (\n    (node.objectType === 'SVToolObjectType' && node.objectSubType === 'SVMathToolObjectType') ||\n    (node.objectType === 0x7 && //SVObjectTypeEnum.SVToolObjectType\n      node.objectSubType === 0x12) //SVObjectSubTypeEnum.SVMathToolObjectType\n  );\n}\n\ninterface MathToolProps extends CommonHookProps {\n  view: string;\n}\n\nconst noDisplayStyle: React.CSSProperties = { display: 'none' };\n\nexport const MathTool = ({ inspectionID, data, view }: MathToolProps) => {\n  const intl = useIntl();\n\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState<string[]>([]);\n  const [success, setSuccess] = useState(false);\n  const [showOptions, setShowOptions] = useState(true);\n\n  const commonProps = { inspectionID, data };\n  const formula = useFormula(commonProps);\n  const conditional = useFormula({ ...commonProps, conditional: true });\n  const range = useRange(commonProps);\n  const comment = useComment(commonProps);\n\n  useEffect(() => {\n    if (comment.modified || range.modified || formula.modified || conditional.modified) {\n      setSuccess(false);\n    }\n  }, [comment.modified, conditional.modified, formula.modified, range.modified]);\n\n  useEffect(() => {\n    setSuccess(false);\n    setErrors([]);\n  }, [view]);\n\n  const toggleOptions = (showOptions: boolean) => {\n    setShowOptions(showOptions);\n    if (!showOptions) {\n      setSuccess(false);\n      setErrors([]);\n    }\n  };\n\n  const views = useMemo<\n    {\n      name: string;\n      component: ({ value, onChange, loading }: CommonMathToolProps<any>) => JSX.Element;\n      props: CommonMathToolProps<any>;\n    }[]\n  >(\n    () => [\n      {\n        name: 'Formula',\n        component: FormulaTab,\n        props: {\n          inspectionID,\n          value: formula.value,\n          onChange: formula.setValue,\n          toggleOptions,\n          loading: formula.loading,\n        },\n      },\n      {\n        name: 'Range',\n        component: RangeTab,\n        props: {\n          inspectionID,\n          value: range.value,\n          onChange: range.setValue,\n          toggleOptions,\n          loading: range.loading,\n        },\n      },\n      {\n        name: 'Conditional',\n        component: FormulaTab,\n        props: {\n          inspectionID,\n          value: conditional.value,\n          onChange: conditional.setValue,\n          toggleOptions,\n          loading: conditional.loading,\n          conditional: true,\n        },\n      },\n      {\n        name: 'Comment',\n        component: CommentTab,\n        props: {\n          inspectionID,\n          value: comment.value,\n          onChange: comment.setValue,\n          toggleOptions,\n          loading: comment.loading,\n        },\n      },\n    ],\n    [\n      inspectionID,\n      formula.value,\n      formula.setValue,\n      formula.loading,\n      range.value,\n      range.setValue,\n      range.loading,\n      conditional.value,\n      conditional.setValue,\n      conditional.loading,\n      comment.value,\n      comment.setValue,\n      comment.loading,\n    ],\n  );\n\n  const modified = useMemo(() => {\n    switch (view) {\n      case 'Comment':\n        return comment.modified;\n      case 'Range':\n        return range.modified;\n      case 'Formula':\n        return formula.modified;\n      case 'Conditional':\n        return conditional.modified;\n    }\n    return false;\n  }, [comment.modified, conditional.modified, formula.modified, range.modified, view]);\n\n  const saveChanges = async () => {\n    setSaving(true);\n    setSuccess(false);\n    try {\n      const commentErrors = await comment.saveChanges();\n      const rangeErrors = await range.saveChanges();\n      const formulaErrors = await formula.saveChanges();\n      const conditionalErrors = await conditional.saveChanges();\n\n      const totalErrors = [\n        ...commentErrors,\n        ...rangeErrors,\n        ...formulaErrors,\n        ...conditionalErrors,\n      ];\n      setErrors(totalErrors);\n      setSuccess(!totalErrors?.length);\n    } catch (e) {\n      logger.error(e instanceof Error ? e.message : String(e));\n      setErrors([e instanceof Error ? e.message : String(e)]);\n    }\n    setSaving(false);\n  };\n\n  return (\n    <div className=\"math-tool\">\n      <header>\n        {data.name}&nbsp;|&nbsp;{view}\n        {modified ? '*' : ''}\n      </header>\n      <div className=\"math-tool-body\">\n        <div className=\"content\">\n          {views.map((t) => (\n            <div key={t.name} style={view === t.name ? {} : noDisplayStyle}>\n              <t.component {...t.props} />\n            </div>\n          ))}\n        </div>\n      </div>\n      {showOptions && (\n        <div className=\"options\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={saveChanges}\n            disabled={saving || !modified}\n            style={{ minWidth: 128 }}\n          >\n            {saving ? <CircularProgress size={24} /> : intl.messages['save']}\n          </Button>\n          {!saving && errors?.length > 0 && (\n            <div className=\"errors\">\n              {errors.map((err, index) => (\n                <span key={index}>{err}</span>\n              ))}\n            </div>\n          )}\n          {!saving && success && (\n            <div className=\"success\">{intl.messages['toolsetView.savingSuccess']}</div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Protobuf from '../../../../protobuf/Protobuf';\nimport type Proxy from '../../../../protobuf/Proxy';\nimport logger from '../../../../utils/logger';\nimport { CommonHookProps, EmbeddedIdEnum, EmbeddedValue, VARENUM } from '../../common';\n\nexport const useComment = ({ inspectionID, data }: CommonHookProps) => {\n  const proxy = useSelector<any>((state) => state?.app?.proxy) as Proxy;\n\n  const [loading, setLoading] = useState(false);\n  const [initialValue, setInitialValue] = useState('');\n  const [value, setValue] = useState('');\n  const [embeddedValueObjectID, setEmbeddedValueObjectID] = useState<number | undefined>(undefined);\n\n  const modified = value !== initialValue;\n\n  useEffect(() => {\n    const request = Protobuf.SvPb.InspectionCmdRequest.create({\n      inspectionID,\n      getEmbeddedValuesRequest: {\n        objectId: parseInt(data.objectID ?? ''),\n      },\n    });\n    setLoading(true);\n    proxy.protobuf\n      .request(request)\n      .then((res: any) => {\n        const embeddedValues: EmbeddedValue[] = res?.getEmbeddedValuesResponse?.list ?? [];\n        const value = embeddedValues.find(\n          (entry) => entry.embeddedId === EmbeddedIdEnum.ToolCommentTypeEId,\n        );\n        setEmbeddedValueObjectID(value?.objectId);\n        const commentValue =\n          value?.value?.value?.strVal ?? value?.value?.defaultValue?.strVal ?? '';\n        setInitialValue(commentValue);\n        setValue(commentValue);\n      })\n      .catch(logger.error)\n      .finally(() => setLoading(false));\n  }, [data.objectID, inspectionID, proxy.protobuf]);\n\n  const saveChanges = useCallback(async () => {\n    if (!modified) {\n      return [];\n    }\n    const res = await proxy.protobuf.request(\n      Protobuf.SvPb.InspectionCmdRequest.create({\n        inspectionID,\n        setEmbeddedValuesRequest: {\n          objectId: parseInt(data.objectID ?? ''),\n          list: [\n            {\n              values: {\n                objectId: embeddedValueObjectID,\n                embeddedId: EmbeddedIdEnum.ToolCommentTypeEId,\n                value: {\n                  defaultValue: { type: VARENUM.VT_BSTR, strVal: '' },\n                  value: { type: VARENUM.VT_BSTR, strVal: value.trim() },\n                },\n              } as EmbeddedValue,\n              isModified: true,\n            },\n          ],\n        },\n      }),\n    );\n    const errors: string[] = res?.standardResponse?.errorMessages?.messages?.map(\n      (msg: any) => msg.messageText,\n    );\n    if (!errors?.length) {\n      setInitialValue(value);\n    }\n    return errors ?? [];\n  }, [data.objectID, embeddedValueObjectID, inspectionID, modified, proxy.protobuf, value]);\n\n  return { value, setValue, modified, loading, saveChanges };\n};\n","import { Key } from 'react';\nimport { useIntl } from 'react-intl';\nimport shortId from 'shortid';\n\nimport './style.scss';\nimport IconButton from '../../../../components/buttons/IconButton';\nimport { ToggleButton } from '../../../../components/buttons/ToggleButton';\nimport { TOGGLE_BUTTON, SEPARATOR } from '../../../../types/ActionBarType';\n\nexport interface ToolSetBarProps {\n  tools: {\n    id?: Key;\n    intlId: string;\n    onClickHandler: () => void;\n    iconUrl: string;\n    enabled: boolean;\n    type?: typeof TOGGLE_BUTTON | typeof SEPARATOR;\n    intlIdAlternative?: string;\n    iconUrlAlternative?: string;\n    onClickHandlerAlternative?: () => void;\n    showAlternative?: boolean;\n  }[];\n}\n\nconst ToolSetBar = ({ tools }: ToolSetBarProps) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"toolset-bar-wrapper\">\n      {tools &&\n        tools.map((tool) => {\n          if (tool && tool.type === SEPARATOR) {\n            return (\n              <div className=\"toolset-bar-separator\" key={`separator_${shortId.generate()}`}>\n                <div className=\"separator\"></div>\n              </div>\n            );\n          }\n          if (tool && tool.type === TOGGLE_BUTTON) {\n            return (\n              <ToggleButton\n                key={tool.id}\n                id={tool.id}\n                intlId={tool.intlId}\n                iconUrl={tool.iconUrl}\n                enabled={tool.enabled}\n                onClickHandler={tool.onClickHandler}\n                intlIdAlternative={tool.intlIdAlternative}\n                iconUrlAlternative={tool.iconUrlAlternative}\n                onClickHandlerAlternative={tool.onClickHandlerAlternative}\n                showAlternative={tool.showAlternative}\n              />\n            );\n          }\n\n          return (\n            <IconButton\n              key={tool.intlId}\n              tooltip={intl.messages[tool.intlId as keyof typeof intl.messages]}\n              onClick={() => tool.onClickHandler()}\n              iconUrl={tool.iconUrl}\n              enabled={tool.enabled}\n            />\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ToolSetBar;\n","export default __webpack_public_path__ + \"static/media/down.17f143ff.svg\";","export default __webpack_public_path__ + \"static/media/take-over.e8760b3a.svg\";","export default __webpack_public_path__ + \"static/media/up.32f62e1a.svg\";","import { Key, useState } from 'react';\nimport { SortableContainer, SortableElement, arrayMove, SortEndHandler } from 'react-sortable-hoc';\n\nimport './style.scss';\nimport iconDeleteDustbin from '../../../../assets/icons/delete-dustbin.svg';\nimport iconDown from '../../../../assets/icons/down.svg';\nimport iconTakeOver from '../../../../assets/icons/take-over.svg';\nimport iconUp from '../../../../assets/icons/up.svg';\n\nimport ActionBar, { ActionBarType } from '../../../../components/ActionBar';\n\nconst SortableItem = SortableElement(({ value }: { value: Key }) => (\n  <li className=\"filter-list-row\" key={value}>\n    <span className=\"filter-list-row-item\">{value}</span>\n  </li>\n));\n\nconst SortableList = SortableContainer(({ items }: { items: { value: Key }[] }) => (\n  <ul>\n    {items.map((item, index) => (\n      <SortableItem key={item.value} index={index} value={item.value} />\n    ))}\n  </ul>\n));\n\ntype AvailableFilterListItemsType = {\n  id: string;\n  value: string;\n  onClick: () => void;\n}[];\n\ninterface FilterProps {\n  AvailableFilterListItems: AvailableFilterListItemsType;\n  AvailableFilterListActions: ActionBarType[];\n  CurrentFilterListItems: AvailableFilterListItemsType;\n  CurrentFilterListActions: ActionBarType[];\n}\n\nconst Filter = ({\n  AvailableFilterListItems = [\n    { id: '', value: 'Closing Filter', onClick: () => void 0 },\n    { id: '', value: 'Custom Filter', onClick: () => void 0 },\n    { id: '', value: 'Custom2 Filter', onClick: () => void 0 },\n    { id: '', value: 'Dilation Filter', onClick: () => void 0 },\n    { id: '', value: 'EdgeDetect Filter', onClick: () => void 0 },\n    { id: '', value: 'EdgeDetect2 Filter', onClick: () => void 0 },\n    { id: '', value: 'Erosion Filter', onClick: () => void 0 },\n    { id: '', value: 'HorizonEdge Filter', onClick: () => void 0 },\n    { id: '', value: 'LaplacianEdge Filter', onClick: () => void 0 },\n    { id: '', value: 'LaplacianEdge2 Filter', onClick: () => void 0 },\n    { id: '', value: 'MAX MIN Filter', onClick: () => void 0 },\n    { id: '', value: 'Opening Filter', onClick: () => void 0 },\n    { id: '', value: 'Ranking Filter', onClick: () => void 0 },\n    { id: '', value: 'Sharpen Filter', onClick: () => void 0 },\n    { id: '', value: 'Sharpen2 Filter', onClick: () => void 0 },\n    { id: '', value: 'Skeleton Filter', onClick: () => void 0 },\n    { id: '', value: 'Smooth Filter', onClick: () => void 0 },\n    { id: '', value: 'Thickening Filter', onClick: () => void 0 },\n    { id: '', value: 'Thinning Filter', onClick: () => void 0 },\n    { id: '', value: 'VertEdge Filter', onClick: () => void 0 },\n    { id: '', value: 'Watershed Filter', onClick: () => void 0 },\n  ],\n  AvailableFilterListActions = [\n    { intlId: 'before', iconUrl: iconTakeOver, onClickHandler: () => void 0 },\n  ],\n  CurrentFilterListItems = [\n    { id: '', value: 'Custom Filter', onClick: () => void 0 },\n    { id: '', value: 'Dilation Filter', onClick: () => void 0 },\n    { id: '', value: 'Closing Filter', onClick: () => void 0 },\n  ],\n  CurrentFilterListActions = [\n    { intlId: 'down', iconUrl: iconDown, onClickHandler: () => void 0 },\n    { intlId: 'up', iconUrl: iconUp, onClickHandler: () => void 0 },\n    { intlId: 'delete', iconUrl: iconDeleteDustbin, onClickHandler: () => void 0 },\n  ],\n}: FilterProps) => {\n  const [localCurrentFilterListItems, setLocalCurrentFilterListItems] =\n    useState(CurrentFilterListItems);\n\n  const onSortEnd: SortEndHandler = ({ oldIndex, newIndex }) => {\n    setLocalCurrentFilterListItems(arrayMove(localCurrentFilterListItems, oldIndex, newIndex));\n  };\n\n  return (\n    <div className=\"parameter-view-filter-wrapper\">\n      <div className=\"available-filters filter-list\">\n        <div className=\"filter-header\">Available Filters</div>\n        <ul className=\"filter-content\">\n          {AvailableFilterListItems.map((item) => (\n            <li className=\"filter-list-row\" key={item.value}>\n              <span className=\"filter-list-row-item\">{item.value}</span>\n            </li>\n          ))}\n        </ul>\n        <div className=\"filter-list-actions\">\n          <ActionBar actions={AvailableFilterListActions} />\n        </div>\n      </div>\n\n      <div className=\"current-filters filter-list\">\n        <div className=\"filter-header\">Available Filters</div>\n        <ul className=\"filter-content\">\n          <SortableList\n            helperClass=\"filter-list-row-item-on-drag\"\n            items={localCurrentFilterListItems}\n            onSortEnd={onSortEnd}\n          />\n        </ul>\n        <div className=\"filter-list-actions\">\n          <ActionBar actions={CurrentFilterListActions} />\n        </div>\n      </div>\n\n      <div className=\"property-container\">\n        <div className=\"filter-header\">Properties</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { setParameter, setViewSet } from '../../../redux/actions';\nimport Filter from '../../ParameterView/components/Filter';\nimport ViewSetFactory from '../../ViewSetFactory';\n\nclass ToolSetup extends Component {\n  componentDidUpdate(prevProps) {\n    if (prevProps.node !== this.props.node) {\n      this.setup(this.props.node);\n    }\n  }\n\n  setup = (node) => {\n    switch (node.name) {\n      case 'Equation':\n        this.props.setupParameterView({\n          component: <Filter />,\n        });\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  viewSetFactory = new ViewSetFactory();\n\n  render() {\n    return null;\n  }\n}\n\nToolSetup.defaultProps = {\n  node: undefined,\n};\n\nToolSetup.propTypes = {\n  currentViewSet: PropTypes.shape({\n    id: PropTypes.string,\n    viewSet: PropTypes.shape({ id: PropTypes.string }),\n  }).isRequired,\n  setupParameterView: PropTypes.func.isRequired,\n  setViewSet: PropTypes.func.isRequired,\n  node: PropTypes.shape({\n    uniqueReferenceID: PropTypes.string,\n  }),\n};\n\nconst mapStateToProps = (state) => ({\n  currentViewSet: state.viewSet.currentViewSet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setupParameterView: (parameter) => {\n    dispatch(setParameter(parameter));\n  },\n  setViewSet: (viewSet) => {\n    dispatch(setViewSet(viewSet));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolSetup);\n","import React, { ReactElement, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport ReactDOMServer from 'react-dom/server';\nimport { FormattedMessage } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Treebeard, TreeNode } from 'react-treebeard-ts';\nimport iconArchive from '../../assets/icons/archive.svg';\nimport iconLinear from '../../assets/icons/arrow-top-right.svg';\nimport iconCollapse from '../../assets/icons/collapse-all.svg';\nimport iconCopy from '../../assets/icons/copy.svg';\nimport iconCut from '../../assets/icons/cut.svg';\nimport iconCylindricalWrap from '../../assets/icons/cylindrical-wrap.svg';\nimport iconDelete from '../../assets/icons/delete.svg';\nimport iconExpand from '../../assets/icons/expand-all.svg';\nimport iconExternal from '../../assets/icons/external.svg';\nimport iconFunction from '../../assets/icons/function-variant.svg';\nimport iconGroup from '../../assets/icons/group.svg';\nimport iconImage from '../../assets/icons/image.svg';\nimport iconLoadImage from '../../assets/icons/load-image.svg';\nimport iconLoop from '../../assets/icons/loop.svg';\nimport iconColor from '../../assets/icons/palette.svg';\nimport iconPaste from '../../assets/icons/paste.svg';\nimport iconPerspective from '../../assets/icons/perspective.svg';\nimport iconPolarTransformation from '../../assets/icons/polar-transformation.svg';\nimport iconResize from '../../assets/icons/resize.svg';\nimport iconShift from '../../assets/icons/shift.svg';\nimport iconStatistics from '../../assets/icons/statistics.svg';\nimport iconTableAnalyzer from '../../assets/icons/table-analyzer.svg';\nimport iconTable from '../../assets/icons/table.svg';\nimport iconTransformation from '../../assets/icons/transformation.svg';\nimport iconWindow from '../../assets/icons/window.svg';\nimport ActionBar from '../../components/ActionBar';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport type Configuration from '../../protobuf/Configuration';\nimport Protobuf from '../../protobuf/Protobuf';\nimport type Proxy from '../../protobuf/Proxy';\nimport { setEditingFocus, setParameter } from '../../redux/actions';\nimport { Inspections } from '../../types/InspectionsType';\nimport logger from '../../utils/logger';\nimport {\n  canReadToolSetView,\n  canEditToolSetView,\n  canAddTool,\n  canEditTool,\n  canDeleteTool,\n} from '../../utils/permissions';\nimport { isMathTool, MathTool } from './MathTool';\nimport ToolSetBar, { ToolSetBarProps } from './components/ToolSetBar';\nimport ToolSetup from './components/ToolSetup';\nimport TreebeardStyle from './components/TreebeardStyle';\nimport './style.scss';\n\nenum ActionType {\n  SELECT,\n  DELETE,\n  ADD,\n  COPY,\n  CUT,\n  PASTE,\n}\n\nexport interface ToolsetTreeNode extends TreeNode {\n  children?: ToolsetTreeNode[];\n  parentNode?: ToolsetTreeNode;\n  position: number;\n  isValid?: boolean;\n  toggled?: boolean;\n  objectID?: string;\n  objectType?: string | number;\n  objectSubType?: string | number;\n}\n\nconst sortToolSet = (a: ToolsetTreeNode, b: ToolsetTreeNode) => {\n  return a.position > b.position ? 1 : -1;\n};\n\nconst useStyles = makeStyles(() => ({\n  label: {\n    fontSize: '1.4rem',\n    transform: 'translate(10px, 12px) scale(1)',\n  },\n}));\n\ninterface ToolsetViewProps {\n  id: string;\n  inspectionId: string;\n}\n\nconst ToolsetView = ({ id: viewId, inspectionId }: ToolsetViewProps) => {\n  const proxy = useSelector<any>((state) => state.app?.proxy) as Proxy;\n  const inspections = useSelector<any>((state) => state.inspections) as Inspections;\n  const dispatch = useDispatch();\n  const configuration = useSelector<any>((state) => state.app?.configuration) as Configuration;\n  const inspectionToolsetMappings = useSelector<any>(\n    (state) => state.app?.inspectionToolsetMappings,\n  ) as Map<any, any>;\n  const myPermissions = useSelector<any>((state) => state.app?.myPermissions) as Set<string>;\n  const classes = useStyles();\n\n  const [treeModel, setTreeModel] = useState<ToolsetTreeNode[]>([]);\n  const [filteredTreeModel, setFilteredTreeModel] = useState<ToolsetTreeNode[] | undefined>(\n    undefined,\n  );\n  const [cursor, setCursor] = useState<ToolsetTreeNode | null>(null);\n  const lastActionsStack = useRef<\n    {\n      type: ActionType;\n      from?: number;\n      to?: number;\n      position?: number;\n      tool?: ToolsetTreeNode;\n      toolId?: string;\n    }[]\n  >([]);\n  const [toolSetId, setToolSetId] = useState(0);\n  const [openConfirmDelete, setOpenConfirmDelete] = useState(false);\n  const [filterText, setFilterText] = useState('');\n\n  const sharedState = inspections?.[inspectionId]?.sharedState;\n\n  useEffect(() => {\n    if (configuration.inspectionToolsetMappings.size === 0) {\n      configuration\n        .setInspectionIdToToolsetMappings(proxy.protobuf)\n        .then(() => proxy.dispatchCurrentConfiguration(configuration));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const getToolsetTreeByInspectionId = (id: string) => {\n      if (!id) {\n        logger.warn('getToolsetTreeByInspectionId did not receive inspection id');\n        return;\n      } else if (inspectionToolsetMappings.size === 0) {\n        logger.warn('inspectionToolsetMappings is empty');\n        return;\n      }\n      return inspectionToolsetMappings.get(id);\n    };\n\n    const treeDataRaw = getToolsetTreeByInspectionId(inspectionId);\n    setToolSetId(treeDataRaw?.toolSetId);\n\n    const createTreeNodes = (\n      node: ToolsetTreeNode | undefined | null,\n      parentNode?: ToolsetTreeNode,\n    ) => {\n      if (!node) {\n        return null;\n      }\n\n      const { name, isValid, position, objectID, objectType, objectSubType } = node;\n\n      const isLeaf = (child: ToolsetTreeNode) =>\n        !child.children?.length && child.position === -1 && !child.objectType;\n\n      const isMathToolNodeOrLeaf = isMathTool(node) || (isMathTool(parentNode) && isLeaf(node));\n\n      const toolsetTreeNode: ToolsetTreeNode = {\n        parentNode,\n        name: isMathToolNodeOrLeaf\n          ? name\n          : ((<span style={{ color: '#546E7A' }}>{name}</span>) as never),\n        isValid,\n        position,\n        objectID,\n        toggled: false,\n        objectType,\n        objectSubType,\n      };\n\n      const children = node.children?.reduce((acc, node) => {\n        const treeNode = createTreeNodes(node, toolsetTreeNode);\n        if (treeNode) {\n          acc.push(treeNode);\n        }\n        return acc;\n      }, [] as ToolsetTreeNode[]);\n\n      toolsetTreeNode.children = children?.length ? children : undefined;\n\n      return toolsetTreeNode;\n    };\n\n    const tree = createTreeNodes(treeDataRaw);\n\n    if (!tree?.children?.length) {\n      return;\n    }\n\n    const treeModel = tree.children.sort(sortToolSet);\n    setTreeModel(treeModel);\n  }, [inspectionToolsetMappings, inspectionId]);\n\n  useEffect(() => {\n    if (sharedState?.editingViewId !== viewId) {\n      updateTreeModel(\n        () => true,\n        () => ({\n          active: false,\n        }),\n      );\n      setCursor(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sharedState?.editingViewId]);\n\n  const openMathToolTab = useCallback(\n    (tabNode: ToolsetTreeNode) => {\n      if (!sharedState || !tabNode.parentNode) {\n        return;\n      }\n      if (sharedState?.editingViewId !== viewId) {\n        dispatch(setEditingFocus(inspectionId, viewId));\n      }\n\n      dispatch(\n        setParameter({\n          component: (\n            <div className=\"math-tool-parameter-view\">\n              <MathTool\n                inspectionID={parseInt(inspectionId)}\n                data={tabNode.parentNode}\n                view={tabNode.name}\n              />\n            </div>\n          ),\n        }),\n      );\n    },\n    [dispatch, inspectionId, sharedState, viewId],\n  );\n\n  const updateTreeModel = useCallback(\n    (\n      targetNode: ToolsetTreeNode | ((node: ToolsetTreeNode) => boolean),\n      updateTargetData: (node: ToolsetTreeNode) => Partial<ToolsetTreeNode>,\n      updateOtherData?: (node: ToolsetTreeNode) => Partial<ToolsetTreeNode>,\n    ) => {\n      const mapToolsetTree = (tree: ToolsetTreeNode[]): ToolsetTreeNode[] => {\n        return tree.map((node) => {\n          const children = node.children?.length ? mapToolsetTree(node.children) : node.children;\n          if (typeof targetNode === 'function' ? targetNode(node) : node === targetNode) {\n            return { ...node, children, ...updateTargetData(node) };\n          } else {\n            return updateOtherData ? { ...node, children, ...updateOtherData(node) } : node;\n          }\n        });\n      };\n      setTreeModel(mapToolsetTree);\n    },\n    [],\n  );\n\n  const onNodeClicked = useCallback(\n    (node: ToolsetTreeNode, toggled: boolean) => {\n      const isLeaf = !node.children?.length && node.position === -1 && !node.objectType;\n\n      updateTreeModel(\n        node,\n        (node) => ({\n          active: true,\n          toggled: node.children?.length ? toggled || !node.active : node.toggled,\n        }),\n        () => ({ active: false }),\n      );\n\n      lastActionsStack.current.push({\n        type: ActionType.SELECT,\n        from: cursor?.position,\n        to: node.position,\n      });\n\n      setCursor(node);\n\n      if (isLeaf && isMathTool(node.parentNode)) {\n        openMathToolTab(node);\n      }\n    },\n    [cursor?.position, openMathToolTab, updateTreeModel],\n  );\n\n  const getCursorPositionAndObjectID = useCallback(() => {\n    if (!cursor) {\n      return { position: 0, objectID: null };\n    }\n    let node = cursor;\n    while (!node.position || node.position === -1) {\n      if (!node.parentNode) {\n        return { position: 0, objectID: null };\n      }\n      node = node.parentNode;\n    }\n\n    const index = treeModel.findIndex((treeNode) => treeNode.objectID === node.objectID);\n    const position = index !== -1 ? index + 1 : node.position ? node.position : 0;\n    return { position, objectID: node.objectID };\n  }, [cursor, treeModel]);\n\n  const setNext = useCallback(() => {\n    setCursor(null);\n  }, []);\n\n  const deleteTool = useCallback(\n    (objectId: string) => {\n      if (!cursor) {\n        return;\n      }\n      const { position } = cursor;\n      lastActionsStack.current.push({\n        type: ActionType.DELETE,\n        tool: { ...cursor, active: false },\n      });\n\n      proxy.deleteTool(inspectionId, objectId);\n      setTreeModel(treeModel.filter((treeNode) => treeNode.position !== position));\n      setNext();\n    },\n    [cursor, inspectionId, proxy, setNext, treeModel],\n  );\n\n  const handleConfirmDeleteClose = (confirmed: boolean) => {\n    if (confirmed && cursor?.objectID) {\n      deleteTool(cursor.objectID);\n    }\n    setOpenConfirmDelete(false);\n  };\n\n  const viewActions = useMemo(() => {\n    const expandTools = () => {\n      updateTreeModel(\n        () => true,\n        (node) => ({ toggled: !!node.children?.length }),\n      );\n    };\n\n    const collapseTools = () => {\n      updateTreeModel(\n        () => true,\n        () => ({ toggled: false }),\n      );\n    };\n\n    const copyTool = async () => {\n      if (!cursor) {\n        return;\n      }\n      const { objectID } = getCursorPositionAndObjectID();\n      lastActionsStack.current.push({\n        type: ActionType.COPY,\n        tool: { ...cursor, active: false },\n      });\n\n      await proxy.copyTool(inspectionId, objectID);\n    };\n\n    const cutTool = async () => {\n      if (!cursor) {\n        return;\n      }\n      const { position, objectID } = getCursorPositionAndObjectID();\n      lastActionsStack.current.push({\n        type: ActionType.CUT,\n        tool: { ...cursor, active: false },\n      });\n\n      await proxy.cutTool(inspectionId, objectID);\n      setNext();\n      setTreeModel(treeModel.filter((treeNode) => treeNode.position !== position));\n    };\n\n    const pasteTool = async () => {\n      if (!cursor) {\n        return;\n      }\n      const { objectID } = getCursorPositionAndObjectID();\n      lastActionsStack.current.push({\n        type: ActionType.PASTE,\n        tool: { ...cursor, active: false },\n      });\n\n      await proxy.pasteTool(inspectionId, objectID);\n    };\n\n    const canEdit = canEditTool(myPermissions);\n    const canDelete = canDeleteTool(myPermissions);\n    const actions = [\n      { intlId: 'copy', iconUrl: iconCopy, onClickHandler: copyTool, enabled: canEdit },\n      { intlId: 'cut', iconUrl: iconCut, onClickHandler: cutTool, enabled: canEdit },\n      { intlId: 'paste', iconUrl: iconPaste, onClickHandler: pasteTool, enabled: canEdit },\n      { intlId: 'expandAll', iconUrl: iconExpand, onClickHandler: expandTools, enabled: canEdit },\n      {\n        intlId: 'collapseAll',\n        iconUrl: iconCollapse,\n        onClickHandler: collapseTools,\n        enabled: canEdit,\n      },\n      {\n        intlId: 'delete',\n        iconUrl: iconDelete,\n        onClickHandler: () => setOpenConfirmDelete(true),\n        enabled: canDelete,\n      },\n    ];\n\n    return actions;\n  }, [\n    cursor,\n    getCursorPositionAndObjectID,\n    inspectionId,\n    myPermissions,\n    proxy,\n    setNext,\n    treeModel,\n    updateTreeModel,\n  ]);\n\n  const toolActions = useMemo<ToolSetBarProps['tools']>(() => {\n    const addTool = async (type: ActionType) => {\n      const { position } = getCursorPositionAndObjectID();\n      const newToolId = await proxy.addTool(inspectionId, toolSetId, type, position);\n      lastActionsStack.current.push({\n        type: ActionType.ADD,\n        position,\n        toolId: newToolId,\n      });\n    };\n    const canAdd = canAddTool(myPermissions);\n    return [\n      {\n        intlId: 'toolsetView.windowTool',\n        iconUrl: iconWindow,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.WindowToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.mathTool',\n        iconUrl: iconFunction,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.MathToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.statisticsTool',\n        iconUrl: iconStatistics,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.StatisticsToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.ringBufferTool',\n        iconUrl: iconLinear,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.RingBufferToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.archiveTool',\n        iconUrl: iconArchive,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ArchiveToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.acquisitionTool',\n        iconUrl: iconLinear,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.AcquisitionToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.transformationTool',\n        iconUrl: iconTransformation,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.TransformationToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.shiftTool',\n        iconUrl: iconShift,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ShiftToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.cylindricalWarpTool',\n        iconUrl: iconCylindricalWrap,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.CylindricalWarpToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.perspectiveTool',\n        iconUrl: iconPerspective,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.PerspectiveToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.imageTool',\n        iconUrl: iconImage,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ImageToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.linearTool',\n        iconUrl: iconLinear,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.LinearToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.colorTool',\n        iconUrl: iconColor,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ColorToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.resizeTool',\n        iconUrl: iconResize,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ResizeToolId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.loadImageTool',\n        iconUrl: iconLoadImage,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.LoadImageToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.tableTool',\n        iconUrl: iconTable,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.TableToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.tableAnalyzerTool',\n        iconUrl: iconTableAnalyzer,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.TableAnalyzerToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.polarTransformationTool',\n        iconUrl: iconPolarTransformation,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.PolarTransformationToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.loopTool',\n        iconUrl: iconLoop,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.LoopToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.externalTool',\n        iconUrl: iconExternal,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.ExternalToolClassId),\n        enabled: canAdd,\n      },\n      {\n        intlId: 'toolsetView.groupTool',\n        iconUrl: iconGroup,\n        onClickHandler: () => addTool(Protobuf.SvPb.ClassIdEnum.GroupToolClassId),\n        enabled: canAdd,\n      },\n    ];\n  }, [getCursorPositionAndObjectID, inspectionId, proxy, toolSetId, myPermissions]);\n\n  const onChangeFilter: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement> = (\n    event,\n  ) => {\n    const text = event.target.value;\n    setFilterText(text);\n\n    const includesTextInReactElement = (element: ReactElement) => {\n      try {\n        return (\n          ReactDOMServer.renderToString(element).toLowerCase().indexOf(text.toLowerCase()) > -1\n        );\n      } catch (e) {\n        return false;\n      }\n    };\n    setFilteredTreeModel(\n      text\n        ? treeModel.filter((item) =>\n            typeof item.name === 'string'\n              ? item.name.toLowerCase().indexOf(text.toLowerCase()) > -1\n              : includesTextInReactElement(item.name),\n          )\n        : undefined,\n    );\n  };\n\n  if (canReadToolSetView(myPermissions) || canEditToolSetView(myPermissions)) {\n    return (\n      <div className=\"toolset-wrapper\">\n        <ConfirmDialog\n          open={openConfirmDelete}\n          onClose={(confirmed: boolean) => handleConfirmDeleteClose(confirmed)}\n          message={\n            <FormattedMessage id=\"toolsetView.confirmDelete\" values={{ toolName: cursor?.name }} />\n          }\n        />\n        <ToolSetBar tools={toolActions} />\n        <div className=\"toolset\">\n          <div className=\"overflow-auto h-100 w-100\" style={{ paddingBottom: 24 }}>\n            <div>\n              {cursor && <ToolSetup node={cursor} />}\n              <div className=\"w100\">\n                <TextField\n                  label=\"Filter\"\n                  type=\"text\"\n                  variant=\"outlined\"\n                  style={{ width: '100%' }}\n                  onChange={onChangeFilter}\n                  value={filterText}\n                  InputLabelProps={{ classes: { root: classes.label } }}\n                />\n              </div>\n              <Treebeard\n                data={filteredTreeModel ?? treeModel}\n                onToggle={(node, toggled) => onNodeClicked(node as never, toggled)}\n                style={TreebeardStyle}\n              />\n            </div>\n          </div>\n        </div>\n        <ActionBar isViewAction actions={viewActions} />\n      </div>\n    );\n  }\n  return <div></div>;\n};\n\nexport default ToolsetView;\n","import React from 'react';\nimport shortId from 'shortid';\n\nimport ImageStripView from './ImageStripView';\nimport ImageView from './ImageView';\nimport ListView from './ListView';\nimport ParameterView from './ParameterView';\nimport RecipeView from './RecipeView';\nimport ToolsetView from './ToolsetView';\n\nconst mapViewSetArray = (views) => {\n  return views.reduce((viewSet, view) => ({ ...viewSet, [view.id]: view }), {});\n};\n\nconst configurations = [\n  {\n    title: 'No. of Cameras',\n    intlId: 'noOfCameras',\n    options: [\n      { title: '1', value: 1 },\n      { title: '2', value: 2 },\n      { title: '3', value: 3 },\n      { title: '4', value: 4 },\n    ],\n  },\n  {\n    title: 'No. of Triggers',\n    intlId: 'noOfTriggers',\n    options: [\n      { title: '1', value: 1 },\n      { title: '2', value: 2 },\n      { title: '3', value: 3 },\n      { title: '4', value: 4 },\n    ],\n  },\n  {\n    title: 'No. of MonitorLists',\n    intlId: 'noOfMonitors',\n    options: [\n      { title: '1', value: 1 },\n      { title: '2', value: 2 },\n      { title: '3', value: 3 },\n      { title: '4', value: 4 },\n    ],\n  },\n];\n\nexport const CONFIG_VIEW = 'CONFIG_VIEW';\nexport const TOOLSET_VIEW = 'TOOLSET_VIEW';\nexport const IMAGE_VIEW = 'IMAGE_VIEW';\nexport const PARAMETER_VIEW = 'PARAMETER_VIEW';\nexport const LIST_VIEW = 'LIST_VIEW';\nexport const IMAGE_STRIP_VIEW = 'IMAGE_STRIP_VIEW';\n\nexport const DEFAULT_RECIPE_VIEWSET = 'DEFAULT_RECIPE_VIEWSET';\nexport const DEFAULT_EDIT_VIEWSET = 'DEFAULT_EDIT_VIEWSET';\nexport const DEFAULT_VIEWSET = 'DEFAULT_VIEWSET';\n\nexport const DEFAULT_VIEWSET_NAME = 'Initial';\n\nexport default class ViewSetFactory {\n  getViewSet = (id) => {\n    switch (id) {\n      case DEFAULT_VIEWSET:\n        return this.buildEmptyViewSet();\n      case DEFAULT_EDIT_VIEWSET:\n      case DEFAULT_RECIPE_VIEWSET:\n      default:\n        return null;\n    }\n  };\n\n  createViewInstance = (viewDesc, props) => {\n    const meta = this.getViewById(viewDesc.viewComponentClassId);\n    if (!meta) {\n      return false;\n    }\n\n    const key = `${viewDesc.viewComponentClassId}_${viewDesc.id}_${viewDesc.inspectionId}`;\n\n    const passedProps = {\n      ...meta.passedProps,\n      ...props,\n      key,\n    };\n\n    switch (meta.viewComponentClassId) {\n      case CONFIG_VIEW:\n        return <RecipeView {...passedProps} />;\n      case TOOLSET_VIEW:\n        return <ToolsetView {...passedProps} />;\n      case IMAGE_VIEW:\n        return <ImageView {...passedProps} />;\n      case PARAMETER_VIEW:\n        return <ParameterView {...passedProps} />;\n      case IMAGE_STRIP_VIEW:\n        return <ImageStripView {...passedProps} />;\n      case LIST_VIEW:\n        return <ListView {...passedProps} />;\n      default:\n        return <div>Unknown Component {meta.viewComponentClassId}</div>;\n    }\n  };\n\n  getViewById = (id) => {\n    switch (id) {\n      case CONFIG_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'recipeViewInspectionTemplate',\n          viewComponentClassId: CONFIG_VIEW,\n          passedProps: { configurations },\n        };\n      case TOOLSET_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'toolsetView.inspectionTemplate',\n          viewComponentClassId: TOOLSET_VIEW,\n        };\n      case IMAGE_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'imageView.inspectionTemplate',\n          viewComponentClassId: IMAGE_VIEW,\n        };\n      case PARAMETER_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'parameterView.inspectionTemplate',\n          viewComponentClassId: PARAMETER_VIEW,\n        };\n      case IMAGE_STRIP_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'imageStripView.inspectionTemplate',\n          viewComponentClassId: IMAGE_STRIP_VIEW,\n        };\n      case LIST_VIEW:\n        return {\n          id: shortId.generate(),\n          titleId: 'listView.inspectionTemplate',\n          viewComponentClassId: LIST_VIEW,\n        };\n      default:\n        return null;\n    }\n  };\n\n  buildRecipeViewSet = () => {\n    const views = [\n      this.getViewById(IMAGE_VIEW),\n      this.getViewById(LIST_VIEW),\n      this.getViewById(IMAGE_STRIP_VIEW),\n    ];\n    return {\n      id: DEFAULT_RECIPE_VIEWSET,\n      viewSet: mapViewSetArray(views),\n      initialValue: {\n        first: {\n          direction: 'row',\n          splitPercentage: 60,\n          first: views[0].id,\n          second: views[1].id,\n        },\n        direction: 'column',\n        splitPercentage: 75,\n        second: views[2].id,\n      },\n    };\n  };\n\n  buildEmptyViewSet = (name = DEFAULT_VIEWSET_NAME) => {\n    const emptyViewId = shortId.generate();\n    return {\n      id: name,\n      name,\n      viewSet: {\n        [emptyViewId]: {},\n      },\n      initialValue: emptyViewId,\n    };\n  };\n\n  buildEditViewSet = () => {\n    const views = [\n      this.getViewById(TOOLSET_VIEW),\n      this.getViewById(IMAGE_VIEW),\n      this.getViewById(PARAMETER_VIEW),\n    ];\n    return {\n      id: DEFAULT_VIEWSET,\n      viewSet: mapViewSetArray(views),\n      initialValue: {\n        direction: 'row',\n        first: views[0].id,\n        splitPercentage: 30,\n        second: {\n          direction: 'column',\n          splitPercentage: 45,\n          first: views[1].id,\n          second: views[2].id,\n        },\n      },\n    };\n  };\n\n  createNewViewSet = () => {\n    const views = [\n      {\n        id: shortId.generate(),\n        viewComponentClassId: TOOLSET_VIEW,\n        titleId: 'toolsetViewInspectionTemplate',\n      },\n    ];\n    return {\n      id: 'NEW_VIEWSET',\n      viewSet: mapViewSetArray(views),\n      initialValue: views[0].id,\n    };\n  };\n}\n","import { useRef, useState } from 'react';\nimport { Portal } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport downloadIcon from '../../../assets/icons/download.svg';\nimport helpIcon from '../../../assets/icons/help.svg';\nimport aboutIcon from '../../../assets/icons/info.svg';\nimport logoutIcon from '../../../assets/icons/logout.svg';\nimport permissionsIcon from '../../../assets/icons/permissions.svg';\nimport saveIcon from '../../../assets/icons/save.svg';\nimport shortcutHelpIcon from '../../../assets/icons/shortcut-help.svg';\nimport uploadIcon from '../../../assets/icons/upload.svg';\nimport userIcon from '../../../assets/icons/user.svg';\nimport type Proxy from '../../../protobuf/Proxy';\nimport { saveClientChunk } from '../../../redux/actions';\nimport { forceDownload } from '../../../utils/downloader';\nimport {\n  canEditUserManagement,\n  canReadSVOConfiguration,\n  canReadUserManagement,\n  canSaveConfig,\n  canWriteSVOConfiguration,\n} from '../../../utils/permissions';\nimport AboutView from '../../AboutView';\nimport HelpView from '../../HelpView';\nimport ShortcutView from '../../ShortcutView';\nimport { NavigationItemType } from '../NavigationItem';\n\nexport const useUserInfoNavigation = (): NavigationItemType => {\n  const dispatch = useDispatch();\n  const currentState = useSelector((state) => state);\n  const { user, protobuf, myPermissions, proxy } = useSelector<any>((state) => state.app) as {\n    myPermissions: Set<string>;\n    proxy: Proxy;\n    [key: string]: any;\n  };\n  const unsavedChanges = useSelector<any>((state) => state.viewSet.unsavedChanges);\n  const intl = useIntl();\n  const history = useHistory();\n  const inputFile = useRef<HTMLInputElement>(null);\n\n  const [shortcutViewOpen, setShortcutViewOpen] = useState(false);\n  const [isHelpViewOpen, setIsHelpViewOpen] = useState(false);\n  const [isAboutViewOpen, setIsAboutViewOpen] = useState(false);\n\n  const downloadConfig = async () => {\n    const fileData = await proxy.downloadSVOConfig();\n    const blob = new Blob([fileData], { type: 'application/octet-stream' });\n    const url = URL.createObjectURL(blob);\n    forceDownload(url, `SVOConfig_${new Date().toISOString()}.svz`);\n  };\n\n  const onFileAdded: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = (event) => {\n        const arrayBuffer = event.target?.result;\n        const array =\n          arrayBuffer instanceof ArrayBuffer ? new Uint8Array(arrayBuffer) : new Uint8Array();\n        proxy.uploadSVOConfig(file.name, array);\n      };\n    }\n  };\n\n  const children: NavigationItemType[] = [\n    {\n      id: 'saveConfig',\n      content: intl.messages['topNavigation.saveConfig'],\n      icon: saveIcon,\n      onClick: () => dispatch(saveClientChunk(protobuf, currentState)),\n      enabled: unsavedChanges ? canSaveConfig(myPermissions) : false,\n    },\n    {\n      id: 'permissions',\n      content: intl.messages['topNavigation.permissions'],\n      icon: permissionsIcon,\n      onClick: () => history.push('/permissions'),\n      enabled: canReadUserManagement(myPermissions) || canEditUserManagement(myPermissions),\n    },\n    {\n      id: 'download',\n      content: intl.messages['topNavigation.download'],\n      icon: downloadIcon,\n      onClick: downloadConfig,\n      enabled: canReadSVOConfiguration(myPermissions),\n    },\n    {\n      id: 'upload',\n      content: (\n        <>\n          {intl.messages['topNavigation.upload']}\n          <input\n            type=\"file\"\n            id=\"file\"\n            ref={inputFile}\n            style={{ display: 'none' }}\n            onChange={onFileAdded}\n          />\n        </>\n      ),\n      icon: uploadIcon,\n      onClick: async () => inputFile.current?.click?.(),\n      enabled: canWriteSVOConfiguration(myPermissions),\n    },\n    {\n      id: 'help',\n      icon: helpIcon,\n      content: (\n        <>\n          <span>{intl.messages['topNavigation.help']}</span>\n          <Portal container={document.body}>\n            <HelpView open={isHelpViewOpen} onClose={() => setIsHelpViewOpen(false)} />\n          </Portal>\n        </>\n      ),\n      onClick: () => !isHelpViewOpen && setIsHelpViewOpen(true),\n      enabled: true,\n    },\n    {\n      id: 'shortcutHelp',\n      icon: shortcutHelpIcon,\n      content: (\n        <>\n          <span>{intl.messages['topNavigation.shortcut']}</span>\n          <Portal container={document.body}>\n            <ShortcutView open={shortcutViewOpen} onClose={() => setShortcutViewOpen(false)} />\n          </Portal>\n        </>\n      ),\n      onClick: () => !shortcutViewOpen && setShortcutViewOpen(true),\n      enabled: true,\n    },\n    {\n      id: 'about',\n      icon: aboutIcon,\n      content: (\n        <>\n          <span>{intl.messages['topNavigation.about']}</span>\n          <Portal container={document.body}>\n            <AboutView open={isAboutViewOpen} onClose={() => setIsAboutViewOpen(false)} />\n          </Portal>\n        </>\n      ),\n      onClick: () => !isAboutViewOpen && setIsAboutViewOpen(true),\n      enabled: true,\n    },\n    {\n      id: 'logout',\n      icon: logoutIcon,\n      content: intl.messages['topNavigation.logout'],\n      onClick: async () => {\n        proxy.unsubscribeFromLockAcquisitionStream();\n        setImmediate(() => (window.location.href = `${window.location.origin}/logout`));\n      },\n      enabled: true,\n    },\n  ];\n\n  return {\n    id: 'user-info',\n    icon: userIcon,\n    content: user.fullname,\n    enabled: true,\n    children,\n  };\n};\n","export default __webpack_public_path__ + \"static/media/logout.34533d8e.svg\";","export default __webpack_public_path__ + \"static/media/permissions.ce764429.svg\";","export default __webpack_public_path__ + \"static/media/shortcut-help.d16d3001.svg\";","export default __webpack_public_path__ + \"static/media/upload.6f61d1e9.svg\";","export default __webpack_public_path__ + \"static/media/user.71fbff7c.svg\";","import { Component } from 'react';\nimport { Skeleton } from '@material-ui/lab';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport KoerberLogo from '../../assets/logo/logo.svg';\nimport Dialog from '../../components/Dialog';\nimport Logo from '../../components/layout/Logo';\n\nimport './style.scss';\n\nclass AboutView extends Component {\n  render() {\n    const { onClose, open, intl, configuration } = this.props;\n\n    if (!configuration) {\n      return <div />;\n    }\n\n    return (\n      <Dialog title={<FormattedMessage id=\"aboutView\" />} onClose={onClose} open={open}>\n        <div className=\"appname\">{process.env.REACT_APP_NAME}</div>\n        <div className=\"table\">\n          <div className=\"row\">\n            <div className=\"cell\">{intl.messages['aboutView.applicationVersion']}</div>\n            <div className=\"cell\">\n              {configuration.getWebAppVersion() || <Skeleton width=\"155px\" />}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"cell\">{intl.messages['aboutView.svoVersion']}</div>\n            <div className=\"cell\">\n              {configuration.getSvObserverVersion() || <Skeleton width=\"155px\" />}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"cell\">{intl.messages['aboutView.gatewayVersion']}</div>\n            <div className=\"cell\">\n              {configuration.getGatewayVersion() || <Skeleton width=\"155px\" />}\n            </div>\n          </div>\n        </div>\n        <div className=\"logo\">\n          <Logo src={KoerberLogo} title=\"logo\" />\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nAboutView.defaultProps = {\n  open: false,\n};\n\nAboutView.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  try {\n    const { configuration } = state.app;\n    return { configuration };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport default connect(mapStateToProps)(injectIntl(AboutView));\n","import { setProtobuf } from '../redux/actions';\nimport logger from '../utils/logger';\nimport Protobuf from './Protobuf';\nimport WebsocketConnector from './WebsocketConnector';\n\nexport default class ProtobufConnector {\n  constructor(url, dispatch, authToken) {\n    this.url = url;\n    this.dispatch = dispatch;\n    this.protobuf = new Protobuf();\n    this.websocketConnector = null;\n    this.connectionLost = false;\n    this.authToken = authToken;\n    this.connect();\n  }\n\n  connect = () => {\n    this.disconnect();\n\n    if (!this.authToken) {\n      logger.info('[ProtobufConnector] cannot connect yet. no auth token available');\n      return;\n    }\n\n    this.websocketConnector = new WebsocketConnector(\n      this.onConnect,\n      this.onMessage,\n      this.onClose,\n      this.onError,\n      this.url,\n      this.authToken,\n    );\n  };\n\n  connectWithToken = (token) => {\n    this.authToken = token;\n    this.connect();\n  };\n\n  disconnect = () => {\n    if (this.websocketConnector) {\n      this.websocketConnector.closeSocket();\n      this.websocketConnector = null;\n    }\n  };\n\n  onMessage = (data) => {\n    this.protobuf.readMessage(data);\n  };\n\n  onConnect = async (socket) => {\n    // Force a hard reload on re-conncet to make sure we start fresh\n    if (this.connectionLost) {\n      this.connectionLost = false;\n      setImmediate(() => {\n        window.location.href = `${window.location.origin}/`;\n      });\n      return;\n    }\n\n    // once we have a websocket connection established we publish the protobuf connector via store\n    this.dispatch(setProtobuf(this.protobuf, socket));\n  };\n\n  onClose = () => {\n    this.connectionLost = true;\n    // unsetting the socket will set proxy into disconnected\n    // state and will show the \"Connecting\" screen.\n    this.dispatch(setProtobuf(this.protobuf, /*socket=*/ null));\n  };\n\n  onError = (event) => {\n    console.error('Websocket error: ', event);\n  };\n}\n","import ReconnectingWebSocket from 'reconnecting-websocket';\n\nexport default class WebsocketConnector {\n  constructor(onConnect, onMessage, onClose, onError, url, token) {\n    this.onClose = onClose;\n    const protocol = token ? ['access_token', token] : undefined;\n    const options = { debug: false };\n    this.socket = new ReconnectingWebSocket(url, protocol, options);\n    this.socket.binaryType = 'arraybuffer';\n    this.socket.onopen = () => {\n      onConnect && onConnect(this.socket);\n    };\n    this.socket.onmessage = (e) => onMessage && onMessage(e.data, this.socket);\n    this.socket.onerror = (e) => onError && onError(e);\n    this.socket.onclose = () => onClose && onClose(this.socket);\n    this.socket.onconnecting = (e) => console.log('CONNECTING!', e);\n  }\n\n  closeSocket() {\n    if (this.socket) {\n      this.socket.close();\n    }\n  }\n}\n","import { FormattedMessage } from 'react-intl';\nimport {\n  addModeSwitchNotification,\n  addProjectLoadedNotification,\n  addProjectUnloadedNotification,\n  addProjectModifiedNotification,\n  addServerMessageNotification,\n  addRejectStreamPausedNotification,\n  addConfigAlreadyLockedBySameUser,\n  addTakeoverCandidateNotFoundNotification,\n  addLockAcquisitionErrorNotification,\n  addLockTakeoverErrorNotification,\n  loadClientChunk,\n  resetClientChunk,\n  loadDatabaseGatewayConfiguration,\n  setCurrentModeDone,\n  setCurrentConfiguration,\n  setConfigurationLock,\n  setPausedInspections,\n  showGlobalMessageOverlay,\n  hideGlobalMessageOverlay,\n  setSVOConfigLoaded,\n  setGroupPermissions,\n  setMyPermissions,\n  clearCurrentView,\n  setInspectionToolsetMappings,\n} from '../redux/actions';\nimport { defaultPermissions } from '../utils/defaultPermissions';\nimport { CONFIG_INFO, INSPECTION_TOOLSET_MAPPINGS } from '../utils/localStorage';\nimport logger from '../utils/logger';\nimport modes from '../utils/modes';\nimport {\n  flattenPermissionsRec,\n  canReadUserManagement,\n  canEditUserManagement,\n} from '../utils/permissions';\nimport { LOCK_ACQUISITION_REQUEST } from '../utils/sessionStorage';\nimport Configuration from './Configuration';\nimport ConfigurationLock from './ConfigurationLock';\nimport {\n  mapLogLevelNameToProtobufLogSeverity,\n  mapProtobufDeviceModeToWebAppMode,\n  mapWebAppModeToProtobufDeviceMode,\n} from './Mapper';\nimport ProductHistoryManager from './ProductHistoryManager';\nimport Protobuf from './Protobuf';\nimport SubscriptionManager from './SubscriptionManager';\n\nexport default class Proxy {\n  constructor(dispatch) {\n    this.dispatch = dispatch;\n    this.configInfo = null;\n    this.configLoadedFromCache = false;\n    this.currentConfiguration = null;\n    this.lock = null;\n    this.loading = false;\n    this.mode = null;\n    this.protobuf = null;\n    this.protobufInitialized = false;\n    this.observerNotificationSubscription = null;\n    this.observerMessageSubscription = null;\n    this.lockAcquisitionSubscription = null;\n    this.gatewayNotificationSubscription = null;\n    this.gatewayMessageSubscription = null;\n    this.nextSubId = 0;\n    this.productHistoryManager = new ProductHistoryManager();\n    this.subscriptionManager = new SubscriptionManager({\n      productHistoryManager: this.productHistoryManager,\n    });\n    this.showConnectingSplashScreen();\n  }\n\n  setMode(mode) {\n    this.onCurrentModeChanged(mode);\n  }\n\n  setProtobufStaticInitialized() {\n    this.protobufInitialized = true;\n    this.onProtobufChangedImpl();\n  }\n\n  setProtobuf(protobuf) {\n    this.protobuf = protobuf;\n    this.subscriptionManager.setProtobuf(protobuf);\n    this.onProtobufChangedImpl();\n  }\n\n  onProtobufChangedImpl() {\n    if (this.protobuf && this.protobuf.isConnected() && this.protobufInitialized) {\n      this.hideConnectingSplashScreen();\n      setImmediate(() => this.loadProject());\n    } else {\n      this.showConnectingSplashScreen();\n    }\n  }\n\n  sendLogsToServer = async (entries) => {\n    const logs = entries.map((e) => this.mapLogEntry(e));\n    const req = Protobuf.SvPb.StoreClientLogsRequest.create({\n      client: 'WebApp',\n      logs,\n    });\n    try {\n      if (this.protobuf) {\n        await this.protobuf.request(req);\n      }\n    } catch (e) {\n      console.error('Error while sending logs to server:', e);\n    }\n  };\n\n  mapLogEntry(entry) {\n    return {\n      severity: mapLogLevelNameToProtobufLogSeverity(entry.levelName),\n      message: JSON.stringify(entry),\n    };\n  }\n\n  async updateConfigLockStatus(status) {\n    if (!this.lock) {\n      this.lock = new ConfigurationLock({});\n    }\n    this.lock.owner = status.owner;\n    this.lock.lockDescription = status.description;\n    this.lock.host = status.host;\n    this.lock.status = status.status;\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  async dispatchCurrentConfiguration(configuration) {\n    this.dispatch(setCurrentConfiguration(new Configuration(configuration)));\n    Configuration.saveToCache(this.currentConfiguration, this.configInfo);\n    this.dispatchInspectionToolsetMappings(configuration.inspectionToolsetMappings);\n  }\n\n  dispatchInspectionToolsetMappings(mappings) {\n    this.dispatch(setInspectionToolsetMappings(new Map(mappings)));\n    localStorage.setItem(INSPECTION_TOOLSET_MAPPINGS, JSON.stringify(Array.from(mappings)));\n  }\n\n  async dispatchConfigurationLock(lock) {\n    this.dispatch(setConfigurationLock(new ConfigurationLock(lock)));\n  }\n\n  loadProject = async () => {\n    if (this.loading) {\n      this.loadProjectRequested = true;\n      return;\n    }\n\n    this.loading = true;\n    this.showLoadingSplashScreen();\n    try {\n      await this.getMyPermissions();\n      await this.getDatabaseGatewayConfig();\n      await this.discoverConfiguration();\n      await this.discoverDeviceMode();\n      this.subscribeToNotificationAndMessageStreams();\n      // only load the client chunk when we have a valid configuration\n      if (this.currentConfiguration) {\n        this.dispatch(setSVOConfigLoaded(true));\n        await this.currentConfiguration.discoverInspectionsWithConfigName(this.protobuf);\n        await this.loadClientChunk();\n      } else {\n        await this.resetClientChunk();\n        this.dispatch(setSVOConfigLoaded(false));\n      }\n\n      const request = sessionStorage.getItem(LOCK_ACQUISITION_REQUEST);\n      if (request) {\n        const reqInfo = JSON.parse(request);\n        if (reqInfo.user != this.lock.owner) {\n          reqInfo.requestTakeover = false;\n          this.sendLockAcquisitionStreamRequest(reqInfo);\n        }\n      }\n      // TODO: re-subscribe all current subscriptions?\n      // this.scheduleRebuildSubscriptions();\n      this.hideLoadingSplashScreen();\n    } catch (err) {\n      this.showLoadingErrorOverlay(err);\n    }\n    this.loading = false;\n\n    if (!this.configLoadedFromCache && this.currentConfiguration) {\n      try {\n        this.dispatchCurrentConfiguration(this.currentConfiguration);\n        this.setUpProductHistories(this.currentConfiguration);\n\n        this.currentConfiguration.discoverPartsInBackground(this.protobuf).then(() => {\n          this.dispatchCurrentConfiguration(this.currentConfiguration);\n        });\n      } catch (err) {\n        logger.error({ err }, 'Error loading configuration');\n        return;\n      }\n    }\n\n    if (this.loadProjectRequested) {\n      this.loadProjectRequested = false;\n      this.loadProject();\n    }\n  };\n\n  showConnectingSplashScreen() {\n    // can not call dispatch right away, because we reach this point\n    // while the store itself is still in initialization phase.\n    setImmediate(() => {\n      this.dispatch(\n        showGlobalMessageOverlay({\n          message: <p>Connecting</p>,\n        }),\n      );\n    });\n  }\n\n  hideConnectingSplashScreen() {\n    // This function might be triggered by a redux event itself.\n    // Use setImmediate to not trigger a redux event inside a\n    // redux event (which is forbidden).\n    setImmediate(() => {\n      this.dispatch(hideGlobalMessageOverlay());\n    });\n  }\n\n  showLoadingSplashScreen() {\n    this.dispatch(\n      showGlobalMessageOverlay({\n        message: <p>Loading Configuration</p>,\n      }),\n    );\n  }\n\n  showLoadingErrorOverlay(err) {\n    this.dispatch(\n      showGlobalMessageOverlay({\n        message: <p>Error while loading Configuration: {`${err}`}</p>,\n      }),\n    );\n  }\n\n  hideLoadingSplashScreen() {\n    this.dispatch(hideGlobalMessageOverlay());\n  }\n\n  async getConfigurationInfo() {\n    try {\n      let res = await this.protobuf.request(Protobuf.SvPb.GetConfigurationInfoRequest.create());\n\n      if (Object.keys(res).length === 0) {\n        logger.warn(\n          'Empty response for GetConfigurationInfoRequest, configuration in SVO not loaded',\n        );\n        return null;\n      }\n\n      if (!res.lastModified) {\n        res = {\n          ...res,\n          lastModified: res.loadedSince,\n        };\n      }\n\n      return res;\n    } catch (err) {\n      logger.error('GetConfigurationInfoRequest ERROR', err);\n    }\n\n    return null;\n  }\n\n  async discoverConfiguration() {\n    let cachedConfigInfo = null;\n    this.configInfo = await this.getConfigurationInfo();\n\n    if (!this.configInfo || !this.configInfo.loadedSince) {\n      this.currentConfiguration = null;\n      return;\n    }\n\n    try {\n      cachedConfigInfo = await JSON.parse(localStorage.getItem(CONFIG_INFO));\n    } catch (err) {\n      logger.error({ err }, 'Timestamp request failed');\n    }\n\n    let config = null;\n    // Timestamps should be equal but not null\n    if (\n      this.configInfo &&\n      cachedConfigInfo &&\n      cachedConfigInfo.hash === this.configInfo.hash &&\n      Number(cachedConfigInfo.lastModified) === this.configInfo.lastModified\n    ) {\n      config = await Configuration.loadFromCache();\n      const cachedMappings = localStorage.getItem(INSPECTION_TOOLSET_MAPPINGS);\n      if (cachedMappings) {\n        config.inspectionToolsetMappings = new Map(JSON.parse(cachedMappings));\n      }\n      this.dispatch(setCurrentConfiguration(config));\n      this.setUpProductHistories(config);\n      this.configLoadedFromCache = true;\n    } else {\n      config = new Configuration({});\n      this.dispatch(setCurrentConfiguration(config));\n      this.dispatch(clearCurrentView());\n      this.configLoadedFromCache = false;\n    }\n\n    this.dispatch(setInspectionToolsetMappings(new Map(config.inspectionToolsetMappings)));\n    this.currentConfiguration = config;\n  }\n\n  async onCurrentModeChanged(currentMode) {\n    // set internal mode to unknown while switching the mode to\n    // lower the possibility of running into errors in the\n    // subscription code, e.g. e.g. fetching images which are not\n    // accessible in certain modes\n    this.mode = modes.unknownMode.id;\n\n    const mode = mapWebAppModeToProtobufDeviceMode(currentMode);\n    const req = Protobuf.SvPb.SetDeviceModeRequest.create({ mode });\n    let res = null;\n    try {\n      res = await this.protobuf.request(req);\n    } catch (err) {\n      logger.error({ err }, 'Error while changing the mode');\n      return;\n    }\n\n    if (res.hResult) {\n      logger.error({ hResult: res.hResult }, 'Error while changing the mode');\n      return;\n    }\n\n    // Leaving this here as a safety net in case SVObserver is not\n    // informing us about the new mode via a notification. As we\n    // do nothing when the discovered mode is the one we already,\n    // have in this.mode, it is cheap to do it multiple times.\n    setTimeout(this.discoverDeviceMode, 500);\n  }\n\n  discoverDeviceMode = async () => {\n    let mode = null;\n    let modeName = null;\n    try {\n      const req = Protobuf.SvPb.GetDeviceModeRequest.create({});\n      const res = await this.protobuf.request(req);\n      modeName = res.mode;\n      mode = mapProtobufDeviceModeToWebAppMode(modeName);\n    } catch (err) {\n      logger.error({ err }, 'Error while fetching mode');\n    }\n\n    if (mode === null || this.mode === mode) {\n      return;\n    }\n\n    // Initially we get mode from SVObserver and no change happens\n    if (this.mode === null) {\n      this.mode = mode;\n      return;\n    }\n\n    logger.info(\n      { oldMode: this.mode, newMode: mode, newModeName: modeName },\n      'Discovered new mode',\n    );\n    this.mode = mode;\n\n    this.dispatch(addModeSwitchNotification(mode));\n    return this.dispatch(setCurrentModeDone(mode));\n  };\n\n  loadClientChunk() {\n    return this.dispatch(loadClientChunk(this));\n  }\n\n  resetClientChunk() {\n    return this.dispatch(resetClientChunk(this.protobuf));\n  }\n\n  getDatabaseGatewayConfig() {\n    return this.dispatch(loadDatabaseGatewayConfiguration(this.protobuf));\n  }\n\n  subscribeToNotificationAndMessageStreams() {\n    this.subscribeToObserverNotificationStream();\n    this.subscribeToObserverMessageStream();\n    this.subscribeToGatewayNotificationStream();\n    this.subscribeToGatewayMessageStream();\n  }\n\n  subscribeToObserverNotificationStream() {\n    this.unsubscribeFromObserverNotificationStream();\n    const req = Protobuf.SvPb.GetNotificationStreamRequest.create({});\n    this.observerNotificationSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onObserverNotification(evt),\n      error: (err) => this.onObserverNotificationError(err),\n      complete: () => logger.debug('Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromObserverNotificationStream() {\n    if (this.observerNotificationSubscription) {\n      this.observerNotificationSubscription.unsubscribe();\n    }\n  }\n\n  onObserverNotification({ type, parameter }) {\n    let fileName, configName;\n    switch (type) {\n      case Protobuf.SvPb.NotifyType.currentMode:\n        {\n          const mode = this.getVariantValue(parameter);\n          logger.debug({ mode }, 'Notification currentMode');\n          // the notification contains the new mode already, but it might be \"modeChanging\"\n          // so lets just fetch it from the SVObserver so we always have the actual mode.\n          this.discoverDeviceMode();\n        }\n        break;\n      case Protobuf.SvPb.NotifyType.lastModified:\n        {\n          const timestamp = this.getVariantValue(parameter) * 1000;\n          logger.debug({ timestamp: new Date(timestamp) }, 'Notification lastModified');\n          this.dispatch(addProjectModifiedNotification());\n          // TODO: mateusz@main.dev: modify updateProject when notification will contain inspectionId. ID should be passed as arg to updateProject\n          this.updateProject();\n        }\n        break;\n      case Protobuf.SvPb.NotifyType.configLoaded:\n        fileName = this.getVariantValue(parameter);\n        configName = Configuration.extractConfigNameFromFileName(fileName);\n        logger.debug({ fileName, configName }, 'Notification configLoaded');\n        this.dispatch(addProjectLoadedNotification(fileName));\n        this.loadProject();\n        break;\n      case Protobuf.SvPb.NotifyType.configUnloaded:\n        fileName = this.getVariantValue(parameter);\n        configName = Configuration.extractConfigNameFromFileName(fileName);\n        logger.debug({ fileName, configName }, 'Notification configUnloaded');\n        this.dispatch(addProjectUnloadedNotification(fileName));\n        this.loadProject();\n        break;\n      default:\n        logger.warn({ type, parameter }, 'Unknown notification type');\n        break;\n    }\n  }\n\n  async updateProject() {\n    if (!this.currentConfiguration) {\n      await this.discoverConfiguration();\n    }\n    await this.currentConfiguration.resetInspectionIdToToolsetMappings(this.protobuf);\n    this.dispatchInspectionToolsetMappings(this.currentConfiguration.inspectionToolsetMappings);\n  }\n\n  getVariantValue(variant) {\n    return variant && variant[variant.data];\n  }\n\n  formatMessageNotification(messageText, errorNumber) {\n    return (\n      <div>\n        <FormattedMessage id=\"notifications.checkSvimOutput\" />\n        {messageText && (\n          <div>\n            {errorNumber ? `(${errorNumber})` : ' '} {messageText}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  onObserverNotificationError(err) {\n    logger.error({ err }, 'Notification error');\n    this.unsubscribeFromObserverNotificationStream();\n  }\n\n  subscribeToObserverMessageStream() {\n    this.unsubscribeFromObserverMessageStream();\n    const req = Protobuf.SvPb.GetMessageStreamRequest.create({});\n    this.observerMessageSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onObserverMessage(evt),\n      error: (err) => this.onObserverMessageError(err),\n      complete: () => logger.debug('Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromObserverMessageStream() {\n    if (this.observerMessageSubscription) {\n      this.observerMessageSubscription.unsubscribe();\n    }\n  }\n\n  onObserverMessage(evt) {\n    const { type, messageList } = evt;\n    const { messages } = messageList;\n    logger.debug({ ...evt }, 'SVObserver message stream event');\n\n    switch (type) {\n      case Protobuf.SvPb.MessageType.startMsgBox:\n        {\n          if (!messages || messages.length !== 1) {\n            logger.warn({ type, messages }, 'Expected exactly one message in the message event');\n            return;\n          }\n          const firstMessage = messages[0];\n          const message = this.formatMessageNotification(\n            firstMessage.messageText,\n            firstMessage.messageCode,\n          );\n          this.dispatch(showGlobalMessageOverlay({ message }));\n        }\n        break;\n\n      case Protobuf.SvPb.MessageType.endMsgBox:\n        this.dispatch(hideGlobalMessageOverlay());\n        break;\n\n      case Protobuf.SvPb.MessageType.msgLog:\n        // TODO also handle severity\n        (messages || []).forEach(({ messageCode, messageText }) => {\n          this.dispatch(addServerMessageNotification(messageText, messageCode));\n        });\n        break;\n\n      default:\n        logger.warn({ type }, 'Unknown message event type');\n        break;\n    }\n  }\n\n  onObserverMessageError(err) {\n    logger.error({ err }, 'SVObserver message stream error');\n    this.unsubscribeFromObserverMessageStream();\n  }\n\n  subscribeToLockAcquisitionStream(reqInfo) {\n    if (reqInfo.requestTakeover) {\n      this.lock.waitForTakeoverResponse();\n      this.dispatchConfigurationLock(this.lock);\n    }\n    this.sendLockAcquisitionStreamRequest(reqInfo);\n  }\n\n  sendLockAcquisitionStreamRequest(reqInfo) {\n    const req = Protobuf.SvPb.LockAcquisitionStreamRequest.create(reqInfo);\n    this.lockAcquisitionSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onLockAcquisition(evt, reqInfo),\n      error: (err) => this.onLockAcquisitionError(err),\n      complete: () => logger.debug('Lock acquisition observable completed'),\n    });\n  }\n\n  async unsubscribeFromLockAcquisitionStream() {\n    sessionStorage.removeItem(LOCK_ACQUISITION_REQUEST);\n    if (this.lockAcquisitionSubscription) {\n      this.lockAcquisitionSubscription.unsubscribe();\n      this.lock = new ConfigurationLock({});\n      this.dispatchConfigurationLock(this.lock);\n      await this.getMyPermissions();\n    }\n  }\n\n  onLockAcquisition(evt, req) {\n    const notification = evt[evt.message];\n    logger.debug('message type: ' + JSON.stringify(evt, undefined, 2));\n    switch (evt.message) {\n      case 'lockAcquiredNotification': {\n        this.onLockAcquiredNotification(notification, req);\n        break;\n      }\n      case 'lockTakeoverNotification': {\n        this.onLockTakeoverNotification(notification);\n        break;\n      }\n      case 'lockReleasedNotification': {\n        this.onLockReleasedNotification();\n        break;\n      }\n      case 'lockAlreadyLockedNotification': {\n        this.onLockAlreadyLockedNotification(notification);\n        break;\n      }\n      case 'lockTakeoverRejectedNotification': {\n        this.onLockTakeoverRejectedNotification();\n        break;\n      }\n      default:\n        logger.warn({ type: evt.message }, 'Unknown lock acquisition notification type');\n        break;\n    }\n  }\n\n  onLockAcquisitionError(err) {\n    logger.error({ err }, 'Lock acquisition error: ' + JSON.stringify(err, undefined, 2));\n    if (err.code === 403) {\n      this.dispatch(addConfigAlreadyLockedBySameUser());\n    } else if (err.code === 404) {\n      this.dispatch(addTakeoverCandidateNotFoundNotification());\n    } else {\n      this.dispatch(addLockAcquisitionErrorNotification(err.code));\n    }\n  }\n\n  async onLockAcquiredNotification(notification, request) {\n    request['user'] = notification.user;\n    sessionStorage.setItem(LOCK_ACQUISITION_REQUEST, JSON.stringify(request));\n    this.lock.handleLockAcquiredNotification(notification);\n    this.dispatchConfigurationLock(this.lock);\n    await this.getMyPermissions();\n  }\n\n  onLockTakeoverNotification(notification) {\n    this.lock.handleLockTakeoverNotification(notification);\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  onLockReleasedNotification() {\n    this.lock.handleLockReleasedNotification();\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  onLockAlreadyLockedNotification(notification) {\n    this.lock.handleLockAlreadyLockedNotification(notification);\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  onLockTakeoverRejectedNotification() {\n    this.lock.handleLockTakeoverRejectedNotification();\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  closeAlertDialogs() {\n    this.lock.resetAlertDialogFlags();\n    this.dispatchConfigurationLock(this.lock);\n  }\n\n  async passConfigLock(reqInfo) {\n    const req = Protobuf.SvPb.LockTakeoverRequest.create(reqInfo);\n    try {\n      this.protobuf.request(req);\n      this.lock.resetTakeoverAttempt();\n      this.lock.lockedInSameAppInstance = false;\n      sessionStorage.removeItem(LOCK_ACQUISITION_REQUEST);\n    } catch (err) {\n      this.dispatch(addLockTakeoverErrorNotification(err.code));\n      logger.error({ err }, 'Error while perfroming config lock takeover');\n    }\n  }\n\n  async retainConfigLock(reqInfo) {\n    const req = Protobuf.SvPb.LockTakeoverRejectedRequest.create(reqInfo);\n    try {\n      await this.protobuf.request(req);\n      this.lock.resetTakeoverAttempt();\n      this.dispatchConfigurationLock(this.lock);\n    } catch (err) {\n      this.dispatch(addLockTakeoverErrorNotification(err.code));\n      logger.error({ err }, 'Error while perfroming config lock takeover');\n    }\n  }\n\n  subscribeToGatewayNotificationStream() {\n    this.unsubscribeFromGatewayNotificationStream();\n    const req = Protobuf.SvPb.GetGatewayNotificationStreamRequest.create({});\n    this.gatewayNotificationSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onGatewayNotification(evt),\n      error: (err) => this.onGatewayNotificationError(err),\n      complete: () => logger.debug('Gateway Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromGatewayNotificationStream() {\n    if (this.gatewayNotificationSubscription) {\n      this.gatewayNotificationSubscription.unsubscribe();\n    }\n  }\n\n  onGatewayNotification(evt) {\n    const value = evt[evt.message];\n    switch (evt.message) {\n      case 'rejectStreamPaused':\n        {\n          const { pausedInspectionIds } = value;\n          logger.debug({ pausedInspectionIds }, 'Notification rejectStreamPaused');\n          this.onPauseNotification(pausedInspectionIds);\n        }\n        break;\n      case 'configurationLockStatus':\n        {\n          logger.debug({ value }, 'Notification configurationLockStatus');\n          this.updateConfigLockStatus(value);\n          this.getMyPermissions();\n        }\n        break;\n      default:\n        logger.warn({ type: evt.message }, 'Unknown gateway notification type');\n        break;\n    }\n  }\n\n  onGatewayNotificationError(err) {\n    logger.error({ err }, 'Gateway Notification error');\n    this.unsubscribeFromGatewayNotificationStream();\n  }\n\n  subscribeToGatewayMessageStream() {\n    this.unsubscribeFromGatewayMessageStream();\n    const req = Protobuf.SvPb.GetGatewayMessageStreamRequest.create({});\n    this.gatewayMessageSubscription = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onGatewayMessage(evt),\n      error: (err) => this.onGatewayMessageError(err),\n      complete: () => logger.debug('Notification observable completed'),\n    });\n  }\n\n  unsubscribeFromGatewayMessageStream() {\n    if (this.gatewayMessageSubscription) {\n      this.gatewayMessageSubscription.unsubscribe();\n    }\n  }\n\n  onGatewayMessage(evt) {\n    const {\n      type,\n      messageList: { messages = [] },\n    } = evt;\n    logger.debug({ ...evt }, 'Gateway message stream event');\n\n    switch (type) {\n      case Protobuf.SvPb.MessageType.startMsgBox:\n        {\n          if (messages.length !== 1) {\n            logger.warn({ type, messages }, 'Expected exactly one message in the message event');\n            return;\n          }\n          const firstMessage = messages[0];\n          const message = this.formatMessageNotification(\n            firstMessage.messageText,\n            firstMessage.messageCode,\n          );\n          this.dispatch(showGlobalMessageOverlay({ message }));\n        }\n        break;\n\n      case Protobuf.SvPb.MessageType.endMsgBox:\n        this.dispatch(hideGlobalMessageOverlay());\n        break;\n\n      case Protobuf.SvPb.MessageType.msgLog:\n        // TODO also handle severity\n        messages.forEach(({ messageCode, messageText }) => {\n          this.dispatch(addServerMessageNotification(messageText, messageCode));\n        });\n        break;\n\n      default:\n        logger.warn({ type }, 'Unknown message event type');\n        break;\n    }\n  }\n\n  onGatewayMessageError(err) {\n    logger.error({ err }, 'Gateway message stream error');\n    this.unsubscribeFromGatewayMessageStream();\n  }\n\n  subscribeToProductStream(desc, cb) {\n    const id = this._getNextSubId();\n    this.subscriptionManager.addSubscription(id, desc, cb);\n    return id;\n  }\n\n  unsubscribeFromProductStream(id) {\n    this.subscriptionManager.removeSubscription(id);\n  }\n\n  _getNextSubId() {\n    return `${++this.nextSubId}`;\n  }\n\n  setUpProductHistories(config) {\n    const inspections = config.getInspections();\n    this.productHistoryManager.init(inspections);\n  }\n\n  async replayProduct(inspectionId, product) {\n    await this.fetchMissingProductData(inspectionId, product);\n    this.subscriptionManager.replayProduct(inspectionId, product);\n  }\n\n  async fetchMissingProductData(inspectionId, product) {\n    const missingImageIds = this.getMissingProductImages(inspectionId, product);\n    const missingValueIds = this.getMissingProductValues(inspectionId, product);\n    if (missingImageIds.length === 0 && missingValueIds.length === 0) {\n      return;\n    }\n\n    const req = Protobuf.SvPb.GetProductDataRequest.create({\n      inspectionId,\n      trigger: product.trigger,\n      imageIds: missingImageIds,\n      valueIds: missingValueIds,\n      includeOverlays: true,\n    });\n    try {\n      const res = await this.protobuf.request(req);\n      await product.addData({\n        trigger: res.trigger,\n        imageIds: missingImageIds,\n        images: res.images,\n        overlays: res.overlays,\n        valueIds: missingValueIds,\n        values: res.values,\n      });\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  getMissingProductImages(inspectionId, product) {\n    const imageIds = this.subscriptionManager.getSubscribedImages(inspectionId);\n    return imageIds.filter((imageId) => product.getImage(imageId) === undefined);\n  }\n\n  getMissingProductValues(inspectionId, product) {\n    const valueIds = this.subscriptionManager.getSubscribedValues(inspectionId);\n    return valueIds.filter((valueId) => product.getValue(valueId) === undefined);\n  }\n\n  onPauseNotification(pausedInspectionIds) {\n    this.dispatch(addRejectStreamPausedNotification(pausedInspectionIds));\n    this.subscriptionManager.updatePausedInspections(pausedInspectionIds);\n    this.dispatch(setPausedInspections(pausedInspectionIds));\n  }\n\n  pauseRejectStream(inspectionId) {\n    this.pauseRejectStreamImpl(true, inspectionId);\n  }\n\n  resumeRejectStream(inspectionId) {\n    this.pauseRejectStreamImpl(false, inspectionId);\n  }\n\n  async pauseRejectStreamImpl(pause, inspectionId) {\n    const request = Protobuf.SvPb.SetRejectStreamPauseStateRequest.create({\n      inspectionId: inspectionId || undefined,\n      pause,\n    });\n\n    try {\n      await this.protobuf.request(request);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async getMyPermissions() {\n    let response = {};\n    try {\n      const request = Protobuf.SvPb.GetMyPermissionsRequest.create();\n      response = await this.protobuf.request(request);\n    } catch (err) {\n      logger.error('Cannot get my permissions, fall back to default permissions');\n      response = defaultPermissions;\n    }\n\n    if (!response || !response.permissions) {\n      logger.error('Cannot get my permissions');\n      return false;\n    }\n\n    const myPermissions = new Set();\n    flattenPermissionsRec(response.permissions, myPermissions, '');\n    this.disablePermissionsWhenConfigLocked(myPermissions);\n    this.dispatch(setMyPermissions(myPermissions));\n\n    if (canReadUserManagement(myPermissions) || canEditUserManagement(myPermissions)) {\n      await this.getGroupPermissions();\n    }\n  }\n\n  disablePermissionsWhenConfigLocked(permissions) {\n    if (this.lock?.isUnlocked() || this.lock?.isLockedInDifferentAppInstance()) {\n      permissions.forEach((permission) => {\n        if (\n          permission.endsWith('.save') ||\n          permission.endsWith('.edit') ||\n          permission.endsWith('.write') ||\n          permission.endsWith('.remove') ||\n          permission.endsWith('.add')\n        ) {\n          permissions.delete(permission);\n        }\n      });\n    }\n  }\n\n  async getGroupPermissions() {\n    const request = Protobuf.SvPb.GetGroupDetailsRequest.create();\n    const response = await this.protobuf.request(request);\n\n    if (!response || !response.groupDetails) {\n      logger.error('Cannot get group permissions');\n      return false;\n    }\n\n    const flattenedPermissions = this.flattenPermissions(response.groupDetails);\n    this.dispatch(setGroupPermissions(flattenedPermissions));\n  }\n\n  flattenPermissions(groupDetails) {\n    const permissions = new Map();\n    (groupDetails || []).forEach((groupDetail) => {\n      const groupPermissions = new Set();\n      flattenPermissionsRec(groupDetail.permissions, groupPermissions, '');\n      permissions.set(groupDetail.name, {\n        groupPermissions,\n        users: groupDetail.users,\n      });\n    });\n    return permissions;\n  }\n\n  async setUserPermissions(groupPermissions) {\n    const request = Protobuf.SvPb.UpdateGroupPermissionsRequest.create({\n      groupPermissions,\n    });\n    try {\n      if (this.protobuf) {\n        await this.protobuf.request(request);\n        await this.getGroupPermissions();\n      }\n    } catch (e) {\n      logger.error({ e }, 'Error while setting user permissions');\n    }\n\n    logger.info('Successfully saved user permissions');\n  }\n\n  async updateToolsetData(inspectionId) {\n    await this.currentConfiguration.updateInspectionIdToToolsetMappings(\n      this.protobuf,\n      inspectionId,\n    );\n    this.dispatchInspectionToolsetMappings(this.currentConfiguration.inspectionToolsetMappings);\n  }\n\n  async addTool(inspectionID, ownerId, classId, taskObjectPos) {\n    const request = Protobuf.SvPb.InspectionCmdRequest.create({\n      inspectionID,\n      createObjectRequest: {\n        ownerId,\n        classId,\n        taskObjectPos,\n      },\n    });\n\n    try {\n      const response = await this.protobuf.request(request);\n      this.updateToolsetData(inspectionID);\n      return response?.createObjectResponse?.objectId;\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async deleteTool(inspectionID, objectID) {\n    const request = Protobuf.SvPb.InspectionCmdRequest.create({\n      inspectionID,\n      deleteObjectRequest: {\n        objectID,\n      },\n    });\n\n    try {\n      await this.protobuf.request(request);\n      this.updateToolsetData(inspectionID);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async downloadSVOConfig() {\n    const request = Protobuf.SvPb.GetConfigRequest.create({});\n\n    try {\n      const response = await this.protobuf.request(request);\n      return response?.fileData;\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async uploadSVOConfig(fileName, fileData) {\n    const request = Protobuf.SvPb.PutConfigRequest.create({\n      fileName,\n      fileData,\n    });\n\n    try {\n      const res = await this.protobuf.request(request);\n      if (res.hResult) {\n        logger.error({ hResult: res.hResult }, 'Could not load SVO configuration file');\n        return;\n      }\n      this.updateProject();\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async copyTool(inspectionID, objectID) {\n    const request = Protobuf.SvPb.ConfigCommandRequest.create({\n      inspectionID,\n      clipboardRequest: {\n        action: Protobuf.SvPb.ClipboardActionEnum.Copy,\n        objectID,\n      },\n    });\n\n    try {\n      await this.protobuf.request(request);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async cutTool(inspectionID, objectID) {\n    const request = Protobuf.SvPb.ConfigCommandRequest.create({\n      inspectionID,\n      clipboardRequest: {\n        action: Protobuf.SvPb.ClipboardActionEnum.Cut,\n        objectID,\n      },\n    });\n\n    try {\n      await this.protobuf.request(request);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n\n  async pasteTool(inspectionID, objectID) {\n    const request = Protobuf.SvPb.ConfigCommandRequest.create({\n      inspectionID,\n      clipboardRequest: {\n        action: Protobuf.SvPb.ClipboardActionEnum.Paste,\n        objectID,\n      },\n    });\n\n    try {\n      await this.protobuf.request(request);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n}\n","export const defaultPermissions = {\n  permissions: {\n    webapp: {\n      configuration: {\n        save: true,\n      },\n      logs: {\n        read: true,\n      },\n      viewset: {\n        add: true,\n        read: true,\n        edit: true,\n        remove: true,\n      },\n      view: [\n        {\n          type: 0,\n          add: true,\n          read: true,\n          edit: true,\n          remove: true,\n        },\n      ],\n    },\n    svobserver: {\n      mode: {\n        read: true,\n        edit: true,\n      },\n      inspectionstate: {\n        read: true,\n        edit: true,\n      },\n      value: {\n        read: true,\n        edit: true,\n      },\n      tool: {\n        read: true,\n        edit: true,\n        add: true,\n        remove: true,\n      },\n      configuration: {\n        read: true,\n        write: true,\n      },\n      notifications: {\n        subscribe: true,\n      },\n      clientlogs: {\n        store: true,\n      },\n      file: {\n        read: true,\n        write: true,\n      },\n      machinestate: {\n        set: true,\n      },\n      command: {\n        execute: true,\n      },\n    },\n    usermanagement: {\n      userpermissions: {\n        // currently set to false because default permissions are used as fallback if svobserver has not yet implemented permissions\n        read: false,\n        edit: false,\n      },\n    },\n  },\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { useIntl } from 'react-intl';\n\nimport closeIcon from '../../assets/icons/close.svg';\n\nimport ActionBar, { ActionBarType } from '../ActionBar';\nimport IconButton from '../buttons/IconButton';\n\nimport './style.scss';\n\ninterface DialogProps {\n  open?: boolean;\n  className?: string;\n  isInView?: boolean;\n  dialogActions?: ActionBarType[];\n  title?: React.ReactNode;\n  onClose?: () => void;\n  isFullscreen?: boolean;\n  isPositionAbsolute?: boolean;\n  isPopup?: boolean;\n}\n\nconst Dialog: React.FC<React.PropsWithChildren<DialogProps>> = ({\n  children,\n  open = false,\n  className,\n  isInView = false,\n  isFullscreen = false,\n  isPopup = false,\n  isPositionAbsolute,\n  title,\n  dialogActions,\n  onClose,\n}) => {\n  const intl = useIntl();\n\n  const dialogClass = classNames({\n    [className ?? '']: !!className,\n    dialog: true,\n    'dialog--open': open,\n    'is-in-view': isInView,\n    'is-position-absolute': isPositionAbsolute,\n  });\n  const dialogWrapperClass = classNames({\n    'dialog-wrapper': true,\n    'is-height-100': isInView || isFullscreen,\n    'is-width-100': isFullscreen,\n    isPopup: isPopup,\n  });\n\n  const dialogContentWrapperClass = classNames({\n    'dialog-content-wrapper': true,\n    'is-padding-0': isInView,\n    isPopup: isPopup,\n  });\n\n  if (!open) {\n    return null;\n  }\n  return (\n    <div className={dialogClass}>\n      <div className={dialogWrapperClass}>\n        <div className=\"dialog-toolbar\">\n          <div className=\"dialog-title\">{title}</div>\n          <div className=\"dialog-controll-wrapper\">\n            <IconButton\n              tooltip={intl.messages['viewSetManager.close']}\n              iconUrl={closeIcon}\n              onClick={onClose}\n            />\n          </div>\n        </div>\n        <div className={dialogContentWrapperClass}>{children}</div>\n        <div className=\"dialog-action-wrapper\">\n          {dialogActions && <ActionBar isViewAction actions={dialogActions} />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\nimport Heading from '../../../../components/typo/Heading';\n\nconst ShortcutListItem = ({ title, description }) => (\n  <li className=\"shortcut-list-item\">\n    <Heading type=\"h3\" intlId={title} />\n    <FormattedMessage id={description} />\n  </li>\n);\n\nexport const propTypes = {\n  title: PropTypes.node.isRequired,\n  description: PropTypes.node.isRequired,\n};\nShortcutListItem.propTypes = propTypes;\n\nexport default ShortcutListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortId from 'shortid';\n\nimport './style.scss';\nimport ShortcutListItem, { propTypes as shortcutListItemPropTypes } from '../ShortcutListItem';\n\nconst ShortcutList = ({ shortcuts }) => (\n  <ul className=\"shortcut-list\">\n    {shortcuts.map((shortcut) => (\n      <ShortcutListItem\n        key={shortId.generate()}\n        title={shortcut.title}\n        description={shortcut.description}\n      />\n    ))}\n  </ul>\n);\n\nShortcutList.propTypes = {\n  shortcuts: PropTypes.arrayOf(PropTypes.shape(shortcutListItemPropTypes)).isRequired,\n};\n\nexport default ShortcutList;\n","const shortcuts = [\n  {\n    title: 'shortcutView.fullscreenTitle',\n    description: 'shortcutView.fullscreenDescription',\n  },\n  {\n    title: 'shortcutView.helpTitle',\n    description: 'shortcutView.helpDescription',\n  },\n];\n\nexport default shortcuts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Dialog from '../../components/Dialog';\nimport ShortcutList from './components/ShortcutList';\nimport shortcuts from './shortcuts';\n\nconst ShortcutView = ({ open, onClose }) => (\n  <Dialog title={<FormattedMessage id=\"shortcutView.title\" />} onClose={onClose} open={open}>\n    <ShortcutList shortcuts={shortcuts} />\n  </Dialog>\n);\n\nShortcutView.defaultProps = {\n  open: false,\n};\n\nShortcutView.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ShortcutView;\n","import Product from './Product';\n\nexport default class ProductHistory {\n  constructor(inspectionId) {\n    this.inspectionId = inspectionId;\n    this.history = [];\n  }\n\n  async addProductData(productData) {\n    const { trigger, isReject } = productData;\n    const entry = this.history.find((e) => e.trigger === trigger);\n    let product = null;\n    if (entry) {\n      product = entry.product;\n    } else {\n      product = new Product({ trigger, isReject, history: this });\n      this.history.push({\n        trigger,\n        product,\n      });\n    }\n\n    await product.addData(productData);\n\n    return product;\n  }\n\n  releaseProduct(trigger) {\n    const entry = this.history.find((entry) => entry.trigger === trigger);\n    if (!entry) {\n      return;\n    }\n\n    const wasReleased = entry.product.releaseImpl();\n    if (wasReleased) {\n      this.history = this.history.filter((e) => e !== entry);\n    }\n  }\n}\n","import ProductHistory from './ProductHistory';\n\nexport default class ProductHistoryManager {\n  constructor() {\n    this.productHistories = new Map();\n  }\n\n  init(inspections) {\n    this.productHistories.clear();\n\n    (inspections || []).forEach((inspection) => {\n      const inspectionId = inspection.id;\n      const history = new ProductHistory(inspectionId);\n      this.productHistories.set(inspectionId, history);\n    });\n  }\n\n  async addProductData(inspectionId, productData) {\n    const productHistory = this.productHistories.get(inspectionId);\n    if (!productHistory) {\n      return undefined;\n    }\n    return await productHistory.addProductData(productData);\n  }\n}\n","import each from 'lodash/each';\nimport logger from '../utils/logger';\nimport Protobuf from './Protobuf';\n\nexport default class InspectionSubscription {\n  constructor({ inspectionId, productHistoryManager, protobuf, paused }) {\n    this.inspectionId = inspectionId;\n    this.productHistoryManager = productHistoryManager;\n    this.protobuf = protobuf;\n    this.lastTrigger = -1;\n    this.subsById = new Map();\n    this.paused = paused;\n    this.selectedTrigger = null;\n    this.baseSub = null;\n  }\n\n  pause() {\n    this.paused = true;\n  }\n\n  resume() {\n    this.paused = false;\n    this.selectedTrigger = null;\n  }\n\n  replayProduct(product) {\n    this.selectedTrigger = product.trigger;\n    this.emitProductToAllSubscriptions(product);\n  }\n\n  addSubscription(id, desc, cb) {\n    const subscription = { id, desc, cb };\n    this.subsById.set(id, subscription);\n\n    const { inspectionId } = desc;\n    if (this.inspectionId !== inspectionId) {\n      throw new Error('Insection id does not match');\n    }\n\n    this.resubscribeToStream();\n  }\n\n  removeSubscription(id) {\n    const subscription = this.subsById.get(id);\n    if (!subscription) {\n      logger.warn({ id }, 'Unable to unsubscribe listener: unknown id');\n      return;\n    }\n\n    this.swapLastProduct(subscription, null);\n\n    this.subsById.delete(id);\n\n    this.resubscribeToStream();\n  }\n\n  isEmpty() {\n    return this.subsById.size === 0;\n  }\n\n  getSubscribedImages() {\n    return this.uniqueIds('imageIds');\n  }\n\n  getSubscribedValues() {\n    return this.uniqueIds('valueIds');\n  }\n\n  setProtobuf(protobuf) {\n    this.protobuf = protobuf;\n    // TODO re-subscribe!\n  }\n\n  resubscribeToStream() {\n    this.unsubscribeFromStream();\n    if (!this.isEmpty()) {\n      this.subscribeToStream();\n    }\n  }\n\n  subscribeToStream() {\n    // TODO generate nonce per subscription so we know whether we get an event for an old sub\n    const params = this.buildReqParams();\n    const req = Protobuf.SvPb.GetProductStreamRequest.create(params);\n    this.baseSub = this.protobuf.stream(req).subscribe({\n      next: (evt) => this.onStreamEvent(req, evt),\n      error: (err) => this.onStreamError(err),\n      // TODO: how do we want to report complete event to the client?\n      //       we could return an event emitter...\n      complete: () => logger.debug('Product observable completed'),\n    });\n  }\n\n  buildReqParams() {\n    return {\n      inspectionId: this.inspectionId,\n      startAtTriggerCount: this.getStartAtTriggerCount(),\n      includeFailStatusValues: true,\n      valueIds: this.uniqueIds('valueIds'),\n      imageIds: this.uniqueIds('imageIds'),\n      rejectValueIds: this.uniqueIds('rejectValueIds'),\n      rejectImageIds: this.uniqueIds('rejectImageIds'),\n      rejectsOnly: this.isRejectsOnly(),\n      imageFormat: Protobuf.SvPb.ImageFormatEnum.bmp,\n      includeOverlays: true,\n    };\n  }\n\n  getStartAtTriggerCount() {\n    let startAtTriggerCount = 0;\n    this.subsById.forEach((sub) => {\n      if (\n        !isNaN(sub.desc.startAtTriggerCount) &&\n        sub.desc.startAtTriggerCount < startAtTriggerCount\n      ) {\n        startAtTriggerCount = sub.desc.startAtTriggerCount;\n      }\n    });\n    if (startAtTriggerCount === -1 && this.trigger > 0) {\n      return this.trigger;\n    }\n    return startAtTriggerCount;\n  }\n\n  isRejectsOnly() {\n    let rejectsOnly = true;\n    this.subsById.forEach((sub) => {\n      if (!sub.desc.rejectsOnly) {\n        rejectsOnly = false;\n      }\n    });\n    return rejectsOnly;\n  }\n\n  uniqueIds(key) {\n    const ids = new Set();\n    this.subsById.forEach((sub) => {\n      each(sub.desc[key], (id) => ids.add(id));\n    });\n    return Array.from(ids);\n  }\n\n  unsubscribeFromStream() {\n    if (this.baseSub && this.baseSub.unsubscribe) {\n      this.baseSub.unsubscribe();\n    }\n    this.baseSub = null;\n  }\n\n  async onStreamEvent(req, rawEvent) {\n    const { trigger, isReject } = rawEvent;\n    const images = this.gatherImages(req, rawEvent);\n    const values = this.gatherValues(req, rawEvent);\n\n    const productData = {\n      trigger,\n      isReject,\n      images,\n      values,\n    };\n\n    const product = await this.productHistoryManager.addProductData(this.inspectionId, productData);\n    this.lastTrigger = trigger;\n    this.emitProductToAllSubscriptions(product);\n  }\n\n  gatherImages(req, rawEvent) {\n    const { imageIds, rejectImageIds } = req;\n    const { isReject, images, rejectImages, overlays: overlaysList, rejectOverlays } = rawEvent;\n\n    const result = new Map();\n\n    imageIds.forEach((id, idx) => {\n      const image = (images || [])[idx];\n      const overlays = (overlaysList || [])[idx];\n      if (image) {\n        result.set(id, {\n          id,\n          image,\n          overlays,\n        });\n      }\n    });\n\n    if (isReject) {\n      rejectImageIds.forEach((id, idx) => {\n        const image = (rejectImages || [])[idx];\n        const overlays = (rejectOverlays || [])[idx];\n        if (image) {\n          result.set(id, {\n            id,\n            image,\n            overlays,\n          });\n        }\n      });\n    }\n\n    return result;\n  }\n\n  gatherValues(req, rawEvent) {\n    const { valueIds, rejectValueIds } = req;\n    const { isReject, values, rejectValues } = rawEvent;\n\n    const result = new Map();\n\n    valueIds.forEach((id, idx) => {\n      const value = (values || [])[idx];\n      if (value) {\n        result.set(id, {\n          id,\n          value,\n        });\n      }\n    });\n\n    if (isReject) {\n      rejectValueIds.forEach((id, idx) => {\n        const value = (rejectValues || [])[idx];\n        if (value) {\n          result.set(id, {\n            id,\n            value,\n          });\n        }\n      });\n    }\n\n    return result;\n  }\n\n  emitProductToAllSubscriptions(product) {\n    this.subsById.forEach((subscription) => {\n      this.emitProductToSubscription(subscription, product);\n    });\n  }\n\n  emitProductToSubscription(subscription, product) {\n    const hasRequestedData = this.hasAllRequestedDataForSubscription(product, subscription);\n    const isInterestedIn = this.isInterestedInNewPorduct(product, subscription);\n    if (hasRequestedData && isInterestedIn) {\n      product.lock();\n      subscription.cb({ product });\n      this.swapLastProduct(subscription, product);\n    }\n  }\n\n  hasAllRequestedDataForSubscription(product, subscription) {\n    // if only reject values requested and product is not a reject\n    if (!subscription.desc.imageIds && !subscription.desc.valueIds && !product.isReject) {\n      return false;\n    }\n    return (\n      this.hasDataForSubscriptionInList(subscription.desc.valueIds, product.values) ||\n      this.hasDataForSubscriptionInList(subscription.desc.rejectValueIds, product.values) ||\n      this.hasDataForSubscriptionInList(subscription.desc.imageIds, product.images) ||\n      this.hasDataForSubscriptionInList(subscription.desc.rejectImageIds, product.images)\n    );\n  }\n\n  isInterestedInNewPorduct(product, subscription) {\n    if (this.selectedTrigger) {\n      return this.selectedTrigger === product.trigger;\n    }\n    if (subscription.lastProduct) {\n      return (\n        subscription.desc.allowOldTrigger || subscription.lastProduct.trigger < product.trigger\n      );\n    }\n    return true;\n  }\n\n  hasDataForSubscriptionInList(requestedIds, map) {\n    const arr = requestedIds || [];\n    for (let i = 0; i < arr.length; ++i) {\n      if (!map.has(arr[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  swapLastProduct(subscription, product) {\n    if (subscription.lastProduct && !subscription.desc.manualRelease) {\n      subscription.lastProduct.release();\n    }\n    subscription.lastProduct = product;\n  }\n\n  onStreamError(err) {\n    // TODO: forward err to callback\n    logger.error({ err }, 'Stream error');\n    // TODO: unsubscribe all in case of error!\n  }\n}\n","import logger from '../utils/logger';\nimport InspectionSubscription from './InspectionSubscription';\n\nexport default class SubscriptionManager {\n  constructor({ productHistoryManager }) {\n    this.productHistoryManager = productHistoryManager;\n    this.inspectionIdBySubId = new Map();\n    this.subsByInspectionId = new Map();\n    this.pausedInspectionIds = [];\n    this.protobuf = null;\n  }\n\n  updatePausedInspections(pausedInspectionIds) {\n    this.pausedInspectionIds = pausedInspectionIds;\n    for (let [key, value] of this.subsByInspectionId.entries()) {\n      if (pausedInspectionIds.includes(key)) {\n        value.pause();\n      } else {\n        value.resume();\n      }\n    }\n  }\n\n  replayProduct(inspectionId, product) {\n    const inspection = this.subsByInspectionId.get(inspectionId);\n    if (inspection) {\n      inspection.replayProduct(product);\n    }\n  }\n\n  addSubscription(id, desc, cb) {\n    const { inspectionId, startAtTriggerCount } = desc;\n    this.inspectionIdBySubId.set(id, inspectionId);\n    const isPaused = this.pausedInspectionIds.includes(inspectionId);\n    let subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      subscription = new InspectionSubscription({\n        inspectionId,\n        startAtTriggerCount,\n        productHistoryManager: this.productHistoryManager,\n        paused: isPaused,\n        protobuf: this.protobuf,\n      });\n      this.subsByInspectionId.set(inspectionId, subscription);\n    }\n    subscription.addSubscription(id, desc, cb);\n  }\n\n  removeSubscription(id) {\n    const inspectionId = this.inspectionIdBySubId.get(id);\n    if (!inspectionId) {\n      logger.warn({ id }, 'Unable to unsubscribe listener: unknown id');\n      return;\n    }\n\n    const subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      logger.warn({ id }, 'Unable to unsubscribe listener: unknown inspection id');\n      return;\n    }\n\n    subscription.removeSubscription(id);\n\n    if (subscription.isEmpty()) {\n      this.subsByInspectionId.delete(inspectionId);\n    }\n  }\n\n  getSubscribedImages(inspectionId) {\n    const subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      return [];\n    }\n    return subscription.getSubscribedImages();\n  }\n\n  getSubscribedValues(inspectionId) {\n    const subscription = this.subsByInspectionId.get(inspectionId);\n    if (!subscription) {\n      return [];\n    }\n    return subscription.getSubscribedValues();\n  }\n\n  setProtobuf(protobuf) {\n    this.protobuf = protobuf;\n    this.subsByInspectionId.forEach((subscription) => subscription.setProtobuf(protobuf));\n  }\n}\n","import { Key } from 'react';\nimport { useIntl } from 'react-intl';\nimport shortId from 'shortid';\n\nimport './style.scss';\nimport { TOGGLE_BUTTON, SEPARATOR } from '../../types/ActionBarType';\nimport IconButton from '../buttons/IconButton';\nimport { ToggleButton } from '../buttons/ToggleButton';\n\nexport interface ActionBarType {\n  id?: Key;\n  intlId: string;\n  onClickHandler: () => void;\n  iconUrl: string;\n  enabled?: boolean;\n  type?: typeof TOGGLE_BUTTON | typeof SEPARATOR;\n  showAlternative?: boolean;\n  intlIdAlternative?: string;\n  iconUrlAlternative?: string;\n  onClickHandlerAlternative?: () => void;\n}\n\ninterface ActionBarProps {\n  actions: ActionBarType[];\n  isViewAction?: boolean;\n}\n\nconst ActionBar = ({ actions, isViewAction = false }: ActionBarProps) => {\n  const intl = useIntl();\n\n  return (\n    <div\n      className=\"action-bar-wrapper\"\n      style={{ position: isViewAction ? 'absolute' : 'relative' }}\n    >\n      {actions &&\n        actions.map((action) => {\n          if (action && action.type === SEPARATOR) {\n            return (\n              <div className=\"action-bar-separator\" key={`separator_${shortId.generate()}`}>\n                <div className=\"separator\"></div>\n              </div>\n            );\n          }\n          if (action && action.type === TOGGLE_BUTTON) {\n            return (\n              <ToggleButton\n                key={action.id}\n                id={action.id}\n                intlId={action.intlId}\n                iconUrl={action.iconUrl}\n                enabled={action.enabled}\n                onClickHandler={action.onClickHandler}\n                intlIdAlternative={action.intlIdAlternative}\n                iconUrlAlternative={action.iconUrlAlternative}\n                onClickHandlerAlternative={action.onClickHandlerAlternative}\n                showAlternative={action.showAlternative}\n              />\n            );\n          }\n\n          return (\n            <IconButton\n              key={action.intlId}\n              tooltip={intl.messages[`${action.intlId}` as never]}\n              onClick={() => {\n                action.onClickHandler();\n              }}\n              iconUrl={action.iconUrl}\n              enabled={action.enabled}\n            />\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ActionBar;\n","const AUTH_TOKEN_KEY = 'svAuthToken';\nconst USER_KEY = 'svObserverUser';\nexport const CONFIG_INFO = 'configInfo';\nexport const CONFIGURATION_CHUNK_TEMPLATE = 'configChunk_';\nexport const CONFIGURATION_CHUNK_LIST = 'configChunkList';\nexport const INSPECTION_TOOLSET_MAPPINGS = 'inspectionToolsetMappings';\n\nexport const loadUserInfoFromStorage = () => {\n  const authToken = localStorage.getItem(AUTH_TOKEN_KEY);\n  if (!authToken) {\n    return {};\n  }\n\n  const userStr = localStorage.getItem(USER_KEY);\n  let user;\n  try {\n    user = JSON.parse(userStr);\n  } catch (e) {\n    return {};\n  }\n\n  if (!user) {\n    return {};\n  }\n\n  return { authToken, user };\n};\n\nexport const removeAllUserInfoFromStorage = () => {\n  localStorage.removeItem(AUTH_TOKEN_KEY);\n  localStorage.removeItem(USER_KEY);\n  localStorage.removeItem(CONFIG_INFO);\n  localStorage.removeItem(CONFIGURATION_CHUNK_LIST);\n};\n\nexport const saveUserInfoToStorage = (authToken, user) => {\n  localStorage.setItem(AUTH_TOKEN_KEY, authToken);\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n};\n","export default __webpack_public_path__ + \"static/media/edit.962e7af9.svg\";","import { useEffect, useRef, useState } from 'react';\nimport { Select, OutlinedInput, InputLabel, FormControl, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    height: 37,\n    fontSize: '1.4rem',\n  },\n  select: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    fontSize: '1.4rem',\n  },\n  label: {\n    transform: 'translate(14px, 11px) scale(1)',\n    fontSize: '1.4rem',\n  },\n}));\n\ninterface OutlinedSelectionProps {\n  id?: string;\n  name?: string | any;\n  labels?: string[];\n  values: string[];\n  selectedValue: any;\n  onSelectionChanged?: (selection: Record<string, unknown>) => void;\n  disabled?: boolean;\n}\n\nexport const OutlinedSelection = ({\n  values,\n  labels,\n  selectedValue,\n  name = '',\n  id = '',\n  onSelectionChanged,\n  disabled,\n}: OutlinedSelectionProps) => {\n  const classes = useStyles();\n  const inputLabelRef = useRef<HTMLLabelElement>(null);\n\n  const [labelWidth, setLabelWidth] = useState(0);\n\n  useEffect(() => {\n    if (inputLabelRef.current) {\n      setLabelWidth(inputLabelRef.current.offsetWidth);\n    }\n  }, []);\n\n  return (\n    <FormControl variant=\"outlined\" style={{ width: '100%' }} disabled={disabled}>\n      <InputLabel htmlFor={id} ref={inputLabelRef} classes={{ outlined: classes.label }}>\n        {name}\n      </InputLabel>\n      <Select\n        native\n        value={selectedValue || ''}\n        onChange={(e) => onSelectionChanged?.({ [id]: e.target.value })}\n        classes={{ root: classes.input }}\n        input={\n          <OutlinedInput\n            name={name}\n            labelWidth={labelWidth}\n            id={id}\n            classes={{ input: classes.select }}\n          />\n        }\n      >\n        {!disabled &&\n          values.map((name, counter) => {\n            return (\n              <option value={name} key={id + counter}>\n                {(labels || values)[counter]}\n              </option>\n            );\n          })}\n      </Select>\n    </FormControl>\n  );\n};\n","export const isObjectValid = <FunctionType extends () => unknown>(prop: FunctionType) => {\n  try {\n    return prop() as ReturnType<FunctionType>;\n  } catch (error) {\n    return undefined;\n  }\n};\n","import PropTypes from 'prop-types';\n\nconst actionList = PropTypes.arrayOf(\n  PropTypes.shape({ intlId: PropTypes.string, iconUrl: PropTypes.string }),\n);\nconst ActionBarType = PropTypes.oneOfType([actionList, PropTypes.func]);\n\nexport const TOGGLE_BUTTON = 'TOGGLE_BUTTON' as const;\nexport const SEPARATOR = 'SEPARATOR' as const;\n\nexport default ActionBarType;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { createLogger } from 'browser-bunyan';\nimport browserStdout from 'browser-stdout';\nimport bunyanFormat from 'bunyan-format';\n\ninterface ProxyStreamOptions {\n  throttleInterval?: number;\n}\n\ninterface Message {\n  msg: string;\n  level: string | number;\n  sameMessageCount: number;\n}\n\nclass ProxyStream {\n  private proxy: typeof Proxy | null = null;\n  private pendingMessages: Message[] = [];\n  private readonly opts: ProxyStreamOptions;\n  private currentThrottleTimeout: NodeJS.Timeout | null = null;\n\n  constructor(opts: ProxyStreamOptions = {}) {\n    this.opts = opts;\n    this.start();\n  }\n\n  start() {\n    const { throttleInterval } = this.opts;\n\n    const throttleRequests = () => {\n      this.currentThrottleTimeout = setTimeout(() => {\n        const recs = this.pendingMessages;\n        this.pendingMessages = [];\n\n        if (recs.length > 0) {\n          if (!this.proxy) {\n            this.pendingMessages = recs;\n          } else {\n            //@ts-expect-error waiting for Proxy class to be written in typescript\n            this.proxy.sendLogsToServer(recs);\n          }\n        }\n        throttleRequests();\n      }, throttleInterval);\n    };\n\n    throttleRequests();\n  }\n\n  setProxy(proxy: typeof Proxy) {\n    this.proxy = proxy;\n\n    if (this.proxy && this.pendingMessages.length > 0) {\n      //@ts-expect-error waiting for Proxy class to be written in typescript\n      this.proxy.sendLogsToServer(this.pendingMessages);\n      this.pendingMessages = [];\n    }\n  }\n\n  removeProxy() {\n    this.proxy = null;\n    this.pendingMessages = [];\n  }\n\n  write(rec: Message) {\n    if (this.currentThrottleTimeout) {\n      const idx = this.pendingMessages.findIndex(\n        (message) => message.level === rec.level && message.msg === rec.msg,\n      );\n\n      if (idx >= 0) {\n        if (!this.pendingMessages[idx].sameMessageCount) {\n          this.pendingMessages[idx] = { ...this.pendingMessages[idx], sameMessageCount: 1 };\n        }\n        this.pendingMessages[idx].sameMessageCount++;\n      } else {\n        this.pendingMessages.push(rec);\n      }\n    }\n  }\n}\n\nclass FormatStream {\n  private readonly impl: ReturnType<typeof bunyanFormat>;\n\n  constructor() {\n    const out = browserStdout({\n      label: false,\n    });\n    this.impl = bunyanFormat(\n      {\n        outputMode: 'short',\n        color: false,\n      },\n      out,\n    );\n  }\n\n  write(rec: Message) {\n    this.impl.write(JSON.stringify(rec));\n  }\n}\n\nconst proxyStream = new ProxyStream({\n  throttleInterval: 3000,\n});\nconst formatStream = new FormatStream();\nconst logger = createLogger({\n  name: 'SvWebApp',\n  streams: [\n    {\n      level: 'warn',\n      stream: proxyStream,\n      //@ts-ignore\n      type: 'raw',\n    },\n    {\n      level: 'debug',\n      stream: formatStream,\n      //@ts-ignore\n      type: 'stream',\n    },\n  ],\n});\n\n//@ts-ignore\nlogger.setProxy = (proxy: typeof Proxy) => proxyStream.setProxy(proxy);\n//@ts-ignore\nlogger.removeProxy = () => proxyStream.removeProxy();\n\nexport default logger;\n","import React, { Key } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { ClassNameMap } from '@material-ui/styles';\nimport union from 'lodash/union';\nimport Tree, { TreeNode } from 'rc-tree';\nimport { TreeProps } from 'rc-tree/lib/Tree';\nimport { TreeNodeProps } from 'rc-tree/lib/TreeNode';\nimport { FormattedMessage } from 'react-intl';\nimport shortId from 'shortid';\n\nimport { isObjectValid } from '../../utils/objectValidator';\n\nimport './styles.scss';\n\nconst styles = () => ({\n  label: {\n    fontSize: '1.4rem',\n    transform: 'translate(10px, 12px) scale(1)',\n  },\n});\n\nconst NUMBER_FILTER_RESULTS = 100;\nconst NUMBER_OF_SELECTABLE_VALUES = 100;\n\nexport interface TreeNodeSchema {\n  id?: Key;\n  name?: string;\n  styledText?: JSX.Element;\n  children: TreeNodeSchema[];\n  location?: string;\n  title?: string;\n  halfChecked?: boolean[];\n  type?: string;\n}\n\ntype CheckInfo = { title?: string; node: TreeNodeSchema };\n\ninterface TreeContextSchema {\n  abortRecursion: boolean;\n  expandedFilteredKeys: Key[];\n  filteredLocations: string[];\n  filteredKeys: Key[];\n  countSelection: number;\n}\n\ninterface ObjectSelectorProps {\n  data: TreeNodeSchema;\n  selection?: Key[];\n  singleSelect?: boolean;\n  checkable?: boolean;\n  expandedKeys?: Key[];\n  onChange?: (ids: Key | Key[], checkedLocation?: string) => void;\n  onExpand?: (keys: Key[]) => void;\n  classes: Partial<ClassNameMap>;\n  filterIgnore?: string[];\n}\n\nclass ObjectSelector extends React.Component<ObjectSelectorProps> {\n  state = {\n    expandedKeys: [isObjectValid(() => this.props.data.children?.[0].location)].filter(\n      Boolean,\n    ) as Key[],\n    expandedFilteredKeys: [] as Key[],\n    checkedKeys: [] as Key[],\n    filteredCheckedKeys: [] as Key[],\n    inputValue: '',\n    filteredLocations: [] as string[],\n    filteredTree: undefined as TreeNodeSchema | undefined,\n    countedVisibleValues: 0,\n    countedPossibleValues: 0,\n    selectionLimitReached: false,\n    halfChecked: [] as string[],\n  };\n\n  componentDidMount() {\n    this.setSelection();\n    this.setExpandedKeys();\n  }\n\n  componentDidUpdate(prevProps: ObjectSelectorProps) {\n    const { selection, expandedKeys } = this.props;\n\n    if (selection && prevProps.selection !== selection && selection.length > 0) {\n      this.setSelection();\n    }\n\n    if (expandedKeys && prevProps.expandedKeys !== expandedKeys && expandedKeys.length > 0) {\n      this.setExpandedKeys();\n    }\n  }\n\n  setSelection = () => {\n    const { selection } = this.props;\n\n    this.setState({\n      checkedKeys: selection,\n    });\n  };\n\n  setExpandedKeys = () => {\n    const { expandedKeys } = this.props;\n    if (expandedKeys) {\n      this.setState({\n        expandedKeys: expandedKeys,\n      });\n    }\n  };\n\n  onExpand = (expandedKeys: Key[]) => {\n    if (this.state.inputValue) {\n      this.setState({\n        expandedFilteredKeys: expandedKeys,\n      });\n    } else {\n      this.props.onExpand?.(expandedKeys);\n      this.setState({\n        expandedKeys,\n      });\n    }\n  };\n\n  onCheck: TreeProps['onCheck'] = (checkedKeys, checkProps) => {\n    let limitedCheckedKeys = this.limitCheckedKeys(\n      checkedKeys as Key[],\n      NUMBER_OF_SELECTABLE_VALUES,\n    );\n    limitedCheckedKeys = this.checkUnselectingAll(limitedCheckedKeys, checkProps.node as never);\n\n    const filteredCheckedKeys = limitedCheckedKeys.slice();\n    if (this.state.inputValue) {\n      limitedCheckedKeys = this.updateCheckedKeys(limitedCheckedKeys);\n    }\n\n    limitedCheckedKeys = this.ensureSingleSelection(limitedCheckedKeys);\n\n    this.setChangedIds(limitedCheckedKeys, checkProps as never);\n    this.setState({\n      checkedKeys: limitedCheckedKeys,\n      filteredCheckedKeys,\n      selectionLimitReached: limitedCheckedKeys.length === NUMBER_OF_SELECTABLE_VALUES,\n    });\n  };\n\n  limitCheckedKeys = (keys: Key[], limit: number) => {\n    const halfChecked = [];\n    if (!limit || limit > keys.length) {\n      limit = keys.length;\n    }\n    const result = [];\n    let condition = Math.abs(limit);\n    let i = 0;\n    while (condition !== 0 && i < keys.length) {\n      if (parseInt(keys[i] as string, 10)) {\n        result.push(keys[i]);\n        condition--;\n      } else {\n        halfChecked.push(keys[i]);\n      }\n\n      i++;\n    }\n\n    this.setState({ halfChecked });\n\n    return result;\n  };\n\n  checkUnselectingAll = (keys: Key[], checkedNode: TreeNodeSchema) => {\n    const halfChecked = this.state.halfChecked.slice();\n    if (checkedNode.halfChecked) {\n      if (halfChecked.includes(checkedNode.title as string)) {\n        this.setState({ halfChecked: [] });\n        keys = [];\n      } else {\n        halfChecked.push(checkedNode.title as string);\n        this.setState({ halfChecked });\n      }\n    }\n    return keys;\n  };\n\n  updateCheckedKeys = (checkedKeys: Key[]) => {\n    const newSelectedKeys = checkedKeys.filter(\n      (key) => !this.state.filteredCheckedKeys.includes(key),\n    );\n    const newDeselectedKeys = this.state.filteredCheckedKeys.filter(\n      (key) => !checkedKeys.includes(key),\n    );\n    checkedKeys = union(newSelectedKeys, this.state.checkedKeys);\n    checkedKeys = checkedKeys.filter((key) => !newDeselectedKeys.includes(key));\n\n    return checkedKeys;\n  };\n\n  ensureSingleSelection = (checkedKeys: Key[]) => {\n    if (this.props.singleSelect) {\n      return [checkedKeys[checkedKeys.length - 1]] || [];\n    } else {\n      return checkedKeys;\n    }\n  };\n\n  setChangedIds = (ids: Key[], checkProps: CheckInfo) => {\n    const filteredIds = (ids || []).filter((id) => parseInt(id as string, 10) > 0);\n    if (this.props.singleSelect) {\n      const checkedLocation = this.getSelectedLocation(checkProps);\n      this.props.onChange?.(filteredIds[filteredIds.length - 1] || 0, checkedLocation);\n    } else {\n      this.props.onChange?.(filteredIds);\n    }\n  };\n\n  onChangeFilter: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement> = (event) => {\n    const { data } = this.props;\n    let filteredTree: TreeNodeSchema | undefined = undefined;\n\n    const inputValue = event.target.value || '';\n    const filteredInputValue = this.cutFilterIgnoreWords(inputValue.toLowerCase()) || '';\n    const initialChars = filteredInputValue.split('');\n    const ctx: TreeContextSchema = {\n      abortRecursion: false,\n      expandedFilteredKeys: [] as Key[],\n      filteredLocations: [] as string[],\n      filteredKeys: [] as Key[],\n      countSelection: 0,\n    };\n    const countCtx = {\n      countMatches: 0,\n    };\n\n    if (initialChars.length) {\n      const copy = initialChars.slice();\n      const children = [] as ReturnType<this['createFilteredShadowNode']>[];\n      this.filterNodesRecursively(data, initialChars, children, ctx);\n      this.countMatchingNodesRecursively(data, copy, countCtx);\n      filteredTree = children.length > 0 ? children[0] : { children: [] as TreeNodeSchema[] };\n    }\n\n    const filteredCheckedKeys = (this.state.checkedKeys ?? []).filter((key) =>\n      ctx.filteredKeys.includes(key),\n    );\n\n    this.setState({\n      filteredLocations: ctx.filteredLocations,\n      filteredTree,\n      filteredCheckedKeys,\n      expandedFilteredKeys: ctx.expandedFilteredKeys,\n      inputValue,\n      countedVisibleValues: ctx.countSelection,\n      countedPossibleValues: countCtx.countMatches,\n    });\n  };\n\n  cutFilterIgnoreWords = (filteredInput: string) => {\n    const { filterIgnore } = this.props;\n\n    if (filterIgnore) {\n      filterIgnore.forEach((filter) => {\n        filter = filter.toLowerCase();\n        if (filteredInput.startsWith(filter)) {\n          filteredInput = filteredInput.replace(filter, '');\n\n          if (filteredInput.startsWith('.')) {\n            filteredInput = filteredInput.slice(1);\n          }\n        }\n      });\n    }\n\n    return filteredInput;\n  };\n\n  filterNodesRecursively = (\n    node: TreeNodeSchema,\n    chars: string[],\n    shadowChildren: TreeNodeSchema[],\n    ctx: TreeContextSchema,\n  ) => {\n    if (!node) {\n      return false;\n    }\n    const positions: number[] = [];\n    let remainingChars: string[] = [];\n    if (chars.length > 0) {\n      remainingChars = this.consumeChars(node.name as string, chars, positions);\n    }\n\n    if (remainingChars.length === 0) {\n      ctx.filteredLocations.push(node.location as string);\n      if (node.id && node.children.length === 0) {\n        ctx.filteredKeys.push(node.id);\n      }\n    }\n\n    if (ctx.filteredKeys.length >= NUMBER_FILTER_RESULTS) {\n      ctx.abortRecursion = true;\n    }\n\n    const children: ReturnType<this['createFilteredShadowNode']>[] = [];\n    let childMatches = false;\n    if (node.children && !ctx.abortRecursion) {\n      node.children.forEach((child) => {\n        if (\n          !ctx.abortRecursion &&\n          this.filterNodesRecursively(child, remainingChars, children, ctx)\n        ) {\n          childMatches = true;\n        }\n      });\n    }\n\n    if (childMatches) {\n      ctx.expandedFilteredKeys.push(node.location as string);\n    }\n\n    const isMatchingSubtree = remainingChars.length === 0 || childMatches;\n    if (isMatchingSubtree) {\n      if (node.children.length === 0) {\n        ctx.countSelection++;\n      }\n      const shadowNode = this.createFilteredShadowNode(node, positions, children);\n      shadowChildren.push(shadowNode);\n    }\n    return isMatchingSubtree;\n  };\n\n  countMatchingNodesRecursively = (\n    node: TreeNodeSchema,\n    chars: string[],\n    countCtx: { countMatches: number },\n  ) => {\n    if (!node) {\n      return false;\n    }\n    const positions: number[] = [];\n    let remainingChars: string[] = [];\n    if (chars.length > 0) {\n      remainingChars = this.consumeChars(node.name as string, chars, positions);\n    }\n\n    let childMatches = false;\n    if (node.children) {\n      node.children.forEach((child) => {\n        if (this.countMatchingNodesRecursively(child, remainingChars, countCtx)) {\n          childMatches = true;\n        }\n      });\n    }\n\n    const isMatchingSubtree = remainingChars.length === 0 || childMatches;\n    if (isMatchingSubtree && node.children.length === 0) {\n      countCtx.countMatches++;\n    }\n\n    return isMatchingSubtree;\n  };\n\n  consumeChars = (str: string, chars: string[], positions: number[]) => {\n    str = str?.toLowerCase() ?? '';\n    let prevIdx = 0;\n    while (chars.length) {\n      if (chars[0] === '.') {\n        chars = chars.slice(1);\n        break;\n      }\n\n      const idx = str.indexOf(chars[0], prevIdx);\n      if (idx === -1) {\n        break;\n      }\n      positions.push(idx);\n      chars = chars.slice(1);\n      prevIdx = idx + 1;\n    }\n    return chars;\n  };\n\n  createFilteredShadowNode = (\n    node: TreeNodeSchema,\n    positions: number[],\n    children: TreeNodeSchema[],\n  ) => {\n    const styledText = this.highlightAtPositions(node.name as string, positions);\n    const shadowNode: TreeNodeSchema = {\n      ...node,\n      children,\n      styledText,\n    };\n    return shadowNode;\n  };\n\n  highlightAtPositions = (word: string, positions: number[]) => {\n    const result = [];\n    for (let i = 0; i < word.length; i++) {\n      if (positions.includes(i)) {\n        result.push([\n          <span className=\"filteredText\" key={`strong${shortId.generate()}`}>\n            {word.charAt(i)}\n          </span>,\n        ]);\n      } else {\n        result.push([word.charAt(i)]);\n      }\n    }\n    return <div key={`div${shortId.generate()}`}>{result}</div>;\n  };\n\n  createTreeNodes = (node: TreeNodeSchema, loop: (nodeSchema: TreeNodeSchema) => JSX.Element[]) => {\n    const defaultProps: TreeNodeProps = {\n      style: {},\n      onSelect: () => void 0,\n      icon: undefined,\n      switcherIcon: undefined,\n    };\n    if (node.children?.length > 0) {\n      return (\n        <TreeNode\n          // since nodes don't contain a value to subscribe and also don't have a id, we use the location as key\n          // we'll need to filter invalid ids from checkedKeys\n          {...defaultProps}\n          key={node.location}\n          title={node.styledText || node.name}\n          disableCheckbox={this.props.singleSelect}\n        >\n          {node.children.map(loop)}\n        </TreeNode>\n      );\n    }\n    //TODO: insect this missing location property\n    return (\n      <TreeNode\n        {...defaultProps}\n        key={node.id}\n        title={node.styledText || node.name} /*location={node.location}*/\n      />\n    );\n  };\n\n  getSelectedLocation = (childProps: CheckInfo) => {\n    if (isObjectValid(() => childProps.node.location)) {\n      return childProps.node.location as string;\n    }\n    return '';\n  };\n\n  render() {\n    const {\n      checkedKeys,\n      expandedKeys,\n      expandedFilteredKeys,\n      filteredTree,\n      filteredCheckedKeys,\n      inputValue,\n      countedVisibleValues,\n      countedPossibleValues,\n      selectionLimitReached,\n    } = this.state;\n    const loop = (node: TreeNodeSchema) => {\n      if (!node) {\n        return null;\n      }\n      return this.createTreeNodes(node, loop);\n    };\n\n    const className = inputValue ? 'unfilteredText' : '';\n    const expanded = inputValue ? expandedFilteredKeys : expandedKeys;\n    const rootNode = inputValue ? filteredTree : this.props.data;\n    const visibleCheckedKeys = inputValue ? filteredCheckedKeys : checkedKeys;\n    const treeNodes = rootNode?.name\n      ? (loop(rootNode) as unknown as JSX.Element[])\n      : (rootNode?.children ?? []).map(loop);\n\n    return (\n      <div className=\"object-selector\">\n        <div className=\"topmenu-wrapper\">\n          <div className=\"w100 text\">\n            <div className=\"infotext\">\n              <div className=\"pr2\">\n                <FormattedMessage id=\"objectSelector.select\" />\n              </div>\n              {selectionLimitReached ? (\n                <div className=\"warning pr2\">\n                  <FormattedMessage\n                    id=\"objectSelector.limitReached\"\n                    values={{ items_number: NUMBER_OF_SELECTABLE_VALUES }}\n                  />\n                </div>\n              ) : undefined}\n              {inputValue && treeNodes.length > 0 ? (\n                <div className=\"warning\">\n                  {`(${countedVisibleValues} of ${countedPossibleValues} matches are shown)`}\n                </div>\n              ) : undefined}\n            </div>\n          </div>\n          <div className=\"w100\">\n            <TextField\n              label=\"Filter\"\n              type=\"text\"\n              variant=\"outlined\"\n              style={{ width: '100%' }}\n              onChange={this.onChangeFilter}\n              value={this.state.inputValue}\n              InputLabelProps={{ classes: { root: this.props.classes.label } }}\n            />\n          </div>\n        </div>\n        <div>\n          {treeNodes.length > 0 ? (\n            //@ts-expect-error many missing properties are required and need to be set\n            <Tree\n              checkable={this.props.checkable ?? true}\n              showLine\n              autoExpandParent={true}\n              defaultExpandParent={true}\n              showIcon={false}\n              selectable={false}\n              onExpand={this.onExpand}\n              expandedKeys={expanded}\n              checkedKeys={visibleCheckedKeys}\n              onCheck={this.onCheck}\n              className={className}\n            >\n              {treeNodes}\n            </Tree>\n          ) : (\n            <div className=\"text\">No filter results</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ObjectSelector);\n","const de = {\n  // TopNavigation\n  \"topNavigation.language.german\": \"Deutsch\",\n  \"topNavigation.language.english\": \"Englisch\",\n  \"topNavigation.language.spanish\": \"Spanisch\",\n  \"topNavigation.lock\": \"Sperre\",\n  \"topNavigation.takeover\": \"Übernahme\",\n  \"topNavigation.release\": \"Freigabe\",\n  \"topNavigation.logout\": \"Abmelden\",\n  \"topNavigation.help\": \"Hilfe\",\n  \"topNavigation.about\": \"Info\",\n  \"topNavigation.shortcut\": \"Shortcut\",\n  \"topNavigation.download\": \"SVO-Konfiguration herunterladen\",\n  \"topNavigation.upload\": \"SVO-Konfiguration hochladen\",\n  \"topNavigation.inspectionState\": \"Inspektionsstatus ({runningInspections} von {numberOfInspections} aktiv)\",\n  \"topNavigation.permissions\": \"Rechte\",\n  \"topNavigation.saveConfig\": \"Konfiguration speichern\",\n  \"topNavigation.pauseAllInspections\": \"Alle Inspektionen anhalten\",\n  \"topNavigation.resumeAllInspections\": \"Alle Inspektionen fortsetzen\",\n\n  // there is a auto mapping in utils/modes.js\n  \"editMode\": \"Bearbeitungsmodus\",\n  \"unknownMode\": \"Unbekannter Modus\",\n  \"runMode\": \"Run-Modus\",\n  \"stopMode\": \"Stopp-Modus\",\n  \"regressionMode\": \"Regressionsmodus\",\n  \"testMode\": \"Testmodus\",\n\n  // LockStateHandler\n  \"lockStateHandler.alertDialog.lockAlreadyLocked\": \"Konfigurationssperre bereits gehalten von: {user}\",\n  \"lockStateHandler.alertDialog.lockDescription\": \"Beschreibung für Sperre: {description}\",\n  \"lockStateHandler.alertDialog.waitingForTakeoverResponse\": \"Warte auf Antwort von: {user}\",\n  \"lockStateHandler.alertDialog.waitingForResponseInfo\": \"Der aktuelle Halter der Konfigurationssperre wurde über Ihre Anfrage informiert und hat nun 30 Sekunden, um zu antworten. Wenn bis dahin keine Antwort eingeht, übernehmen Sie automatisch die Sperre.\",\n  \"lockStateHandler.alertDialog.ownerRejectedTakeover\": \"{user} hat die Übernahme der Konfigurationssperre abgelehnt.\",\n  \"lockStateHandler.alertDialog.takeoverAttempt\": \"{user} möchte die Konfigurationssperre übernehmen.\",\n  \"lockStateHandler.alertDialog.takeoverMessage\": \"Übernahmenachricht: {message}\",\n  \"lockStateHandler.formDialog.lockConfigRequestTitle\": \"Anforderung zur Konfigurationssperre\",\n  \"lockStateHandler.formDialog.takeoverConfigRequestTitle\": \"Anforderung zur Konfigurationsübernahme\",\n  \"lockStateHandler.formDialog.lockConfigRequestContent\": \"Um die Konfiguration zu sperren oder zu übernehmen, geben Sie alle Details ein. SVOGateway sendet gelegentlich Updates.\",\n  \"lockStateHandler.formDialog.lockScope\": \"Umfang der Sperre\",\n  \"lockStateHandler.formDialog.lockTimeout\": \"Time-out für Sperre\",\n  \"lockStateHandler.formDialog.lockDescription\": \"Beschreibung für Sperre\",\n  \"lockStateHandler.formDialog.takeoverRequest\": \"Anfrage zur Übernahme\",\n  \"lockStateHandler.formDialog.takeoverMessage\": \"Übernahmenachricht\",\n\n  // ImageStrip\n  \"imageStripView.inspectionTemplate\": \"{inspectionName} Filmstreifen\",\n  \"imageStripView.play\": \"Play\",\n  \"imageStripView.pause\": \"Pause\",\n\n  // InputTool\n  \"inputToolView.inspectionTemplate\": \"{inspectionName} Eingabe-Tool\",\n  \"inputToolView.edit\": \"Bearbeitungsansicht öffnen\",\n  \"inputToolView.showList\": \"Liste anzeigen\",\n  \"inputToolView.backToList\": \"Zurück zur Liste\",\n  \"inputToolView.type\": \"Typ\",\n  \"inputToolView.numberEditor\": \"Zahleneditor\",\n  \"inputToolView.colorEditor\": \"Farbeneditor\",\n  \"inputToolView.setValue\": \"Wert setzen\",\n  \"inputToolView.valueSetSuccess\": \"Wert wurde gesetzt\",\n\n  // ListView\n  \"listView\": \"Liste\",\n  \"listView.inspectionTemplate\": \"{inspectionName} Liste\",\n  \"listView.AliasEditor.title\": \"Alias für Pfadnamen setzen\",\n  \"listView.Actionbar.hideAliases\": \"Alias ausblenden\",\n  \"listView.Actionbar.showAliases\": \"Alias anzeigen\",\n  \"listView.AliasEditor.dottedName\": \"Pfadname\",\n  \"listView.AliasEditor.value\": \"Wert\",\n  \"listView.AliasEditor.button\": \"Speichern\",\n\n  // HelpView\n  \"helpView\": \"Hilfe\",\n\n  // AboutView\n  \"aboutView\": \"Über\",\n  \"aboutView.applicationName\": \"Name der Applikation:\",\n  \"aboutView.applicationVersion\": \"Version der Applikation:\",\n  \"aboutView.svoVersion\": \"SVObserver-Version:\",\n  \"aboutView.gatewayVersion\": \"Gateway-Version:\",\n\n  // ViewTypeSelection\n  \"viewTypeSelection.imageStripView\": \"Filmstreifen\",\n  \"viewTypeSelection.imageView\": \"Bild\",\n  \"viewTypeSelection.parameterView\": \"Parameter\",\n  \"viewTypeSelection.ListView\": \"Liste\",\n  \"viewTypeSelection.toolset\": \"Tool-Set\",\n  \"viewTypeSelection.inputTool\": \"Input-Tool\",\n  \"viewTypeSelection.back\": \"Zurück\",\n  \"viewTypeSelection.cancel\": \"Abbrechen\",\n  \"viewTypeSelection.chooseViewTooltip\": \"View-Typ wählen\",\n  \"viewTypeSelection.selectViewType\": \"Wählen Sie einen Typ für diese View:\",\n\n  // InspectionSelection\n  \"inspectionSelection.selectInspection\": \"Wählen Sie eine Inspektion für diese View:\",\n\n  // ParameterView / Overlay\n  \"parameterview.overlay.delete\": \"Löschen\",\n  \"parameterview.overlay.add\": \"Hinzufügen\",\n  \"parameterview.overlay.showAll\": \"Alle anzeigen\",\n  \"parameterview.overlay.hideAll\": \"Alle ausblenden\",\n  \"parameterview.overlay.parameters\": \"Overlay-Parameter\",\n  \"parameterview.overlay.label\": \"Beschriftung\",\n  \"parameterview.overlay.x\": \"X\",\n  \"parameterview.overlay.xVariable\": \"X-Variable\",\n  \"parameterview.overlay.offsetLeft\": \"Offset links\",\n  \"parameterview.overlay.offsetLeftVariable\": \"Variable für Offset links\",\n  \"parameterview.overlay.y\": \"Y\",\n  \"parameterview.overlay.yVariable\": \"Y-Variable\",\n  \"parameterview.overlay.offsetTop\": \"Offset oben\",\n  \"parameterview.overlay.offsetTopVariable\": \"Variable für Offset oben\",\n  \"parameterview.overlay.width\": \"Breite\",\n  \"parameterview.overlay.widthVariable\": \"Breiten-Variable\",\n  \"parameterview.overlay.height\": \"Höhe\",\n  \"parameterview.overlay.heightVariable\": \"Höhen-Variable\",\n  \"parameterview.overlay.color\": \"Farbe\",\n  \"parameterview.overlay.colorVariable\": \"Farben-Variable\",\n  \"parameterview.overlay.lineStyle\": \"Linienart\",\n\n  // ImageView\n  \"imageView.inspectionTemplate\": \"{inspectionName} Bild\",\n  \"imageView.zoomIn\": \"Hineinzommen\",\n  \"imageView.zoomOut\": \"Herauszommen\",\n  \"imageView.fitToWidth\": \"An Breite anpassen\",\n  \"imageView.fitToHeight\": \"An Höhe anpassen\",\n  \"imageView.saveWithOverlays\": \"Bild mit Overlays herunterladen\",\n  \"imageView.overlayListToggle\": \"Overlay-Liste\",\n  \"imageView.imageInfoToggle\": \"Bildinfo\",\n  \"imageView.save\": \"Bild herunterladen\",\n  \"imageView.showOverlays\": \"Overlays einblenden\",\n  \"imageView.hideOverlays\": \"Overlays ausblenden\",\n  \"imageView.info\": \"Info\",\n  \"imageView.width\": \"Breite:\",\n  \"imageView.height\": \"Höhe:\",\n  \"imageView.x\": \"X:\",\n  \"imageView.y\": \"Y:\",\n\n  // ParameterView\n  \"parameterView\": \"Parameter\",\n  \"parameterView.inspectionTemplate\": \"{inspectionName} Parameter\",\n\n  // ToolsetView\n  \"toolsetView.inspectionTemplate\": \"{inspectionName} Tool–Set\",\n  \"toolsetView.confirmDelete\": \"Möchten Sie {toolName} wirklich löschen? Dieser Vorgang kann nicht rückgängig gemacht werden.\",\n  \"toolsetView.validate\": \"Bestätigen\",\n  \"toolsetView.validateSelection\": \"Auswahl bestätigen\",\n  \"toolsetView.validatedFormula\": \"Validierte Formel\",\n  \"toolsetView.savingSuccess\": \"Die Änderungen wurden gespeichert\",\n  \"toolsetView.value\": \"Wert\",\n  \"toolsetView.link\": \"Link\",\n  \"toolsetView.formula\": \"Formel\",\n  \"toolsetView.selectLinkedValue\": \"Verknüpften Wert wählen\",\n  \"toolsetView.highlightedNode\": \"Hervorgehobener Knoten\",\n  \"toolsetView.evaluatedValue\": \"Evaluierter Wert\",\n  \"toolsetView.undoAll\": \"Alles rückgängig machen\",\n  \"toolsetView.validating\": \"Validierung\",\n  \"toolsetView.validationSuccess\": \"Validierungserfolg\",\n  \"toolsetView.validationError\": \"Validierungsfehler\",\n  \"toolsetView.result\": \"Ergebnis\",\n\n  // AboutView\n  \"aboutView.title\": \"Über \",\n\n  // ViewSet Manager\n  \"viewSetManager\": \"View-Set-Manager\",\n  \"viewSetManager.title\": \"View-Set-Manager\",\n  \"viewSetManager.viewSetName\": \"Name\",\n  \"viewSetManager.remove\": \"Entfernen\",\n  \"viewSetManager.save\": \"Alle View-Sets speichern\",\n  \"viewSetManager.close\": \"Schließen\",\n  \"viewSetManager.editViewSetHeadline\": \"View-Sets bearbeiten:\",\n  \"viewSetManager.newViewSet\": \"Neues View-Set erstellen\",\n  \"viewSetManager.editViewSetName\": \"View-Set-Namen bearbeiten\",\n  \"viewSetManager.changeViewSetName\": \"View-Set-Namen ändern\",\n  \"viewSetManager.apply\": \"Änderungen übernehmen\",\n  \"viewSetManager.export\": \"Aktuelles View-Layout exportieren\",\n  \"viewSetManager.import\": \"View-Layout aus Datei importieren\",\n  \"viewSetManager.importConfirm.title\": \"View-Set überschreiben\",\n  \"viewSetManager.importConfirm.message\": \"Durch Importieren eines View-Sets aus einer Datei wird Ihr bestehendes View-Set überschrieben. Möchten Sie fortfahren?\",\n  \"viewSetManager.deleteConfirm.message\": \"Möchten Sie das View-Set {viewsetName} wirklich löschen?\",\n  \"viewSetManager.deleteIconTooltip\": \"View-Set löschen\",\n\n  // ShortcutView\n  \"shortcutView.title\": \"Shortcuts\",\n  \"shortcutView.fullscreenTitle\": \"Vollbild\",\n  \"shortcutView.fullscreenDescription\": \"Fokussieren Sie eine View und drücken Sie STRG-F\",\n  \"shortcutView.helpTitle\": \"Hilfe\",\n  \"shortcutView.helpDescription\": \"Fokussieren Sie eine View und drücken Sie F1\",\n\n  // Notifications\n  \"notifications.modeSwitch.userSwitchedModeTo\": \"Der Benutzer hat den Modus geändert zu:\",\n  \"notifications.websocket.connectionEstablished\": \"Websocket-Verbindung hergestellt auf Port:\",\n  \"notifications.websocket.connectionLost\": \"Websocket-Verbindung verloren\",\n  \"notifications.userSwitchedLanguage\": \"Der Benutzer hat die Sprache geändert zu: \",\n  \"notifications.rejectStreamPaused\": \"Reject-Stream wurde angehalten\",\n  \"notifications.rejectStreamResumed\": \"Reject-Stream wurde wieder aufgenommen\",\n  \"notifications.checkSvimOutput\": \"Bitte Ausgabe am SVIM prüfen\",\n  \"notifications.incompatibilityWarning\": \"Die ausgewählte Konfiguration ist möglicherweise nicht mit der aktuellen WebApp kompatibel\",\n  \"notifications.errorOccurred\": \"Ein Fehler ist aufgetreten\",\n  \"notifications.error.loadingFile\": \"Daten aus der Datei konnten nicht geladen werden.\",\n  \"notifications.successfulAction\": \"Erfolgreiche Aktion\",\n  \"notifications.successfullyLoadedFile\": \"View-Set wurde erfolgreich aus der Datei geladen.\",\n  \"notifications.viewsetVersionIncompatibleTitle\": \"Dateiversion inkompatibel\",\n  \"notifications.viewsetVersionIncompatibleMessage\": \"Die Dateiversion ist inkompatibel. Das View-Set kann nicht geladen werden.\",\n  \"notifications.minorVersionDiffTitle\": \"Unterschied in Minor-Version\",\n  \"notifications.minorVersionDiffMessage\": \"Minor-Version in Anwendung und Datei unterschiedlich. Das View-Set wird unter Umständen falsch dargestellt werden.\",\n  \"notifications.variableValueShouldBeInTheRange\": \"Der Wert der Variable {variableName} sollte im Bereich {range} liegen.\",\n  \"notifications.configAlreadyLockedBySameUser\": \"Sie haben die Konfiguration bereits gesperrt!\",\n  \"notifications.takeoverCandidateNotFound\": \"Übernahmekandidat konnte nicht gefunden werden! Sie besitzen weiterhin die Konfigurationssperre.\",\n  \"notifications.lockTakeoverError\": \"Fehler bei Übernahme der Konfigurationssperre! Fehler-Code: {code}\",\n  \"notifications.lockAcquisitionError\": \"Fehler bei Anforderung der Konfigurationssperre! Fehler-Code: {code}\",\n\n  // ListView\n  \"listView.save\": \"Speichern\",\n  \"listView.name\": \"Name\",\n  \"listView.aliasName\": \"Alias/Name\",\n  \"listView.values\": \"Werte\",\n\n  // Object selector\n  \"objectSelector.select\": \"Objekte wählen:\",\n  \"objectSelector.limitReached\": \"(Limit von {items_number} Objekten erreicht)\",\n\n  // SVOView\n  \"svoView.emptyViewInspectionTemplate\": \"{inspectionName}\",\n  \"svoView.closeView\": \"View schließen\",\n  \"svoView.closeViewConfirmation\": \"Möchten Sie diese View wirklich schließen?\",\n\n  \"ok\": \"OK\",\n  \"cancel\": \"Abbrechen\",\n  \"submit\": \"Senden\",\n  \"close\": \"Schließen\",\n  \"accept\": \"Annehmen\",\n  \"reject\": \"Ablehnen\",\n  \"milliseconds\": \"Millisekunden\",\n  \"noConfigName\": \"[Keine Konfiguration]\",\n  \"unknownConfigName\": \"[Unbekannte Konfiguration]\",\n  \"noConfigLoaded\": \"Keine Konfiguration im SVObserver geladen\",\n  \"up\": \"Zurück\",\n  \"down\": \"Vor\",\n  \"save\": \"Speichern\",\n  \"copy\": \"Kopieren\",\n  \"cut\": \"Ausschneiden\",\n  \"paste\": \"Einfügen\",\n  \"delete\": \"Löschen\",\n  \"undo\": \"Rückgängig\",\n  \"expandAll\": \"Alles aufklappen\",\n  \"collapseAll\": \"Alles einklappen\",\n\n  // Permissions\n  \"permissions.backToWebApp\": \"Zurück zur WebApp\",\n  \"permissions.helpText\": \"Sie können die aufgelisteten Rechte für die jeweilige Gruppe (Spalte) anpassen. Rechte der Gruppe Common werden allen anderen Gruppen zugeordnet. Die Rechte haben möglicherweise Auswirkungen auf die WebApp und/oder den SVObserver.\",\n  \"permissions.permissions\": \"Rechte\",\n  \"permissions.permissionManagement\": \"Rechte-Verwaltung\",\n  \"permissions.description\": \"Beschreibung\",\n\n  // Permission descriptions\n  \"permissionDescription.webapp.configuration.save\": \"Der Nutzer kann die aktuelle Konfiguration mit allen View-Sets speichern\",\n  \"permissionDescription.webapp.logs.read\": \"Der Nutzer kann Logs in der oberen Navigationsleiste sehen\",\n  \"permissionDescription.webapp.viewset.add\": \"Der Nutzer kann neue View-Sets hinzufügen\",\n  \"permissionDescription.webapp.viewset.read\": \"Der Nutzer kann View-Sets sehen (zwischen View-Sets wechseln, View-Set-Manager öffnen)\",\n  \"permissionDescription.webapp.viewset.edit\": \"Der Nutzer kann View-Sets sehen und bearbeiten (Größe der Views ändern, neue Views zu View-Sets hinzufügen, zwischen View-Sets wechseln, View-Set-Manager öffnen, View-Sets umbenennen)\",\n  \"permissionDescription.webapp.viewset.remove\": \"Der Nutzer kann ein View-Set entfernen\",\n  \"permissionDescription.webapp.view[type=AnyView].add\": \"Der Nutzer kann Views aller Typen hinzufügen\",\n  \"permissionDescription.webapp.view[type=AnyView].read\": \"Der Nutzer kann Views aller Typen anzeigen\",\n  \"permissionDescription.webapp.view[type=AnyView].edit\": \"Der Nutzer kann Views aller Typen anzeigen und bearbeiten\",\n  \"permissionDescription.webapp.view[type=AnyView].remove\": \"Der Nutzer kann Views aller Typen entfernen\",\n  \"permissionDescription.webapp.view[type=ImageView].add\": \"Der Nutzer kann Views des Typs Bild hinzufügen\",\n  \"permissionDescription.webapp.view[type=ImageView].read\": \"Der Nutzer kann Views des Typs Bilds anzeigen (auch Bilder herunterladen, Liste eigener Overlays anzeigen, Bildinfo anzeigen)\",\n  \"permissionDescription.webapp.view[type=ImageView].edit\": \"Der Nutzer kann Views des Typs Bilds anzeigen und bearbeiten (Inspektion und Tool auswählen, Größe des Bildes ändern, Bilder herunterladen, Liste eigener Overlays anzeigen, Bildinfo anzeigen)\",\n  \"permissionDescription.webapp.view[type=ImageView].remove\": \"Der Nutzer kann Views des Typs Bild entfernen\",\n  \"permissionDescription.webapp.view[type=ListView].add\": \"Der Nutzer kann Views des Typs Liste hinzufügen\",\n  \"permissionDescription.webapp.view[type=ListView].read\": \"Der Nutzer kann Views des Typs Liste anzeigen\",\n  \"permissionDescription.webapp.view[type=ListView].edit\": \"Der Nutzer kann Views des Typs Liste anzeigen und bearbeiten (Inspektion und Tool wählen, Alias bearbeiten)\",\n  \"permissionDescription.webapp.view[type=ListView].remove\": \"Der Nutzer kann Views des Typs Liste entfernen\",\n  \"permissionDescription.webapp.view[type=ImageStripView].add\": \"Der Nutzer kann Views des Typs Filmstreifen hinzufügen\",\n  \"permissionDescription.webapp.view[type=ImageStripView].read\": \"Der Nutzer kann Views des Typs Filmstreifen anzeigen\",\n  \"permissionDescription.webapp.view[type=ImageStripView].edit\": \"Der Nutzer kann Views des Typs Filmstreifen anzeigen und bearbeiten (Inspektion und Tool wählen)\",\n  \"permissionDescription.webapp.view[type=ImageStripView].remove\": \"Der Nutzer kann Views des Typs Filmstreifen entfernen\",\n  \"permissionDescription.webapp.view[type=ParameterView].add\": \"Der Nutzer kann Views des Typs Parameter hinzufügen\",\n  \"permissionDescription.webapp.view[type=ParameterView].read\": \"Der Nutzer kann Views des Typs Parameter anzeigen\",\n  \"permissionDescription.webapp.view[type=ParameterView].edit\": \"Der Nutzer kann Views des Typs Parameter anzeigen und bearbeiten (eigene Overlays hinzufügen, bearbeiten, löschen)\",\n  \"permissionDescription.webapp.view[type=ParameterView].remove\": \"Der Nutzer kann Views des Typs Parameter entfernen\",\n  \"permissionDescription.webapp.view[type=ToolSetView].add\": \"Der Nutzer kann Views des Typs Tool-Set hinzufügen\",\n  \"permissionDescription.webapp.view[type=ToolSetView].read\": \"Der Nutzer kann Views des Typs Tool-Set anzeigen\",\n  \"permissionDescription.webapp.view[type=ToolSetView].edit\": \"Der Nutzer kann Views des Typs Tool-Set anzeigen und bearbeiten\",\n  \"permissionDescription.webapp.view[type=ToolSetView].remove\": \"Der Nutzer kann Views des Typs Tool-Set entfernen\",\n  \"permissionDescription.svobserver.mode.read\": \"Der Nutzer kann den aktuellen Modus des SVObserver in der oberen Navigationsleiste sehen\",\n  \"permissionDescription.svobserver.mode.edit\": \"Der Nutzer kann den aktuellen Modus des SVObserver in der oberen Navigationsleiste sehen und ändern\",\n  \"permissionDescription.svobserver.inspectionstate.read\": \"Der Nutzer kann den Inspektionsstatus aller Inspektionen in der oberen Navigationsleiste sehen\",\n  \"permissionDescription.svobserver.inspectionstate.edit\": \"Der Nutzer kann den Inspektionsstatus aller Inspektionen in der oberen Navigationsleiste sehen und ändern sowie den Status in der Filmstreifen-View wechseln\",\n  \"permissionDescription.svobserver.value.read\": \"SVObserver prüft, ob der Nutzer berechtigt ist, Werte zu sehen\",\n  \"permissionDescription.svobserver.value.edit\": \"SVObserver prüft, ob der Nutzer berechtigt ist, Werte zu bearbeiten\",\n  \"permissionDescription.svobserver.tool.add\": \"SVObserver prüft, ob der Nutzer berechtigt ist, neue Tools hinzuzufügen\",\n  \"permissionDescription.svobserver.tool.read\": \"SVObserver prüft, ob der Nutzer berechtigt ist, Tools zu lesen\",\n  \"permissionDescription.svobserver.tool.edit\": \"SVObserver prüft, ob der Nutzer berechtigt ist, bestehende Tools zu bearbeiten\",\n  \"permissionDescription.svobserver.tool.remove\": \"SVObserver prüft, ob der Nutzer berechtigt ist, Tools zu entfernen\",\n  \"permissionDescription.svobserver.configuration.read\": \"SVObserver prüft, ob der Nutzer berechtigt ist, die SVObserver-Konfiguration zu lesen\",\n  \"permissionDescription.svobserver.configuration.write\": \"SVObserver prüft, ob der Nutzer berechtigt ist, die SVObserver-Konfiguration zu speichern\",\n  \"permissionDescription.svobserver.notifications.subscribe\": \"SVObserver prüft, ob der Nutzer berechtigt ist, SVObserver-Benachrichtigungen zu abonnieren\",\n  \"permissionDescription.svobserver.clientlogs.store\": \"SVObserver prüft, ob der Nutzer berechtigt ist, Client-Logs an SVObserver zu senden\",\n  \"permissionDescription.svobserver.file.read\": \"SVObserver prüft, ob der Nutzer berechtigt ist, beliebige Dateien im Ordner SVIM RUN zu lesen\",\n  \"permissionDescription.svobserver.file.write\": \"SVObserver prüft, ob der Nutzer berechtigt ist, beliebige Dateien im Ordner SVIM RUN zu schreiben\",\n  \"permissionDescription.svobserver.machinestate.set\": \"SVObserver prüft, ob der Nutzer berechtigt ist, den Maschinenstatus zu setzen (Herunterfahren oder Neustart des SVIM)\",\n  \"permissionDescription.svobserver.command.execute\": \"SVObserver prüft, ob der Nutzer berechtigt ist, Befehle auszuführen\",\n  \"permissionDescription.usermanagement.userpermissions.read\": \"Der Nutzer kann Gruppenrechte aus dem Backend laden/das Menü für die Rechteverwaltung sehen/alle Rechte in Rechteverwaltung sehen\",\n  \"permissionDescription.usermanagement.userpermissions.edit\": \"Der Nutzer kann Gruppenrechte aus dem Backend laden/das Menü für die Rechteverwaltung sehen/alle Rechte in Rechteverwaltung sehen/Rechte ändern\",\n\n  // Debugger\n  \"debugger.title\": \"Debugger\",\n  \"debugger.backToWebApp\": \"Zurück zur WebApp\",\n  \"debugger.requestsListHeader\": \"Anforderungsliste\",\n  \"debugger.noParametersMessage\": \"Diese Anforderung hat keine Parameter\",\n  \"debugger.noItemsMessage\": \"(keine Items)\",\n  \"debugger.nothingToConfigureMessage\": \"(nichts zu konfigurieren)\",\n  \"debugger.addItemButtonText\": \"Hinzufügen\",\n  \"debugger.sendRequest\": \"Anfrage senden\",\n  \"debugger.noFilteredResultsMessage\": \"Keine gefilterten Ergebnisse\",\n  \"debugger.copyToClipboard\": \"In die Zwischenablage kopieren\",\n\n  // Toolset\n  \"toolsetView.windowTool\": \"Fenster-Tool\",\n  \"toolsetView.mathTool\": \"Mathe-Tool\",\n  \"toolsetView.statisticsTool\": \"Statistik-Tool\",\n  \"toolsetView.ringBufferTool\": \"Ringspeicher-Tool\",\n  \"toolsetView.archiveTool\": \"Archiv-Tool\",\n  \"toolsetView.acquisitionTool\": \"Aufnahme-Tool\",\n  \"toolsetView.transformationTool\": \"Transformations-Tool\",\n  \"toolsetView.shiftTool\": \"Verschiebe-Tool\",\n  \"toolsetView.cylindricalWarpTool\": \"Tool für zylindrisches Warping\",\n  \"toolsetView.perspectiveTool\": \"Perspektive-Tool\",\n  \"toolsetView.imageTool\": \"Bild-Tool\",\n  \"toolsetView.linearTool\": \"Linear-Tool\",\n  \"toolsetView.colorTool\": \"Farben-Tool\",\n  \"toolsetView.resizeTool\": \"Tool zur Größenänderung\",\n  \"toolsetView.loadImageTool\": \"Tool zum Laden von Bildern\",\n  \"toolsetView.tableTool\": \"Tabellen-Tool\",\n  \"toolsetView.tableAnalyzerTool\": \"Tabellenanalyse-Tool\",\n  \"toolsetView.polarTransformationTool\": \"Polar-Transformations-Tool\",\n  \"toolsetView.loopTool\": \"Loop-Tool\",\n  \"toolsetView.externalTool\": \"Externes Tool\",\n  \"toolsetView.groupTool\": \"Gruppen-Tool\",\n};\n\nexport default de;\n","const en = {\n  // TopNavigation\n  \"topNavigation.language.german\": \"German\",\n  \"topNavigation.language.english\": \"English\",\n  \"topNavigation.language.spanish\": \"Spanish\",\n  \"topNavigation.lock\": \"Lock\",\n  \"topNavigation.takeover\": \"Takeover\",\n  \"topNavigation.release\": \"Release\",\n  \"topNavigation.logout\": \"Logout\",\n  \"topNavigation.help\": \"Help\",\n  \"topNavigation.about\": \"Info\",\n  \"topNavigation.shortcut\": \"Shortcut\",\n  \"topNavigation.download\": \"Download SVO configuration\",\n  \"topNavigation.upload\": \"Upload SVO configuration\",\n  \"topNavigation.inspectionState\": \"Inspection state ({runningInspections} of {numberOfInspections} running)\",\n  \"topNavigation.permissions\": \"Permissions\",\n  \"topNavigation.saveConfig\": \"Save config\",\n  \"topNavigation.pauseAllInspections\": \"Pause all inspections\",\n  \"topNavigation.resumeAllInspections\": \"Resume all inspections\",\n\n  // there is a auto mapping in utils/modes.js\n  \"editMode\": \"Edit Mode\",\n  \"unknownMode\": \"Unknown mode\",\n  \"runMode\": \"Run Mode\",\n  \"stopMode\": \"Stop Mode\",\n  \"regressionMode\": \"Regression Mode\",\n  \"testMode\": \"Test Mode\",\n\n  // LockStateHandler\n  \"lockStateHandler.alertDialog.lockAlreadyLocked\": \"Configuration lock is already owned by: {user}\",\n  \"lockStateHandler.alertDialog.lockDescription\": \"Lock description: {description}\",\n  \"lockStateHandler.alertDialog.waitingForTakeoverResponse\": \"Waiting for response from: {user}\",\n  \"lockStateHandler.alertDialog.waitingForResponseInfo\": \"Current configuration lock owner has been notified of your request and has 30 seconds to respond from now on. If there is no response until then, you will automatically takeover the lock.\",\n  \"lockStateHandler.alertDialog.ownerRejectedTakeover\": \"{user} rejected the configuration lock takeover\",\n  \"lockStateHandler.alertDialog.takeoverAttempt\": \"{user} wants like to take over configuration lock\",\n  \"lockStateHandler.alertDialog.takeoverMessage\": \"Takeover message: {message}\",\n  \"lockStateHandler.formDialog.lockConfigRequestTitle\": \"Lock configuration request\",\n  \"lockStateHandler.formDialog.takeoverConfigRequestTitle\": \"Takeover configuration request\",\n  \"lockStateHandler.formDialog.lockConfigRequestContent\": \"To lock or takeover the configuration, please enter all details here. SVOGateway will send updates occasionally.\",\n  \"lockStateHandler.formDialog.lockScope\": \"Lock scope\",\n  \"lockStateHandler.formDialog.lockTimeout\": \"Lock timeout\",\n  \"lockStateHandler.formDialog.lockDescription\": \"Lock description\",\n  \"lockStateHandler.formDialog.takeoverRequest\": \"Takeover request\",\n  \"lockStateHandler.formDialog.takeoverMessage\": \"Takeover message\",\n\n  // ImageStrip\n  \"imageStripView.inspectionTemplate\": \"{inspectionName} Image Strip\",\n  \"imageStripView.play\": \"Play\",\n  \"imageStripView.pause\": \"Pause\",\n\n  // InputTool\n  \"inputToolView.inspectionTemplate\": \"{inspectionName} Input Tool\",\n  \"inputToolView.edit\": \"Open edit view\",\n  \"inputToolView.showList\": \"Show list\",\n  \"inputToolView.backToList\": \"Back to list\",\n  \"inputToolView.type\": \"Type\",\n  \"inputToolView.numberEditor\": \"Number editor\",\n  \"inputToolView.colorEditor\": \"Color editor\",\n  \"inputToolView.setValue\": \"Set value\",\n  \"inputToolView.valueSetSuccess\": \"Value has been set\",\n\n  // ListView\n  \"listView\": \"List\",\n  \"listView.inspectionTemplate\": \"{inspectionName} List\",\n  \"listView.AliasEditor.title\": \"Set alias for dotted name\",\n  \"listView.Actionbar.hideAliases\": \"Hide aliases\",\n  \"listView.Actionbar.showAliases\": \"Show aliases\",\n  \"listView.AliasEditor.dottedName\": \"Dotted name\",\n  \"listView.AliasEditor.value\": \"Value\",\n  \"listView.AliasEditor.button\": \"Save\",\n\n  // HelpView\n  \"helpView\": \"Help\",\n\n  // AboutView\n  \"aboutView\": \"About\",\n  \"aboutView.applicationName\": \"Application name:\",\n  \"aboutView.applicationVersion\": \"Application version:\",\n  \"aboutView.svoVersion\": \"SVObserver version:\",\n  \"aboutView.gatewayVersion\": \"Gateway version:\",\n\n  // ViewTypeSelection\n  \"viewTypeSelection.imageStripView\": \"Image Strip\",\n  \"viewTypeSelection.imageView\": \"Image\",\n  \"viewTypeSelection.parameterView\": \"Parameter\",\n  \"viewTypeSelection.ListView\": \"List\",\n  \"viewTypeSelection.toolset\": \"Tool Set\",\n  \"viewTypeSelection.inputTool\": \"Input tool\",\n  \"viewTypeSelection.back\": \"Back\",\n  \"viewTypeSelection.cancel\": \"Cancel\",\n  \"viewTypeSelection.chooseViewTooltip\": \"Choose view type\",\n  \"viewTypeSelection.selectViewType\": \"Select a type for this view:\",\n\n  // InspectionSelection\n  \"inspectionSelection.selectInspection\": \"Select an inspection for this view:\",\n\n  // ParameterView / Overlay\n  \"parameterview.overlay.delete\": \"Delete\",\n  \"parameterview.overlay.add\": \"Add\",\n  \"parameterview.overlay.showAll\": \"Show all\",\n  \"parameterview.overlay.hideAll\": \"Hide all\",\n  \"parameterview.overlay.parameters\": \"Overlay parameters\",\n  \"parameterview.overlay.label\": \"Label\",\n  \"parameterview.overlay.x\": \"X\",\n  \"parameterview.overlay.xVariable\": \"X Variable\",\n  \"parameterview.overlay.offsetLeft\": \"Offset Left\",\n  \"parameterview.overlay.offsetLeftVariable\": \"Offset Left Variable\",\n  \"parameterview.overlay.y\": \"Y\",\n  \"parameterview.overlay.yVariable\": \"Y Variable\",\n  \"parameterview.overlay.offsetTop\": \"Offset Top\",\n  \"parameterview.overlay.offsetTopVariable\": \"Offset Top Variable\",\n  \"parameterview.overlay.width\": \"Width\",\n  \"parameterview.overlay.widthVariable\": \"Width Variable\",\n  \"parameterview.overlay.height\": \"Height\",\n  \"parameterview.overlay.heightVariable\": \"Height Variable\",\n  \"parameterview.overlay.color\": \"Color\",\n  \"parameterview.overlay.colorVariable\": \"Color Variable\",\n  \"parameterview.overlay.lineStyle\": \"Line Style\",\n\n  // ImageView\n  \"imageView.inspectionTemplate\": \"{inspectionName} Image\",\n  \"imageView.zoomIn\": \"Zoom in\",\n  \"imageView.zoomOut\": \"Zoom out\",\n  \"imageView.fitToWidth\": \"Fit to width\",\n  \"imageView.fitToHeight\": \"Fit to height\",\n  \"imageView.saveWithOverlays\": \"Download image with overlays\",\n  \"imageView.overlayListToggle\": \"Overlay list\",\n  \"imageView.imageInfoToggle\": \"Image info\",\n  \"imageView.save\": \"Download image\",\n  \"imageView.showOverlays\": \"Show overlays\",\n  \"imageView.hideOverlays\": \"Hide overlays\",\n  \"imageView.info\": \"Info\",\n  \"imageView.width\": \"Width:\",\n  \"imageView.height\": \"Height:\",\n  \"imageView.x\": \"X:\",\n  \"imageView.y\": \"Y:\",\n\n  // ParameterView\n  \"parameterView\": \"Parameter\",\n  \"parameterView.inspectionTemplate\": \"{inspectionName} Parameter\",\n\n  // ToolsetView\n  \"toolsetView.inspectionTemplate\": \"{inspectionName} Tool Set\",\n  \"toolsetView.confirmDelete\": \"Do you really want to delete {toolName}? This cannot be undone.\",\n  \"toolsetView.validate\": \"Validate\",\n  \"toolsetView.validateSelection\": \"Validate selection\",\n  \"toolsetView.validatedFormula\": \"Validated formula\",\n  \"toolsetView.savingSuccess\": \"Changes have been saved\",\n  \"toolsetView.value\": \"Value\",\n  \"toolsetView.link\": \"Link\",\n  \"toolsetView.formula\": \"Formula\",\n  \"toolsetView.selectLinkedValue\": \"Select linked value\",\n  \"toolsetView.highlightedNode\": \"Highlighted node\",\n  \"toolsetView.evaluatedValue\": \"Evaluated value\",\n  \"toolsetView.undoAll\": \"Undo all\",\n  \"toolsetView.validating\": \"Validating\",\n  \"toolsetView.validationSuccess\": \"Validation success\",\n  \"toolsetView.validationError\": \"Validation error\",\n  \"toolsetView.result\": \"Result\",\n\n  // AboutView\n  \"aboutView.title\": \"About \",\n\n  // ViewSet Manager\n  \"viewSetManager\": \"View Set Manager\",\n  \"viewSetManager.title\": \"View Set Manager\",\n  \"viewSetManager.viewSetName\": \"Name\",\n  \"viewSetManager.remove\": \"Remove\",\n  \"viewSetManager.save\": \"Save all view sets\",\n  \"viewSetManager.close\": \"Close\",\n  \"viewSetManager.editViewSetHeadline\": \"Edit view sets:\",\n  \"viewSetManager.newViewSet\": \"Create new view set\",\n  \"viewSetManager.editViewSetName\": \"Edit view set name\",\n  \"viewSetManager.changeViewSetName\": \"Change view set name\",\n  \"viewSetManager.apply\": \"Apply changes\",\n  \"viewSetManager.export\": \"Export current view layout\",\n  \"viewSetManager.import\": \"Import a view layout from file\",\n  \"viewSetManager.importConfirm.title\": \"Overwriting view set\",\n  \"viewSetManager.importConfirm.message\": \"Importing a view set from file will overwrite your existing viewset. Do you want to continue?\",\n  \"viewSetManager.deleteConfirm.message\": \"Do you really want to delete view set {viewsetName}?\",\n  \"viewSetManager.deleteIconTooltip\": \"Delete view set\",\n\n  // ShortcutView\n  \"shortcutView.title\": \"Shortcuts\",\n  \"shortcutView.fullscreenTitle\": \"Full screen\",\n  \"shortcutView.fullscreenDescription\": \"Focus a view and press CTRL-F\",\n  \"shortcutView.helpTitle\": \"Help\",\n  \"shortcutView.helpDescription\": \"Focus a view and press F1\",\n\n  // Notifications\n  \"notifications.modeSwitch.userSwitchedModeTo\": \"User switched mode to:\",\n  \"notifications.websocket.connectionEstablished\": \"Websocket connection established on port:\",\n  \"notifications.websocket.connectionLost\": \"Websocket connection lost\",\n  \"notifications.userSwitchedLanguage\": \"User switched language to: \",\n  \"notifications.rejectStreamPaused\": \"Reject stream was paused\",\n  \"notifications.rejectStreamResumed\": \"Reject stream was resumed\",\n  \"notifications.checkSvimOutput\": \"Please check output on SVIM\",\n  \"notifications.incompatibilityWarning\": \"Selected config might not be compatible with the current WebApp\",\n  \"notifications.errorOccurred\": \"An error occurred\",\n  \"notifications.error.loadingFile\": \"Could not load data from file.\",\n  \"notifications.successfulAction\": \"Successful action\",\n  \"notifications.successfullyLoadedFile\": \"Successfully loaded viewset from file.\",\n  \"notifications.viewsetVersionIncompatibleTitle\": \"File version incompatible\",\n  \"notifications.viewsetVersionIncompatibleMessage\": \"The file version is incompatible. Can not load viewset.\",\n  \"notifications.minorVersionDiffTitle\": \"Minor version differs\",\n  \"notifications.minorVersionDiffMessage\": \"Minor version differs between application and file. The presentation of the viewset might be incorrect.\",\n  \"notifications.variableValueShouldBeInTheRange\": \"Value of the variable {variableName} should be in the range of {range}.\",\n  \"notifications.configAlreadyLockedBySameUser\": \"You have already locked the configuration!\",\n  \"notifications.takeoverCandidateNotFound\": \"Could not find takeover candidate! You still own the config lock.\",\n  \"notifications.lockTakeoverError\": \"Error while perfroming config lock takeover! Error code: {code}\",\n  \"notifications.lockAcquisitionError\": \"Error while requesting config lock! Error code : {code}\",\n\n  // ListView\n  \"listView.save\": \"Save\",\n  \"listView.name\": \"Name\",\n  \"listView.aliasName\": \"Alias/Name\",\n  \"listView.values\": \"Values\",\n\n  // Object selector\n  \"objectSelector.select\": \"Select objects:\",\n  \"objectSelector.limitReached\": \"(Selection limit of {items_number} items reached)\",\n\n  // SVOView\n  \"svoView.emptyViewInspectionTemplate\": \"{inspectionName}\",\n  \"svoView.closeView\": \"Close view\",\n  \"svoView.closeViewConfirmation\": \"Do you really want to close this view?\",\n\n  \"ok\": \"OK\",\n  \"cancel\": \"Cancel\",\n  \"submit\": \"Submit\",\n  \"close\": \"Close\",\n  \"accept\": \"Accept\",\n  \"reject\": \"Reject\",\n  \"milliseconds\": \"milliseconds\",\n  \"noConfigName\": \"[No configuration]\",\n  \"unknownConfigName\": \"[Unknown configuration]\",\n  \"noConfigLoaded\": \"No configuration loaded in SVObserver\",\n  \"up\": \"Up\",\n  \"down\": \"Down\",\n  \"save\": \"Save\",\n  \"copy\": \"Copy\",\n  \"cut\": \"Cut\",\n  \"paste\": \"Paste\",\n  \"delete\": \"Delete\",\n  \"undo\": \"Undo\",\n  \"expandAll\": \"Expand all\",\n  \"collapseAll\": \"Collapse all\",\n\n  // Permissions\n  \"permissions.backToWebApp\": \"Back to WebApp\",\n  \"permissions.helpText\": \"You can change the listed permissions for each group (column). Common permissions are applied to all other groups. Permissions may have effect on the WebApp and/or the SVObserver.\",\n  \"permissions.permissions\": \"Permissions\",\n  \"permissions.permissionManagement\": \"Permission Management\",\n  \"permissions.description\": \"Description\",\n\n  // Permission descriptions\n  \"permissionDescription.webapp.configuration.save\": \"User can save the current configuration with all view sets\",\n  \"permissionDescription.webapp.logs.read\": \"User can see logs in top navigation bar\",\n  \"permissionDescription.webapp.viewset.add\": \"User can add new view sets\",\n  \"permissionDescription.webapp.viewset.read\": \"User can see view sets (switch between view sets, open View Set Manager)\",\n  \"permissionDescription.webapp.viewset.edit\": \"User can see and edit view sets (change size of views, add new views to view set, switch between view sets, open View Set Manager, rename view sets)\",\n  \"permissionDescription.webapp.viewset.remove\": \"User can remove a view set\",\n  \"permissionDescription.webapp.view[type=AnyView].add\": \"User can add views of any type\",\n  \"permissionDescription.webapp.view[type=AnyView].read\": \"User can see views of any type\",\n  \"permissionDescription.webapp.view[type=AnyView].edit\": \"User can see and edit views of any type\",\n  \"permissionDescription.webapp.view[type=AnyView].remove\": \"User can remove views of any type\",\n  \"permissionDescription.webapp.view[type=ImageView].add\": \"User can add views of type Image\",\n  \"permissionDescription.webapp.view[type=ImageView].read\": \"User can see views of type Image (also download image, see custom overlay list, see image info)\",\n  \"permissionDescription.webapp.view[type=ImageView].edit\": \"User can see and edit views of type Image (choose inspection and tool, change size of image, download image, see custom overlay list, see image info)\",\n  \"permissionDescription.webapp.view[type=ImageView].remove\": \"User can remove views of type Image\",\n  \"permissionDescription.webapp.view[type=ListView].add\": \"User can add views of type List\",\n  \"permissionDescription.webapp.view[type=ListView].read\": \"User can see views of type List\",\n  \"permissionDescription.webapp.view[type=ListView].edit\": \"User can see and edit views of type List (choose inspection and tool, edit aliases)\",\n  \"permissionDescription.webapp.view[type=ListView].remove\": \"User can remove views of type List\",\n  \"permissionDescription.webapp.view[type=ImageStripView].add\": \"User can add views of type Image Strip\",\n  \"permissionDescription.webapp.view[type=ImageStripView].read\": \"User can see views of type Image Strip\",\n  \"permissionDescription.webapp.view[type=ImageStripView].edit\": \"User can see and edit views of type Image Strip (choose inspection and tool)\",\n  \"permissionDescription.webapp.view[type=ImageStripView].remove\": \"User can remove views of type Image Strip\",\n  \"permissionDescription.webapp.view[type=ParameterView].add\": \"User can add views of type Parameter\",\n  \"permissionDescription.webapp.view[type=ParameterView].read\": \"User can see views of type Parameter\",\n  \"permissionDescription.webapp.view[type=ParameterView].edit\": \"User can see and edit views of type Parameter (add/edit/delete custom overlays)\",\n  \"permissionDescription.webapp.view[type=ParameterView].remove\": \"User can remove views of type Parameter\",\n  \"permissionDescription.webapp.view[type=ToolSetView].add\": \"User can add views of type Tool Set\",\n  \"permissionDescription.webapp.view[type=ToolSetView].read\": \"User can see views of type Tool Set\",\n  \"permissionDescription.webapp.view[type=ToolSetView].edit\": \"User can see and edit views of type Tool Set\",\n  \"permissionDescription.webapp.view[type=ToolSetView].remove\": \"User can remove views of type Tool Set\",\n  \"permissionDescription.svobserver.mode.read\": \"User can see the current mode of SVObserver in top navigation bar\",\n  \"permissionDescription.svobserver.mode.edit\": \"User can see and change the current mode of SVObserver in top navigation bar\",\n  \"permissionDescription.svobserver.inspectionstate.read\": \"User can see the inspection state of all inspections in the top navigation bar\",\n  \"permissionDescription.svobserver.inspectionstate.edit\": \"User can see and change the inspection state of all inspections in the top navigation bar and toggle the state in Image Strip View\",\n  \"permissionDescription.svobserver.value.read\": \"SVObserver checks if user is allowed to see values\",\n  \"permissionDescription.svobserver.value.edit\": \"SVObserver checks if user is allowed to edit values\",\n  \"permissionDescription.svobserver.tool.add\": \"SVObserver checks if user is allowed to add new tools\",\n  \"permissionDescription.svobserver.tool.read\": \"SVObserver checks if user is allowed to read tools\",\n  \"permissionDescription.svobserver.tool.edit\": \"SVObserver checks if user is allowed to edit existing tools\",\n  \"permissionDescription.svobserver.tool.remove\": \"SVObserver checks if user is allowed to remove tools\",\n  \"permissionDescription.svobserver.configuration.read\": \"SVObserver checks if user is allowed to read the SVObserver configuration\",\n  \"permissionDescription.svobserver.configuration.write\": \"SVObserver checks if user is allowed to save the SVObserver configuration\",\n  \"permissionDescription.svobserver.notifications.subscribe\": \"SVObserver checks if user is allowed to subscribe to SVObserver notifications\",\n  \"permissionDescription.svobserver.clientlogs.store\": \"SVObserver checks if user is allowed to send client logs to the SVObserver\",\n  \"permissionDescription.svobserver.file.read\": \"SVObserver checks if user is allowed to read arbitrary files in SVIM RUN folder\",\n  \"permissionDescription.svobserver.file.write\": \"SVObserver checks if user is allowed to write arbitrary files in SVIM RUN folder\",\n  \"permissionDescription.svobserver.machinestate.set\": \"SVObserver checks if user is allowed to set the machine state (shutdown or restart of SVIM)\",\n  \"permissionDescription.svobserver.command.execute\": \"SVObserver checks if user is allowed to execute commands\",\n  \"permissionDescription.usermanagement.userpermissions.read\": \"User can load group permissions from backend/can see menu entry to switch to permission management page/can see all permissions in permission management\",\n  \"permissionDescription.usermanagement.userpermissions.edit\": \"User can load group permissions from backend/can see menu entry to switch to permission management page/can see all permissions in permission management/can edit permissions\",\n\n  // Debugger\n  \"debugger.title\": \"Debugger\",\n  \"debugger.backToWebApp\": \"Back to WebApp\",\n  \"debugger.requestsListHeader\": \"Request list\",\n  \"debugger.noParametersMessage\": \"This request has no parameters\",\n  \"debugger.noItemsMessage\": \"(no items)\",\n  \"debugger.nothingToConfigureMessage\": \"(nothing to configure)\",\n  \"debugger.addItemButtonText\": \"Add\",\n  \"debugger.sendRequest\": \"Send request\",\n  \"debugger.noFilteredResultsMessage\": \"No filtered results\",\n  \"debugger.copyToClipboard\": \"Copy to clipboard\",\n\n  // Toolset\n  \"toolsetView.windowTool\": \"Window Tool\",\n  \"toolsetView.mathTool\": \"Math Tool\",\n  \"toolsetView.statisticsTool\": \"Statistics Tool\",\n  \"toolsetView.ringBufferTool\": \"Ring Buffer Tool\",\n  \"toolsetView.archiveTool\": \"Archive Tool\",\n  \"toolsetView.acquisitionTool\": \"Acquisition Tool\",\n  \"toolsetView.transformationTool\": \"Transformation Tool\",\n  \"toolsetView.shiftTool\": \"Shift Tool\",\n  \"toolsetView.cylindricalWarpTool\": \"Cylindrical Warp Tool\",\n  \"toolsetView.perspectiveTool\": \"Perspective Tool\",\n  \"toolsetView.imageTool\": \"Image Tool\",\n  \"toolsetView.linearTool\": \"Linear Tool\",\n  \"toolsetView.colorTool\": \"Color Tool\",\n  \"toolsetView.resizeTool\": \"Resize Tool\",\n  \"toolsetView.loadImageTool\": \"Load Image Tool\",\n  \"toolsetView.tableTool\": \"Table Tool\",\n  \"toolsetView.tableAnalyzerTool\": \"Table Analyzer Tool\",\n  \"toolsetView.polarTransformationTool\": \"Polar Transformation Tool\",\n  \"toolsetView.loopTool\": \"Loop Tool\",\n  \"toolsetView.externalTool\": \"External Tool\",\n  \"toolsetView.groupTool\": \"Group Tool\",\n};\n\nexport default en;\n\n","const es = {\n  // TopNavigation\n  \"topNavigation.language.german\": \"Alemán\",\n  \"topNavigation.language.english\": \"Inglés\",\n  \"topNavigation.language.spanish\": \"Español\",\n  \"topNavigation.lock\": \"Bloquear\",\n  \"topNavigation.takeover\": \"Tomar el control\",\n  \"topNavigation.release\": \"Liberar\",\n  \"topNavigation.logout\": \"Cerrar sesión\",\n  \"topNavigation.help\": \"Ayuda\",\n  \"topNavigation.about\": \"Información\",\n  \"topNavigation.shortcut\": \"Atajo de teclado\",\n  \"topNavigation.download\": \"Descargar configuración SVO\",\n  \"topNavigation.upload\": \"Cargar configuración SVO\",\n  \"topNavigation.inspectionState\": \"Estado de inspección ({runningInspections} de {numberOfInspections} en curso)\",\n  \"topNavigation.permissions\": \"Permisos\",\n  \"topNavigation.saveConfig\": \"Guardar configuración\",\n  \"topNavigation.pauseAllInspections\": \"Detener todas las inspecciones\",\n  \"topNavigation.resumeAllInspections\": \"Reanudar todas las inspecciones\",\n\n  // there is a auto mapping in utils/modes.js\n  \"editMode\": \"Modo de edición\",\n  \"unknownMode\": \"Modo desconocido\",\n  \"runMode\": \"Modo de ejecución\",\n  \"stopMode\": \"Modo de parada\",\n  \"regressionMode\": \"Modo de regresión\",\n  \"testMode\": \"Modo de prueba\",\n\n  // LockStateHandler\n  \"lockStateHandler.alertDialog.lockAlreadyLocked\": \"El bloqueo de la configuración ya está a cargo de: {user}\",\n  \"lockStateHandler.alertDialog.lockDescription\": \"Descripción de bloqueo: {description}\",\n  \"lockStateHandler.alertDialog.waitingForTakeoverResponse\": \"Esperando respuesta de: {user}\",\n  \"lockStateHandler.alertDialog.waitingForResponseInfo\": \"El propietario del bloqueo de configuración actual ha recibido su solicitud y dispone de 30 segundos para responder a partir de ahora. Si no recibe respuesta transcurrido ese tiempo, usted asumirá automáticamente el control del bloqueo.\",\n  \"lockStateHandler.alertDialog.ownerRejectedTakeover\": \"{user} rechazó tomar el control del bloqueo de configuración\",\n  \"lockStateHandler.alertDialog.takeoverAttempt\": \"{user} desea tomar el control del bloqueo de configuración\",\n  \"lockStateHandler.alertDialog.takeoverMessage\": \"Mensaje de toma de control: {message}\",\n  \"lockStateHandler.formDialog.lockConfigRequestTitle\": \"Solicitud de bloqueo de configuración\",\n  \"lockStateHandler.formDialog.takeoverConfigRequestTitle\": \"Solicitud de toma de control de configuración\",\n  \"lockStateHandler.formDialog.lockConfigRequestContent\": \"Para bloquear o tomar el control de la configuración, introduzca aquí todos los detalles. SVOGateway enviará actualizaciones de forma ocasional.\",\n  \"lockStateHandler.formDialog.lockScope\": \"Ámbito de bloqueo\",\n  \"lockStateHandler.formDialog.lockTimeout\": \"Bloquear tiempo excedido\",\n  \"lockStateHandler.formDialog.lockDescription\": \"Bloquear descripción\",\n  \"lockStateHandler.formDialog.takeoverRequest\": \"Consulta de toma de control\",\n  \"lockStateHandler.formDialog.takeoverMessage\": \"Mensaje de toma de control\",\n\n  // ImageStrip\n  \"imageStripView.inspectionTemplate\": \"Franja de imagen {inspectionName}\",\n  \"imageStripView.play\": \"Reproducir\",\n  \"imageStripView.pause\": \"Pausar\",\n\n  // InputTool\n  \"inputToolView.inspectionTemplate\": \"{inspectionName} Herramienta de entradas\",\n  \"inputToolView.edit\": \"Abrir editar ver\",\n  \"inputToolView.showList\": \"Mostrar lista\",\n  \"inputToolView.backToList\": \"Volver a la lista\",\n  \"inputToolView.type\": \"Tipo\",\n  \"inputToolView.numberEditor\": \"Editor de número\",\n  \"inputToolView.colorEditor\": \"Editor de color\",\n  \"inputToolView.setValue\": \"Establecer valor\",\n  \"inputToolView.valueSetSuccess\": \"Se ha establecido el valor\",\n\n  // ListView\n  \"listView\": \"Lista\",\n  \"listView.inspectionTemplate\": \"Lista {inspectionName}\",\n  \"listView.AliasEditor.title\": \"Configurar alias para el nombre con puntos\",\n  \"listView.Actionbar.hideAliases\": \"Ocultar los alias\",\n  \"listView.Actionbar.showAliases\": \"Mostrar los alias\",\n  \"listView.AliasEditor.dottedName\": \"Nombre con puntos\",\n  \"listView.AliasEditor.value\": \"Valor\",\n  \"listView.AliasEditor.button\": \"Guardar\",\n\n  // HelpView\n  \"helpView\": \"Ayuda\",\n\n  // AboutView\n  \"aboutView\": \"Información relacionada\",\n  \"aboutView.applicationName\": \"Nombre de la aplicación:\",\n  \"aboutView.applicationVersion\": \"Versión de la aplicación:\",\n  \"aboutView.svoVersion\": \"Versión de SVObserver:\",\n  \"aboutView.gatewayVersion\": \"Versión del Gateway:\",\n\n  // ViewTypeSelection\n  \"viewTypeSelection.imageStripView\": \"Franja de la imagen\",\n  \"viewTypeSelection.imageView\": \"Imagen\",\n  \"viewTypeSelection.parameterView\": \"Parámetro\",\n  \"viewTypeSelection.ListView\": \"Lista\",\n  \"viewTypeSelection.toolset\": \"Conjunto de herramientas\",\n  \"viewTypeSelection.inputTool\": \"Herramienta de entradas\",\n  \"viewTypeSelection.back\": \"Atrás\",\n  \"viewTypeSelection.cancel\": \"Cancelar\",\n  \"viewTypeSelection.chooseViewTooltip\": \"Seleccionar tipo de visualización\",\n  \"viewTypeSelection.selectViewType\": \"Seleccionar un tipo para esta visualización:\",\n\n  // InspectionSelection\n  \"inspectionSelection.selectInspection\": \"Seleccionar una inspección para esta visualización:\",\n\n  // ParameterView / Overlay\n  \"parameterview.overlay.delete\": \"Borrar\",\n  \"parameterview.overlay.add\": \"Añadir\",\n  \"parameterview.overlay.showAll\": \"Mostrar todo\",\n  \"parameterview.overlay.hideAll\": \"Ocultar todo\",\n  \"parameterview.overlay.parameters\": \"Parámetros de superposición\",\n  \"parameterview.overlay.label\": \"Etiqueta\",\n  \"parameterview.overlay.x\": \"X\",\n  \"parameterview.overlay.xVariable\": \"Variable X\",\n  \"parameterview.overlay.offsetLeft\": \"Desplazamiento izquierda\",\n  \"parameterview.overlay.offsetLeftVariable\": \"Variable Desplazamiento izquierda\",\n  \"parameterview.overlay.y\": \"Y\",\n  \"parameterview.overlay.yVariable\": \"Variable Y\",\n  \"parameterview.overlay.offsetTop\": \"Desplazamiento arriba\",\n  \"parameterview.overlay.offsetTopVariable\": \"Variable Desplazamiento arriba\",\n  \"parameterview.overlay.width\": \"Anchura\",\n  \"parameterview.overlay.widthVariable\": \"Variable Anchura\",\n  \"parameterview.overlay.height\": \"Altura\",\n  \"parameterview.overlay.heightVariable\": \"Variable Altura\",\n  \"parameterview.overlay.color\": \"Color\",\n  \"parameterview.overlay.colorVariable\": \"Variable Color\",\n  \"parameterview.overlay.lineStyle\": \"Estilo de línea\",\n\n  // ImageView\n  \"imageView.inspectionTemplate\": \"Imagen {inspectionName}\",\n  \"imageView.zoomIn\": \"Acercar\",\n  \"imageView.zoomOut\": \"Alejar\",\n  \"imageView.fitToWidth\": \"Ajustar a la anchura\",\n  \"imageView.fitToHeight\": \"Ajustar a la altura\",\n  \"imageView.saveWithOverlays\": \"Descargar imagen con superposiciones\",\n  \"imageView.overlayListToggle\": \"Lista de superposiciones\",\n  \"imageView.imageInfoToggle\": \"Información de imágenes\",\n  \"imageView.save\": \"Descargar imagen\",\n  \"imageView.showOverlays\": \"Mostrar superposiciones\",\n  \"imageView.hideOverlays\": \"Ocultar superposiciones\",\n  \"imageView.info\": \"Información\",\n  \"imageView.width\": \"Anchura:\",\n  \"imageView.height\": \"Altura:\",\n  \"imageView.x\": \"X:\",\n  \"imageView.y\": \"Y:\",\n\n  // ParameterView\n  \"parameterView\": \"Parámetro\",\n  \"parameterView.inspectionTemplate\": \"Parámetro {inspectionName}\",\n\n  // ToolsetView\n  \"toolsetView.inspectionTemplate\": \"Conjunto de herramientas {inspectionName}\",\n  \"toolsetView.confirmDelete\": \"¿Realmente desea eliminar {toolName}? Esta acción es irreversible.\",\n  \"toolsetView.validate\": \"Validar\",\n  \"toolsetView.validateSelection\": \"Validar selección\",\n  \"toolsetView.validatedFormula\": \"Fórmula validada\",\n  \"toolsetView.savingSuccess\": \"Se han guardado los cambios\",\n  \"toolsetView.value\": \"Valor\",\n  \"toolsetView.link\": \"Vincular\",\n  \"toolsetView.formula\": \"Fórmula\",\n  \"toolsetView.selectLinkedValue\": \"Seleccionar valor vinculado\",\n  \"toolsetView.highlightedNode\": \"Nodo resaltado\",\n  \"toolsetView.evaluatedValue\": \"Valor evaluado\",\n  \"toolsetView.undoAll\": \"Deshacer todo\",\n  \"toolsetView.validating\": \"Validando\",\n  \"toolsetView.validationSuccess\": \"Validación correcta\",\n  \"toolsetView.validationError\": \"Error de validación\",\n  \"toolsetView.result\": \"Resultado\",\n\n  // AboutView\n  \"aboutView.title\": \"Información relacionada \",\n\n  // ViewSet Manager\n  \"viewSetManager\": \"Gestor de conjuntos de visualización\",\n  \"viewSetManager.title\": \"Gestor de conjuntos de visualización\",\n  \"viewSetManager.viewSetName\": \"Nombre\",\n  \"viewSetManager.remove\": \"Eliminar\",\n  \"viewSetManager.save\": \"Guardar todos los conjuntos de visualización\",\n  \"viewSetManager.close\": \"Cerrar\",\n  \"viewSetManager.editViewSetHeadline\": \"Editar los conjuntos de visualización:\",\n  \"viewSetManager.newViewSet\": \"Crear nuevo conjunto de visualización\",\n  \"viewSetManager.editViewSetName\": \"Editar el nombre del conjunto de visualización\",\n  \"viewSetManager.changeViewSetName\": \"Cambiar el nombre del conjunto de visualización\",\n  \"viewSetManager.apply\": \"Aplicar cambios\",\n  \"viewSetManager.export\": \"Exportación del diseño actual de visualización\",\n  \"viewSetManager.import\": \"Importar un diseño de visualización del archivo\",\n  \"viewSetManager.importConfirm.title\": \"Sobrescribir un conjunto de visualización\",\n  \"viewSetManager.importConfirm.message\": \"Al importar un conjunto de visualización del archivo se sobrescribirá su conjunto de visualización existente. ¿Desea continuar?\",\n  \"viewSetManager.deleteConfirm.message\": \"¿Realmente desea eliminar el conjunto de visualización {viewsetName}?\",\n  \"viewSetManager.deleteIconTooltip\": \"Borrar el conjunto de visualización\",\n\n  // ShortcutView\n  \"shortcutView.title\": \"Atajos de teclado\",\n  \"shortcutView.fullscreenTitle\": \"Pantalla completa\",\n  \"shortcutView.fullscreenDescription\": \"Centrar una visualización y pulsar CTRL-F\",\n  \"shortcutView.helpTitle\": \"Ayuda\",\n  \"shortcutView.helpDescription\": \"Centrar una visualización y pulsar F1\",\n\n  // Notifications\n  \"notifications.modeSwitch.userSwitchedModeTo\": \"El usuario cambió el modo a:\",\n  \"notifications.websocket.connectionEstablished\": \"Conexión WebSocket establecida en el puerto:\",\n  \"notifications.websocket.connectionLost\": \"Conexión WebSocket perdida\",\n  \"notifications.userSwitchedLanguage\": \"El usuario cambió el idioma a: \",\n  \"notifications.rejectStreamPaused\": \"Se ha pausado la corriente de desecho\",\n  \"notifications.rejectStreamResumed\": \"Se ha reiniciado la corriente de desecho\",\n  \"notifications.checkSvimOutput\": \"Compruebe la salida en SVIM\",\n  \"notifications.incompatibilityWarning\": \"La configuración seleccionada puede que no sea compatible con la WebApp actual\",\n  \"notifications.errorOccurred\": \"Se ha producido un error\",\n  \"notifications.error.loadingFile\": \"No se han podido cargar los datos del archivo.\",\n  \"notifications.successfulAction\": \"Acción realizada correctamente\",\n  \"notifications.successfullyLoadedFile\": \"El conjunto de visualización se ha cargado correctamente desde el archivo.\",\n  \"notifications.viewsetVersionIncompatibleTitle\": \"Versión del archivo incompatible\",\n  \"notifications.viewsetVersionIncompatibleMessage\": \"La versión del archivo es incompatible. No se puede cargar el conjunto de visualización.\",\n  \"notifications.minorVersionDiffTitle\": \"Diferencias en la versión secundaria\",\n  \"notifications.minorVersionDiffMessage\": \"La versión secundaria difiere entre la aplicación y el archivo. La presentación del conjunto de visualización puede ser incorrecta.\",\n  \"notifications.variableValueShouldBeInTheRange\": \"El valor de la variable {variableName} debería estar en el rango de {range}.\",\n  \"notifications.configAlreadyLockedBySameUser\": \"Ya ha bloqueado la configuración!\",\n  \"notifications.takeoverCandidateNotFound\": \"No se ha podido encontrar el candidato para la toma de control! Aún está a cargo del bloqueo de la configuración.\",\n  \"notifications.lockTakeoverError\": \"Error al ejecutar la toma de control del bloqueo de la configuración! Código de error: {code}\",\n  \"notifications.lockAcquisitionError\": \"Error al solicitar el bloqueo de configuración Código de error: {code}\",\n\n  // ListView\n  \"listView.save\": \"Guardar\",\n  \"listView.name\": \"Nombre\",\n  \"listView.aliasName\": \"Alias/Nombre\",\n  \"listView.values\": \"Valores\",\n\n  // Object selector\n  \"objectSelector.select\": \"Seleccionar objetos:\",\n  \"objectSelector.limitReached\": \"(Se ha alcanzado el límite de selección de {items_number} elementos)\",\n\n  // SVOView\n  \"svoView.emptyViewInspectionTemplate\": \"{inspectionName}\",\n  \"svoView.closeView\": \"Cerrar visualización\",\n  \"svoView.closeViewConfirmation\": \"¿Seguro que desea cerrar esta visualización?\",\n\n  \"ok\": \"OK\",\n  \"cancel\": \"Cancelar\",\n  \"submit\": \"Enviar\",\n  \"close\": \"Cerrar\",\n  \"accept\": \"Aceptar\",\n  \"reject\": \"Rechazar\",\n  \"milliseconds\": \"milisegundos\",\n  \"noConfigName\": \"[Sin configuración]\",\n  \"unknownConfigName\": \"[Configuración desconocida]\",\n  \"noConfigLoaded\": \"No se ha cargado ninguna configuración en SVObserver\",\n  \"up\": \"Hacia arriba\",\n  \"down\": \"Hacia abajo\",\n  \"save\": \"Guardar\",\n  \"copy\": \"Copiar\",\n  \"cut\": \"Cortar\",\n  \"paste\": \"Pegar\",\n  \"delete\": \"Borrar\",\n  \"undo\": \"Deshacer\",\n  \"expandAll\": \"Expandir todo\",\n  \"collapseAll\": \"Ocultar todo\",\n\n  // Permissions\n  \"permissions.backToWebApp\": \"Volver a WebApp\",\n  \"permissions.helpText\": \"Puede cambiar los permisos enumerados para cada grupo (columna). Los permisos comunes se aplican a todos los demás grupos. Los permisos pueden afectar a la WebApp y/o al SVObserver.\",\n  \"permissions.permissions\": \"Permisos\",\n  \"permissions.permissionManagement\": \"Administración de permisos\",\n  \"permissions.description\": \"Descripción\",\n\n  // Permission descriptions\n  \"permissionDescription.webapp.configuration.save\": \"El usuario puede guardar la configuración actual con todos los conjuntos de visualización\",\n  \"permissionDescription.webapp.logs.read\": \"El usuario puede ver los registros en la barra de navegación superior\",\n  \"permissionDescription.webapp.viewset.add\": \"El usuario puede añadir nuevos conjuntos de visualización\",\n  \"permissionDescription.webapp.viewset.read\": \"El usuario puede ver conjuntos de visualización (cambiar entre los conjuntos de visualización, abrir el gestor de conjuntos de visualización)\",\n  \"permissionDescription.webapp.viewset.edit\": \"El usuario puede ver y editar conjuntos de visualización (cambiar el tamaño de las visualizaciones, abrir el gestor de conjuntos de visualización, cambiar el nombre a los conjuntos de visualización)\",\n  \"permissionDescription.webapp.viewset.remove\": \"El usuario puede eliminar un conjunto de visualización\",\n  \"permissionDescription.webapp.view[type=AnyView].add\": \"El usuario puede añadir visualizaciones de cualquier tipo\",\n  \"permissionDescription.webapp.view[type=AnyView].read\": \"El usuario puede ver visualizaciones de cualquier tipo\",\n  \"permissionDescription.webapp.view[type=AnyView].edit\": \"El usuario puede ver y editar visualizaciones de cualquier tipo\",\n  \"permissionDescription.webapp.view[type=AnyView].remove\": \"El usuario puede eliminar visualizaciones de cualquier tipo\",\n  \"permissionDescription.webapp.view[type=ImageView].add\": \"El usuario puede añadir visualizaciones del tipo Imagen\",\n  \"permissionDescription.webapp.view[type=ImageView].read\": \"El usuario puede ver visualizaciones del tipo Imagen (también descargar imágenes, ver la lista de superposiciones personalizadas, ver información sobre la imagen)\",\n  \"permissionDescription.webapp.view[type=ImageView].edit\": \"El usuario puede ver y editar visualizaciones del tipo Imagen (elegir inspección y herramienta, cambiar el tamaño de la imagen, descargar la imagen, ver una lista de superposiciones personalizadas, ver información sobre la imagen)\",\n  \"permissionDescription.webapp.view[type=ImageView].remove\": \"El usuario puede eliminar visualizaciones del tipo Imagen\",\n  \"permissionDescription.webapp.view[type=ListView].add\": \"El usuario puede añadir visualizaciones del tipo Lista\",\n  \"permissionDescription.webapp.view[type=ListView].read\": \"El usuario puede ver visualizaciones del tipo Lista\",\n  \"permissionDescription.webapp.view[type=ListView].edit\": \"El usuario puede ver y editar visualizaciones del tipo Lista (seleccionar inspección y herramienta, editar alias)\",\n  \"permissionDescription.webapp.view[type=ListView].remove\": \"El usuario puede eliminar visualizaciones del tipo Lista\",\n  \"permissionDescription.webapp.view[type=ImageStripView].add\": \"El usuario puede añadir visualizaciones del tipo Franja de imagen\",\n  \"permissionDescription.webapp.view[type=ImageStripView].read\": \"El usuario puede ver visualizaciones del tipo Franja de imagen\",\n  \"permissionDescription.webapp.view[type=ImageStripView].edit\": \"El usuario puede ver y editar visualizaciones del tipo Franja de imagen (seleccionar inspección y herramienta)\",\n  \"permissionDescription.webapp.view[type=ImageStripView].remove\": \"El usuario puede eliminar visualizaciones del tipo Franja de imagen\",\n  \"permissionDescription.webapp.view[type=ParameterView].add\": \"El usuario puede añadir visualizaciones del tipo Parámetro\",\n  \"permissionDescription.webapp.view[type=ParameterView].read\": \"El usuario puede ver visualizaciones del tipo Parámetro\",\n  \"permissionDescription.webapp.view[type=ParameterView].edit\": \"El usuario puede ver y editar visualizaciones del tipo Parámetro (añadir/editar/borrar superposiciones personalizadas)\",\n  \"permissionDescription.webapp.view[type=ParameterView].remove\": \"El usuario puede eliminar visualizaciones del tipo Parámetro\",\n  \"permissionDescription.webapp.view[type=ToolSetView].add\": \"El usuario puede añadir visualizaciones del tipo Conjunto de herramientas\",\n  \"permissionDescription.webapp.view[type=ToolSetView].read\": \"El usuario puede ver visualizaciones del tipo Conjunto de herramientas\",\n  \"permissionDescription.webapp.view[type=ToolSetView].edit\": \"El usuario puede ver y editar visualizaciones del tipo Conjunto de herramientas\",\n  \"permissionDescription.webapp.view[type=ToolSetView].remove\": \"El usuario puede eliminar visualizaciones del tipo Conjunto de herramientas\",\n  \"permissionDescription.svobserver.mode.read\": \"El usuario puede ver el modo actual de SVObserver en la barra de navegación superior\",\n  \"permissionDescription.svobserver.mode.edit\": \"El usuario puede ver y cambiar el modo actual de SVObserver en la barra de navegación superior\",\n  \"permissionDescription.svobserver.inspectionstate.read\": \"El usuario puede ver el estado de inspección de todas las inspecciones de la barra de navegación superior\",\n  \"permissionDescription.svobserver.inspectionstate.edit\": \"El usuario puede ver y cambiar el estado de inspección de todas las inspecciones de la barra de navegación superior y cambiar el estado en la visualización de franjas de imagen\",\n  \"permissionDescription.svobserver.value.read\": \"SVObserver comprueba si el usuario tiene permiso para ver los valores\",\n  \"permissionDescription.svobserver.value.edit\": \"SVObserver comprueba si el usuario tiene permiso para editar los valores\",\n  \"permissionDescription.svobserver.tool.add\": \"SVObserver comprueba si el usuario tiene permiso para añadir nuevas herramientas\",\n  \"permissionDescription.svobserver.tool.read\": \"SVObserver comprueba si el usuario tiene permiso para leer herramientas\",\n  \"permissionDescription.svobserver.tool.edit\": \"SVObserver comprueba si el usuario tiene permiso para editar herramientas existentes\",\n  \"permissionDescription.svobserver.tool.remove\": \"SVObserver comprueba si el usuario tiene permiso para eliminar herramientas\",\n  \"permissionDescription.svobserver.configuration.read\": \"SVObserver comprueba si el usuario tiene permiso para leer la configuración de SVObserver\",\n  \"permissionDescription.svobserver.configuration.write\": \"SVObserver comprueba si el usuario tiene permiso para guardar la configuración de SVObserver\",\n  \"permissionDescription.svobserver.notifications.subscribe\": \"SVObserver comprueba si el usuario tiene permiso para suscribirse a las notificaciones SVObserver\",\n  \"permissionDescription.svobserver.clientlogs.store\": \"SVObserver comprueba si el usuario tiene permiso para enviar registros de cliente a SVObserver\",\n  \"permissionDescription.svobserver.file.read\": \"SVObserver comprueba si el usuario tiene permiso para leer los archivos arbitrarios en la carpeta SVIM RUN\",\n  \"permissionDescription.svobserver.file.write\": \"SVObserver comprueba si el usuario tiene permiso para escribir archivos arbitrarios en la carpeta SVIM RUN\",\n  \"permissionDescription.svobserver.machinestate.set\": \"SVObserver comprueba si el usuario tiene permiso para configurar el estado de la máquina (apagar o reiniciar SVIM)\",\n  \"permissionDescription.svobserver.command.execute\": \"SVObserver comprueba si el usuario tiene permiso para ejecutar comandos\",\n  \"permissionDescription.usermanagement.userpermissions.read\": \"El usuario puede cargar permisos de grupo desde el backend/puede ver la entrada del menú para cambiar a la página de gestión de permisos/puede ver todos los permisos en la gestión de permisos\",\n  \"permissionDescription.usermanagement.userpermissions.edit\": \"El usuario puede cargar permisos de grupo desde el backend/puede ver la entrada del menú para cambiar a la página de gestión de permisos/puede ver todos los permisos en la gestión de permisos/puede editar permisos\",\n\n  // Debugger\n  \"debugger.title\": \"Depurador\",\n  \"debugger.backToWebApp\": \"Volver a WebApp\",\n  \"debugger.requestsListHeader\": \"Lista de solicitudes\",\n  \"debugger.noParametersMessage\": \"Esta solicitud no tiene parámetros\",\n  \"debugger.noItemsMessage\": \"(sin artículos)\",\n  \"debugger.nothingToConfigureMessage\": \"(no hay nada que configurar)\",\n  \"debugger.addItemButtonText\": \"Añadir\",\n  \"debugger.sendRequest\": \"Enviar consulta\",\n  \"debugger.noFilteredResultsMessage\": \"Sin resultados filtrados\",\n  \"debugger.copyToClipboard\": \"Copiar en el portapapeles\",\n\n  // Toolset\n  \"toolsetView.windowTool\": \"Herramienta de ventana\",\n  \"toolsetView.mathTool\": \"Herramienta matemática\",\n  \"toolsetView.statisticsTool\": \"Herramienta estadística\",\n  \"toolsetView.ringBufferTool\": \"Herramienta de memoria cíclica\",\n  \"toolsetView.archiveTool\": \"Herramienta de archivo\",\n  \"toolsetView.acquisitionTool\": \"Herramienta de adquisición\",\n  \"toolsetView.transformationTool\": \"Herramienta de transformación\",\n  \"toolsetView.shiftTool\": \"Herramienta de cambio\",\n  \"toolsetView.cylindricalWarpTool\": \"Herramienta de deformación cilíndrica\",\n  \"toolsetView.perspectiveTool\": \"Herramienta de perspectiva\",\n  \"toolsetView.imageTool\": \"Herramienta de imagen\",\n  \"toolsetView.linearTool\": \"Herramienta lineal\",\n  \"toolsetView.colorTool\": \"Herramienta de color\",\n  \"toolsetView.resizeTool\": \"Herramienta de cambio de tamaño\",\n  \"toolsetView.loadImageTool\": \"Herramienta de carga de imagen\",\n  \"toolsetView.tableTool\": \"Herramienta de tabla\",\n  \"toolsetView.tableAnalyzerTool\": \"Herramienta analizadora de tablas\",\n  \"toolsetView.polarTransformationTool\": \"Herramienta de transformación polar\",\n  \"toolsetView.loopTool\": \"Herramienta de bucle\",\n  \"toolsetView.externalTool\": \"Herramienta externa\",\n  \"toolsetView.groupTool\": \"Herramienta de grupo\",\n};\n\nexport default es;\n","import { FormattedMessage, IntlShape } from 'react-intl';\n\nimport de from './de';\nimport en from './en';\nimport es from './es';\n\nconst translations = {\n  de: {\n    ...de,\n  },\n  en: {\n    ...en,\n  },\n  es: {\n    ...es,\n  },\n};\n\ndeclare module 'react-intl' {\n  interface TypedIntlShape extends IntlShape {\n    messages: Record<keyof typeof en, string>;\n  }\n\n  export function useIntl(): TypedIntlShape;\n}\n\nexport const languages = [\n  {\n    locale: 'de',\n    name: <FormattedMessage id=\"topNavigation.language.german\" />,\n  },\n  {\n    locale: 'en',\n    name: <FormattedMessage id=\"topNavigation.language.english\" />,\n  },\n  {\n    locale: 'es',\n    name: <FormattedMessage id=\"topNavigation.language.spanish\" />,\n  },\n];\n\nexport default translations;\n","class Observer {\n  constructor(observable) {\n    this.closed = false;\n    this.observable = observable;\n  }\n\n  next(v) {\n    return this.observable.onNext(v);\n  }\n\n  error(err) {\n    return this.observable.onError(err);\n  }\n\n  complete() {\n    return this.observable.onComplete();\n  }\n}\n\nexport class Observable {\n  static create(onSubscribe) {\n    return new Observable(onSubscribe);\n  }\n\n  constructor(onSubscribe) {\n    this._onSubscribe = onSubscribe;\n    this._next = () => void 0;\n    this._error = () => void 0;\n    this._complete = () => void 0;\n  }\n\n  subscribe(desc) {\n    if (typeof desc.next === 'function') {\n      this._next = desc.next;\n    }\n    if (typeof desc.error === 'function') {\n      this._error = desc.error;\n    }\n    if (typeof desc.complete === 'function') {\n      this._complete = desc.complete;\n    }\n    const observer = new Observer(this);\n    // TODO use of tearDownCb\n    const tearDownCb = this._onSubscribe(observer);\n    return {\n      unsubscribe: () => {\n        if (typeof tearDownCb === 'function') {\n          tearDownCb();\n        }\n        // TODO support multiple subscriber?\n        this._next = () => void 0;\n        this._error = () => void 0;\n        this._complete = () => void 0;\n      },\n    };\n  }\n\n  onNext(v) {\n    return this._next(v);\n  }\n\n  onError(err) {\n    return this._error(err);\n  }\n\n  onComplete() {\n    return this._complete();\n  }\n}\n","import ProtoJs from 'protobufjs';\nimport logger from '../utils/logger';\nimport { Observable } from './Observable';\n\nexport default class Protobuf {\n  // will be initialized with Protobuf.init()\n  static SvPenv = {};\n  /** @type {lookup: Function} */\n  static SvPb = {};\n  static nextTxId = 0;\n  static nextStreamId = 0;\n  static initialized = false;\n\n  static async init() {\n    Protobuf.SvPenv = await Protobuf.loadProto('/res/proto/Envelope.proto', 'SvPenv');\n    Protobuf.SvPb = await Protobuf.loadProto('/res/proto/SVRC.proto', 'SvPb');\n    Protobuf.SvAuth = await Protobuf.loadProto('/res/proto/SVRC.proto', 'SvAuth');\n    Protobuf.initialized = true;\n  }\n\n  static async loadProto(path, namespace) {\n    const root = await ProtoJs.load(path);\n    return root.lookup(namespace);\n  }\n\n  constructor() {\n    this.pendingRequests = new Map();\n    this.openStreams = new Map();\n    this.socket = null;\n  }\n\n  isConnected() {\n    return !!this.socket;\n  }\n\n  onConnect(socket) {\n    const prevSocket = this.socket;\n    this.socket = socket;\n    if (prevSocket !== socket) {\n      this.cancelAllPendingRequests(new Error('Connection changed'));\n    }\n  }\n\n  async readMessage(data) {\n    const env = await Protobuf.SvPenv.Envelope.decode(new Uint8Array(data));\n\n    switch (env.type) {\n      case Protobuf.SvPenv.MessageType.response:\n        this.onResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.errorResponse:\n        this.onErrorResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamResponse:\n        this.onStreamResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamErrorResponse:\n        this.onStreamErrorResponse(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamFinish:\n        this.onStreamFinish(env);\n        break;\n      case Protobuf.SvPenv.MessageType.streamCancel:\n        this.onStreamCancel(env);\n        break;\n      default:\n        logger.error({ type: env.type }, 'Received message with unexpected type');\n    }\n  }\n\n  onResponse(env) {\n    const txId = env.transactionId;\n    const hdl = this.pendingRequests.get(txId);\n    if (!hdl) {\n      logger.error({ txId }, 'Received response for unknown transaction id');\n      return;\n    }\n    const res = this.unwrapResponse(env);\n    this.pendingRequests.delete(txId);\n    if (hdl.handled) {\n      return;\n    }\n\n    clearTimeout(hdl.timeout);\n    hdl.resolve(res);\n  }\n\n  onErrorResponse(env) {\n    const txId = env.transactionId;\n    const err = this.unwrapErrorResponse(env);\n    return this.onErrorResponseImpl(txId, err);\n  }\n\n  onErrorResponseImpl(txId, err) {\n    const hdl = this.pendingRequests.get(txId);\n    if (!hdl) {\n      logger.error({ txId }, 'Received response for unknown transaction id');\n      return;\n    }\n\n    this.pendingRequests.delete(txId);\n    if (hdl.handled) {\n      return;\n    }\n\n    clearTimeout(hdl.timeout);\n    hdl.reject(err);\n  }\n\n  cancelAllPendingRequests(err) {\n    for (let txId of this.pendingRequests.keys()) {\n      this.onErrorResponseImpl(txId, err);\n    }\n  }\n\n  onRequestTimeout(txId) {\n    const hdl = this.pendingRequests.get(txId);\n    if (!hdl) {\n      logger.error({ txId }, 'Received response for unknown transaction id');\n      return;\n    }\n\n    hdl.handled = true;\n    hdl.reject(new Error('Request timed out'));\n  }\n\n  async onStreamResponse(env) {\n    const streamId = env.transactionId;\n    const hdl = this.openStreams.get(streamId);\n    if (!hdl) {\n      logger.info({ streamId }, 'Received update for unknown stream id');\n      return;\n    }\n    const res = this.unwrapResponse(env);\n    await hdl.observer.next(res);\n    this.ackStreamResponse(env);\n  }\n\n  onStreamErrorResponse(env) {\n    const streamId = env.transactionId;\n    const hdl = this.openStreams.get(streamId);\n    if (!hdl) {\n      logger.error({ streamId }, 'Received error for unknown stream id');\n      return;\n    }\n    const err = this.unwrapErrorResponse(env);\n    this.openStreams.delete(streamId);\n    hdl.observer.error(err);\n  }\n\n  onStreamFinish(env) {\n    const streamId = env.transactionId;\n    const hdl = this.openStreams.get(streamId);\n    if (!hdl) {\n      logger.error({ streamId }, 'Received finish for unknown stream id');\n      return;\n    }\n\n    this.openStreams.delete(streamId);\n    hdl.observer.complete();\n  }\n\n  onStreamCancel() {\n    // ignore cancel envelopes. they should\n    // be sent from client to server only.\n  }\n\n  request(req) {\n    return new Promise((resolve, reject) => {\n      if (!this.socket) {\n        return reject(new Error('No socket available'));\n      }\n      Protobuf.nextTxId += 1;\n      const txId = Protobuf.nextTxId;\n      const env = this.wrapMessage(req, txId, Protobuf.SvPenv.MessageType.request);\n      const buf = this.serializeEnvelope(env);\n      const timeout = setTimeout(this.onRequestTimeout.bind(this, txId), 60 * 1000);\n      this.pendingRequests.set(txId, { resolve, reject, timeout });\n      this.socket.send(buf);\n    });\n  }\n\n  stream(req) {\n    return Observable.create((observer) => {\n      if (!this.socket) {\n        return observer.error(new Error('No socket available'));\n      }\n      Protobuf.nextStreamId += 1;\n      const streamId = Protobuf.nextStreamId;\n      const env = this.wrapMessage(req, streamId, Protobuf.SvPenv.MessageType.streamRequest);\n      const buf = this.serializeEnvelope(env);\n      this.openStreams.set(streamId, { observer });\n      this.socket.send(buf);\n\n      return () => {\n        this.openStreams.delete(streamId);\n        this.cancelStream(streamId);\n      };\n    });\n  }\n\n  cancelStream(transactionId) {\n    if (!this.socket) {\n      return;\n    }\n    const type = Protobuf.SvPenv.MessageType.streamCancel;\n    const params = { transactionId, type };\n    const env = Protobuf.SvPenv.Envelope.fromObject(params);\n    const buf = this.serializeEnvelope(env);\n    this.socket.send(buf);\n  }\n\n  ackStreamResponse(env) {\n    const ackEnv = Protobuf.SvPenv.Envelope.fromObject({\n      transactionId: env.transactionId,\n      sequenceNumber: env.sequenceNumber,\n      type: Protobuf.SvPenv.MessageType.streamAck,\n    });\n    const buf = this.serializeEnvelope(ackEnv);\n    this.socket.send(buf);\n  }\n\n  wrapMessage(req, transactionId, type = Protobuf.SvPenv.MessageType.request) {\n    const message = this.wrapOneOf(req);\n    const envelope = Protobuf.SvPenv.Envelope.fromObject({\n      payloadType: this.getPayloadTypeForOneOfMessage(message),\n      payload: this.packToAny(message),\n      transactionId,\n      type,\n    });\n    return envelope;\n  }\n\n  // NOTE: ignoring payload_type as we want to unpack anyways\n  //       so no need to dispatch the message before unpacking\n  unwrapResponse(env) {\n    const message = this.unpackFromAny(env.payload);\n    const res = this.unwrapOneOf(message);\n    return res;\n  }\n\n  unwrapErrorResponse(env) {\n    const error = new Error(env.error.message);\n    error.code = env.error.errorCode;\n\n    if (env.error.payload) {\n      const payload = this.unpackFromAny(env.error.payload);\n      error.payload = payload;\n    }\n    return error;\n  }\n\n  wrapOneOf(req) {\n    const fieldName = this.getFieldNameForSVRCMessage(req);\n    return Protobuf.SvPb.SVRCMessages.create({ [fieldName]: req });\n  }\n\n  unwrapOneOf(message) {\n    return message[message.message];\n  }\n\n  // by convention, the field name of the SVRCMessages oneof is\n  // equal to the type name, except that first letter is lower-case.\n  getFieldNameForSVRCMessage(message) {\n    const name = message.$type.name;\n    return name.substr(0, 1).toLowerCase() + name.substr(1);\n  }\n\n  getPayloadTypeForOneOfMessage(message) {\n    const fieldName = message.message;\n    const type = message.$type.fields[fieldName];\n    return type.id;\n  }\n\n  packToAny(message) {\n    const type = message.$type;\n    const typeName = type.fullName.slice(1); // remove leading dot\n    // the c++ protobuf library uses this as the default prefix\n    const typeUrlPrefix = 'type.googleapis.com';\n    const encoded = type.encode(message).finish();\n    return {\n      type_url: `${typeUrlPrefix}/${typeName}`,\n      value: encoded,\n    };\n  }\n\n  unpackFromAny(any) {\n    let typeName = any.type_url;\n    const slashIdx = typeName.indexOf('/');\n    if (slashIdx !== -1) {\n      typeName = typeName.slice(slashIdx + 1);\n    }\n    const type = Protobuf.SvPb.lookup(typeName);\n    if (!type) {\n      logger.error({ type: any.type_url }, 'Received message with unknown payload type');\n      return;\n    }\n    return type.decode(any.value);\n  }\n\n  serializeEnvelope(envelope) {\n    const buf = Protobuf.SvPenv.Envelope.encode(envelope).finish();\n    const raw = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n    return raw;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/delete.85c719f0.svg\";","export default __webpack_public_path__ + \"static/media/back.c6197e51.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nclass ModalNotification extends Component {\n  render() {\n    const { visible, message } = this.props;\n    if (!visible) {\n      return false;\n    }\n\n    return (\n      <div className=\"modal-fullscreen-style\">\n        <div className=\"modal-fullscreen-inner\">{message}</div>\n      </div>\n    );\n  }\n}\n\nModalNotification.defaultProps = {\n  visible: false,\n  message: undefined,\n};\n\nModalNotification.propTypes = {\n  visible: PropTypes.bool,\n  message: PropTypes.object,\n};\n\nexport default ModalNotification;\n","import React, { useRef, useEffect } from 'react';\nimport { Paper } from '@material-ui/core';\n\nimport './style.scss';\n\nconst usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nlet selectedItem = 0;\n\nconst SuggestionList = ({ items, onSelect, show, currentKey, filter, onCancel }) => {\n  const prevFilter = usePrevious(filter);\n\n  if (!show) {\n    return <div></div>;\n  }\n\n  if (filter !== prevFilter) {\n    selectedItem = 0;\n  }\n\n  const consumeChars = (str, chars, positions) => {\n    str = str.toLowerCase();\n    let prevIdx = 0;\n    while (chars.length) {\n      const idx = str.indexOf(chars[0], prevIdx);\n      if (idx === -1) {\n        break;\n      }\n      positions.push(idx);\n      chars = chars.slice(1);\n      prevIdx = idx + 1;\n    }\n    return chars;\n  };\n\n  const highlightAtPositions = (word, positions) => {\n    let result = [];\n    for (let i = 0; i < word.length; i++) {\n      if (positions.includes(i)) {\n        result.push([\n          <span className=\"filteredText\" key={`suggestionlist_highlight_span_${word}_${i}`}>\n            {word.charAt(i)}\n          </span>,\n        ]);\n      } else {\n        result.push([word.charAt(i)]);\n      }\n    }\n    return <div key={`suggestionlist_highlight_div_${word}`}>{result}</div>;\n  };\n\n  const filteredItems = [];\n  (items || []).forEach((item) => {\n    const pos = [];\n    const remainingChars = consumeChars(item, filter.toLowerCase().split(''), pos);\n\n    if (remainingChars.length === 0) {\n      filteredItems.push({\n        text: item,\n        textWithHighlight: highlightAtPositions(item, pos),\n      });\n    }\n  });\n\n  if (filteredItems.length === 0) {\n    return <div></div>;\n  }\n\n  if (currentKey.currentKey === 'ArrowUp' && selectedItem > 0) {\n    selectedItem--;\n  }\n\n  if (currentKey.currentKey === 'ArrowDown' && selectedItem < filteredItems.length - 1) {\n    selectedItem++;\n  }\n\n  const menuitems = [];\n  let currentText = '';\n  (filteredItems || []).forEach((item, idx) => {\n    const isSelected = selectedItem === idx;\n    if (isSelected) {\n      currentText = item.text;\n    }\n\n    menuitems.push(\n      <li\n        key={`suggestionlist_li_${item.text}`}\n        onClick={() => onSelect(item.text)}\n        className={isSelected ? 'suggestionlist-selected' : ''}\n      >\n        {item.textWithHighlight}\n      </li>,\n    );\n  });\n\n  if (currentKey.currentKey === 'Enter') {\n    onSelect(currentText);\n  }\n\n  if (currentKey.currentKey === 'Escape') {\n    onCancel();\n  }\n\n  return (\n    <Paper\n      className=\"suggestionlist-wrapper\"\n      style={show ? { display: 'block' } : { display: 'none' }}\n    >\n      <ul className=\"suggestionlist-list\">{menuitems}</ul>\n    </Paper>\n  );\n};\n\nexport default SuggestionList;\n","import React, { useState, useRef } from 'react';\nimport { TextField } from '@material-ui/core';\n\nimport SuggestionList from '../SuggestionList';\n\nconst Autocomplete = ({ label, fullWidth, value, onChange, variant, size, suggestionList }) => {\n  const inputRef = useRef();\n  const [show, setShow] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [currentKey, setCurrentKey] = useState();\n\n  const getFilterText = (value, position) => {\n    let filterText = '';\n    let currentPosition = position - 1;\n\n    while (currentPosition >= 0 && !filterText.startsWith('$')) {\n      if (value.charAt(currentPosition) === ' ') {\n        return '';\n      }\n\n      filterText = value.charAt(currentPosition) + filterText;\n      currentPosition--;\n    }\n\n    if (!filterText.startsWith('$')) {\n      filterText = '';\n    }\n\n    return filterText;\n  };\n\n  const onChangeAutocompleteText = (event) => {\n    const filterText = getFilterText(event.target.value, inputRef.current.selectionEnd);\n    setFilter(filterText);\n    setShow(filterText.length > 0);\n    onChange(event.target.value);\n  };\n\n  const cancelSuggestionList = () => {\n    setShow(false);\n  };\n\n  const onSelectSuggestion = (name) => {\n    setShow(false);\n    onChange(\n      `${value.slice(0, inputRef.current.selectionEnd - filter.length)}${name}${value.slice(\n        inputRef.current.selectionEnd,\n        value.length,\n      )}`,\n    );\n  };\n\n  const onKeyDown = (event) => {\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n    }\n    setCurrentKey({ currentKey: event.key });\n  };\n\n  return (\n    <div className=\"autocomplete-wrapper\">\n      <TextField\n        inputRef={inputRef}\n        label={label}\n        fullWidth={fullWidth}\n        value={value}\n        onChange={(e) => onChangeAutocompleteText(e)}\n        onKeyDown={(e) => onKeyDown(e)}\n        variant={variant}\n        size={size}\n        inputProps={{\n          style: {\n            height: 37,\n          },\n        }}\n      />\n      <SuggestionList\n        show={show}\n        currentKey={currentKey}\n        filter={filter}\n        items={suggestionList}\n        onSelect={(name) => onSelectSuggestion(name)}\n        onCancel={() => cancelSuggestionList()}\n      />\n    </div>\n  );\n};\n\nexport default Autocomplete;\n","import Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\ninterface AlertDialogProps {\n  open: boolean;\n  title: React.ReactNode;\n  contentText: React.ReactNode;\n}\n\nexport const AlertDialog: React.FC<React.PropsWithChildren<AlertDialogProps>> = ({\n  open,\n  title,\n  contentText,\n  children,\n}) => {\n  return (\n    <Dialog\n      open={open}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      disableEscapeKeyDown={true}\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">{contentText}</DialogContentText>\n      </DialogContent>\n      <DialogActions>{children}</DialogActions>\n    </Dialog>\n  );\n};\n","import React, { ReactNode, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport infoIcon from '../../../../assets/icons/info.svg';\nimport { AlertDialog } from '../../../../views/TopNavigation/navigation/AlertDialog';\nimport IconButton from '../../../buttons/IconButton';\n\nexport interface InformationBoxProps {\n  onClose?: () => void;\n  open?: boolean;\n  informationText: string | ReactNode;\n  title?: string;\n}\n\nconst InformationBox: React.FC<InformationBoxProps> = ({\n  onClose,\n  informationText,\n  open,\n  title,\n}) => {\n  const [showingInfo, setShowingInfo] = useState(open || false);\n  return (\n    <>\n      <div>\n        <IconButton\n          tooltip=\"Show information\"\n          onClick={() => {\n            setShowingInfo(true);\n          }}\n          iconUrl={infoIcon}\n        />\n      </div>\n      <AlertDialog open={showingInfo} contentText={informationText} title={title}>\n        <Button\n          onClick={() => {\n            setShowingInfo(false);\n            onClose && onClose();\n          }}\n          color=\"primary\"\n        >\n          <FormattedMessage id=\"close\" />\n        </Button>\n      </AlertDialog>\n    </>\n  );\n};\n\nexport default InformationBox;\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport deleteIcon from '../../../../assets/icons/delete.svg';\nimport AutoComplete from '../../../AutoComplete';\nimport ObjectSelector from '../../../ObjectSelector';\nimport { OutlinedSelection } from '../../../OutlinedSelection';\nimport IconButton from '../../../buttons/IconButton';\nimport InformationBox from '../InformationBox';\n\nconst DEFAULT_SAMPLING_RATE = 0.1;\nconst MAX_SAMPLING_RATE = 1.0;\nexport const treeEntityNameGenerator = (searchedNodeId, tree, inspectionName) => {\n  const queue = (tree && tree.children && tree.children.slice(0)) || [];\n  while (queue.length > 0) {\n    const head = queue.shift();\n    const { id, location, children } = head;\n    if (id && searchedNodeId === id.toString()) {\n      return 'Inspections.' + inspectionName + '.' + location;\n    }\n    if (children && children.length) {\n      for (let i = 0; i < children.length; ++i) {\n        queue.push(children[i]);\n      }\n    }\n  }\n};\n\nconst ImageForm = ({\n  id,\n  object,\n  propertyName,\n  allowedImageVariables,\n  allowedPathVariables,\n  onDelete,\n  inspection,\n  informationText = <></>,\n  treeStyle = {},\n}) => {\n  const [treeNodeId, setTreeNodeId] = useState(object[propertyName].treeNodeId || 0);\n  const [path, setPath] = useState(object[propertyName].path || '');\n  const [samplingRate, setSamplingRate] = useState(\n    object[propertyName].samplingRate || DEFAULT_SAMPLING_RATE,\n  );\n  const [enabled, setEnabled] = useState(\n    (typeof object[propertyName] === 'object' && object[propertyName].enabled) || true,\n  );\n\n  return (\n    <div className=\"field-name-type\">\n      <div className=\"item\">\n        <div className=\"property-id\">{id}</div>\n      </div>\n      <div className=\"inputs\">\n        <div className=\"field-name-type\">\n          <Box sx={{ mr: 1 }}>\n            {allowedImageVariables && (\n              <ObjectSelector\n                singleSelect\n                selection={[treeNodeId]}\n                expandedKeys={[treeNodeId]}\n                data={allowedImageVariables}\n                onChange={(selectedId) => {\n                  // keep id of this node in JSON to find it easily when we load this JSON back\n                  object[propertyName].treeNodeId = selectedId;\n                  const fullLocation = treeEntityNameGenerator(\n                    selectedId,\n                    allowedImageVariables,\n                    inspection,\n                  );\n                  object[propertyName].image = '${IMAGE:' + fullLocation + '}';\n                  setTreeNodeId(selectedId);\n                }}\n                treeStyle={treeStyle}\n              />\n            )}\n          </Box>\n          <Box sx={{ mr: 1 }}>\n            <AutoComplete\n              label=\"Path\"\n              fullWidth\n              value={path}\n              onChange={(value) => {\n                setPath(value);\n                object[propertyName].value = value;\n              }}\n              variant=\"outlined\"\n              size=\"small\"\n              suggestionList={allowedPathVariables}\n            />\n          </Box>\n          <Box sx={{ mr: 1 }}>\n            <OutlinedSelection\n              selectedValue={enabled.toString()}\n              values={['true', 'false']}\n              onSelectionChanged={(e) => setEnabled(e.enabled === 'true')}\n              id=\"enabled\"\n              name=\"Enabled\"\n            />\n          </Box>\n          <Box>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              label=\"Sampling rate\"\n              InputProps={{\n                inputProps: {\n                  type: 'number',\n                  min: 0.1,\n                  max: MAX_SAMPLING_RATE,\n                  step: 0.1,\n                },\n                style: {\n                  height: 29,\n                },\n              }}\n              className=\"item\"\n              type=\"number\"\n              required={true}\n              value={samplingRate || DEFAULT_SAMPLING_RATE}\n              onChange={(e) => setSamplingRate(e.target.value)}\n              onBlur={(e) => (object[propertyName].value = e.target.value)}\n            />\n          </Box>\n          <div>\n            <IconButton tooltip=\"Add property\" onClick={() => onDelete()} iconUrl={deleteIcon} />\n          </div>\n          {informationText && <InformationBox informationText={informationText} />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageForm;\n","import React, { useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport addIcon from '../../../../assets/icons/plus.svg';\nimport { OutlinedSelection } from '../../../OutlinedSelection';\nimport IconButton from '../../../buttons/IconButton';\nimport ImageForm from '../ImageForm';\nimport PropertyForm from '../PropertyForm';\n\nexport const COMPONENT_TYPE_TREE = 'tree';\nexport const COMPONENT_TYPE_AUTOCOMPLETE = 'autocomplete';\n\nconst fieldsForTreeForValueSelection = [\n  'data1',\n  'data2',\n  'data3',\n  'data4',\n  'data5',\n  'data6',\n  'data7',\n  'data8',\n  'data9',\n  'data10',\n  'data11',\n  'data12',\n  'data13',\n  'data14',\n  'data15',\n  'data16',\n  'data17',\n  'data18',\n  'data19',\n];\nconst triggerPropertiesRequiresName = [\n  ...fieldsForTreeForValueSelection,\n  ...['image1', 'image2', 'image3', 'image4'],\n];\nconst triggerProperties = [\n  ...['', 'storeCondition', 'revolution'],\n  ...triggerPropertiesRequiresName,\n];\n\nconst informationToFieldsMap = {};\n\ntriggerProperties.forEach((key) => {\n  informationToFieldsMap[key] = (\n    <>\n      <Typography gutterBottom>\n        Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n        egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n      </Typography>\n      <Typography gutterBottom>\n        Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus\n        vel augue laoreet rutrum faucibus dolor auctor.\n      </Typography>\n      <Typography gutterBottom>\n        Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n        scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n        auctor fringilla.\n      </Typography>\n    </>\n  );\n});\n\nconst TriggerSettings = ({\n  subscription,\n  allowedVariables,\n  allowedAutoCompleteVariables,\n  allowedImageVariables,\n  allowedImagePathVariables,\n}) => {\n  const [newTriggerProperty, setNewTriggerProperty] = useState('');\n  const [update, setUpdate] = useState(false);\n\n  const addNewTriggerProperty = (subscription) => {\n    if (!subscription.trigger || newTriggerProperty === '') {\n      subscription.trigger = {};\n    }\n\n    subscription.trigger[newTriggerProperty] = { name: '', value: '', enabled: true };\n    setNewTriggerProperty('');\n  };\n\n  const { trigger, inspection } = subscription;\n  const triggerResult = [];\n\n  const deleteProperty = (key) => {\n    delete trigger[key];\n    setUpdate(!update);\n  };\n\n  const remainingTriggerProperties = triggerProperties.filter(\n    (x) => !Object.keys(trigger).includes(x),\n  );\n\n  Object.keys(trigger).forEach((key) => {\n    if (key.startsWith('image')) {\n      triggerResult.push(\n        <ImageForm\n          key={`trigger_${inspection}_${key}`}\n          inspection={inspection}\n          id={key}\n          object={trigger}\n          propertyName={key}\n          allowedImageVariables={allowedImageVariables}\n          allowedVariables={allowedImagePathVariables}\n          onDelete={() => deleteProperty(key)}\n          informationText={informationToFieldsMap[key]}\n          treeStyle={{ overflow: 'scroll', height: '250px' }}\n        />,\n      );\n    } else {\n      triggerResult.push(\n        <PropertyForm\n          inspection={inspection}\n          key={`trigger_${inspection}_${key}`}\n          informationText={informationToFieldsMap[key]}\n          id={key}\n          object={trigger}\n          propertyName={key}\n          allowedVariables={\n            fieldsForTreeForValueSelection.includes(key)\n              ? allowedVariables\n              : allowedAutoCompleteVariables\n          }\n          onDelete={() => deleteProperty(key)}\n          excludedFields={!triggerPropertiesRequiresName.includes(key) ? ['name'] : []}\n          valueFieldType={\n            fieldsForTreeForValueSelection.includes(key)\n              ? COMPONENT_TYPE_TREE\n              : COMPONENT_TYPE_AUTOCOMPLETE\n          }\n        />,\n      );\n    }\n  });\n\n  return (\n    <div className=\"properties content\">\n      {triggerResult}\n      <div className=\"field-name-type\">\n        <div className=\"item\">Add new property:</div>\n        <div className=\"inputs\">\n          <div className=\"field-name-type\">\n            <div style={{ width: '200px', padding: '5px 0' }}>\n              <OutlinedSelection\n                selectedValue={newTriggerProperty}\n                values={remainingTriggerProperties}\n                onSelectionChanged={(e) => setNewTriggerProperty(e.addtriggerProp)}\n                name=\"Property\"\n                id=\"addtriggerProp\"\n              />\n            </div>\n            <div className=\"item\" style={{ margin: 'auto' }}>\n              <IconButton\n                tooltip=\"Add property\"\n                onClick={() => addNewTriggerProperty(subscription)}\n                iconUrl={addIcon}\n                style={{ margin: '0' }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TriggerSettings;\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport deleteIcon from '../../../../assets/icons/delete.svg';\nimport AutoComplete from '../../../AutoComplete';\nimport ObjectSelector from '../../../ObjectSelector';\nimport { OutlinedSelection } from '../../../OutlinedSelection';\nimport IconButton from '../../../buttons/IconButton';\nimport { treeEntityNameGenerator } from '../ImageForm';\nimport InformationBox from '../InformationBox';\nimport { COMPONENT_TYPE_AUTOCOMPLETE } from '../TriggerSettings';\n\nconst PropertyForm = ({\n  id,\n  object,\n  propertyName,\n  allowedVariables,\n  onDelete,\n  inspection,\n  excludedFields = [],\n  valueFieldType = COMPONENT_TYPE_AUTOCOMPLETE,\n  informationText = <></>,\n}) => {\n  const [treeNodeId, setTreeNodeId] = useState(object[propertyName].treeNodeId || 0);\n\n  const [name, setName] = useState(\n    typeof object[propertyName] === 'object' ? object[propertyName].name : '',\n  );\n  const [value, setValue] = useState(\n    typeof object[propertyName] === 'object' ? object[propertyName].value : object[propertyName],\n  );\n  const [enabled, setEnabled] = useState(\n    (typeof object[propertyName] === 'object' && object[propertyName].enabled) || true,\n  );\n\n  const getPropertyInputs = () => {\n    return (\n      <div className=\"field-name-type\">\n        <Box sx={{ mr: 1 }}>\n          {!excludedFields.includes('name') && (\n            <AutoComplete\n              label=\"Name\"\n              fullWidth\n              value={name}\n              onChange={(value) => {\n                setName(value);\n                object[propertyName].name = value;\n              }}\n              variant=\"outlined\"\n              size=\"small\"\n              className=\"item\"\n              suggestionList={allowedVariables}\n            />\n          )}\n        </Box>\n        <Box sx={{ mr: 1 }}>\n          {!excludedFields.includes('value') &&\n            allowedVariables &&\n            (valueFieldType === COMPONENT_TYPE_AUTOCOMPLETE ? (\n              <AutoComplete\n                label=\"Value\"\n                fullWidth\n                value={value}\n                onChange={(value) => {\n                  setValue(value);\n                  object[propertyName].value = value;\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n                className=\"item\"\n                suggestionList={allowedVariables}\n              />\n            ) : (\n              ('node' in allowedVariables || 'children' in allowedVariables) && (\n                <ObjectSelector\n                  singleSelect\n                  selection={[treeNodeId]}\n                  expandedKeys={[treeNodeId]}\n                  data={allowedVariables}\n                  onChange={(selectedId) => {\n                    object[propertyName].treeNodeId = selectedId;\n                    const fullLocation = treeEntityNameGenerator(\n                      selectedId,\n                      allowedVariables,\n                      inspection,\n                    );\n                    object[propertyName].value = '${VALUE:' + fullLocation + '}';\n                    setTreeNodeId(selectedId);\n                  }}\n                  treeStyle={{ overflow: 'scroll', height: '250px' }}\n                />\n              )\n            ))}\n        </Box>\n        {!excludedFields.includes('enabled') && (\n          <div>\n            <OutlinedSelection\n              name=\"Enabled\"\n              selectedValue={enabled.toString()}\n              values={['true', 'false']}\n              onSelectionChanged={(e) => {\n                setEnabled(e.enabled === 'true');\n                object[propertyName].enabled = e.enabled === 'true';\n              }}\n              id=\"enabled\"\n            />\n          </div>\n        )}\n        <div>\n          <IconButton tooltip=\"Add property\" onClick={() => onDelete()} iconUrl={deleteIcon} />\n        </div>\n        {informationText && <InformationBox informationText={informationText} />}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"field-name-type\">\n      <div className=\"item\">\n        <div className=\"property-id\">{id}</div>\n      </div>\n      <div className=\"inputs\">{getPropertyInputs(object[propertyName])}</div>\n    </div>\n  );\n};\n\nexport default PropertyForm;\n","import React, { useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport addIcon from '../../../../assets/icons/plus.svg';\nimport { OutlinedSelection } from '../../../OutlinedSelection';\nimport IconButton from '../../../buttons/IconButton';\nimport PropertyForm from '../PropertyForm';\n\nconst batchPropertiesRequiresName = [\n  'data1',\n  'data2',\n  'data3',\n  'data4',\n  'vdata1',\n  'vdata2',\n  'vdata3',\n  'vdata4',\n  'vdata5',\n  'vdata6',\n  'vdata7',\n  'vdata8',\n  'vdata9',\n  'vdata10',\n];\n\nconst batchProperties = [\n  ...[\n    '',\n    'batch_inspectionid',\n    'timestamp',\n    'svimname',\n    'inspectionname',\n    'batchid',\n    'batchname',\n    'batchstart',\n    'comment',\n    'username',\n    'machinenum',\n    'machinetype',\n    'sectionid',\n    'sectionname',\n    'sectioncomment',\n    'productionspeed',\n    'headerid',\n  ],\n  ...batchPropertiesRequiresName,\n];\n\nconst informationToFieldsMap = {};\n\nbatchProperties.forEach((key) => {\n  informationToFieldsMap[key] = (\n    <>\n      <Typography gutterBottom>\n        Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n        egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n      </Typography>\n      <Typography gutterBottom>\n        Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus\n        vel augue laoreet rutrum faucibus dolor auctor.\n      </Typography>\n      <Typography gutterBottom>\n        Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n        scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n        auctor fringilla.\n      </Typography>\n    </>\n  );\n});\nconst BatchSettings = ({ subscription, allowedVariables }) => {\n  const [newBatchProperty, setNewBatchProperty] = useState('');\n  const [update, setUpdate] = useState(false);\n\n  const addNewBatchProperty = (subscription) => {\n    if (!subscription.batch || newBatchProperty === '') {\n      subscription.batch = {};\n    }\n\n    subscription.batch[newBatchProperty] = { name: '', value: '', enabled: true };\n    setNewBatchProperty('');\n  };\n\n  const { batch, inspection } = subscription;\n  const batchResult = [];\n\n  Object.keys(batch).map((key) => {\n    if (typeof batch[key] === 'string') {\n      batch[key] = {\n        name: '',\n        value: batch[key],\n        enabled: true,\n      };\n    }\n    return batch[key];\n  });\n\n  const remainingBatchProperties = batchProperties.filter((x) => !Object.keys(batch).includes(x));\n\n  Object.keys(batch).forEach((key) => {\n    batchResult.push(\n      <PropertyForm\n        key={`batch_${inspection}_${key}`}\n        id={key}\n        object={batch}\n        propertyName={key}\n        allowedVariables={allowedVariables}\n        excludedFields={!batchPropertiesRequiresName.includes(key) ? ['name'] : []}\n        onDelete={() => {\n          delete batch[key];\n          setUpdate(!update);\n        }}\n        informationText={informationToFieldsMap[key]}\n      />,\n    );\n  });\n\n  return (\n    <div className=\"properties content\">\n      {batchResult}\n      <div className=\"field-name-type\">\n        <div className=\"item\">Add new property:</div>\n        <div className=\"inputs\">\n          <div className=\"field-name-type\">\n            <div style={{ width: '200px', padding: '5px 0' }}>\n              <OutlinedSelection\n                selectedValue={newBatchProperty}\n                values={remainingBatchProperties}\n                onSelectionChanged={(e) => setNewBatchProperty(e.addbatchProp)}\n                name=\"Property\"\n                id=\"addbatchProp\"\n              />\n            </div>\n            <div style={{ margin: 'auto 0' }}>\n              <IconButton\n                tooltip=\"Add property\"\n                onClick={() => addNewBatchProperty(subscription)}\n                iconUrl={addIcon}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BatchSettings;\n","import React, { ReactNode, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport deleteIcon from '../../assets/icons/delete.svg';\nimport { saveDatabaseGatewayConfiguration } from '../../redux/actions';\nimport { SvPb } from '../../types/protobuf';\nimport ModalNotification from '../ModalNotification.js';\nimport { OutlinedSelection } from '../OutlinedSelection';\nimport IconButton from '../buttons/IconButton';\nimport BatchSettings from './components/BatchSettings';\nimport TriggerSettings from './components/TriggerSettings';\n\nimport './style.scss';\n\nexport interface AppConfiguration {\n  globalConstants: Record<string, any>;\n  inspectionSubscriptions: Array<InspectionSubscriptionConfig>;\n  inspections: Array<Inspection>;\n  objectSelectorItems: Map<Inspection['id'], SvPb.GetObjectSelectorItemsResponse>;\n  idNameMappings: Map<Inspection['id'], { fullLocation: string }>;\n  filterArrayValuesFromTree: <T>(val: T) => T;\n  getObjectSelectorImagesForInspection: <T>(inspectionId: Inspection['id']) => T;\n}\n\nexport interface Inspection {\n  name: string;\n  id: number;\n}\n\nexport interface RootState {\n  app: {\n    databaseGatewayConfig: DatabaseGatewayConfig;\n    configuration: AppConfiguration;\n    protobuf: Record<string, unknown>;\n  };\n}\n\nexport interface DatabaseGatewayConfig {\n  inspectionSubscriptions: Array<InspectionSubscriptionConfig>;\n}\n\nexport interface InspectionSubscriptionConfig {\n  url?: string;\n  inspection: string;\n  batch: Partial<BatchConfig>;\n  trigger: Partial<TriggerConfig>;\n}\n\nexport interface BatchConfig extends DataTriggerConfig {\n  comment: string;\n  batchname: string;\n  inspectionname: string;\n  sectionid: string;\n  productionspeed: string;\n  timestamp: string;\n  headerid: number;\n}\n\ninterface DataAttributes {\n  enabled: boolean;\n  name: string;\n  value: string;\n}\n\ntype ResultNames = 'result1' | 'result2' | 'result3';\ntype ImageNames = 'image1' | 'image2' | 'image3' | 'image4';\ntype DataNames =\n  | 'data1'\n  | 'data2'\n  | 'data3'\n  | 'data4'\n  | 'data5'\n  | 'data6'\n  | 'data7'\n  | 'data8'\n  | 'data9'\n  | 'data10'\n  | 'data11'\n  | 'data12'\n  | 'data13'\n  | 'data14'\n  | 'data15'\n  | 'data16'\n  | 'data17'\n  | 'data18'\n  | 'data19';\n\ntype DataTriggerConfig = Partial<Record<DataNames, DataAttributes>>;\ntype ImageTriggerConfig = Partial<Record<ImageNames, TriggerImageConfig>>;\ntype ResultTriggerConfig = Partial<Record<ResultNames, DataAttributes>>;\ntype DataImageTriggerConfig = DataTriggerConfig & ImageTriggerConfig & ResultTriggerConfig;\n\nexport interface TriggerConfig extends DataImageTriggerConfig {\n  storeCondition: string;\n  revolution: string;\n}\n\nexport interface TriggerImageConfig {\n  enabled: boolean;\n  samplingRate: number; //  0.10\n  image: string; // \"${IMAGE:Inspections.C11 Fingergrip.Tool Set.Image}\"\n  path: string; // \"${CONSTANT:Global.Product Name}/${DATE:YYYY-MM-DD}/${CONSTANT:Global.Batch Name}/Reject-${VALUE:Inspections.C11 Fingergrip.Tool Set.1010 M reject condition.Passed}/${trigger}-${name}.bmp\"\n}\n\nconst generateDefaultInspectionSubscription = (inspectionName = '') => ({\n  inspection: inspectionName,\n  batch: {},\n  trigger: {},\n});\n\nexport type TriggerVariablesType = SvPb.GetObjectSelectorItemsResponse['tree'] | string[] | null;\n\nconst DatabaseGatewayEditor = () => {\n  const dispatch = useDispatch();\n  const configuration = useSelector<RootState, DatabaseGatewayConfig>(\n    (state) => state.app.databaseGatewayConfig || { inspectionSubscriptions: [] },\n  );\n\n  const webAppConfiguration = useSelector<RootState, AppConfiguration>(\n    (state) => state.app.configuration,\n  );\n  const protobuf = useSelector<RootState>((state) => state.app.protobuf);\n  const [update, setUpdate] = useState<boolean>(false);\n\n  const batchVariables: string[] = [];\n  if (webAppConfiguration && webAppConfiguration.globalConstants) {\n    (webAppConfiguration.globalConstants || []).forEach((constant: string) => {\n      batchVariables.push('${CONSTANT:' + constant + '}');\n    });\n  }\n\n  const allowedImagePathVariables = [...batchVariables];\n  allowedImagePathVariables.push('${trigger}');\n  allowedImagePathVariables.push('${name}');\n  allowedImagePathVariables.push('${DATE:YYYY-MM-DD}');\n\n  const saveConfiguration = () => {\n    simplifyConfiguration();\n    dispatch(saveDatabaseGatewayConfiguration(protobuf, configuration));\n  };\n\n  const simplifyConfiguration = () => {\n    configuration.inspectionSubscriptions.forEach((subscription) => {\n      if (subscription?.batch) {\n        const batch = subscription.batch;\n        for (const [key, value] of Object.entries(batch)) {\n          if (typeof value === 'object' && value.name === '' && value.enabled !== false) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            batch[key] = value.value;\n          }\n        }\n      }\n    });\n  };\n\n  const getInspectionNames = () => {\n    const names: string[] = [];\n    (webAppConfiguration?.inspections || []).forEach((inspection) => {\n      names.push(inspection.name);\n    });\n    return names;\n  };\n\n  const getInspectionId = (inspectionName: string) => {\n    const filteredInspections = webAppConfiguration.inspections.filter(\n      (inspection) => inspection.name === inspectionName,\n    );\n    if (filteredInspections.length > 0) {\n      return filteredInspections[0].id;\n    }\n\n    return -1;\n  };\n\n  const getTriggerVariablesAsTree = (inspectionId: Inspection['id']) => {\n    const items = webAppConfiguration?.objectSelectorItems.get(inspectionId) || [];\n    let tree: SvPb.GetObjectSelectorItemsResponse['tree'] = 'tree' in items ? items.tree : null;\n    tree = webAppConfiguration.filterArrayValuesFromTree<typeof tree>(tree);\n\n    return tree;\n  };\n\n  const getTriggerVariables = (inspectionId: Inspection['id']) => {\n    const variables: string[] = [];\n    const mapping = webAppConfiguration?.idNameMappings.get(inspectionId);\n\n    if (mapping) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      mapping.forEach((value) => {\n        variables.push('${VALUE:' + value.fullLocation + '}');\n      });\n    }\n    return variables;\n  };\n\n  const getImageVariables = (inspectionId: Inspection['id']) => {\n    const { tree } =\n      webAppConfiguration?.getObjectSelectorImagesForInspection<SvPb.GetObjectSelectorItemsResponse>(\n        inspectionId,\n      ) || {\n        tree: {},\n      };\n    return tree;\n  };\n\n  const deleteSubscription = (idx: number) => {\n    configuration.inspectionSubscriptions.splice(idx, 1);\n    setUpdate(!update);\n  };\n\n  const inspectionNames = getInspectionNames();\n\n  const renderConfig = () => {\n    const subscriptions: ReactNode[] = [];\n    configuration.inspectionSubscriptions.forEach((subscription, idx) => {\n      let triggerVariablesAsTree: ReturnType<typeof getTriggerVariablesAsTree & string[]> = null;\n      let triggerVariables: string[] = [];\n      let allowedImageVariables = null;\n      if (webAppConfiguration && webAppConfiguration.inspections) {\n        const inspectionId = getInspectionId(subscription.inspection);\n        triggerVariablesAsTree = getTriggerVariablesAsTree(inspectionId);\n        triggerVariables = getTriggerVariables(inspectionId);\n        allowedImageVariables = getImageVariables(inspectionId);\n      }\n\n      subscriptions.push(\n        <div\n          key={`subscription_${subscription.inspection}_${idx}`}\n          className=\"database-gateway-fields-container\"\n        >\n          <div>\n            <IconButton\n              tooltip=\"Add property\"\n              onClick={() => deleteSubscription(idx)}\n              iconUrl={deleteIcon}\n            />\n          </div>\n          <div className=\"field-container\">\n            <div key={`inspection_name_wrapper`} className=\"header\">\n              Inspection:\n            </div>\n            <div className=\"field-settings\">\n              <OutlinedSelection\n                selectedValue={subscription.inspection}\n                values={inspectionNames}\n                onSelectionChanged={(e) => {\n                  subscription.inspection = e.inspectionSelection as string;\n                  setUpdate(!update);\n                }}\n                id=\"inspectionSelection\"\n              />\n            </div>\n          </div>\n          <div className=\"field-container\">\n            <div className=\"header\">Batch:</div>\n            <BatchSettings subscription={subscription} allowedVariables={batchVariables} />\n          </div>\n          <div className=\"field-container\">\n            <div className=\"header\">Trigger:</div>\n            <TriggerSettings\n              subscription={subscription}\n              allowedVariables={triggerVariablesAsTree}\n              allowedAutoCompleteVariables={triggerVariables}\n              allowedImageVariables={allowedImageVariables}\n              allowedImagePathVariables={allowedImagePathVariables}\n            />\n          </div>\n        </div>,\n      );\n    });\n\n    return subscriptions;\n  };\n\n  const addNewSubscription = () => {\n    if (configuration.inspectionSubscriptions) {\n      configuration.inspectionSubscriptions.push(\n        generateDefaultInspectionSubscription(inspectionNames[0]),\n      );\n      saveConfiguration();\n    }\n    setUpdate(!update);\n  };\n\n  return (\n    <div className=\"database-gateway-editor-wrapper\">\n      <ModalNotification visible={!webAppConfiguration} message={<p>Loading...</p>} />\n      <Button variant=\"contained\" color=\"primary\" onClick={() => saveConfiguration()}>\n        Save\n      </Button>\n      {renderConfig()}\n      <Button variant=\"contained\" color=\"primary\" onClick={() => addNewSubscription()}>\n        Add subscription\n      </Button>\n    </div>\n  );\n};\n\nexport default DatabaseGatewayEditor;\n","import React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport DatabaseGatewayEditor from '../components/DatabaseGatewayEditor';\nimport translations from '../translations';\n\nconst DatabaseGatewayPage = () => {\n  const { locale } = useSelector((state) => state.app);\n\n  return (\n    <IntlProvider locale={locale} messages={translations[locale]}>\n      <DatabaseGatewayEditor />\n    </IntlProvider>\n  );\n};\n\nexport default DatabaseGatewayPage;\n","import { useEffect } from 'react';\nimport { InputAdornment, IconButton } from '@material-ui/core';\nimport ClearIcon from '../../../../assets/icons/clear.svg';\nimport { OutlinedSelection } from '../../../../components/OutlinedSelection';\n\nconst SelectParameter = ({ value, options, labels, changeCallback, removeCallback }) => {\n  useEffect(() => {\n    if (typeof value === 'undefined') {\n      changeCallback && changeCallback(options[0]);\n    }\n  });\n\n  let valuesWithLabels = [];\n\n  // if we have a labels array, options and labels need to be sorted together\n  // if we don't have label array, the values will be used as id and value in select\n  if (labels) {\n    options.forEach((option, idx) => valuesWithLabels.push({ option, label: labels[idx] }));\n\n    valuesWithLabels = valuesWithLabels.sort(function (a, b) {\n      return a.label.localeCompare(b.label);\n    });\n\n    options = valuesWithLabels.map((value) => value.option);\n    labels = valuesWithLabels.map((value) => value.label);\n  } else {\n    options = options.sort();\n  }\n\n  return (\n    <OutlinedSelection\n      selectedValue={value}\n      values={options}\n      labels={labels}\n      onSelectionChanged={(e) => {\n        changeCallback && changeCallback(e['param']);\n      }}\n      id=\"param\"\n      InputProps={\n        removeCallback\n          ? {\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"remove\"\n                    onClick={() => removeCallback()}\n                    title=\"Remove\"\n                  >\n                    <img src={ClearIcon} alt=\"x\" />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }\n          : null\n      }\n    />\n  );\n};\n\nexport default SelectParameter;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nconst ArrayParameter = ({\n  value,\n  changeCallback,\n  typeName,\n  defaultValue,\n  options,\n  labels,\n  SingleParameterComponent,\n}) => {\n  const numberOfEntries = (value && value.length) || 0;\n  const fields = [];\n\n  const addArrayEntry = () => {\n    changeCallback([...(value || []), defaultValue]);\n  };\n  const removeArrayEntry = (idx) => {\n    const copy = [...value];\n    copy.splice(idx, 1);\n    changeCallback(copy);\n  };\n\n  for (let i = 0; i < numberOfEntries; i++) {\n    fields.push(\n      <div className=\"field-container\" key={`${typeName}_array_${i}`}>\n        <div className=\"field-name-type\">\n          {i}\n          <small>{typeName}</small>\n        </div>\n        <div className=\"field-settings\">\n          <SingleParameterComponent\n            value={value[i]}\n            changeCallback={(newValue) => {\n              const copy = [...(value || [])];\n              copy[i] = newValue;\n              changeCallback(copy);\n            }}\n            options={options}\n            labels={labels}\n            removeCallback={() => removeArrayEntry(i)}\n          />\n        </div>\n      </div>,\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"field-container is-array\">\n        {fields.length ? (\n          fields\n        ) : (\n          <div className=\"field-container\">\n            <div className=\"field-name-type\">\n              <em>\n                <FormattedMessage id=\"debugger.noItemsMessage\" />\n              </em>\n            </div>\n            <div className=\"field-settings\"></div>\n          </div>\n        )}\n      </div>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => addArrayEntry()}>\n        <FormattedMessage id=\"debugger.addItemButtonText\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default ArrayParameter;\n","import React from 'react';\nimport SelectParameter from '../../generic/SelectParameter';\n\nconst BoolParameter = ({ value, changeCallback }) => {\n  return (\n    <SelectParameter\n      value={value && value !== 'false' ? 'true' : 'false'}\n      options={['true', 'false']}\n      changeCallback={(value) => changeCallback(value === 'true')}\n    />\n  );\n};\n\nexport default BoolParameter;\n","import React from 'react';\n\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport BoolParameter from '../BoolParameter';\n\nconst BoolArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={false}\n      SingleParameterComponent={BoolParameter}\n    />\n  );\n};\n\nexport default BoolArrayParameter;\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nconst BytesParameter = ({ value, changeCallback }) => {\n  return (\n    <TextField\n      fullWidth\n      type=\"file\"\n      variant=\"outlined\"\n      value={value || ''}\n      onChange={(e) => changeCallback && changeCallback(e.target.value)}\n    />\n  );\n};\n\nexport default BytesParameter;\n","import React from 'react';\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport ClearIcon from '../../../../assets/icons/clear.svg';\n\nconst SingleParameter = ({ value, changeCallback, removeCallback, fieldType, defaultValue }) => {\n  return (\n    <TextField\n      fullWidth\n      type={fieldType}\n      variant=\"outlined\"\n      value={value || defaultValue}\n      onChange={(e) => changeCallback && changeCallback(e.target.value)}\n      InputProps={\n        removeCallback\n          ? {\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"remove\"\n                    onClick={() => removeCallback()}\n                    title=\"Remove\"\n                  >\n                    <img src={ClearIcon} alt=\"x\" />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }\n          : null\n      }\n    />\n  );\n};\n\nexport default SingleParameter;\n","import React from 'react';\nimport SingleParameter from '../../generic/SingleParameter';\n\nconst DecimalParameter = ({ value, changeCallback, removeCallback }) => {\n  return (\n    <SingleParameter\n      value={value}\n      changeCallback={changeCallback}\n      removeCallback={removeCallback}\n      fieldType=\"number\"\n      defaultValue={0}\n    />\n  );\n};\n\nexport default DecimalParameter;\n","import React from 'react';\n\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport DecimalParameter from '../DecimalParameter';\n\nconst DecimalArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={0}\n      SingleParameterComponent={DecimalParameter}\n    />\n  );\n};\n\nexport default DecimalArrayParameter;\n","import React from 'react';\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport SelectParameter from '../../generic/SelectParameter';\n\nconst EnumArrayParameter = ({ value, options, changeCallback }) => {\n  return (\n    <ArrayParameter\n      value={(value || []).map((i) => String(i))}\n      changeCallback={changeCallback}\n      options={Object.values(options)}\n      labels={Object.keys(options)}\n      SingleParameterComponent={SelectParameter}\n    />\n  );\n};\n\nexport default EnumArrayParameter;\n","import React from 'react';\nimport SelectParameter from '../../generic/SelectParameter';\n\nconst EnumParameter = ({ value, options, changeCallback }) => {\n  return (\n    <SelectParameter\n      value={String(value)}\n      options={Object.values(options)}\n      labels={Object.keys(options)}\n      changeCallback={(value) => changeCallback(value)}\n    />\n  );\n};\n\nexport default EnumParameter;\n","import React from 'react';\nimport SingleParameter from '../../generic/SingleParameter';\n\nconst IntegerParameter = ({ value, changeCallback, removeCallback }) => {\n  return (\n    <SingleParameter\n      value={value}\n      changeCallback={changeCallback}\n      removeCallback={removeCallback}\n      fieldType=\"number\"\n      defaultValue={0}\n    />\n  );\n};\n\nexport default IntegerParameter;\n","import React from 'react';\n\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport IntegerParameter from '../IntegerParameter';\n\nconst IntegerArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={0}\n      SingleParameterComponent={IntegerParameter}\n    />\n  );\n};\n\nexport default IntegerArrayParameter;\n","import React from 'react';\n\nimport SingleParameter from '../../generic/SingleParameter';\n\nconst TextParameter = ({ value, changeCallback, removeCallback, typeName }) => {\n  return (\n    <SingleParameter\n      value={value}\n      typeName={typeName}\n      changeCallback={changeCallback}\n      removeCallback={removeCallback}\n      fieldType=\"text\"\n      defaultValue={''}\n    />\n  );\n};\n\nexport default TextParameter;\n","import React from 'react';\n\nimport ArrayParameter from '../../generic/ArrayParameter';\nimport TextParameter from '../TextParameter';\n\nconst TextArrayParameter = ({ value, changeCallback, typeName }) => {\n  return (\n    <ArrayParameter\n      value={value}\n      changeCallback={changeCallback}\n      typeName={typeName}\n      defaultValue={''}\n      SingleParameterComponent={TextParameter}\n    />\n  );\n};\n\nexport default TextArrayParameter;\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { cloneDeep, get, set } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport Protobuf from '../../protobuf/Protobuf';\n\nimport './style.scss';\nimport SelectParameter from './generic/SelectParameter';\nimport BoolArrayParameter from './specialized/BoolArrayParameter';\nimport BoolParameter from './specialized/BoolParameter';\nimport BytesParameter from './specialized/BytesParameter';\nimport DecimalArrayParameter from './specialized/DecimalArrayParameter';\nimport DecimalParameter from './specialized/DecimalParameter';\nimport EnumArrayParameter from './specialized/EnumArrayParameter';\nimport EnumParameter from './specialized/EnumParameter';\nimport IntegerArrayParameter from './specialized/IntegerArrayParameter';\nimport IntegerParameter from './specialized/IntegerParameter';\nimport TextArrayParameter from './specialized/TextArrayParameter';\nimport TextParameter from './specialized/TextParameter';\n\nconst RequestParameter = ({ name, onResponse }) => {\n  const protobuf = useSelector((state) => state.app.protobuf);\n  const [parameters, setParameters] = useState({});\n  const [nestedParamsMap, setNestedParamsMap] = useState({});\n  const [currentRequestName, setCurrentRequestName] = useState('');\n\n  useEffect(() => {\n    if (currentRequestName === name) return;\n\n    setParameters({});\n    setNestedParamsMap({});\n    setCurrentRequestName(name);\n  }, [name, currentRequestName]);\n\n  if (!Protobuf.SvPb[name]) {\n    return <div></div>;\n  }\n\n  const sendRequest = async () => {\n    onResponse('');\n    if (name === 'MyDummyRequest') {\n      onResponse(parameters);\n      return;\n    }\n    const request = Protobuf.SvPb[name].create(parameters);\n    console.dir(parameters);\n    try {\n      const response = await protobuf.request(request);\n      onResponse(response);\n    } catch (e) {\n      onResponse(`An error occured: ${e.message}`);\n    }\n  };\n\n  const deepValue = (obj, path) => {\n    if (!path) return obj;\n    return get(obj, path);\n  };\n\n  const getStringControl = (field, currentPath, currentValue) => {\n    return (\n      <TextParameter\n        key={`txt_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getStringArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <TextArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getBoolControl = (field, currentPath, currentValue) => {\n    return (\n      <BoolParameter\n        key={`bool_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getBoolArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <BoolArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getIntegerControl = (field, currentPath, currentValue) => {\n    return (\n      <IntegerParameter\n        key={`integer_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getIntegerArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <IntegerArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getDecimalControl = (field, currentPath, currentValue) => {\n    return (\n      <DecimalParameter\n        key={`decimal_${field.name}`}\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getDecimalArrayControl = (field, currentPath, currentValue) => {\n    return (\n      <DecimalArrayParameter\n        typeName={field.type}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, Number(newValue))\n        }\n      />\n    );\n  };\n\n  const getBytesControl = (field, currentPath, currentValue) => {\n    return (\n      <BytesParameter\n        key={`bytes_${field.name}`}\n        value={currentValue}\n        changeCallback={(newValue) =>\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, newValue)\n        }\n      />\n    );\n  };\n\n  const getEnumControl = (type, field, currentPath, currentValue) => {\n    return (\n      <EnumParameter\n        value={currentValue}\n        options={type.values}\n        changeCallback={(value) => {\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, value);\n        }}\n      ></EnumParameter>\n    );\n  };\n\n  const getArrayEnumControl = (type, field, currentPath, currentValue) => {\n    return (\n      <EnumArrayParameter\n        value={currentValue}\n        options={type.values}\n        changeCallback={(value) => {\n          changeValue(currentPath ? `${currentPath}.${field.name}` : field.name, value);\n        }}\n      ></EnumArrayParameter>\n    );\n  };\n\n  const addArrayEntryForType = (currentPath, currentValue) => {\n    const newValue = currentValue ? [...currentValue] : [];\n    newValue.push({});\n    changeValue(currentPath, newValue);\n  };\n\n  const getControlForField = (field, isArray, currentPath) => {\n    const currentValue = deepValue(\n      parameters,\n      currentPath ? `${currentPath}.${field.name}` : field.name,\n    );\n\n    switch (field.type) {\n      case 'string':\n        if (isArray) {\n          return getStringArrayControl(field, currentPath, currentValue);\n        }\n\n        return getStringControl(field, currentPath, currentValue);\n      case 'bool':\n        if (isArray) {\n          return getBoolArrayControl(field, currentPath, currentValue);\n        }\n\n        return getBoolControl(field, currentPath, currentValue);\n      case 'int32':\n      case 'int64':\n      case 'uint32':\n      case 'uint64':\n      case 'sint32':\n      case 'sint64':\n      case 'fixed32':\n      case 'fixed64':\n      case 'sfixed32':\n      case 'sfixed64':\n        if (isArray) {\n          return getIntegerArrayControl(field, currentPath, currentValue);\n        }\n\n        return getIntegerControl(field, currentPath, currentValue);\n      case 'double':\n      case 'float':\n        if (isArray) {\n          return getDecimalArrayControl(field, currentPath, currentValue);\n        }\n\n        return getDecimalControl(field, currentPath, currentValue);\n      case 'bytes':\n        return getBytesControl(field, currentPath, currentValue);\n      default: {\n        const type = Protobuf.SvPb.lookup(field.type);\n        if (type && type.constructor.name === 'Enum') {\n          if (isArray) {\n            return getArrayEnumControl(type, field, currentPath, currentValue);\n          }\n\n          return getEnumControl(type, field, currentPath, currentValue);\n        }\n\n        const newPath = currentPath ? `${currentPath}.${field.name}` : field.name;\n\n        if (isArray) {\n          return getArrayControlsForType(type, newPath, currentValue);\n        }\n\n        return getControlsForType(type, newPath, currentValue);\n      }\n    }\n  };\n\n  const changeValue = (path, value) => {\n    const newParams = cloneDeep(parameters);\n    set(newParams, path, value);\n    setParameters(newParams);\n  };\n\n  const getControlsForType = (type, path) => {\n    const controls = [];\n    const fieldKeys = type?.fields ? Object.keys(type.fields) : [];\n\n    if (type.oneofs) {\n      Object.keys(type.oneofs).forEach((oneOfKey) => {\n        controls.push(\n          <div className=\"field-container\" key={`div_${oneOfKey}`}>\n            <div className=\"field-name-type\">\n              {oneOfKey}\n              <small>oneof type</small>\n            </div>\n            <div className=\"field-settings\">\n              <SelectParameter\n                value={nestedParamsMap[`${path}.${oneOfKey}`]}\n                options={type.oneofs[oneOfKey].oneof}\n                changeCallback={(value) => {\n                  setNestedParamsMap({\n                    ...nestedParamsMap,\n                    [`${path}.${oneOfKey}`]: value,\n                  });\n                }}\n              ></SelectParameter>\n            </div>\n          </div>,\n        );\n      });\n    }\n\n    fieldKeys.forEach((fieldkey) => {\n      const field = type.fields[fieldkey];\n      if (!field) return;\n\n      if (field.partOf && field.name !== nestedParamsMap[`${path}.${field.partOf.name}`]) {\n        return;\n      }\n\n      controls.push(\n        <div className=\"field-container\" key={`div_${field.name}`}>\n          <div className=\"field-name-type\">\n            {field.name}\n            <small>\n              {field.rule} {field.type}\n              {field.required ? '*' : ''}\n            </small>\n          </div>\n          <div className=\"field-settings\">\n            {getControlForField(field, field.rule === 'repeated', path)}\n          </div>\n        </div>,\n      );\n    });\n\n    if (!fieldKeys.length && path.length)\n      controls.push(\n        <div className=\"field-container\" key={`div_type.name`}>\n          <div className=\"field-name-type\">\n            <em>\n              <FormattedMessage id=\"debugger.nothingToConfigureMessage\"></FormattedMessage>\n            </em>\n          </div>\n          <div className=\"field-settings\"></div>\n        </div>,\n      );\n\n    return controls;\n  };\n\n  const getArrayControlsForType = (type, path, value) => {\n    const controls = [];\n    (value || []).forEach((_, idx) => {\n      controls.push(\n        <div className=\"field-container\" key={`${type.name}_array_${idx}`}>\n          <div className=\"field-name-type\">\n            {idx}\n            <small>{type.name}</small>\n          </div>\n          <div className=\"field-settings\">\n            {getControlsForType(type, path ? `${path}.${idx}` : idx, value[idx])}\n          </div>\n        </div>,\n      );\n    });\n\n    return (\n      <div>\n        <div className=\"field-container is-array\">\n          {controls.length ? (\n            controls\n          ) : (\n            <div className=\"field-container\">\n              <div className=\"field-name-type\">\n                <em>\n                  <FormattedMessage id=\"debugger.noItemsMessage\" />\n                </em>\n              </div>\n              <div className=\"field-settings\"></div>\n            </div>\n          )}\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => addArrayEntryForType(path, value)}\n        >\n          Add\n        </Button>\n      </div>\n    );\n  };\n\n  const fields = getControlsForType(Protobuf.SvPb[name], '');\n  return (\n    <div className=\"request-parameters-container\">\n      <div className=\"request-name-type\">\n        {name}\n        <small>Request</small>\n      </div>\n      <div className=\"request-parameters-fields-container\">\n        {fields && fields.length ? fields : <FormattedMessage id=\"debugger.noParametersMessage\" />}\n      </div>\n\n      <Button\n        className=\"send-button\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => sendRequest()}\n      >\n        <FormattedMessage id=\"debugger.sendRequest\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default RequestParameter;\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport Product from '../../protobuf/Product';\n\nimport './style.scss';\n\nconst RequestedResponseVisualizer = ({ response }) => {\n  const [imageUrl, setImageUrl] = useState('');\n  const [fileData, setFileData] = useState('');\n\n  useEffect(() => {\n    if (response && response.imageData) {\n      const product = new Product({\n        history: null,\n        trigger: null,\n        isReject: false,\n      });\n      setImageUrl(product.buildUrl(response.imageData));\n    } else {\n      setImageUrl('');\n    }\n  }, [response]);\n\n  useEffect(() => {\n    if (response && response.fileData) {\n      const blob = new Blob(response.fileData, { type: 'octet/stream' });\n      setFileData(window.URL.createObjectURL(blob));\n    } else {\n      setFileData('');\n    }\n  }, [response]);\n\n  const copyResponseToClipboard = async () => {\n    if (!navigator.clipboard) {\n      // fallback code possible, but I think not needed as we use the debugger only\n      return;\n    }\n    await navigator.clipboard.writeText(result);\n  };\n\n  const result = response ? JSON.stringify(response, null, 2) : '';\n\n  return (\n    <div className=\"response-body-container\">\n      <div className=\"response-body-header\">\n        <div className=\"response-name-type\">\n          {response ? response.constructor.name : 'Response'}\n          <small>Response</small>\n        </div>\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={copyResponseToClipboard}\n            disabled={!result}\n          >\n            <FormattedMessage id=\"debugger.copyToClipboard\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"response-content\">\n        {imageUrl ? <img src={imageUrl} alt=\"\" /> : undefined}\n        {fileData ? <a href={fileData}>Download</a> : undefined}\n        <pre className=\"response-formatter\">{result}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default RequestedResponseVisualizer;\n","import React, { useEffect, useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\n\nconst RequestsList = ({ proto, chooseCallback }) => {\n  const [filter, setFilter] = useState('');\n  const [active, setActive] = useState(null);\n\n  const requests = Object.keys(proto)\n    .sort()\n    .reduce((requests, key) => {\n      if (!key.toLowerCase().includes(filter)) return requests;\n\n      return [\n        ...requests,\n        <li\n          key={`li_${key}`}\n          requestname={key}\n          className={active === key ? 'active' : ''}\n          onClick={() => {\n            chooseCallback(key);\n            setActive(key);\n          }}\n        >\n          {key}\n        </li>,\n      ];\n    }, []);\n\n  useEffect(() => {\n    if (!active) {\n      chooseCallback(requests[0].props.requestname);\n      setActive(requests[0].props.requestname);\n    }\n  }, [active, chooseCallback, requests]);\n\n  return (\n    <div className=\"requests-list\">\n      <div className=\"request-list-header\">\n        <FormattedMessage id=\"debugger.requestsListHeader\" />\n        <small>Choose one from the list below</small>\n      </div>\n      <div className=\"requests-filter\">\n        <TextField\n          fullWidth\n          type=\"text\"\n          variant=\"outlined\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value.toLowerCase())}\n          placeholder=\"Search...\"\n        />\n      </div>\n      <div className=\"requests\">\n        <ul>{requests}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default RequestsList;\n","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport ArrowIcon from '../../assets/icons/back.svg';\nimport Protobuf from '../../protobuf/Protobuf';\nimport RequestParameter from '../RequestParameter';\nimport RequestedResponseVisualizer from '../RequestedResponseVisualizer';\nimport RequestsList from '../RequestsList';\n\nimport './style.scss';\n\nconst Debugger = () => {\n  const [currentRequest, setCurrentRequest] = useState('');\n  const [response, setResponse] = useState(null);\n\n  const filteredProto = Object.keys(Protobuf.SvPb)\n    .sort()\n    .reduce((requests, key) => {\n      if (!key.endsWith('Request')) return requests;\n      if (key.endsWith('StreamRequest')) return requests;\n      if (\n        Protobuf.SvPb[key].filename.includes('InspectionCommands') &&\n        key !== 'InspectionCmdRequest'\n      )\n        return requests;\n      if (Protobuf.SvPb[key].filename.includes('ConfigCommands') && key !== 'ConfigCommandRequest')\n        return requests;\n\n      return { ...requests, [key]: Protobuf.SvPb[key] };\n    }, {});\n\n  return (\n    <div className=\"debugger-wrapper\">\n      <div className=\"debugger-header\">\n        <Button component={Link} variant=\"contained\" color=\"primary\" to=\"/app\">\n          <img src={ArrowIcon} alt=\"back\" className=\"image-item\" />\n          <FormattedMessage id=\"debugger.backToWebApp\" />\n        </Button>\n      </div>\n      <div className=\"request-list-container\">\n        <RequestsList\n          proto={filteredProto}\n          chooseCallback={(key) => {\n            setCurrentRequest(key);\n            setResponse(null);\n          }}\n        />\n      </div>\n      <div className=\"request-container\">\n        <RequestParameter name={currentRequest} onResponse={(response) => setResponse(response)} />\n      </div>\n      <div className=\"response-container\">\n        <RequestedResponseVisualizer response={response} />\n      </div>\n    </div>\n  );\n};\n\nexport default Debugger;\n","import React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport Debugger from '../components/Debugger';\nimport translations from '../translations';\n\nconst DebuggerPage = () => {\n  const { locale } = useSelector((state) => state.app);\n  return (\n    <IntlProvider locale={locale} messages={translations[locale]}>\n      <Debugger />\n    </IntlProvider>\n  );\n};\n\nexport default DebuggerPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\n\nimport {\n  setLocale,\n  authenticate,\n  setTopNavHidden,\n  setBottomNavHidden,\n  setDefaultViewSetName,\n} from '../redux/actions';\nimport logger from '../utils/logger';\n\nconst parseQueryParams = (search) => {\n  const queryParams = {};\n  try {\n    search\n      .substr(1)\n      .split('&')\n      .forEach((item) => {\n        const part = item.split('=');\n        const key = part[0];\n        const value = part[1] && decodeURIComponent(part[1]);\n        queryParams[key] = value;\n      });\n  } catch (error) {\n    logger.error(error);\n  }\n  return queryParams;\n};\n\nclass HmiLoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticated: false,\n      queryParams: parseQueryParams(this.props.location.search),\n    };\n  }\n\n  componentDidMount() {\n    this.props.setTopNavHidden(this.state.queryParams.hideTopNavigation === 'true');\n    this.props.setBottomNavHidden(this.state.queryParams.hideBottomNavigation === 'true');\n\n    this.props.setLocale(this.state.queryParams.locale || 'en');\n\n    this.props.setDefaultViewSetName(this.state.queryParams.viewSet || null);\n\n    if (this.state.queryParams.token) {\n      this.props\n        .authenticate(this.state.queryParams.token)\n        .then(() => this.setState({ authenticated: true }))\n        .catch((authError) => this.setState({ authError }));\n    }\n  }\n\n  render() {\n    if (!this.state.queryParams.token) {\n      return <div>Malformed query params</div>;\n    }\n    if (this.state.authError) {\n      return (\n        <div>\n          Invalid token provided. Error: {this.state.authError.response?.status} Status:{' '}\n          {this.state.authError.response?.statusText}\n        </div>\n      );\n    }\n    if (!this.state.authenticated) {\n      return <div>Fetching auth token for provided access token</div>;\n    }\n\n    return (\n      <Redirect\n        to={{\n          pathname: '/app',\n          state: { viewSetTemplate: this.state.queryParams.viewSet },\n        }}\n      />\n    );\n  }\n}\n\nHmiLoginPage.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n  setLocale: PropTypes.func.isRequired,\n  authenticate: PropTypes.func.isRequired,\n  setTopNavHidden: PropTypes.func.isRequired,\n  setBottomNavHidden: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLocale: (locale) => dispatch(setLocale(locale)),\n  authenticate: (accessToken) => dispatch(authenticate(accessToken)),\n  setTopNavHidden: (hidden) => dispatch(setTopNavHidden(hidden)),\n  setBottomNavHidden: (hidden) => dispatch(setBottomNavHidden(hidden)),\n  setDefaultViewSetName: (name) => dispatch(setDefaultViewSetName(name)),\n});\n\nexport default connect(null, mapDispatchToProps)(HmiLoginPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { logOut } from '../redux/actions';\nimport { removeAllUserInfoFromStorage } from '../utils/localStorage';\n\nclass LogoutPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedOut: false,\n    };\n  }\n\n  render() {\n    this.props.onLogOut().then(() => {\n      this.setState({ loggedOut: true });\n    });\n\n    if (this.state.loggedOut) {\n      removeAllUserInfoFromStorage();\n      this.props.onLoggedOut();\n      return (\n        <Redirect\n          to={{\n            pathname: '/',\n            state: { loggedOut: true },\n          }}\n        />\n      );\n    }\n    return null;\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLogOut: () => dispatch(logOut()),\n});\n\nexport default connect(null, mapDispatchToProps)(LogoutPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  toggleFullscreenMode,\n  setEditingFocus,\n  setFocusedViewType,\n  setSaveFlag,\n  openHelpView,\n  setParameter,\n} from '../redux/actions/index';\nimport logger from '../utils/logger';\nimport { IMAGE_VIEW } from '../views/ViewSetFactory';\n\nexport default class KeyHandler extends Component {\n  componentDidMount() {\n    this.node.addEventListener('keydown', this.handleKeyEvent);\n    this.node.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    this.node.removeEventListener('keydown', this.handleKeyEvent);\n    this.node.removeEventListener('click', this.handleClick);\n  }\n\n  handleKeyEvent = (event) => {\n    const keyString = `${event.ctrlKey ? 'ctrl+' : ''}${event.key}`;\n    switch (keyString) {\n      case 'ctrl+f':\n        event.preventDefault();\n        this.props.dispatch(toggleFullscreenMode(this.props.view));\n        break;\n      case 'F1':\n        event.preventDefault();\n        this.props.dispatch(openHelpView());\n        break;\n      default:\n        return;\n    }\n    event.stopPropagation();\n  };\n\n  handleClick = () => {\n    const { view, editingViewIds, dispatch, helpSection } = this.props;\n\n    if (view) {\n      try {\n        const viewId = view.props.id;\n        const viewSet = view.props.views.viewSet[viewId];\n        if (viewSet) {\n          const inspectionId = viewSet.inspectionId;\n          const viewType = viewSet.viewComponentClassId;\n          if (viewType === IMAGE_VIEW) {\n            dispatch(setEditingFocus(inspectionId, viewId));\n            dispatch(setParameter(null));\n\n            if (!editingViewIds.includes(viewId)) {\n              dispatch(setSaveFlag(true));\n            }\n          }\n          dispatch(setFocusedViewType(viewType));\n        }\n      } catch (e) {\n        logger.error(e instanceof Error ? e.message : String(e));\n      }\n    } else if (helpSection) {\n      dispatch(setFocusedViewType(helpSection));\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div\n        tabIndex={0}\n        style={{ width: '100%', height: '100%' }}\n        ref={(node) => {\n          this.node = node;\n        }}\n      >\n        {children && children}\n      </div>\n    );\n  }\n}\n\nKeyHandler.defaultProps = {\n  children: undefined,\n};\n\nKeyHandler.propTypes = {\n  children: PropTypes.node,\n  dispatch: PropTypes.func.isRequired,\n  view: PropTypes.object, // eslint-disable-line\n};\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport ArrowIcon from '../../assets/icons/back.svg';\nimport Protobuf from '../../protobuf/Protobuf';\nimport {\n  flattenProtobuf,\n  canReadUserManagement,\n  canEditUserManagement,\n  getGroupPermissionsFromFlattenedPermissions,\n} from '../../utils/permissions';\n\nimport './style.scss';\n\nclass PermissionManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.allAvailablePermissions = new Set();\n    this.state = {\n      redirect: false,\n      initiallySelectedPermissions: new Map(),\n      currentSelectedPermissions: new Map(),\n    };\n  }\n\n  componentDidMount() {\n    if (Protobuf.SvPb.Permissions) {\n      this.allAvailablePermissions = flattenProtobuf(Protobuf.SvPb.Permissions);\n      this.loadCurrentPermissions(this.props.groupPermissions);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      (prevProps.groupPermissions === undefined && this.props.groupPermissions) ||\n      prevProps.groupPermissions !== this.props.groupPermissions\n    ) {\n      this.loadCurrentPermissions(this.props.groupPermissions);\n    }\n  }\n\n  loadCurrentPermissions = (permissions) => {\n    if (permissions) {\n      const initiallySelectedPermissions = permissions;\n      const currentSelectedPermissions = cloneDeep(initiallySelectedPermissions);\n      this.setState({ initiallySelectedPermissions, currentSelectedPermissions });\n    }\n  };\n\n  onCheck(groupName, key, checked) {\n    const newPermissions = cloneDeep(this.state.currentSelectedPermissions);\n    if (!newPermissions.has(groupName)) {\n      newPermissions.set(groupName, { groupPermissions: new Set(), users: [] });\n    }\n    if (checked) {\n      newPermissions.get(groupName).groupPermissions.add(key);\n    } else {\n      newPermissions.get(groupName).groupPermissions.delete(key);\n    }\n    this.setState({ currentSelectedPermissions: newPermissions });\n  }\n\n  savePermissions = (flattenedPermissions) => {\n    const result = getGroupPermissionsFromFlattenedPermissions(flattenedPermissions);\n    this.props.proxy.setUserPermissions(result);\n  };\n\n  onSaveClicked = () => {\n    this.savePermissions(this.state.currentSelectedPermissions);\n  };\n\n  onResetClicked = () => {\n    this.setState({\n      currentSelectedPermissions: cloneDeep(this.state.initiallySelectedPermissions),\n    });\n  };\n\n  mapsAreEqual(am, bm) {\n    if (am.size !== bm.size) {\n      return false;\n    }\n    for (var a of am) {\n      if (!bm.has(a[0])) {\n        return false;\n      }\n\n      const bs = bm.get(a[0]).groupPermissions;\n      if (a[1].groupPermissions.size !== bs.size) {\n        return false;\n      }\n\n      for (var as of a[1].groupPermissions) {\n        if (!bs.has(as)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  getColGroup() {\n    const { currentSelectedPermissions } = this.state;\n    const colGroup = [];\n\n    colGroup.push(<col style={{ width: '200px' }} key={`col_permissions`}></col>);\n    currentSelectedPermissions.forEach((permissionsPerGroup, groupName) => {\n      colGroup.push(<col style={{ width: '80px' }} key={`col_${groupName}`}></col>);\n    });\n    colGroup.push(<col style={{ width: '*' }} key={`col_descriptions`}></col>);\n\n    return colGroup;\n  }\n\n  getTableHead() {\n    const { currentSelectedPermissions } = this.state;\n    const tableheader = [];\n\n    tableheader.push(\n      <td key={`header_td_permissions`}>\n        <div className=\"permission-management-permissions-header-left\">\n          <FormattedMessage id=\"permissions.permissions\" />\n        </div>\n      </td>,\n    );\n    currentSelectedPermissions.forEach((permissionsPerGroup, groupName) => {\n      tableheader.push(\n        <td key={`header_td_${groupName}`}>\n          <div className=\"permission-management-permissions-header\">{groupName}</div>\n          <div className=\"permission-management-permissions-subheader\">\n            {Array.isArray(permissionsPerGroup.users) && permissionsPerGroup.users.length > 0\n              ? `(${permissionsPerGroup.users.join(', ')})`\n              : undefined}\n          </div>\n        </td>,\n      );\n    });\n    tableheader.push(\n      <td key={`header_td_description`}>\n        <div className=\"permission-management-permissions-header\">\n          <FormattedMessage id=\"permissions.description\" />\n        </div>\n      </td>,\n    );\n\n    return <tr>{tableheader}</tr>;\n  }\n\n  getData(canEdit) {\n    const { currentSelectedPermissions } = this.state;\n    const data = [];\n    this.allAvailablePermissions.forEach((permission) => {\n      const dataRow = [];\n      dataRow.push(\n        <td key={`body_td_permission_${permission}`}>\n          <div className=\"permission-management-label\">{permission}</div>\n        </td>,\n      );\n      currentSelectedPermissions.forEach((permissionsPerGroup, groupName) => {\n        const selected = permissionsPerGroup.groupPermissions.has(permission);\n        dataRow.push(\n          <td key={`body_td_${groupName}_${permission}`}>\n            <Checkbox\n              type=\"checkbox\"\n              checked={selected}\n              name={`checkbox_${groupName}_${permission}`}\n              color=\"primary\"\n              className=\"permission-management-checkbox\"\n              onClick={(e) =>\n                canEdit && groupName !== 'sdm'\n                  ? this.onCheck(groupName, permission, e.target.checked)\n                  : undefined\n              }\n              disabled={!canEdit || groupName === 'sdm'}\n            />\n          </td>,\n        );\n      });\n      dataRow.push(\n        <td key={`body_td_description_${permission}`}>\n          <div className=\"permission-management-label\">\n            <FormattedMessage id={`permissionDescription.${permission}`} />\n          </div>\n        </td>,\n      );\n      data.push(<tr key={`body_tr_${permission}`}>{dataRow}</tr>);\n    });\n    return data;\n  }\n\n  render() {\n    const { redirect, initiallySelectedPermissions, currentSelectedPermissions } = this.state;\n    const { myPermissions } = this.props;\n\n    const canRead = canReadUserManagement(myPermissions);\n    const canEdit = canEditUserManagement(myPermissions);\n\n    if (redirect) {\n      return <Redirect to=\"/app\" />;\n    }\n\n    const hasChanges = !this.mapsAreEqual(initiallySelectedPermissions, currentSelectedPermissions);\n    const colGroup = this.getColGroup();\n    const tablehead = this.getTableHead();\n    const data = this.getData(canEdit);\n\n    return (\n      <div className=\"permission-management-wrapper\">\n        <div className=\"permission-management-fixed-header\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.setState({ redirect: true })}\n          >\n            <img src={ArrowIcon} alt=\"back\" className=\"image-item\" />\n            <FormattedMessage id=\"permissions.backToWebApp\" />\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!hasChanges}\n            onClick={this.onSaveClicked}\n          >\n            Save\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!hasChanges}\n            onClick={this.onResetClicked}\n          >\n            Reset\n          </Button>\n        </div>\n        <h1>\n          <FormattedMessage id=\"permissions.permissionManagement\" />\n        </h1>\n        <h3>\n          <FormattedMessage id=\"permissions.helpText\" />\n        </h3>\n        {canRead || canEdit ? (\n          <table className=\"permission-management-table-wrapper\">\n            <colgroup>{colGroup}</colgroup>\n            <thead>{tablehead}</thead>\n            <tbody>{data}</tbody>\n          </table>\n        ) : undefined}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  groupPermissions: state.app.groupPermissions,\n  proxy: state.app.proxy,\n  user: state.app.user,\n  myPermissions: state.app.myPermissions,\n});\n\nexport default connect(mapStateToProps, null)(PermissionManagement);\n","import React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport KeyHandler from '../components/KeyHandler';\nimport PermissionManagement from '../components/PermissionManagement';\nimport { closeHelpView } from '../redux/actions';\nimport translations from '../translations';\nimport HelpView from '../views/HelpView';\nimport viewMappings from '../views/HelpView/viewMappings';\n\nconst PermissionPage = () => {\n  const dispatch = useDispatch();\n  const { isHelpViewOpen, locale } = useSelector((state) => state.app);\n\n  return (\n    <IntlProvider locale={locale} messages={translations[locale]}>\n      <KeyHandler dispatch={dispatch} helpSection={viewMappings.PERMISSIONS}>\n        <PermissionManagement />\n        <HelpView open={isHelpViewOpen} onClose={() => dispatch(closeHelpView())}></HelpView>\n      </KeyHandler>\n    </IntlProvider>\n  );\n};\n\nexport default PermissionPage;\n","import PropTypes from 'prop-types';\n\nconst ProtobufType = PropTypes.shape({\n  request: PropTypes.func.isRequired,\n});\n\nexport default ProtobufType;\n","export default __webpack_public_path__ + \"static/media/view-manager.8d715a8f.svg\";","export default __webpack_public_path__ + \"static/media/check.069f9f99.svg\";","export default __webpack_public_path__ + \"static/media/export.6f1edad0.svg\";","export default __webpack_public_path__ + \"static/media/import.2817cb78.svg\";","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from '../Dialog';\nimport './style.scss';\n\nclass InformationDialog extends Component {\n  render() {\n    const { onClose, open, title, message } = this.props;\n\n    return (\n      <div>\n        <Dialog title={title} onClose={onClose} open={open}>\n          <div className=\"message-wrapper\">{message}</div>\n          <div className=\"button-wrapper\">\n            <Button color=\"primary\" onClick={onClose}>\n              Okay\n            </Button>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default InformationDialog;\n","import React, { useState, useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport Table, { AutoResizer } from 'react-base-table';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport semver from 'semver';\n\nimport iconCheck from '../../assets/icons/check.svg';\nimport removeIcon from '../../assets/icons/delete.svg';\nimport EditIcon from '../../assets/icons/edit.svg';\nimport exportIcon from '../../assets/icons/export.svg';\nimport importIcon from '../../assets/icons/import.svg';\nimport addIcon from '../../assets/icons/plus.svg';\nimport iconSave from '../../assets/icons/save.svg';\n\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport Dialog from '../../components/Dialog';\nimport InformationDialog from '../../components/InformationDialog';\nimport IconButton from '../../components/buttons/IconButton';\nimport {\n  removeViewSet,\n  renameViewSet,\n  newViewSet,\n  setViewSet,\n  setEditingFocus,\n  purgeViewState,\n} from '../../redux/actions';\nimport { forceDownload } from '../../utils/downloader';\nimport logger from '../../utils/logger';\nimport {\n  canAddViewSet,\n  canReadViewSet,\n  canEditViewSet,\n  canDeleteViewSet,\n  canSaveConfig,\n} from '../../utils/permissions';\n\nimport './style.scss';\n\nconst ViewSetManager = ({ onClose, onSave, intl }) => {\n  const fileChooser = useRef(null);\n  const dispatch = useDispatch();\n  const createdViewSets = useSelector((state) => state.viewSet.createdViewSets);\n  const currentViewSet = useSelector((state) => state.viewSet.currentViewSet);\n  const inspections = useSelector((state) => state.inspections);\n  const configuration = useSelector((state) => state.app.configuration);\n  const myPermissions = useSelector((state) => state.app.myPermissions);\n  const canAdd = canAddViewSet(myPermissions);\n  const canEdit = canEditViewSet(myPermissions);\n  const canDelete = canDeleteViewSet(myPermissions);\n\n  const [name, setName] = useState(currentViewSet.name);\n  const [isImportConfirmOpen, setIsImportConfirmOpen] = useState(false);\n  const [viewsetToDelete, setViewsetToDelete] = useState('');\n  const [currentImportedViewSet, setCurrentImportedViewSet] = useState(null);\n  const [isInformationDialogOpen, setIsInformationDialogOpen] = useState(false);\n  const [informationDialogTitle, setInformationDialogTitle] = useState('');\n  const [informationDialogMessage, setInformationDialogMessage] = useState('');\n  const [shouldCloseViewSetManager, setShouldCloseViewSetManager] = useState(false);\n  const [viewSetToEdit, setViewSetToEdit] = useState('');\n\n  const fileLoaderVersion = '1.0.0';\n\n  const getNextFreeName = (nameToTry) => {\n    let name = nameToTry;\n    let counter = 1;\n    while (existsName(name)) {\n      name = `${nameToTry}${counter}`;\n      counter++;\n    }\n\n    return name;\n  };\n\n  const existsName = (name) => {\n    return Object.keys(createdViewSets).filter((key) => key === name).length > 0;\n  };\n\n  const addViewSet = () => {\n    const newViewSetName = getNextFreeName('Initial');\n    dispatch(newViewSet(newViewSetName));\n  };\n\n  const removeSelectedViewSet = () => {\n    dispatch(removeViewSet(viewsetToDelete));\n  };\n\n  const saveViewSets = () => {\n    onSave();\n    closeViewSetManager();\n  };\n\n  const exportViewSets = async () => {\n    const webAppVersion = configuration.getWebAppVersion();\n    const dataToSave = {\n      currentViewSet,\n      editingViewIds: getEditingViewIdsPerInspection(),\n      timestamp: new Date(),\n      version: '1.0.0',\n      webAppVersion,\n    };\n\n    await createJsonFileFromObject(dataToSave);\n\n    closeViewSetManager();\n  };\n\n  const getEditingViewIdsPerInspection = () => {\n    const editingViewIds = [];\n\n    Object.keys(inspections).forEach((inspectionIdStr) => {\n      const inspectionId = parseInt(inspectionIdStr, 10);\n      if (\n        inspections[inspectionIdStr] &&\n        inspections[inspectionIdStr].sharedState &&\n        inspections[inspectionIdStr].sharedState.editingViewId\n      ) {\n        editingViewIds.push({\n          inspectionId,\n          editingViewId: inspections[inspectionIdStr].sharedState.editingViewId,\n        });\n      }\n    });\n\n    return editingViewIds;\n  };\n\n  const createJsonFileFromObject = async (object) => {\n    const json = JSON.stringify(object);\n    const blob = new Blob([json], { type: 'application/json' });\n    const data = await URL.createObjectURL(blob);\n\n    forceDownload(data, 'viewset.json');\n  };\n\n  const importViewSets = () => {\n    fileChooser.current.click();\n  };\n\n  const onFileAdded = (evt) => {\n    const file = evt.target.files[0];\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.readAsText(file);\n\n      fileReader.onload = (event) => {\n        handleFileData(event.target.result);\n      };\n    }\n  };\n\n  const handleFileData = (fileText) => {\n    try {\n      const data = JSON.parse(fileText);\n      if (equalsViewSetName(data.currentViewSet.id)) {\n        setIsImportConfirmOpen(true);\n        setCurrentImportedViewSet(data);\n        return;\n      }\n\n      setViewSetConfigurationFromFileData(data);\n    } catch (error) {\n      showErrorWhileLoadingFileDialog();\n      logger.error(error);\n    }\n  };\n\n  const handleImportConfirmDialogClose = (confirmed) => {\n    setIsImportConfirmOpen(false);\n    if (confirmed) {\n      loadViewSetFromFile();\n    } else {\n      fileChooser.current.value = '';\n    }\n  };\n\n  const handleDeleteConfirmDialogClose = (confirmed) => {\n    setViewsetToDelete('');\n    if (confirmed) {\n      removeSelectedViewSet();\n    }\n  };\n\n  const loadViewSetFromFile = () => {\n    setViewSetConfigurationFromFileData(currentImportedViewSet);\n  };\n\n  const equalsViewSetName = (name) => {\n    if (currentViewSet.id === name) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const setViewSetConfigurationFromFileData = (data) => {\n    loadSuccessfulInformationDialogText();\n\n    if (!isMajorVersionCompatible(data.version)) {\n      showIncompatibleVersionErrorDialog();\n      logger.error('Version of file is not valid.');\n      return;\n    }\n\n    if (isMinorVersionNewer(data.version)) {\n      loadVersionChangeInformationDialogText();\n    }\n\n    if (!data.currentViewSet.id) {\n      showErrorWhileLoadingFileDialog();\n      logger.error('Could not load viewset id.');\n      return;\n    }\n    dispatch(setViewSet(data.currentViewSet, data.currentViewSet.id));\n\n    if (data.editingViewIds) {\n      data.editingViewIds.forEach((entry) => {\n        dispatch(setEditingFocus(entry.inspectionId, entry.editingViewId));\n      });\n    }\n\n    dispatch(purgeViewState());\n    showInformationDialog();\n  };\n\n  const isMajorVersionCompatible = (version) => {\n    if (fileLoaderVersion === version) {\n      return true;\n    }\n\n    if (!semver.valid(version) || semver.diff(fileLoaderVersion, version) === 'major') {\n      return false;\n    }\n\n    return true;\n  };\n\n  const isMinorVersionNewer = (version) => {\n    return (\n      semver.diff(fileLoaderVersion, version) === 'minor' && semver.gt(version, fileLoaderVersion)\n    );\n  };\n\n  const closeViewSetManager = () => {\n    onClose();\n  };\n\n  const loadSuccessfulInformationDialogText = () => {\n    setInformationDialogTitle(<FormattedMessage id=\"notifications.successfulAction\" />);\n    setInformationDialogMessage(<FormattedMessage id=\"notifications.successfullyLoadedFile\" />);\n    setShouldCloseViewSetManager(true);\n  };\n\n  const showErrorWhileLoadingFileDialog = () => {\n    setInformationDialogTitle(<FormattedMessage id=\"notifications.errorOccurred\" />);\n    setInformationDialogMessage(<FormattedMessage id=\"notifications.error.loadingFile\" />);\n    setIsInformationDialogOpen(true);\n  };\n\n  const showIncompatibleVersionErrorDialog = () => {\n    setInformationDialogTitle(\n      <FormattedMessage id=\"notifications.viewsetVersionIncompatibleTitle\" />,\n    );\n    setInformationDialogMessage(\n      <FormattedMessage id=\"notifications.viewsetVersionIncompatibleMessage\" />,\n    );\n    setIsInformationDialogOpen(true);\n  };\n\n  const loadVersionChangeInformationDialogText = () => {\n    setInformationDialogTitle(<FormattedMessage id=\"notifications.minorVersionDiffTitle\" />);\n    setInformationDialogMessage(<FormattedMessage id=\"notifications.minorVersionDiffMessage\" />);\n    setShouldCloseViewSetManager(true);\n  };\n\n  const showInformationDialog = () => {\n    setIsInformationDialogOpen(true);\n  };\n\n  const getActions = () => {\n    const actions = [\n      {\n        intlId: 'viewSetManager.save',\n        iconUrl: iconSave,\n        onClickHandler: () => {\n          saveViewSets();\n        },\n        enabled: canSaveConfig(myPermissions),\n      },\n      {\n        intlId: 'viewSetManager.export',\n        iconUrl: exportIcon,\n        onClickHandler: () => {\n          exportViewSets();\n        },\n        enabled: canReadViewSet(myPermissions),\n      },\n      {\n        intlId: 'viewSetManager.import',\n        iconUrl: importIcon,\n        onClickHandler: () => {\n          importViewSets();\n        },\n        enabled: canEdit,\n      },\n    ];\n\n    return actions;\n  };\n\n  const getColumns = () => {\n    return [\n      {\n        key: 'name',\n        dataKey: 'name',\n        title: 'Name',\n        width: 0,\n        flexGrow: 1,\n      },\n      {\n        key: 'edit',\n        dataKey: 'edit',\n        title: '',\n        width: 40,\n      },\n      {\n        key: 'delete',\n        dataKey: 'delete',\n        title: '',\n        width: 40,\n      },\n    ];\n  };\n\n  const changeViewSetName = () => {\n    if (viewSetToEdit !== name && Object.keys(createdViewSets).includes(name)) {\n      alert('Viewset with this name already exists.');\n      return;\n    }\n\n    dispatch(renameViewSet(viewSetToEdit, name));\n\n    setViewSetToEdit('');\n    setName('');\n  };\n\n  const getViewSetEditName = () => {\n    return (\n      <div className=\"viewsetmanager-edit-viewset-name-wrapper\">\n        <TextField\n          fullWidth\n          type=\"text\"\n          inputProps={{\n            style: {\n              height: 29,\n            },\n          }}\n          value={name}\n          onChange={(e) => setName(e.target.value.substring(0, 20))}\n        />\n      </div>\n    );\n  };\n\n  const getViewSetEditingIcon = (viewsetName) => {\n    if (!canEdit) {\n      return undefined;\n    }\n\n    if (viewSetToEdit !== viewsetName) {\n      return (\n        <IconButton\n          onClick={() => {\n            setViewSetToEdit(viewsetName);\n            setName(viewsetName);\n          }}\n          tooltip={intl.messages['viewSetManager.editViewSetName']}\n          iconUrl={EditIcon}\n        />\n      );\n    } else {\n      return (\n        <IconButton\n          onClick={() => changeViewSetName()}\n          tooltip={intl.messages['viewSetManager.changeViewSetName']}\n          iconUrl={iconCheck}\n        />\n      );\n    }\n  };\n\n  const getViewSets = () => {\n    const data =\n      createdViewSets &&\n      Object.keys(createdViewSets).map((viewsetName) => {\n        return {\n          edit: getViewSetEditingIcon(viewsetName),\n          delete: canDelete ? (\n            <IconButton\n              onClick={() => setViewsetToDelete(viewsetName)}\n              tooltip={intl.messages['viewSetManager.deleteIconTooltip']}\n              iconUrl={removeIcon}\n            />\n          ) : undefined,\n          name: viewSetToEdit === viewsetName ? getViewSetEditName() : viewsetName,\n          id: viewsetName,\n        };\n      });\n    return data;\n  };\n\n  const headerRenderer = ({ columns }) => {\n    const columnHeaders = [];\n    columns.forEach((column, columnIndex) => {\n      if (column.key === 'delete') {\n        columnHeaders.push(\n          <div\n            style={{ width: columns[columnIndex].width, paddingRight: 3 }}\n            key={`header_${columnIndex}`}\n          >\n            <IconButton\n              tooltip={intl.messages['viewSetManager.newViewSet']}\n              iconUrl={addIcon}\n              onClick={() => addViewSet()}\n              enabled={canAdd}\n            />\n          </div>,\n        );\n      } else {\n        columnHeaders.push(\n          <div key={`header_${columnIndex}`} className=\"viewsetmanager-header-wrapper\">\n            {columns[columnIndex].title}\n          </div>,\n        );\n      }\n    });\n\n    return columnHeaders;\n  };\n\n  const actions = getActions();\n  const data = getViewSets();\n  const columns = getColumns();\n\n  return (\n    <div>\n      <Dialog\n        title={<FormattedMessage id=\"viewSetManager.title\" />}\n        dialogActions={actions}\n        onClose={() => {\n          closeViewSetManager();\n        }}\n        open\n      >\n        <div className=\"viewsetmanager-headline-wrapper\">\n          <FormattedMessage id=\"viewSetManager.editViewSetHeadline\" />\n        </div>\n        <div className=\"viewsetmanager-table-wrapper\">\n          <AutoResizer key={`autoresizer`}>\n            {({ width, height }) => (\n              <Table\n                headerRenderer={headerRenderer}\n                columns={columns}\n                data={data}\n                width={width}\n                height={height - 20}\n                headerHeight={30}\n                rowHeight={30}\n                key=\"viewset-table\"\n              />\n            )}\n          </AutoResizer>\n        </div>\n      </Dialog>\n      <ConfirmDialog\n        open={isImportConfirmOpen}\n        onClose={(confirmed) => handleImportConfirmDialogClose(confirmed)}\n        title={<FormattedMessage id=\"viewSetManager.importConfirm.title\" />}\n        message={<FormattedMessage id=\"viewSetManager.importConfirm.message\" />}\n      />\n      <ConfirmDialog\n        open={viewsetToDelete !== ''}\n        onClose={(confirmed) => handleDeleteConfirmDialogClose(confirmed)}\n        message={\n          <FormattedMessage\n            id=\"viewSetManager.deleteConfirm.message\"\n            values={{ viewsetName: viewsetToDelete }}\n          />\n        }\n      />\n      <InformationDialog\n        onClose={() => {\n          setIsInformationDialogOpen(false);\n          if (shouldCloseViewSetManager) {\n            closeViewSetManager();\n          }\n        }}\n        open={isInformationDialogOpen}\n        title={informationDialogTitle}\n        message={informationDialogMessage}\n      />\n      <input ref={fileChooser} style={{ display: 'none' }} type=\"file\" onChange={onFileAdded} />\n    </div>\n  );\n};\n\nViewSetManager.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(ViewSetManager);\n","import PropTypes from 'prop-types';\n\nexport const viewSetType = PropTypes.shape({\n  id: PropTypes.string,\n});\n\nexport const mosaicViewType = PropTypes.oneOfType([viewSetType, PropTypes.string]);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nconst TopNavigationItem = ({ children }) => <div className=\"box-wrapper\">{children}</div>;\n\nTopNavigationItem.defaultProps = {\n  children: undefined,\n};\n\nTopNavigationItem.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default TopNavigationItem;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\nimport NavigationItem from '../../../../../../components/NavigationItem';\n\nconst PresetButton = ({ id, title, onClick, active }) => {\n  const presetButtonClass = classNames({\n    'preset-button': true,\n    'preset-button-active': active,\n  });\n  return (\n    <NavigationItem>\n      <button id={id} onClick={onClick} className={presetButtonClass}>\n        <span>{title}</span>\n      </button>\n    </NavigationItem>\n  );\n};\n\nPresetButton.defaultProps = {\n  id: undefined,\n  onClick: () => void 0,\n  active: false,\n};\n\nPresetButton.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  active: PropTypes.bool,\n};\n\nexport default PresetButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport { switchViewSet } from '../../../../redux/actions';\nimport { canReadViewSet, canEditViewSet } from '../../../../utils/permissions';\nimport { viewSetType, mosaicViewType } from '../../../ViewSet/types';\nimport PresetButton from './components/PresetButton';\n\nconst PresetSlider = ({ currentViewSet, createdViewSets, switchViewSet, myPermissions }) =>\n  canReadViewSet(myPermissions) || canEditViewSet(myPermissions) ? (\n    <div className=\"preset-slider-wrapper\">\n      {createdViewSets &&\n        createdViewSets.map((viewSet) => (\n          <PresetButton\n            title={viewSet.name || viewSet.id}\n            key={viewSet.id}\n            onClick={() => switchViewSet(viewSet)}\n            active={currentViewSet && currentViewSet.id === viewSet.id}\n          />\n        ))}\n    </div>\n  ) : (\n    <div></div>\n  );\n\nPresetSlider.defaultProps = {\n  currentViewSet: undefined,\n  createdViewSets: [],\n};\n\nPresetSlider.propTypes = {\n  currentViewSet: mosaicViewType,\n  createdViewSets: PropTypes.arrayOf(viewSetType),\n  switchViewSet: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  createdViewSets: Object.keys(state.viewSet.createdViewSets).map(\n    (key) => state.viewSet.createdViewSets[key],\n  ),\n  currentViewSet: state.viewSet.currentViewSet,\n  myPermissions: state.app.myPermissions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  switchViewSet: (viewSet) => dispatch(switchViewSet(viewSet)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PresetSlider);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\nimport ViewSetManagerIcon from '../../assets/icons/view-manager.svg';\nimport { setBottomNavHidden } from '../../redux/actions';\nimport { canReadViewSet, canEditViewSet } from '../../utils/permissions';\nimport ViewSetManager from '../ViewSetManager';\nimport PresetSlider from './components/PresetSlider';\n\nclass BottomNav extends Component {\n  state = {\n    selectedIndex: 0,\n    viewSetManagerOpen: false,\n  };\n  select = (index) => this.setState({ selectedIndex: index });\n\n  render() {\n    const { onSave, bottomNavHidden, isSVOConfigLoaded, myPermissions } = this.props;\n    return (\n      <div className={`bottom-nav-wrapper ${bottomNavHidden ? 'bottom-nav-hidden' : ''}`}>\n        <div className=\"bottom-nav\">\n          {isSVOConfigLoaded && <PresetSlider />}\n          {isSVOConfigLoaded && (canReadViewSet(myPermissions) || canEditViewSet(myPermissions)) ? (\n            <div\n              className=\"view-manager\"\n              onClick={() => {\n                this.setState({\n                  viewSetManagerOpen: !this.state.viewSetManagerOpen,\n                });\n              }}\n            >\n              <img src={ViewSetManagerIcon} alt=\"\" />\n              <FormattedMessage id=\"viewSetManager\" />\n            </div>\n          ) : undefined}\n        </div>\n        <button\n          className=\"bottom-hider\"\n          onClick={() => {\n            this.props.setBottomNavHidden(!bottomNavHidden);\n          }}\n        >\n          {bottomNavHidden ? 'show' : 'hide'}\n        </button>\n        {isSVOConfigLoaded && (\n          <div>\n            {this.state.viewSetManagerOpen && (\n              <ViewSetManager\n                onClose={() => this.setState({ viewSetManagerOpen: false })}\n                onSave={onSave}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nBottomNav.propTypes = {\n  setBottomNavHidden: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  bottomNavHidden: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  fullscreenMode: state.viewSet.fullscreenMode,\n  bottomNavHidden: state.viewSet.bottomNavHidden,\n  isSVOConfigLoaded: state.viewSet.isSVOConfigLoaded,\n  myPermissions: state.app.myPermissions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setBottomNavHidden: (hidden) => dispatch(setBottomNavHidden(hidden)),\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(BottomNav));\n","import { ReactNode, useRef, useState } from 'react';\nimport { ClickAwayListener, Paper, Popper } from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport './NavigationItem.scss';\n\nexport interface NavigationItemType {\n  id: string;\n  icon?: string;\n  className?: string;\n  content: ReactNode;\n  onClick?: () => void;\n  enabled: boolean;\n  children?: (NavigationItemType | null)[];\n}\n\ninterface NavigationItemProps {\n  item: NavigationItemType;\n  nested?: boolean;\n}\n\nexport const NavigationItem = ({ item, nested }: NavigationItemProps) => {\n  const itemRef = useRef<HTMLDivElement>(null);\n\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const hasChildren = !!item.children?.length;\n\n  return (\n    <>\n      <div\n        className={clsx('navigation-item', item.className)}\n        ref={itemRef}\n        style={{\n          pointerEvents: item.enabled ? 'auto' : 'none',\n          opacity: item.enabled ? '1.0' : '0.3',\n        }}\n      >\n        <button\n          className={clsx(\n            hasChildren && 'show-arrow',\n            nested && 'nested arrow-right',\n            openMenu && 'active',\n            (hasChildren || item.onClick) && 'clickable',\n          )}\n          onClick={() => {\n            if (item.onClick) {\n              item.onClick();\n            } else if (hasChildren) {\n              setOpenMenu(true);\n            }\n          }}\n        >\n          {item.icon && <img src={item.icon} />}\n          <span>{item.content}</span>\n        </button>\n      </div>\n      <Popper\n        open={openMenu}\n        anchorEl={itemRef.current}\n        placement={nested ? 'right-start' : 'bottom'}\n        style={{ zIndex: 9 }}\n      >\n        <ClickAwayListener onClickAway={() => setOpenMenu(false)}>\n          <Paper\n            elevation={4}\n            className=\"navigation-item-children-list\"\n            style={{ minWidth: itemRef.current?.getBoundingClientRect().width ?? 0 }}\n          >\n            {(item.children ?? []).map(\n              (child) => child && <NavigationItem key={child.id} item={child} nested />,\n            )}\n          </Paper>\n        </ClickAwayListener>\n      </Popper>\n    </>\n  );\n};\n","import Clock from 'react-live-clock';\nimport NavigationItem from '../../../../components/NavigationItem';\n\nimport './style.scss';\n\nconst DateTime = () => (\n  <NavigationItem>\n    <div className=\"date-time-wrapper\">\n      <Clock className=\"date\" format={'DD.MM.YYYY'} ticking />\n      <Clock className=\"time\" format={'HH:mm:ss'} ticking />\n    </div>\n  </NavigationItem>\n);\n\nexport default DateTime;\n","import { useSelector } from 'react-redux';\r\nimport NavigationItem from '../../../../components/NavigationItem';\r\nimport ConfigurationLock from '../../../../protobuf/ConfigurationLock';\r\n\r\nimport './style.scss';\r\n\r\nconst LockState = () => {\r\n  const configLock = useSelector<any>((state) => state.app.configurationLock) as ConfigurationLock;\r\n\r\n  return (\r\n    <NavigationItem>\r\n      <div className=\"lock-status\">\r\n        <p>Status: {configLock.isLocked() ? 'Locked' : 'Unlocked'}</p>\r\n        <p>\r\n          Owner: {configLock.isLocked() ? configLock.owner : 'None'}{' '}\r\n          {configLock.isLocked() ? configLock.host : '0.0.0.0'}\r\n        </p>\r\n        {/* <p>Host: {configLock.isLocked() ? configLock.host : '0.0.0.0'}</p> */}\r\n      </div>\r\n    </NavigationItem>\r\n  );\r\n};\r\nexport default LockState;\r\n","export default __webpack_public_path__ + \"static/media/play-multiple.92160d4a.svg\";","export default __webpack_public_path__ + \"static/media/language.0be28bcb.svg\";","export default __webpack_public_path__ + \"static/media/icons8-lock.b22b5188.svg\";","export default __webpack_public_path__ + \"static/media/icons8-padlock.048e7769.svg\";","import { ReactNode, useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport './style.scss';\r\n\r\ninterface TakeoverDialogProps {\r\n  open: boolean;\r\n  onAccept: () => void;\r\n  onReject: () => void;\r\n  title: ReactNode;\r\n  contentText: ReactNode;\r\n}\r\n\r\nexport const TakeoverDialog = (props: TakeoverDialogProps) => {\r\n  const timeoutInSeconds = 30;\r\n  const isActive = props.open;\r\n  const onAccept = props.onAccept;\r\n  const [timeLeft, setTimeLeft] = useState(timeoutInSeconds);\r\n\r\n  useEffect(() => {\r\n    let interval: ReturnType<typeof setInterval> | null = null;\r\n\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        setTimeLeft((timeLeft) => timeLeft - 1);\r\n      }, 1000);\r\n\r\n      if (timeLeft <= 0) {\r\n        onAccept();\r\n        clearInterval(interval);\r\n        setTimeLeft(timeoutInSeconds);\r\n      }\r\n    } else {\r\n      if (interval !== null) {\r\n        clearInterval(interval);\r\n      }\r\n      setTimeLeft(timeoutInSeconds);\r\n    }\r\n    return () => {\r\n      if (interval !== null) {\r\n        clearInterval(interval);\r\n      }\r\n    };\r\n  }, [isActive, onAccept, timeLeft]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">{props.contentText}</DialogContentText>\r\n      </DialogContent>\r\n      <Button onClick={props.onAccept} color=\"primary\">\r\n        <FormattedMessage id=\"accept\" />\r\n      </Button>\r\n      <Button onClick={props.onReject} color=\"primary\">\r\n        <FormattedMessage id=\"reject\" />\r\n      </Button>\r\n      <div className=\"auto-accept-container\">\r\n        <p>(auto accept in {timeLeft} seconds)</p>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { ChangeEventHandler, useCallback, useReducer, useState } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport lockIcon from '../../../assets/icons/icons8-lock.svg';\nimport padlockIcon from '../../../assets/icons/icons8-padlock.svg';\nimport ConfigurationLock from '../../../protobuf/ConfigurationLock';\nimport type Proxy from '../../../protobuf/Proxy';\nimport { NavigationItemType } from '../NavigationItem';\nimport { AlertDialog } from './AlertDialog';\nimport { TakeoverDialog } from './TakeoverDialog';\n\nconst formReducer = (state: any, event: any) => {\n  return {\n    ...state,\n    [event.name]: event.value,\n  };\n};\n\nexport const useLockStateHandlerNavigation = (): NavigationItemType => {\n  const intl = useIntl();\n  const proxy = useSelector<any>((state) => state.app.proxy) as Proxy;\n  const configLock = useSelector<any>((state) => state.app.configurationLock) as ConfigurationLock;\n  const loggedUser = useSelector<any>((state) => state.app.user);\n  const [formData, setFormData] = useReducer(formReducer, { scope: 1 });\n\n  const [openFormDialog, setOpenFormDialog] = useState(false);\n\n  const getLabel = useCallback(() => {\n    if (configLock.isLockedBySameUser(loggedUser)) {\n      return intl.messages['topNavigation.release'];\n    } else if (configLock.isLockedByOtherUser(loggedUser)) {\n      return intl.messages['topNavigation.takeover'];\n    } else {\n      return intl.messages['topNavigation.lock'];\n    }\n  }, [configLock, intl.messages, loggedUser]);\n\n  const handleChange: ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> = (event) => {\n    setFormData({\n      name: event.target.name,\n      value: event.target.value,\n    });\n  };\n\n  const handleClose: React.MouseEventHandler<HTMLButtonElement> = (event) => {\n    event.stopPropagation();\n    setOpenFormDialog(false);\n  };\n\n  const handleSubmit: React.MouseEventHandler<HTMLButtonElement> = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setOpenFormDialog(false);\n    formData.requestTakeover = configLock.isLockedByOtherUser(loggedUser);\n    proxy.subscribeToLockAcquisitionStream(formData);\n  };\n\n  return {\n    id: 'lock-state-handler',\n    icon: configLock.isLockedBySameUser(loggedUser) ? padlockIcon : lockIcon,\n    enabled: true,\n    content: (\n      <>\n        <div className=\"lock-state-handler\">\n          <p>{getLabel()}</p>\n        </div>\n        <Dialog open={openFormDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">\n            {configLock.isLockedByOtherUser(loggedUser) ? (\n              <FormattedMessage id=\"lockStateHandler.formDialog.takeoverConfigRequestTitle\" />\n            ) : (\n              <FormattedMessage id=\"lockStateHandler.formDialog.lockConfigRequestTitle\" />\n            )}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <FormattedMessage id=\"lockStateHandler.formDialog.lockConfigRequestContent\" />\n            </DialogContentText>\n            <TextField\n              InputLabelProps={{ shrink: true }}\n              autoFocus\n              margin=\"dense\"\n              id=\"lock-scope-id\"\n              name=\"scope\"\n              label={<FormattedMessage id=\"lockStateHandler.formDialog.lockScope\" />}\n              type=\"number\"\n              defaultValue=\"1\"\n              disabled={true}\n              onChange={handleChange}\n              fullWidth\n            />\n            <TextField\n              InputLabelProps={{ shrink: true }}\n              margin=\"dense\"\n              id=\"lock-description-id\"\n              name=\"description\"\n              label={<FormattedMessage id=\"lockStateHandler.formDialog.lockDescription\" />}\n              type=\"text\"\n              onChange={handleChange}\n              fullWidth\n            />\n            {configLock.isLockedByOtherUser(loggedUser) && (\n              <>\n                <TextField\n                  InputLabelProps={{ shrink: true }}\n                  margin=\"dense\"\n                  id=\"takeover-message-id\"\n                  name=\"takeoverMessage\"\n                  label={<FormattedMessage id=\"lockStateHandler.formDialog.takeoverMessage\" />}\n                  type=\"text\"\n                  onChange={handleChange}\n                  fullWidth\n                />\n              </>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              <FormattedMessage id=\"cancel\" />\n            </Button>\n            <Button onClick={handleSubmit} color=\"primary\">\n              <FormattedMessage id=\"submit\" />\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <AlertDialog\n          open={configLock.isConfigAlreadyLocked()}\n          title={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.lockAlreadyLocked\"\n              values={{ user: configLock.owner }}\n            />\n          }\n          contentText={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.lockDescription\"\n              values={{ description: configLock.lockDescription }}\n            />\n          }\n        >\n          <Button\n            onClick={() => {\n              proxy.closeAlertDialogs();\n            }}\n            color=\"primary\"\n          >\n            <FormattedMessage id=\"close\" />\n          </Button>\n        </AlertDialog>\n        <AlertDialog\n          open={configLock.isOwnerRejectedTakeover()}\n          title={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.ownerRejectedTakeover\"\n              values={{ user: configLock.owner }}\n            />\n          }\n          contentText={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.lockDescription\"\n              values={{ description: configLock.lockDescription }}\n            />\n          }\n        >\n          <Button\n            onClick={() => {\n              proxy.closeAlertDialogs();\n            }}\n            color=\"primary\"\n          >\n            <FormattedMessage id=\"close\" />\n          </Button>\n        </AlertDialog>\n        <AlertDialog\n          open={configLock.isWaitingForTakeoverResponse()}\n          title={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.waitingForTakeoverResponse\"\n              values={{ user: configLock.owner }}\n            />\n          }\n          contentText={\n            <FormattedMessage id=\"lockStateHandler.alertDialog.waitingForResponseInfo\" />\n          }\n        />\n        <TakeoverDialog\n          open={configLock.isTakeoverAttemptFromOtherUser()}\n          title={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.takeoverAttempt\"\n              values={{ user: configLock.takeoverUser }}\n            />\n          }\n          contentText={\n            <FormattedMessage\n              id=\"lockStateHandler.alertDialog.takeoverMessage\"\n              values={{ message: configLock.takeoverMessage }}\n            />\n          }\n          onAccept={() => {\n            proxy.passConfigLock({\n              lockId: configLock.lockId,\n              takeoverId: configLock.takeoverId,\n            });\n          }}\n          onReject={() => {\n            proxy.retainConfigLock({ takeoverId: configLock.takeoverId });\n          }}\n        />\n      </>\n    ),\n    onClick: () => {\n      if (\n        !openFormDialog &&\n        !configLock.isConfigAlreadyLocked() &&\n        !configLock.isOwnerRejectedTakeover() &&\n        !configLock.isWaitingForTakeoverResponse() &&\n        !configLock.isTakeoverAttemptFromOtherUser()\n      ) {\n        if (configLock.isLockedBySameUser(loggedUser)) {\n          proxy.unsubscribeFromLockAcquisitionStream();\n        } else {\n          setOpenFormDialog(true);\n        }\n      }\n    },\n  };\n};\n","import { useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport type Proxy from '../../../protobuf/Proxy';\nimport { setCurrentMode } from '../../../redux/actions';\nimport modes from '../../../utils/modes';\nimport { canEditSVOMode, canReadSVOMode } from '../../../utils/permissions';\nimport { NavigationItemType } from '../NavigationItem';\n\nconst selectableModes = Object.keys(modes).filter(\n  (m) => m !== 'unknownMode',\n) as (keyof typeof modes)[];\n\nexport const useModeSwitchNavigation = (): NavigationItemType | undefined => {\n  const dispatch = useDispatch();\n\n  const isSVOConfigLoaded = useSelector<any>((state) => state.viewSet.isSVOConfigLoaded);\n  const { myPermissions, currentMode, proxy } = useSelector<any>((state) => state.app) as {\n    myPermissions: Set<string>;\n    currentMode: string;\n    proxy: Proxy;\n  };\n\n  const canRead = canReadSVOMode(myPermissions);\n  const canEdit = canEditSVOMode(myPermissions);\n\n  const currentModeKey = useMemo(() => {\n    const modeId = currentMode ?? proxy.mode ?? modes.unknownMode.id;\n    return Object.keys(modes).find(\n      (modeKey) => modes[modeKey as typeof selectableModes[number]].id === modeId,\n    ) as keyof typeof modes;\n  }, [currentMode, proxy.mode]);\n\n  const children = useMemo(() => {\n    const changeMode = (_modeKey: string, modeId: string) => {\n      dispatch(setCurrentMode(modeId));\n    };\n\n    return selectableModes.map<NavigationItemType>((key) => ({\n      id: key,\n      onClick: () => {\n        changeMode(key, modes[key].id);\n      },\n      content: <FormattedMessage id={key} />,\n      icon: modes[key].iconSrc,\n      enabled: true,\n    }));\n  }, [dispatch]);\n\n  if (!isSVOConfigLoaded || (!canRead && !canEdit)) {\n    return undefined;\n  }\n\n  return {\n    id: 'mode-switch',\n    icon: modes[currentModeKey]?.iconSrc,\n    content: <FormattedMessage id={currentModeKey} />,\n    enabled: canEdit,\n    children,\n  };\n};\n","export default __webpack_public_path__ + \"static/media/description.7b05d18e.svg\";","import { NavigationItemType } from '../NavigationItem';\nimport { useInspectionStateNavigation } from './useInspectionStateNavigation';\nimport { useLanguageChooserNavigation } from './useLanguageChooserNavigation';\nimport { useLockStateHandlerNavigation } from './useLockStateHandlerNavigation';\nimport { useModeSwitchNavigation } from './useModeSwitchNavigation';\nimport { useStatusReportNavigation } from './useStatusReportNavigation';\nimport { useUserInfoNavigation } from './useUserInfoNavigation';\n\nimport './style.scss';\n\nexport const useNavigation = () => {\n  const userInfoNavigation = useUserInfoNavigation();\n  const languageChooserNavigation = useLanguageChooserNavigation();\n  const lockStateHandlerNavigation = useLockStateHandlerNavigation();\n  const inspectionStateNavigation = useInspectionStateNavigation();\n  const statusReportNavigation = useStatusReportNavigation();\n  const modeSwitchNavigation = useModeSwitchNavigation();\n\n  const navigation: (NavigationItemType | null)[] = [\n    modeSwitchNavigation ?? (undefined as never),\n    statusReportNavigation ?? (undefined as never),\n    inspectionStateNavigation ?? (undefined as never),\n    null,\n    lockStateHandlerNavigation,\n    userInfoNavigation,\n    languageChooserNavigation,\n  ].filter((item) => item !== undefined);\n\n  return { navigation };\n};\n","import { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport languageIcon from '../../../assets/icons/language.svg';\nimport { addUserSwitchedLanguageNotification, setLocale } from '../../../redux/actions';\nimport { languages } from '../../../translations';\nimport { NavigationItemType } from '../NavigationItem';\n\nexport const useLanguageChooserNavigation = (): NavigationItemType => {\n  const dispatch = useDispatch();\n  const locale = useSelector<any>((state) => state.app.locale) as string;\n\n  const children = useMemo<NavigationItemType[]>(\n    () =>\n      languages.map((language) => ({\n        id: language.locale,\n        content: language.name,\n        onClick: () => {\n          dispatch(setLocale(language.locale));\n          dispatch(addUserSwitchedLanguageNotification(language.locale));\n        },\n        enabled: true,\n      })),\n    [dispatch],\n  );\n\n  return {\n    id: 'language-chooser',\n    icon: languageIcon,\n    content: locale ?? '',\n    enabled: true,\n    children,\n  };\n};\n","import { useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport iconPause from '../../../assets/icons/pause.svg';\nimport iconPlayMultiple from '../../../assets/icons/play-multiple.svg';\nimport iconPlay from '../../../assets/icons/play.svg';\nimport Configuration from '../../../protobuf/Configuration';\nimport type Proxy from '../../../protobuf/Proxy';\nimport { canEditInspectionState, canReadInspectionState } from '../../../utils/permissions';\nimport { NavigationItemType } from '../NavigationItem';\n\nexport const useInspectionStateNavigation = (): NavigationItemType | undefined => {\n  const isSVOConfigLoaded = useSelector<any>((state) => state.viewSet.isSVOConfigLoaded);\n  const { proxy, configuration, pausedInspections, myPermissions } = useSelector<any>(\n    (state) => state.app,\n  ) as {\n    proxy: Proxy;\n    configuration: Configuration;\n    pausedInspections: string[];\n    myPermissions: Set<string>;\n  };\n  const inspections = useMemo(\n    () => (configuration && configuration.getInspections()) || [],\n    [configuration],\n  );\n  const allRunning = pausedInspections.length === 0;\n  const canRead = canReadInspectionState(myPermissions);\n  const canEdit = canEditInspectionState(myPermissions);\n\n  const children = useMemo(() => {\n    const items = inspections.map<NavigationItemType>((inspection: any) => {\n      const isPaused = (pausedInspections || []).includes(inspection.id);\n\n      return {\n        id: inspection.id,\n        onClick: () => {\n          isPaused\n            ? proxy.resumeRejectStream(inspection.id)\n            : proxy.pauseRejectStream(inspection.id);\n        },\n        content: inspection.name,\n        icon: isPaused ? iconPlay : iconPause,\n        className: isPaused ? 'paused-inspection' : undefined,\n        enabled: true,\n      };\n    });\n\n    items.unshift({\n      id: 'globalResumePause',\n      onClick: () => {\n        allRunning ? proxy.pauseRejectStream() : proxy.resumeRejectStream();\n      },\n      content: allRunning ? (\n        <FormattedMessage id=\"topNavigation.pauseAllInspections\" />\n      ) : (\n        <FormattedMessage id=\"topNavigation.resumeAllInspections\" />\n      ),\n      icon: allRunning ? iconPause : iconPlay,\n      className: 'all-inspections',\n      enabled: true,\n    });\n\n    return items;\n  }, [allRunning, inspections, pausedInspections, proxy]);\n\n  if (!isSVOConfigLoaded || (!canRead && !canEdit)) {\n    return undefined;\n  }\n\n  return {\n    id: 'inspection-state-navigation',\n    icon: iconPlayMultiple,\n    content: (\n      <FormattedMessage\n        id=\"topNavigation.inspectionState\"\n        values={{\n          runningInspections: inspections.length - pausedInspections.length,\n          numberOfInspections: inspections.length,\n        }}\n      />\n    ),\n    enabled: true,\n    children: canEdit ? children : undefined,\n  };\n};\n","import { useSelector } from 'react-redux';\nimport shortId from 'shortid';\nimport logIcon from '../../../assets/icons/description.svg';\nimport { canReadLogs } from '../../../utils/permissions';\nimport { NavigationItemType } from '../NavigationItem';\n\nexport const useStatusReportNavigation = (): NavigationItemType | undefined => {\n  const { notifications, myPermissions } = useSelector<any>((state) => state.app) as {\n    notifications: any[];\n    myPermissions: Set<string>;\n  };\n\n  if (!canReadLogs(myPermissions)) {\n    return undefined;\n  }\n\n  return {\n    id: 'status-report',\n    icon: logIcon,\n    enabled: true,\n    content: notifications[0]?.message,\n    children: notifications.map<NavigationItemType>((notification: any) => ({\n      id: notification.id ?? notification.timestamp ?? shortId.generate(),\n      content: (\n        <p key={shortId.generate()} className={`${notification.type} status`}>\n          {notification.timestamp}: <b>{notification.message}</b>{' '}\n          {notification.count > 1 ? `(${notification.count})` : ''}\n        </p>\n      ),\n      enabled: true,\n    })),\n  };\n};\n","import { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport iconOverlayList from '../../assets/icons/overlay-list.svg';\nimport KoerberLogo from '../../assets/logo/logo.svg';\nimport Logo from '../../components/layout/Logo';\nimport Configuration from '../../protobuf/Configuration';\nimport { setTopNavHidden } from '../../redux/actions';\nimport { NavigationItem } from './NavigationItem';\nimport DateTime from './components/DateTime';\nimport LockState from './components/LockState';\nimport { useNavigation } from './navigation/useNavigation';\n\nimport './style.scss';\n\nexport const TopNavigation = () => {\n  const { topNavHidden, isSVOConfigLoaded, unsavedChanges } = useSelector(\n    (state: any) => state.viewSet,\n  );\n  const configuration = useSelector((state: any) => state.app.configuration) as Configuration;\n  const dispatch = useDispatch();\n\n  const { navigation } = useNavigation();\n\n  const intl = useIntl();\n\n  const navClass = classNames({\n    nav: true,\n    'nav-hidden': topNavHidden,\n  });\n\n  const configName = useMemo(() => {\n    if (!isSVOConfigLoaded) {\n      return intl.messages['noConfigName'];\n    }\n    if (!configuration || !configuration.name) {\n      return intl.messages['unknownConfigName'];\n    }\n    return <span>{configuration.name}</span>;\n  }, [configuration, intl.messages, isSVOConfigLoaded]);\n\n  return (\n    <>\n      <div className={navClass}>\n        <button className=\"hider\" onClick={() => dispatch(setTopNavHidden(!topNavHidden))}>\n          {topNavHidden ? 'show' : 'hide'}\n        </button>\n        <div className=\"config-wrapper\">\n          <Logo src={KoerberLogo} title=\"logo\" />\n          {unsavedChanges ? <div style={{ fontStyle: 'italic' }}>{configName}*</div> : configName}\n        </div>\n        <div className=\"flex-container\">\n          {navigation.map((item, index) =>\n            item ? (\n              <NavigationItem key={item.id} item={item} />\n            ) : (\n              <span key={index} className=\"spacer\" />\n            ),\n          )}\n        </div>\n        <div className=\"responsive-menu\">\n          <NavigationItem\n            key=\"menu\"\n            item={{\n              id: 'responsive-menu',\n              content: 'Menu',\n              icon: iconOverlayList,\n              enabled: true,\n              children: navigation,\n            }}\n          />\n        </div>\n        <div className=\"separator\">\n          <DateTime />\n          <LockState />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport './style.scss';\n\nclass NoSVOConfigurationLoadedView extends Component {\n  render() {\n    return (\n      <div className=\"no-config-loaded-wrapper\">\n        <FormattedMessage id=\"noConfigLoaded\" />\n      </div>\n    );\n  }\n}\n\nexport default NoSVOConfigurationLoadedView;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport './style.scss';\n\ninterface ListSelectionProps {\n  headline?: React.ReactNode;\n  selectionItems?: {\n    id: number | string;\n    text: React.ReactNode;\n    icon: string;\n    enabled: boolean;\n  }[];\n  showCancel?: boolean;\n  onSelection: (itemId: string | number) => void;\n  cancelButtonProps?: {\n    text?: React.ReactNode;\n    icon?: string;\n    goBack?: () => void;\n  };\n}\n\nconst ListSelection = ({\n  headline = '',\n  selectionItems = [],\n  onSelection,\n  cancelButtonProps = {},\n  showCancel = false,\n}: ListSelectionProps) => (\n  <div>\n    <h3>{headline}</h3>\n    <ul className=\"list-wrapper\">\n      {selectionItems.map((item) => (\n        <li\n          className=\"selection-item\"\n          key={`li${item.id}`}\n          style={{\n            pointerEvents: item.enabled ? 'auto' : 'none',\n            opacity: item.enabled ? '1.0' : '0.3',\n          }}\n        >\n          <Button variant=\"outlined\" key={`button${item.id}`} onClick={() => onSelection(item.id)}>\n            {item.icon && <img src={item.icon} alt=\"inspection.name\" className=\"image-item\" />}\n            {item.text}\n          </Button>\n        </li>\n      ))}\n      {showCancel ? (\n        <li className=\"selection-item\" key=\"liCancel\">\n          <Button variant=\"contained\" color=\"primary\" onClick={cancelButtonProps.goBack}>\n            {cancelButtonProps.icon && (\n              <img src={cancelButtonProps.icon} alt=\"type.id\" className=\"image-item\" />\n            )}\n            {cancelButtonProps.text}\n          </Button>\n        </li>\n      ) : null}\n    </ul>\n  </div>\n);\n\nexport default ListSelection;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport BackIcon from '../../../../assets/icons/back.svg';\nimport InspectionIcon from '../../../../assets/icons/show.svg';\nimport ListSelection from '../../../../components/ListSelection';\n\nclass InspectionSelection extends Component {\n  getSelectionItems = () => {\n    const { configuration } = this.props;\n    const inspections = (configuration && configuration.getInspections()) || [];\n    const items = inspections.map((inspection) => {\n      return {\n        id: inspection.id,\n        text: inspection.name,\n        icon: InspectionIcon,\n        enabled: true,\n      };\n    });\n\n    return items;\n  };\n\n  render() {\n    const { onSelection, goBack, showCancel } = this.props;\n    const cancelButtonProps = {\n      text: <FormattedMessage id=\"viewTypeSelection.back\" />,\n      icon: BackIcon,\n      goBack,\n    };\n\n    const selectionItems = this.getSelectionItems();\n\n    return (\n      <div>\n        <ListSelection\n          headline={<FormattedMessage id=\"inspectionSelection.selectInspection\" />}\n          onSelection={onSelection}\n          cancelButtonProps={cancelButtonProps}\n          showCancel={showCancel}\n          selectionItems={selectionItems}\n        />\n      </div>\n    );\n  }\n}\n\nInspectionSelection.defaultProps = {};\n\nInspectionSelection.propTypes = {\n  onSelection: PropTypes.func.isRequired,\n  configuration: PropTypes.object,\n  goBack: PropTypes.func,\n  showCancel: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  configuration: state.app.configuration,\n});\n\nexport default connect(mapStateToProps)(InspectionSelection);\n","export default __webpack_public_path__ + \"static/media/filmstrip.c43ef800.svg\";","export default __webpack_public_path__ + \"static/media/list.7380903e.svg\";","export default __webpack_public_path__ + \"static/media/parameter.417d04e6.svg\";","export default __webpack_public_path__ + \"static/media/toolset.f1f1d3b2.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport BackIcon from '../../../../assets/icons/back.svg';\nimport ImageStripViewIcon from '../../../../assets/icons/filmstrip.svg';\nimport ImageViewIcon from '../../../../assets/icons/image.svg';\nimport ListViewIcon from '../../../../assets/icons/list.svg';\nimport ParameterViewIcon from '../../../../assets/icons/parameter.svg';\nimport toolsetIcon from '../../../../assets/icons/toolset.svg';\nimport ListSelection from '../../../../components/ListSelection';\nimport {\n  canAddImageView,\n  canAddListView,\n  canAddImageStripView,\n  canAddParameterView,\n  canAddToolSetView,\n} from '../../../../utils/permissions';\nimport {\n  PARAMETER_VIEW,\n  IMAGE_VIEW,\n  IMAGE_STRIP_VIEW,\n  LIST_VIEW,\n  TOOLSET_VIEW,\n} from '../../../ViewSetFactory';\n\nclass ViewTypeSelection extends Component {\n  render() {\n    const { onSelection, goBack, myPermissions, showCancel } = this.props;\n    const inspectionTypes = [\n      {\n        id: IMAGE_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.imageView\" />,\n        icon: ImageViewIcon,\n        enabled: canAddImageView(myPermissions),\n      },\n      {\n        id: PARAMETER_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.parameterView\" />,\n        icon: ParameterViewIcon,\n        enabled: canAddParameterView(myPermissions),\n      },\n      {\n        id: IMAGE_STRIP_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.imageStripView\" />,\n        icon: ImageStripViewIcon,\n        enabled: canAddImageStripView(myPermissions),\n      },\n      {\n        id: LIST_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.ListView\" />,\n        icon: ListViewIcon,\n        enabled: canAddListView(myPermissions),\n      },\n      {\n        id: TOOLSET_VIEW,\n        text: <FormattedMessage id=\"viewTypeSelection.toolset\" />,\n        icon: toolsetIcon,\n        enabled: canAddToolSetView(myPermissions),\n      },\n    ];\n    const cancelButtonProps = {\n      text: <FormattedMessage id=\"viewTypeSelection.back\" />,\n      icon: BackIcon,\n      goBack,\n    };\n\n    return (\n      <div>\n        <ListSelection\n          headline={<FormattedMessage id=\"viewTypeSelection.selectViewType\" />}\n          onSelection={onSelection}\n          cancelButtonProps={cancelButtonProps}\n          showCancel={showCancel}\n          selectionItems={inspectionTypes}\n        />\n      </div>\n    );\n  }\n}\n\nViewTypeSelection.defaultProps = {};\n\nViewTypeSelection.propTypes = {\n  onSelection: PropTypes.func.isRequired,\n  goBack: PropTypes.func,\n  showCancel: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  myPermissions: state.app.myPermissions,\n});\n\nexport default connect(mapStateToProps)(ViewTypeSelection);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { replaceViewInCurrentViewSet, purgeViewState } from '../../redux/actions';\nimport InspectionSelection from './components/InspectionSelection';\nimport ViewTypeSelection from './components/ViewTypeSelection';\nimport './style.scss';\n\nclass ViewSelection extends Component {\n  state = {\n    visibleComponent: 'ViewTypeSelection',\n    selectedInspectionId: 0,\n    selectedViewType: '',\n  };\n\n  componentDidMount() {\n    const { viewToShowWithoutInspection } = this.props;\n\n    if (viewToShowWithoutInspection) {\n      this.setState({\n        visibleComponent: 'InspectionSelection',\n        selectedViewType: viewToShowWithoutInspection,\n      });\n    }\n  }\n\n  setSelectedInspectionId = (inspectionId) => {\n    this.setState({\n      visibleComponent: '',\n      selectedInspectionId: inspectionId,\n    });\n\n    this.props.changeTitle(inspectionId);\n    this.updateView(inspectionId);\n  };\n\n  setSelectedViewType = (viewType) => {\n    this.setState({\n      visibleComponent: 'InspectionSelection',\n      selectedViewType: viewType,\n    });\n  };\n\n  goBackToViewTypeSelection = () => {\n    this.setState({\n      visibleComponent: 'ViewTypeSelection',\n      selectedInspectionId: 0,\n    });\n  };\n\n  cancelViewSelection = () => {\n    const { changeContent } = this.props;\n    changeContent();\n  };\n\n  updateView = (inspectionId) => {\n    const { replaceViewInCurrentViewSet, viewId, changeContent } = this.props;\n    const { selectedViewType } = this.state;\n\n    replaceViewInCurrentViewSet(viewId, selectedViewType, inspectionId);\n\n    changeContent();\n  };\n\n  render() {\n    const { showCancel } = this.props;\n    const { visibleComponent } = this.state;\n\n    return (\n      <div className=\"view-selection-wrapper\">\n        {(() => {\n          switch (visibleComponent) {\n            case 'InspectionSelection':\n              return (\n                <InspectionSelection\n                  onSelection={this.setSelectedInspectionId}\n                  goBack={this.goBackToViewTypeSelection}\n                  showCancel\n                />\n              );\n            case 'ViewTypeSelection':\n              return (\n                <ViewTypeSelection\n                  onSelection={this.setSelectedViewType}\n                  goBack={this.cancelViewSelection}\n                  showCancel={showCancel}\n                />\n              );\n            default:\n              return <div></div>;\n          }\n        })()}\n      </div>\n    );\n  }\n}\n\nViewSelection.propTypes = {\n  replaceViewInCurrentViewSet: PropTypes.func.isRequired,\n  viewId: PropTypes.string.isRequired,\n  changeContent: PropTypes.func,\n  changeTitle: PropTypes.func,\n  showCancel: PropTypes.bool,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  replaceViewInCurrentViewSet: (viewId, replacementComponentId, inspectionId) => {\n    dispatch(purgeViewState(undefined, viewId));\n    dispatch(replaceViewInCurrentViewSet(viewId, replacementComponentId, inspectionId));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(ViewSelection);\n","import { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { MosaicWindow, SplitButton } from 'react-mosaic-component';\nimport { connect } from 'react-redux';\nimport shortId from 'shortid';\n\nimport CloseIcon from '../../assets/icons/close.svg';\nimport EditIcon from '../../assets/icons/edit.svg';\nimport KeyHandler from '../../components/KeyHandler';\nimport IconButton from '../../components/buttons/IconButton';\nimport { isObjectValid } from '../../utils/objectValidator';\nimport {\n  canEditViewSet,\n  canEditImageView,\n  canEditListView,\n  canEditImageStripView,\n  canEditParameterView,\n  canEditToolSetView,\n  canDeleteImageView,\n  canDeleteListView,\n  canDeleteImageStripView,\n  canDeleteParameterView,\n  canDeleteToolSetView,\n} from '../../utils/permissions';\nimport ViewSetFactory, {\n  IMAGE_VIEW,\n  LIST_VIEW,\n  PARAMETER_VIEW,\n  IMAGE_STRIP_VIEW,\n  TOOLSET_VIEW,\n} from '../../views/ViewSetFactory';\nimport NoSVOConfigurationLoadedView from '../NoSVOConfigurationLoadedView';\nimport ViewSelection from '../ViewSelection';\nimport { mosaicViewType } from './types';\n\nconst viewSetFactory = new ViewSetFactory();\n\nclass SVOView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFullscreen: false,\n      resetView: false,\n      selectedInspectionId: 0,\n      isConfirmOpen: false,\n    };\n  }\n\n  setFullscreen = (isFullscreen) =>\n    // this function can be triggered from reducer\n    // where state modifications are not allowed\n    setTimeout(() => this.setState({ isFullscreen }), 0);\n\n  resetView = () => {\n    this.setState({\n      resetView: true,\n    });\n  };\n\n  removeIdsForUnknownInspectionIds = (currentViewSet, inspectionIds) => {\n    const viewSet = currentViewSet.viewSet;\n\n    Object.keys(viewSet).forEach((viewId) => {\n      const inspectionId = viewSet[viewId].inspectionId;\n      if (!inspectionIds.includes(inspectionId)) {\n        delete viewSet[viewId].id;\n        delete viewSet[viewId].inspectionId;\n      }\n    });\n  };\n\n  canEditCurrentView = () => {\n    const { id, views, myPermissions } = this.props;\n    if (views && views.viewSet && views.viewSet[id]) {\n      switch (views.viewSet[id].viewComponentClassId) {\n        case IMAGE_VIEW:\n          return canEditImageView(myPermissions);\n        case LIST_VIEW:\n          return canEditListView(myPermissions);\n        case IMAGE_STRIP_VIEW:\n          return canEditImageStripView(myPermissions);\n        case PARAMETER_VIEW:\n          return canEditParameterView(myPermissions);\n        case TOOLSET_VIEW:\n          return canEditToolSetView(myPermissions);\n        default:\n          return false;\n      }\n    }\n\n    return false;\n  };\n\n  canDeleteCurrentView = () => {\n    const { id, views, myPermissions } = this.props;\n    if (views && views.viewSet && views.viewSet[id]) {\n      switch (views.viewSet[id].viewComponentClassId) {\n        case IMAGE_VIEW:\n          return canDeleteImageView(myPermissions);\n        case LIST_VIEW:\n          return canDeleteListView(myPermissions);\n        case IMAGE_STRIP_VIEW:\n          return canDeleteImageStripView(myPermissions);\n        case PARAMETER_VIEW:\n          return canDeleteParameterView(myPermissions);\n        case TOOLSET_VIEW:\n          return canDeleteToolSetView(myPermissions);\n        default:\n          return false;\n      }\n    }\n\n    return false;\n  };\n\n  getInspectionId = () => {\n    const { id, views } = this.props;\n    const { selectedInspectionId } = this.state;\n\n    return selectedInspectionId || (views.viewSet[id] && views.viewSet[id].inspectionId);\n  };\n\n  render() {\n    const {\n      configuration,\n      id,\n      path,\n      views,\n      dispatch,\n      editingViewIds,\n      intl,\n      windowName,\n      isSVOConfigLoaded,\n      myPermissions,\n    } = this.props;\n    const { isFullscreen, resetView, selectedInspectionId } = this.state;\n    const viewClass = classNames({\n      fullscreen: isFullscreen,\n      'editing-focus': editingViewIds.includes(id),\n    });\n\n    const inspectionId = this.getInspectionId();\n    let inspectionName = '<UNKNOWN INSPECTION>';\n    if (configuration) {\n      const name = configuration.getInspectionName(inspectionId);\n      if (name && name.length > 0) {\n        inspectionName = `[${name}]`;\n      }\n      if (windowName && !resetView) {\n        inspectionName = `${inspectionName} ${windowName}`;\n      }\n\n      const currentInspections =\n        configuration &&\n        configuration.inspections &&\n        configuration.inspections.map((inspection) => inspection.id);\n      if (currentInspections) {\n        this.removeIdsForUnknownInspectionIds(views, currentInspections);\n      }\n    }\n\n    const hasInspectionId = views.viewSet && views.viewSet[id] && views.viewSet[id].inspectionId;\n    const viewToShowWithoutInspection =\n      !hasInspectionId &&\n      views.viewSet &&\n      views.viewSet[id] &&\n      views.viewSet[id].viewComponentClassId;\n\n    const toolbarControls = [];\n\n    if (canEditViewSet(myPermissions)) {\n      toolbarControls.push(<SplitButton key=\"splitButton\" />);\n    }\n\n    toolbarControls.push(\n      <IconButton\n        tooltip={intl.messages['viewTypeSelection.chooseViewTooltip']}\n        onClick={() => this.resetView(id)}\n        iconUrl={EditIcon}\n        key=\"swapButton\"\n        enabled={this.canEditCurrentView()}\n      />,\n    );\n    toolbarControls.push(\n      <IconButton\n        tooltip={intl.messages['svoView.closeView']}\n        onClick={() => this.props.onCloseView()}\n        iconUrl={CloseIcon}\n        key=\"customRemoveButton\"\n        style={{ width: '18px', height: '18px' }}\n        enabled={resetView || !hasInspectionId || this.canDeleteCurrentView()}\n      />,\n    );\n\n    return (\n      <MosaicWindow\n        className={viewClass}\n        createNode={() => shortId.generate()}\n        title={\n          (selectedInspectionId ||\n            (views.viewSet && views.viewSet[id] && views.viewSet[id].titleId)) &&\n          this.props.intl.formatMessage(\n            {\n              id:\n                selectedInspectionId || windowName\n                  ? 'svoView.emptyViewInspectionTemplate'\n                  : views.viewSet[id].titleId,\n            },\n            {\n              inspectionName,\n            },\n          )\n        }\n        toolbarControls={isSVOConfigLoaded ? toolbarControls : []}\n        path={path}\n        draggable={canEditViewSet(myPermissions)}\n      >\n        <KeyHandler view={this} dispatch={dispatch} editingViewIds={editingViewIds}>\n          {!resetView && hasInspectionId ? (\n            viewSetFactory.createViewInstance(views.viewSet[id], {\n              ...views.viewSet[id].passedProps,\n              id,\n              inspectionId: views.viewSet[id].inspectionId,\n            })\n          ) : isSVOConfigLoaded ? (\n            <ViewSelection\n              viewId={id}\n              changeContent={() => this.setState({ resetView: false, selectedInspectionId: 0 })}\n              changeTitle={(selectedInspectionId) => this.setState({ selectedInspectionId })}\n              showCancel={resetView}\n              viewToShowWithoutInspection={viewToShowWithoutInspection}\n            />\n          ) : (\n            <NoSVOConfigurationLoadedView />\n          )}\n        </KeyHandler>\n      </MosaicWindow>\n    );\n  }\n}\n\nSVOView.defaultProps = {\n  editingViewIds: [],\n};\n\nSVOView.propTypes = {\n  id: PropTypes.string.isRequired,\n  path: PropTypes.arrayOf(PropTypes.string).isRequired,\n  views: mosaicViewType.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  editingViewIds: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { views, id } = ownProps;\n  const inspectionId = isObjectValid(() => views.viewSet[id].inspectionId);\n  const configuration = state.app.configuration;\n  const isSVOConfigLoaded = state.viewSet.isSVOConfigLoaded;\n  const myPermissions = state.app.myPermissions;\n\n  let windowName = isObjectValid(() => state.inspections[inspectionId].views[id].windowName);\n  if (windowName) {\n    const inspectionName = configuration.getInspectionName(inspectionId);\n    windowName = windowName.replace(`Inspections.${inspectionName}.`, '');\n    return {\n      configuration,\n      windowName,\n      isSVOConfigLoaded,\n      myPermissions,\n    };\n  }\n  return {\n    configuration,\n    isSVOConfigLoaded,\n    myPermissions,\n  };\n};\n\nconst mapDispatchToProps = () => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(SVOView));\n","import { useCallback, useMemo, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  Mosaic,\n  MosaicBranch,\n  MosaicContext,\n  MosaicNode,\n  MosaicPath,\n} from 'react-mosaic-component';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport {\n  increaseViewSizeChangeCounter,\n  purgeViewState,\n  clearCurrentView,\n} from '../../redux/actions/index';\nimport { Inspections } from '../../types/InspectionsType';\nimport { canEditViewSet } from '../../utils/permissions';\nimport SVOView from './SVOView';\n\nimport './style.scss';\n\ninterface SVOViewSchema {\n  viewId: string | number;\n  path: MosaicBranch[];\n  remove: (path: MosaicPath) => void;\n}\n\ninterface ViewSchema {\n  id: string;\n  name: string;\n  initialValue: MosaicNode<string | number> | null;\n  viewSet: Record<\n    string,\n    {\n      id: string;\n      inspectionId: number;\n      titleId: string;\n      viewComponentClassId: string;\n    }\n  >;\n}\n\ninterface ViewSetProps {\n  views: ViewSchema;\n  onChange: (layout: MosaicNode<string | number> | null) => void;\n  topNavHidden?: boolean;\n  bottomNavHidden?: boolean;\n}\n\nconst ViewSet = ({\n  views,\n  onChange,\n  topNavHidden = false,\n  bottomNavHidden = false,\n}: ViewSetProps) => {\n  const inspections = useSelector<any>((state) => state.inspections) as Inspections;\n  const myPermissions = useSelector<any>((state) => state.app?.myPermissions) as Set<string>;\n\n  const dispatch = useDispatch();\n\n  const mosaic = useRef(null);\n\n  const [viewToClose, setViewToClose] = useState<SVOViewSchema | null>(null);\n\n  const editingViewIds = useMemo(\n    () =>\n      Object.keys(inspections).map(\n        (inspection) => inspections[inspection].sharedState?.editingViewId,\n      ),\n    [inspections],\n  );\n\n  const viewSetClass = classNames({\n    'view-set-wrapper': true,\n    'bottom-nav-offset': !bottomNavHidden,\n    'top-nav-hidden': !topNavHidden,\n  });\n\n  const handleConfirmDialogClose = useCallback(\n    (confirmed: boolean) => {\n      if (confirmed && viewToClose) {\n        const { viewId, path, remove } = viewToClose;\n        const inspectionId = views.viewSet[viewId] && views.viewSet[viewId].inspectionId;\n        if (typeof views.initialValue === 'string') {\n          dispatch(clearCurrentView());\n        }\n        dispatch(purgeViewState(inspectionId, viewId));\n\n        remove(path);\n      }\n      setViewToClose(null);\n    },\n    [dispatch, viewToClose, views.initialValue, views.viewSet],\n  );\n\n  return (\n    <div className={viewSetClass}>\n      <ConfirmDialog\n        open={!!viewToClose}\n        onClose={handleConfirmDialogClose}\n        message={<FormattedMessage id=\"svoView.closeViewConfirmation\" />}\n      />\n      <Mosaic\n        onChange={(layout: MosaicNode<string | number> | null) => {\n          onChange(layout);\n          dispatch(increaseViewSizeChangeCounter());\n        }}\n        ref={mosaic}\n        renderTile={(id, path) => (\n          <MosaicContext.Consumer>\n            {({ mosaicActions }) => (\n              <SVOView\n                key={id}\n                id={id}\n                path={path}\n                views={views}\n                dispatch={dispatch}\n                editingViewIds={editingViewIds}\n                onCloseView={() => {\n                  setViewToClose({ viewId: id, path, remove: mosaicActions.remove });\n                }}\n              />\n            )}\n          </MosaicContext.Consumer>\n        )}\n        initialValue={views.initialValue}\n        resize={canEditViewSet(myPermissions) ? { minimumPaneSizePercentage: 10 } : 'DISABLED'}\n      />\n    </div>\n  );\n};\n\nexport default ViewSet;\n","import React, { Component } from 'react';\nimport throttle from 'lodash/throttle';\nimport PropTypes from 'prop-types';\nimport { IntlProvider } from 'react-intl';\nimport { connect, ReactReduxContext } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport ModalNotification from '../components/ModalNotification.js';\nimport ProtobufType from '../components/Protobuf/ProtobufType';\nimport {\n  setViewSet,\n  setCurrentLayout,\n  addConnectionEstablishedNotification,\n  addConnectionLostNotification,\n  saveClientChunk,\n  closeHelpView,\n  increaseViewSizeChangeCounter,\n  changeViewSetAfterLoading,\n} from '../redux/actions';\nimport translations from '../translations';\nimport BottomNavigation from '../views/BottomNavigation';\nimport HelpView from '../views/HelpView';\nimport { TopNavigation } from '../views/TopNavigation';\nimport ViewSet from '../views/ViewSet';\nimport ViewSetFactory, { DEFAULT_VIEWSET } from '../views/ViewSetFactory';\n\nclass SVObserver extends Component {\n  static contextType = ReactReduxContext;\n  state = {\n    viewSetFactory: new ViewSetFactory(),\n    throttledWindwResizeHandler: throttle(() => this.props.increaseChangeCounter(), 500),\n  };\n\n  handleBeforeUnload(event) {\n    event.preventDefault();\n    event.returnValue = '';\n  }\n\n  componentDidMount() {\n    if (!this.props.currentViewSet) {\n      const viewSetId = DEFAULT_VIEWSET;\n      const viewSet = this.state.viewSetFactory.getViewSet(viewSetId);\n      this.props.setViewSet(viewSet, viewSet.id);\n    }\n\n    if (this.props.defaultViewSetName) {\n      this.props.changeViewSetAfterLoading(this.props.defaultViewSetName);\n    }\n\n    if (this.props.protobuf && this.props.socket) {\n      this.onWebsocketConnect(this.props.protobuf);\n    }\n\n    window.addEventListener('resize', this.state.throttledWindwResizeHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.state.throttledWindwResizeHandler);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.socket !== this.props.socket && nextProps.protobuf && nextProps.socket) {\n      this.onWebsocketConnect(nextProps.protobuf);\n    }\n    if (nextProps.socket !== this.props.socket && !nextProps.socket) {\n      this.onWebsocketDisconnect();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { unsavedChanges } = this.props;\n    if (unsavedChanges && prevProps.currentViewSet) {\n      window.addEventListener('beforeunload', this.handleBeforeUnload);\n    } else {\n      window.removeEventListener('beforeunload', this.handleBeforeUnload);\n    }\n  }\n\n  onWebsocketConnect = async () => {\n    this.props.addConnectionEstablishedNotification();\n  };\n\n  onWebsocketDisconnect = () => {\n    this.props.addConnectionLostNotification();\n  };\n\n  saveConfiguration() {\n    const currentState = this.context.store.getState();\n    this.props.saveClientChunk(this.props.protobuf, currentState);\n  }\n\n  render() {\n    const {\n      locale,\n      currentViewSet,\n      bottomNavHidden,\n      topNavHidden,\n      modalNotificationData,\n      isHelpViewOpen,\n      closeHelpView,\n    } = this.props;\n\n    if (!this.props.user || !this.props.authToken) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <IntlProvider locale={locale} messages={translations[locale]}>\n        <div className=\"vh-100 center\">\n          <ModalNotification\n            visible={!!modalNotificationData}\n            message={modalNotificationData && modalNotificationData.message}\n          />\n          <TopNavigation onLoggedOut={this.props.onLoggedOut} />\n          {!modalNotificationData && currentViewSet && (\n            <ViewSet\n              views={currentViewSet}\n              onChange={(layout) => {\n                this.props.setLayout(layout);\n              }}\n              bottomNavHidden={bottomNavHidden}\n              topNavHidden={topNavHidden}\n            />\n          )}\n          <BottomNavigation onSave={() => this.saveConfiguration()} />\n          <HelpView open={isHelpViewOpen} onClose={() => closeHelpView()}></HelpView>\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n\nSVObserver.defaultProps = {\n  bottomNavHidden: false,\n  topNavHidden: false,\n  protobuf: undefined,\n  viewSetTemplate: undefined,\n  user: undefined,\n  authToken: undefined,\n  location: { state: {} },\n  currentViewSet: undefined,\n};\n\nSVObserver.propTypes = {\n  locale: PropTypes.string.isRequired,\n  user: PropTypes.shape({ name: PropTypes.string }),\n  authToken: PropTypes.string,\n  currentViewSet: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({ id: PropTypes.string }),\n  ]),\n  bottomNavHidden: PropTypes.bool,\n  topNavHidden: PropTypes.bool,\n  setLayout: PropTypes.func.isRequired,\n  setViewSet: PropTypes.func.isRequired,\n  viewSetTemplate: PropTypes.string,\n  addConnectionEstablishedNotification: PropTypes.func.isRequired,\n  addConnectionLostNotification: PropTypes.func.isRequired,\n  protobuf: ProtobufType,\n  location: PropTypes.shape({ state: PropTypes.any }),\n};\n\nconst mapStateToProps = (state) => ({\n  isHelpViewOpen: state.app.isHelpViewOpen,\n  locale: state.app.locale,\n  protobuf: state.app.protobuf,\n  socket: state.app.socket,\n  user: state.app.user,\n  authToken: state.app.authToken,\n  currentViewSet: state.viewSet.currentViewSet,\n  bottomNavHidden: state.viewSet.bottomNavHidden,\n  topNavHidden: state.viewSet.topNavHidden,\n  defaultViewSetName: state.viewSet.defaultViewSetName,\n  createdViewSets: state.app.createdViewSets,\n  modalNotificationData: state.app.modalNotificationData,\n  increaseChangeCounter: PropTypes.func.isRequired,\n  unsavedChanges: state.viewSet.unsavedChanges,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  closeHelpView: () => {\n    dispatch(closeHelpView());\n  },\n  setViewSet: (viewSet, viewSetId) => {\n    dispatch(setViewSet(viewSet, viewSetId));\n  },\n  setLayout: (layout) => {\n    dispatch(setCurrentLayout(layout));\n  },\n  addConnectionEstablishedNotification: () => {\n    dispatch(addConnectionEstablishedNotification());\n  },\n  addConnectionLostNotification: () => {\n    dispatch(addConnectionLostNotification());\n  },\n  saveClientChunk: (protobuf, chunk) => {\n    dispatch(saveClientChunk(protobuf, chunk));\n  },\n  increaseChangeCounter: () => {\n    dispatch(increaseViewSizeChangeCounter());\n  },\n  changeViewSetAfterLoading: (name) => {\n    dispatch(changeViewSetAfterLoading(name));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SVObserver);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport DatabaseGatewayPage from './pages/DatabaseGatewayPage';\nimport DebuggerPage from './pages/DebuggerPage';\nimport HmiLoginPage from './pages/HmiLoginPage';\nimport LogoutPage from './pages/LogoutPage';\nimport PermissionPage from './pages/PermissionPage';\nimport SVObserver from './pages/SVObserver';\n\nconst App = ({ user, authToken, onLoggedOut }) => {\n  const dispatch = useDispatch();\n  dispatch({\n    type: 'LOG_IN',\n    authToken,\n    user,\n  });\n\n  return (\n    <Router>\n      <div>\n        <Route exact path={'/'} render={() => <Redirect to=\"/app\" />} />\n        <Route\n          path={'/app'}\n          render={(props) => <SVObserver {...props} onLoggedOut={onLoggedOut} />}\n        />\n        <Route path={'/hmi-v1'} component={HmiLoginPage} />\n        <Route path={'/permissions'} component={PermissionPage} />\n        <Route\n          path={'/logout'}\n          render={(props) => <LogoutPage {...props} onLoggedOut={onLoggedOut} />}\n        />\n        <Route path={'/databasegateway'} component={DatabaseGatewayPage} />\n        <Route path={'/debugger'} component={DebuggerPage} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\n\nimport { logIn } from '../utils/authentication';\n\nconst paperStyle = {\n  width: 400,\n  margin: 20,\n  padding: 25,\n  display: 'inline-block',\n};\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      password: null,\n    };\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    logIn(this.state.username, this.state.password)\n      .then((data) => this.props.onLogin(data))\n      .catch(() => this.setState({ loginFailed: true }));\n  };\n\n  render() {\n    return (\n      <div className=\"flex items-center justify-center\" id=\"login-page\">\n        <Paper elevation={5} style={paperStyle}>\n          {this.state.loginFailed ? <p className=\"red\">Log In failed</p> : null}\n          <form onSubmit={this.onSubmit}>\n            <TextField\n              label=\"Username\"\n              style={{ width: '100%' }}\n              margin=\"dense\"\n              type=\"username\"\n              onChange={(e) => {\n                this.setState({\n                  username: e.target.value,\n                });\n              }}\n            />\n            <br />\n            <TextField\n              label=\"Password\"\n              style={{ width: '100%' }}\n              autoComplete=\"current-password\"\n              margin=\"dense\"\n              type=\"password\"\n              onChange={(e) => {\n                this.setState({\n                  password: e.target.value,\n                });\n              }}\n            />\n            <br />\n            <br />\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              LogIn\n            </Button>\n          </form>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  onLogin: PropTypes.func.isRequired,\n};\n\nexport default LoginPage;\n","import isEqual from 'lodash/isEqual';\n\nimport ConfigurationLock from '../../protobuf/ConfigurationLock';\nimport ProtobufConnector from '../../protobuf/ProtobufConnector';\nimport Proxy from '../../protobuf/Proxy';\nimport { removeAllUserInfoFromStorage, saveUserInfoToStorage } from '../../utils/localStorage';\nimport logger from '../../utils/logger';\n\nconst NUMBER_OF_NOTIFICATIONS_SHOWN = 50;\n\nfunction createInitialAppState({ websocketUrl, dispatch, user, authToken }) {\n  const connector = new ProtobufConnector(websocketUrl, dispatch, authToken);\n  const proxy = new Proxy(dispatch);\n  const configurationLock = new ConfigurationLock({});\n  const inspectionToolsetMappings = new Map();\n  const locale = localStorage.getItem('CURRENT_LOCALE');\n  logger.setProxy(proxy);\n  return {\n    connection: null,\n    notifications: [],\n    mode: 0,\n    navigationHidden: false,\n    locale: locale || 'en',\n    authToken,\n    user,\n    currentMode: null,\n    pausedInspections: [],\n    connector,\n    protobuf: undefined,\n    socket: undefined,\n    proxy,\n    saveOperationInProcess: false,\n    currentClientChunkRevision: 0,\n    modalNotificationData: null,\n    focusedViewType: null,\n    isHelpViewOpen: false,\n    configuration: null,\n    configurationLock,\n    inspectionToolsetMappings,\n    isBrowserWindowVisible: true,\n  };\n}\n\nconst appReducer = (params) => {\n  const initalAppState = createInitialAppState(params);\n  return (state = initalAppState, action) => {\n    switch (action.type) {\n      case 'SET_PROTOBUF_STATIC_INITIALIZED':\n        state.proxy.setProtobufStaticInitialized();\n        return state;\n      case 'SET_PROTOBUF': {\n        const { protobuf, socket } = action;\n        protobuf.onConnect(socket);\n        state.proxy.setProtobuf(protobuf);\n        return Object.assign({}, state, { protobuf, socket });\n      }\n      case 'ADD_NOTIFICATION': {\n        const newNotifications = getNewNotifications(action.notification, state);\n\n        return Object.assign({}, state, {\n          notifications: newNotifications,\n        });\n      }\n      case 'LOG_IN':\n        saveUserInfoToStorage(action.authToken, action.user);\n        state.connector.connectWithToken(action.authToken);\n        return { ...state, authToken: action.authToken, user: action.user };\n      case 'LOG_OUT':\n        removeAllUserInfoFromStorage();\n        setTimeout(() => state.connector.disconnect());\n        return state;\n      case 'AUTH_TOKEN_EXPIRED':\n        removeAllUserInfoFromStorage();\n        return { ...state, authToken: undefined, user: undefined };\n      case 'SET_LOCALE':\n        localStorage.setItem('CURRENT_LOCALE', action.locale);\n        return { ...state, locale: action.locale };\n      case 'ON_NAVIGATION_HIDDEN': {\n        return Object.assign({}, state, {\n          navigationHidden: !state.navigationHidden,\n        });\n      }\n      case 'SHOW_GLOBAL_MESSAGE_OVERLAY': {\n        const { message } = action;\n        logger.info({ message }, 'Showing global message overlay');\n        return {\n          ...state,\n          modalNotificationData: {\n            message,\n          },\n        };\n      }\n      case 'HIDE_GLOBAL_MESSAGE_OVERLAY':\n        logger.info('Hiding global message overlay');\n        return {\n          ...state,\n          modalNotificationData: null,\n        };\n      case 'SET_CURRENT_MODE':\n        state.proxy.setMode(action.mode);\n        return state;\n      case 'SET_CURRENT_MODE_DONE':\n        return {\n          ...state,\n          currentMode: action.mode,\n        };\n      case 'SET_PAUSED_INSPECTIONS':\n        return {\n          ...state,\n          pausedInspections: action.pausedInspections,\n        };\n      case 'UPDATE_CLIENT_CHUNK_REVISION':\n        return {\n          ...state,\n          currentClientChunkRevision: action.revision,\n        };\n\n      case 'UPDATE_SAVE_OPERATION_IN_PROCESS':\n        return {\n          ...state,\n          saveOperationInProcess: action.inProcess,\n        };\n      case 'SET_CONFIGURATION':\n        return {\n          ...state,\n          configuration: action.configuration,\n        };\n      case 'SET_CONFIGURATION_LOCK':\n        return {\n          ...state,\n          configurationLock: action.configurationLock,\n        };\n      case 'SET_INSPECTION_TOOLSET_MAPPINGS':\n        return {\n          ...state,\n          inspectionToolsetMappings: action.mappings,\n        };\n      case 'SET_FOCUSED_VIEW_TYPE':\n        return {\n          ...state,\n          focusedViewType: action.viewType,\n        };\n\n      case 'OPEN_HELP_VIEW':\n        return {\n          ...state,\n          isHelpViewOpen: action.isHelpViewOpen,\n        };\n\n      case 'CLOSE_HELP_VIEW':\n        return {\n          ...state,\n          isHelpViewOpen: action.isHelpViewOpen,\n        };\n\n      case 'SET_GROUP_PERMISSIONS':\n        return {\n          ...state,\n          groupPermissions: action.groupPermissions,\n        };\n\n      case 'SET_MY_PERMISSIONS':\n        return {\n          ...state,\n          myPermissions: action.myPermissions,\n        };\n\n      case 'SET_BROWSER_WINDOW_VISIBILITY':\n        return {\n          ...state,\n          isBrowserWindowVisible: action.visible,\n        };\n\n      case 'SET_DATABASE_GATEWAY_CHUNK':\n        return {\n          ...state,\n          databaseGatewayConfig: action.chunk,\n        };\n\n      default:\n        return state;\n    }\n  };\n};\n\nfunction getNewNotifications(notification2Add, state) {\n  let newNotifications = [...state.notifications];\n  let notification = addTimestampToNotification(notification2Add, state.locale);\n\n  const equalsLastNotification = equalsLastNotificationCurrentNotification(\n    notification,\n    newNotifications,\n  );\n\n  if (!equalsLastNotification) {\n    notification = setCountForNotification(notification);\n    newNotifications.unshift(notification);\n  } else {\n    newNotifications[0] = setCountForNotification(newNotifications[0]);\n  }\n\n  if (newNotifications && newNotifications.length > NUMBER_OF_NOTIFICATIONS_SHOWN) {\n    newNotifications.splice(-1, 1);\n  }\n\n  return newNotifications;\n}\n\nfunction addTimestampToNotification(notification, locale) {\n  const date = new Date();\n  const dateOptions = { day: '2-digit', month: '2-digit', year: 'numeric' };\n  const timeOptions = { hour: '2-digit', minute: '2-digit', second: '2-digit' };\n  const timestamp = `${date.toLocaleString(locale, dateOptions)} ${date.toLocaleString(\n    locale,\n    timeOptions,\n  )}`;\n\n  notification = {\n    ...notification,\n    timestamp: timestamp,\n  };\n\n  return notification;\n}\n\nfunction equalsLastNotificationCurrentNotification(currentNotification, notifications) {\n  if (notifications && notifications.length > 0) {\n    return isEqual(currentNotification.message, notifications[0].message);\n  }\n\n  return false;\n}\n\nfunction setCountForNotification(notification) {\n  let count = notification.count;\n  if (count === undefined) {\n    count = 1;\n  } else {\n    count++;\n  }\n\n  notification = {\n    ...notification,\n    count,\n  };\n\n  return notification;\n}\n\nexport default appReducer;\n","const initialState = {\n  parameter: null,\n};\n\nconst toolsetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_PARAMETER':\n      return {\n        ...state,\n        parameter: action.parameter,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default toolsetReducer;\n","import omit from 'lodash/omit';\nimport { isObjectValid } from '../../utils/objectValidator';\n\nconst findInspectionForView = (viewId, state) =>\n  Object.keys(state).find(\n    (inspectionId) =>\n      state[inspectionId] && state[inspectionId].views && !!state[inspectionId].views[viewId],\n  );\n\nconst viewDataReducer = (state = {}, action) => {\n  const { inspectionId, viewId, key } = action;\n  switch (action.type) {\n    case 'PURGE_VIEW_STATE': {\n      const inspectionId = action.inspectionId || findInspectionForView(action.viewId, state);\n      if (!inspectionId) {\n        return state;\n      }\n\n      if (!state[inspectionId]) {\n        return state;\n      }\n\n      return omit(state, [\n        `${inspectionId}.sharedState.views.${action.viewId}`,\n        `${inspectionId}.views.${action.viewId}`,\n        state[inspectionId].sharedState.editingViewId === action.viewId &&\n          `${inspectionId}.sharedState.editingViewId`,\n      ]);\n    }\n    case 'SET_EDITING_FOCUS': {\n      if (!state[inspectionId]) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...state[inspectionId].sharedState,\n            editingViewId: viewId,\n          },\n        },\n      };\n    }\n\n    case 'SET_LIST_VIEW_ALIASES': {\n      if (!state[inspectionId]) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...state[inspectionId].sharedState,\n            listViewAliases: action.aliases,\n            showAliasesInList: action.showInList,\n          },\n        },\n      };\n    }\n\n    case 'UPDATE_LIST_VIEW_SHOW_ALIASES': {\n      if (!state[inspectionId]) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...state[inspectionId].sharedState,\n            showAliasesInList: action.showInList,\n          },\n        },\n      };\n    }\n\n    case 'SET_VIEW_DATA':\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          views: {\n            ...(state[inspectionId] ? state[inspectionId].views : {}),\n            [viewId]: {\n              ...(state[inspectionId] && state[inspectionId].views\n                ? state[inspectionId].views[viewId]\n                : {}),\n              [key]: action.data,\n            },\n          },\n        },\n      };\n\n    case 'SAVE_IMAGE_SETTINGS':\n      return {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          views: {\n            ...(state[inspectionId] ? state[inspectionId].views : {}),\n            [viewId]: {\n              ...(state[inspectionId] && state[inspectionId].views\n                ? state[inspectionId].views[viewId]\n                : {}),\n              zoomFactor: action.zoomFactor,\n              imagePosition: action.imagePosition,\n            },\n          },\n        },\n      };\n\n    case 'SET_SHARED_STATE_DATA': {\n      const editingViewId = action.viewId || state[inspectionId].sharedState.editingViewId;\n      const newState = {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...(state[inspectionId] ? state[inspectionId].sharedState : {}),\n            views: {\n              ...(state[inspectionId] ? state[inspectionId].sharedState.views : {}),\n              [editingViewId]: {\n                ...(state[inspectionId]\n                  ? state[inspectionId].sharedState.views[editingViewId]\n                  : {}),\n                [key]: action.data,\n              },\n            },\n          },\n        },\n      };\n      return newState;\n    }\n\n    case 'INIT_VIEW_STATE': {\n      const { initState, initSharedState } = action;\n\n      const newState = {\n        ...state,\n        [inspectionId]: {\n          ...state[inspectionId],\n          sharedState: {\n            ...(state[inspectionId] ? state[inspectionId].sharedState : {}),\n            views: {\n              ...(state[inspectionId] ? state[inspectionId].sharedState.views : {}),\n              [viewId]: isObjectValid(() => state[inspectionId].sharedState.views[viewId])\n                ? {\n                    ...initSharedState,\n                    ...state[inspectionId].sharedState.views[viewId],\n                  }\n                : initSharedState,\n            },\n          },\n          views: {\n            ...(state[inspectionId] ? state[inspectionId].views : {}),\n            [viewId]: isObjectValid(() => state[inspectionId].views[viewId])\n              ? { ...initState, ...state[inspectionId].views[viewId] }\n              : initState,\n          },\n        },\n      };\n\n      const listViewAliases =\n        newState[inspectionId] &&\n        newState[inspectionId].sharedState &&\n        (newState[inspectionId].sharedState.listViewAliases || new Map());\n      newState[inspectionId].sharedState.listViewAliases = listViewAliases;\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default viewDataReducer;\n","import ViewSetFactory, { DEFAULT_VIEWSET_NAME } from '../../views/ViewSetFactory';\n\nconst viewSetFactory = new ViewSetFactory();\n\nconst initialState = () => {\n  const hideBottomNavigation = localStorage.getItem('BOTTOM_NAVIGATION_HIDDEN') === 'true';\n  const hideTopNavigation = localStorage.getItem('TOP_NAVIGATION_HIDDEN') === 'true';\n  const defaultViewSetName = localStorage.getItem('DEFAULT_VIEWSET_NAME');\n\n  return {\n    currentViewSet: undefined,\n    createdViewSets: {},\n    fullscreenMode: false,\n    fullscreenComponentDescriptor: undefined,\n    viewSizeChangeCounter: 0,\n    bottomNavHidden: hideBottomNavigation || false,\n    topNavHidden: hideTopNavigation || false,\n    defaultViewSetName: defaultViewSetName || null,\n    isSVOConfigLoaded: false,\n    unsavedChanges: false,\n  };\n};\n\nconst enterFullScreenMode = (componentDescriptor, state) => {\n  componentDescriptor.setFullscreen(true);\n  return {\n    ...state,\n    fullscreenMode: true,\n    fullscreenComponentDescriptor: componentDescriptor,\n  };\n};\n\nconst leaveFullScreenMode = (componentDescriptor, state) => {\n  componentDescriptor.setFullscreen(false);\n  return {\n    ...state,\n    fullscreenMode: false,\n    fullscreenComponentDescriptor: undefined,\n  };\n};\n\nconst findCreatedViewSetWithName = (name, createdViewSets) => {\n  const viewSetId = Object.keys(createdViewSets).find(\n    (viewSetId) => createdViewSets[viewSetId] && createdViewSets[viewSetId].name === name,\n  );\n  return viewSetId && createdViewSets[viewSetId];\n};\n\nconst switchViewSet = (viewSet, state) => {\n  const viewSetId = viewSet.id;\n  const cached = state.createdViewSets[viewSetId];\n  const targetViewSet = cached || viewSetFactory.getViewSet(viewSetId);\n  const createdViewSet = !cached ? { [viewSetId]: targetViewSet } : {};\n\n  const newState = {\n    ...state,\n    currentViewSet: targetViewSet,\n    createdViewSets: Object.assign({}, state.createdViewSets, createdViewSet),\n  };\n  return newState;\n};\n\nconst updateCurrentViewSet = (state, viewSet, viewSetId) => {\n  return {\n    ...state,\n    currentViewSet: viewSet,\n    createdViewSets: {\n      ...state.createdViewSets,\n      [viewSetId]: viewSet,\n    },\n    unsavedChanges: true,\n  };\n};\n\nconst removeViewSet = (state, name) => {\n  const { createdViewSets } = state;\n\n  let newCreatedViewSets = Object.keys(createdViewSets)\n    .filter((id) => id !== name)\n    .reduce((p, c) => ({ ...p, [c]: createdViewSets[c] }), {});\n\n  if (Object.keys(newCreatedViewSets).length === 0) {\n    const name = DEFAULT_VIEWSET_NAME;\n    newCreatedViewSets = {\n      [name]: viewSetFactory.buildEmptyViewSet(name),\n    };\n  }\n\n  return {\n    createdViewSets: newCreatedViewSets,\n    currentViewSet: newCreatedViewSets[Object.keys(newCreatedViewSets)[0]],\n    unsavedChanges: true,\n  };\n};\n\nconst viewSetReducer = (state = initialState(), action) => {\n  switch (action.type) {\n    case 'LOG_OUT':\n      return initialState();\n    case 'SET_VIEWSET':\n      return updateCurrentViewSet(state, action.viewSet, action.viewSetId);\n    case 'REPLACE_VIEW_IN_CURRENT_VIEWSET': {\n      const { viewId, inspectionId, replacementComponentId } = action;\n      const createdView = viewSetFactory.getViewById(replacementComponentId);\n      createdView.inspectionId = inspectionId;\n      const currentViewSetId = state.currentViewSet.id;\n      const updatedViewSet = {\n        ...state.currentViewSet,\n        viewSet: {\n          ...state.currentViewSet.viewSet,\n          [viewId]: createdView,\n        },\n      };\n      return updateCurrentViewSet(state, updatedViewSet, currentViewSetId);\n    }\n    case 'SWITCH_VIEWSET':\n      return switchViewSet(action.viewSet, state);\n    case 'ENTER_FULLSCREEN_MODE': {\n      if (\n        state.fullscreenComponentDescriptor &&\n        state.fullscreenComponentDescriptor.id !== action.componentDescriptor.id\n      ) {\n        leaveFullScreenMode(state.fullscreenComponentDescriptor, state);\n      }\n      return enterFullScreenMode(action.componentDescriptor, state);\n    }\n    case 'LEAVE_FULLSCREEN_MODE': {\n      return leaveFullScreenMode(action.componentDescriptor, state);\n    }\n    case 'TOGGLE_FULLSCREEN_MODE': {\n      if (!state.fullscreenComponentDescriptor) {\n        return enterFullScreenMode(action.componentDescriptor, state);\n      }\n      if (state.fullscreenComponentDescriptor.id === action.componentDescriptor.id) {\n        if (state.fullscreenMode) {\n          return leaveFullScreenMode(action.componentDescriptor, state);\n        }\n        return enterFullScreenMode(action.componentDescriptor, state);\n      }\n      return state;\n    }\n    case 'INCREASE_VIEW_SIZE_CHANGE_COUNTER':\n      return {\n        ...state,\n        viewSizeChangeCounter: state.viewSizeChangeCounter + 1,\n      };\n    case 'SET_BOTTOM_NAV_HIDDEN':\n      localStorage.setItem('BOTTOM_NAVIGATION_HIDDEN', action.hidden);\n      return {\n        ...state,\n        bottomNavHidden: action.hidden,\n      };\n    case 'CHANGE_VIEWSET_AFTER_LOADING':\n      return {\n        ...state,\n        changeViewSetToName: action.name,\n      };\n    case 'SET_TOP_NAV_HIDDEN':\n      localStorage.setItem('TOP_NAVIGATION_HIDDEN', action.hidden);\n      return {\n        ...state,\n        topNavHidden: action.hidden,\n      };\n    case 'SET_DEFAULT_VIEWSET_NAME':\n      localStorage.setItem('DEFAULT_VIEWSET_NAME', action.name);\n      return {\n        ...state,\n        defaultViewSetName: action.name,\n      };\n    case 'NEW_VIEW_SET': {\n      const newViewSet = {\n        [action.name]: viewSetFactory.buildEmptyViewSet(action.name),\n      };\n\n      return {\n        ...state,\n        createdViewSets: {\n          ...state.createdViewSets,\n          ...newViewSet,\n        },\n        unsavedChanges: true,\n      };\n    }\n    case 'REMOVE_VIEWSET': {\n      const { createdViewSets, currentViewSet } = removeViewSet(state, action.name);\n      return {\n        ...state,\n        currentViewSet,\n        createdViewSets,\n        unsavedChanges: true,\n      };\n    }\n    case 'CLEAR_CURRENT_VIEW': {\n      if (!state?.currentViewSet?.name) {\n        return state;\n      }\n\n      const emptyViewSet = viewSetFactory.buildEmptyViewSet(state.currentViewSet.name);\n      state.createdViewSets[state.currentViewSet.name] = emptyViewSet;\n\n      return {\n        ...state,\n        currentViewSet: emptyViewSet,\n        unsavedChanges: true,\n      };\n    }\n    case 'RENAME_VIEWSET': {\n      const viewsetToEdit = state.createdViewSets[action.oldName];\n      const renamedViewSet = {\n        ...viewsetToEdit,\n        id: action.newName,\n        name: action.newName,\n      };\n      const createdViewSets = Object.keys(state.createdViewSets).reduce(\n        (all, id) =>\n          id === action.oldName\n            ? { ...all, [action.newName]: renamedViewSet }\n            : { ...all, [id]: state.createdViewSets[id] },\n        {},\n      );\n\n      if (action.oldName === state.currentViewSet.name) {\n        return {\n          ...state,\n          createdViewSets,\n          currentViewSet: renamedViewSet,\n          unsavedChanges: true,\n        };\n      }\n\n      return {\n        ...state,\n        createdViewSets,\n        unsavedChanges: true,\n      };\n    }\n    case 'SET_CURRENT_LAYOUT':\n      if (!action.layout) {\n        return state;\n      }\n      return {\n        ...state,\n        createdViewSets: Object.assign({}, state.createdViewSets, {\n          [state.currentViewSet.id]: {\n            ...state.currentViewSet,\n            initialValue: action.layout,\n          },\n        }),\n        currentViewSet: {\n          ...state.currentViewSet,\n          initialValue: action.layout,\n        },\n        currentLayout: action.layout,\n        unsavedChanges: true,\n      };\n    case 'LOAD_CLIENT_CHUNK': {\n      if (state.changeViewSetToName) {\n        let loadedViewSet = findCreatedViewSetWithName(\n          state.changeViewSetToName,\n          action.chunk.createdViewSets,\n        );\n\n        if (loadedViewSet) {\n          const newState = {\n            ...state,\n            currentViewSet: loadedViewSet,\n            createdViewSets: action.chunk.createdViewSets,\n            changeViewSetToName: undefined,\n          };\n          return switchViewSet(loadedViewSet, newState);\n        }\n      }\n\n      const config = {\n        createdViewSets: action.chunk.createdViewSets,\n        currentViewSet: action.chunk.currentViewSet,\n      };\n      return {\n        ...state,\n        ...config,\n      };\n    }\n    case 'SET_SVO_CONFIG_LOADED':\n      return {\n        ...state,\n        isSVOConfigLoaded: action.isLoaded,\n        unsavedChanges: false,\n      };\n    case 'SET_SAVE_FLAG':\n      return {\n        ...state,\n        unsavedChanges: action.hasChanges,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default viewSetReducer;\n","import { routerReducer as routing } from 'react-router-redux';\nimport { combineReducers } from 'redux';\n\nimport appReducer from './appReducer';\nimport toolsetReducer from './toolsetReducer';\nimport viewDataReducer from './viewDataReducer';\nimport viewSetReducer from './viewSetReducer';\n\nfunction createReducers(params) {\n  return combineReducers({\n    app: appReducer(params),\n    viewSet: viewSetReducer,\n    toolSet: toolsetReducer,\n    inspections: viewDataReducer,\n    routing,\n  });\n}\n\nexport default createReducers;\n","/* eslint-disable import/order */\nimport React, { useState, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\nimport App from './App';\nimport LoginPage from './pages/LoginPage';\nimport Protobuf from './protobuf/Protobuf';\nimport {\n  saveClientChunk,\n  setProtobufStaticInitialized,\n  setBrowserWindowVisibility,\n} from './redux/actions';\nimport createReducers from './redux/reducers';\nimport env from './utils/env';\nimport { loadUserInfoFromStorage } from './utils/localStorage';\n\nimport './App.scss';\nimport './css/utils.css';\nimport './css/reset.scss';\n\nconst PreLogin = () => {\n  const [user, setUser] = useState(null);\n  const [authToken, setAuthToken] = useState('');\n  const [store, setStore] = useState(null);\n\n  const onLoggedIn = (data) => {\n    if (data && data.user && data.authToken) {\n      setUser(data.user);\n      setAuthToken(data.authToken);\n    }\n  };\n\n  const onLoggedOut = () => {\n    setUser(null);\n    setAuthToken('');\n  };\n\n  const create = async () => {\n    const autoSave = (store) => (next) => (action) => {\n      if (env.enableAutoSave) {\n        // TODO: for now trigger an auto-save whenever dispatching a \"SET_*\" action\n        const state = store.getState();\n        if (\n          action.type.substr(0, 4) === 'SET_' &&\n          !state.app.saveOperationInProcess &&\n          state.app.protobuf\n        ) {\n          // only store if we have a valid protobuf connection\n          const { currentClientChunkRevision, protobuf, user } = state.app;\n          store.dispatch(saveClientChunk(protobuf, user, state, currentClientChunkRevision));\n        }\n      }\n      return next(action);\n    };\n\n    const store = createStore(\n      createReducers({\n        websocketUrl: env.websocketServerUrl,\n        dispatch: (action) => store.dispatch(action),\n      }),\n      compose(\n        applyMiddleware(thunk, autoSave),\n        window.devToolsExtension ? window.devToolsExtension() : (f) => f,\n      ),\n    );\n\n    await Protobuf.init();\n    store.dispatch(setProtobufStaticInitialized());\n\n    setStore(store);\n  };\n\n  useEffect(() => {\n    if ((user && authToken) || window.location.pathname === '/hmi-v1') {\n      create();\n    }\n  }, [user, authToken]);\n\n  const fromLocalStorage = loadUserInfoFromStorage();\n  if (fromLocalStorage) {\n    if (fromLocalStorage.user && !user) {\n      setUser(fromLocalStorage.user);\n    }\n\n    if (fromLocalStorage.authToken && !authToken) {\n      setAuthToken(fromLocalStorage.authToken);\n    }\n  }\n\n  if (!(user && authToken) && window.location.pathname !== '/hmi-v1') {\n    return <LoginPage onLogin={(data) => onLoggedIn(data)} />;\n  } else {\n    if (!store) {\n      return <div></div>;\n    }\n\n    document.addEventListener('visibilitychange', function () {\n      if (document.visibilityState === 'visible') {\n        store.dispatch(setBrowserWindowVisibility(true));\n        clearTimeout(this.hibernateTimer);\n      } else {\n        this.hibernateTimer = setTimeout(() => {\n          store.dispatch(setBrowserWindowVisibility(false));\n        }, 10000);\n      }\n    });\n\n    return (\n      <Provider store={store}>\n        <App user={user} authToken={authToken} onLoggedOut={() => onLoggedOut()} />\n      </Provider>\n    );\n  }\n};\n\nexport default PreLogin;\n","import { createTheme } from '@material-ui/core/styles';\n\n// MUI Seidenader Default Colors\nconst GREY135 = 'rgb(135, 135, 135)';\nconst muiTheme = createTheme({\n  palette: {\n    primary: { main: GREY135 },\n  },\n  typography: {\n    useNextVariants: true,\n    htmlFontSize: 10,\n  },\n});\n\nexport default muiTheme;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport ReactDOM from 'react-dom';\nimport PreLogin from './PreLogin';\nimport muiTheme from './theme';\n\nimport './css/app.scss';\n// eslint-disable-next-line import/order\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={muiTheme}>\n      <PreLogin />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import protobufjs from 'protobufjs';\n\nexport const utf8StringToBuffer = (str) => {\n  const len = protobufjs.util.utf8.length(str);\n  const buf = new Uint8Array(len);\n  protobufjs.util.utf8.write(str, buf, 0);\n  return buf;\n};\n\nexport const bufferToUtf8String = (buffer) => {\n  return protobufjs.util.utf8.read(buffer, 0, buffer.length);\n};\n","import semver from 'semver';\n\nimport Protobuf from '../protobuf/Protobuf';\nimport { bufferToUtf8String, utf8StringToBuffer } from '../protobuf/Utils';\nimport logger from '../utils/logger';\n\nimport ViewSetFactory, {\n  DEFAULT_VIEWSET_NAME,\n  TOOLSET_VIEW,\n  IMAGE_VIEW,\n  LIST_VIEW,\n  IMAGE_STRIP_VIEW,\n} from '../views/ViewSetFactory';\n\nconst viewSetFactory = new ViewSetFactory();\n\n/*\n * Version Changelog:\n * 1:   createdViewSets and currentViewSet property as initial state\n * 2:   added inspectionOverlays property\n * 3:   added inspectionListSelection property\n * 3.1: added inspectionEditingViewIds property\n * 4.0.0: breaking change bw 8.10-8.20. Uses GUIDs instead dotted names\n * 5.0.0: breaking change between 8.20 and 10.00. Uses int ids instead of GUIDs\n */\n\nconst DATABASEGATEWAY_CHUNK_FILENAME = 'DatabaseGateway.json';\nconst WEBAPP_CHUNK_FILENAME = 'WebApp.json';\nconst WEBAPP_IDMAPPING_FILENAME = 'WebAppIds.json';\nconst WEBAPP_CHUNK_VERSION = '5.0.0';\nconst WEBAPP_CHUNK_PARAMETERS = {\n  VERSION: 'version',\n  SV_OBSERVER_VERSION: 'svObserverVersion',\n  GATEWAY_VERSION: 'gatewayVersion',\n  WEBAPP_VERSION: 'webAppVersion',\n  CREATED_VIEW_SETS: 'createdViewSets',\n  CURRENT_VIEW_SETS: 'currentViewSet',\n  INSPECTION_OVERLAYS: 'inspectionOverlays',\n  INSPECTION_LIST_SELECTION: 'inspectionListSelection',\n  INSPECTION_EDITING_VIEW_IDS: 'inspectionEditingViewIds',\n  INSPECTION_LIST_ALIASES: 'inspectionListAliases',\n  INSPECTION_IMAGE_VIEW_SETTINGS: 'inspectionImageViewSettings',\n};\n\nexport const saveChunk = (protobuf, currentState, actions) => async (dispatch) => {\n  const { setSaveOperationInProcess, setSaveFlag } = actions;\n  // extract the saveable information from store\n  const inspectionOverlays = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    const overlays = Object.keys(inspection.sharedState.views).map((viewId) => ({\n      viewId,\n      overlays:\n        inspection.sharedState.views[viewId] && inspection.sharedState.views[viewId].overlays,\n      sourceImage:\n        inspection.sharedState.views[viewId] && inspection.sharedState.views[viewId].sourceImage,\n    }));\n    return { inspectionId, overlays };\n  });\n\n  const inspectionListSelection = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    const listSelection = Object.keys(inspection.views).map((viewId) => ({\n      viewId,\n      selection: inspection.views[viewId] && inspection.views[viewId].selection,\n      isSelectionMode: inspection.views[viewId] && inspection.views[viewId].isSelectionMode,\n      selectAll: inspection.views[viewId] && inspection.views[viewId].selectAll,\n    }));\n    return { inspectionId, listSelection };\n  });\n\n  const inspectionEditingViewIds = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    const editingViewId = inspection.sharedState.editingViewId;\n    return { inspectionId, editingViewId };\n  });\n\n  const inspectionListAliases = Object.keys(currentState.inspections).map((inspectionIdStr) => {\n    const inspectionId = parseInt(inspectionIdStr, 10);\n    const inspection = currentState.inspections[inspectionIdStr];\n    if (inspection.sharedState.listViewAliases) {\n      const aliases = convertAliasesToJson(inspection.sharedState.listViewAliases);\n      return { inspectionId, aliases, showInList: inspection.sharedState.showAliasesInList };\n    }\n\n    return {};\n  });\n\n  const inspectionImageViewSettings = Object.keys(currentState.inspections).map(\n    (inspectionIdStr) => {\n      const inspectionId = parseInt(inspectionIdStr, 10);\n      const inspection = currentState.inspections[inspectionIdStr];\n      const imageViewSettings = Object.keys(inspection.views).map((viewId) => ({\n        viewId,\n        zoomFactor: inspection.views[viewId] && inspection.views[viewId].zoomFactor,\n        imagePosition: inspection.views[viewId] && inspection.views[viewId].imagePosition,\n      }));\n\n      return { inspectionId, imageViewSettings };\n    },\n  );\n\n  const chunk = {\n    [WEBAPP_CHUNK_PARAMETERS.VERSION]: WEBAPP_CHUNK_VERSION,\n    [WEBAPP_CHUNK_PARAMETERS.SV_OBSERVER_VERSION]:\n      currentState.app.configuration.getSvObserverVersion(),\n    [WEBAPP_CHUNK_PARAMETERS.GATEWAY_VERSION]: currentState.app.configuration.getGatewayVersion(),\n    [WEBAPP_CHUNK_PARAMETERS.WEBAPP_VERSION]: currentState.app.configuration.getWebAppVersion(),\n    [WEBAPP_CHUNK_PARAMETERS.CREATED_VIEW_SETS]: currentState.viewSet.createdViewSets,\n    [WEBAPP_CHUNK_PARAMETERS.CURRENT_VIEW_SETS]: currentState.viewSet.currentViewSet,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_OVERLAYS]: inspectionOverlays,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_SELECTION]: inspectionListSelection,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_EDITING_VIEW_IDS]: inspectionEditingViewIds,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_ALIASES]: inspectionListAliases,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_IMAGE_VIEW_SETTINGS]: inspectionImageViewSettings,\n  };\n  const json = JSON.stringify(chunk);\n\n  await dispatch(setSaveOperationInProcess(true));\n  try {\n    const req = Protobuf.SvPb.PutFileRequest.create({\n      destinationPath: WEBAPP_CHUNK_FILENAME,\n      fileData: utf8StringToBuffer(json),\n      saveInConfig: true,\n    });\n    await protobuf.request(req);\n  } catch (err) {\n    // TODO: report save error to user\n    logger.error({ err }, 'Error while saving client chunk');\n    return;\n  }\n  await dispatch(setSaveOperationInProcess(false));\n  dispatch(setSaveFlag(false));\n};\n\nconst convertAliasesToJson = (map) => {\n  const result = [];\n  map.forEach((entry) => {\n    result.push(entry);\n  });\n  return result;\n};\n\nexport const loadChunk = (proxy, actions) => async (dispatch) => {\n  const {\n    setSharedStateData,\n    setClientChunk,\n    setViewData,\n    setEditingFocus,\n    addIncompatibilityDetectedNotification,\n    setListViewAliases,\n    saveImageSettings,\n  } = actions;\n\n  const req = Protobuf.SvPb.GetFileRequest.create({\n    sourcePath: WEBAPP_CHUNK_FILENAME,\n  });\n  let response = null;\n  try {\n    response = await proxy.protobuf.request(req);\n  } catch (err) {\n    logger.error({ err }, 'Error while loading client chunk');\n  }\n\n  if (response.hResult) {\n    logger.info('There is no web app configuration to restore');\n    return;\n  }\n\n  const chunk = bufferToUtf8String(response.fileData);\n  let config = JSON.parse(chunk.toString());\n\n  // will check whether config contains deprecated string GUIDs and try to convert them if required\n  config = await updateConfigWithGuidToIntMapping(proxy.protobuf, config);\n  loadDataForCurrentViewSet(proxy, config);\n\n  const { version: configVersion } = semver.coerce(config.version);\n  if (semver.satisfies(configVersion, '<5.0.0')) {\n    throw new Error('Unable to load deprecated config file');\n  }\n\n  const receivedConfigParameters = Object.keys(config);\n  const expectedConfigParameters = Object.keys(WEBAPP_CHUNK_PARAMETERS).map(\n    (key) => WEBAPP_CHUNK_PARAMETERS[key],\n  );\n\n  for (let i = 0; i < expectedConfigParameters.length; i++) {\n    const currentParameterName = expectedConfigParameters[i];\n    if (!receivedConfigParameters.includes(currentParameterName)) {\n      logger.warn(`\"${currentParameterName}\" can not be found in loaded config`);\n    }\n  }\n\n  if (!semver.valid(configVersion)) {\n    logger.error('Config version is invalid!');\n    throw new Error('Selected config version is invalid');\n  }\n\n  if (semver.diff(WEBAPP_CHUNK_VERSION, configVersion) === 'major') {\n    logger.error('Selected config is not compatible with the current Web App version');\n    throw new Error('Selected config is not compatible with the current Web App version');\n  }\n\n  // Notify user when a minor change detected and a newer config is loaded on an older webapp\n  if (\n    semver.diff(WEBAPP_CHUNK_VERSION, configVersion) === 'minor' &&\n    semver.gt(configVersion, WEBAPP_CHUNK_VERSION)\n  ) {\n    dispatch(addIncompatibilityDetectedNotification());\n  }\n\n  if (semver.satisfies(configVersion, '>=3.0.0')) {\n    // restore custom overlays\n    config.inspectionOverlays.forEach((inspection) =>\n      inspection.overlays.forEach((view) => {\n        dispatch(\n          setSharedStateData(inspection.inspectionId, 'overlays', view.overlays, view.viewId),\n        );\n        dispatch(\n          setSharedStateData(inspection.inspectionId, 'sourceImage', view.sourceImage, view.viewId),\n        );\n      }),\n    );\n\n    // restore list view data\n    config.inspectionListSelection.forEach((inspection) =>\n      inspection.listSelection.forEach((view) => {\n        dispatch(setViewData(inspection.inspectionId, view.viewId, 'selection', view.selection));\n        dispatch(\n          setViewData(\n            inspection.inspectionId,\n            view.viewId,\n            'isSelectionMode',\n            view.isSelectionMode,\n          ),\n        );\n        dispatch(setViewData(inspection.inspectionId, view.viewId, 'selectAll', view.selectAll));\n      }),\n    );\n  }\n\n  if (semver.satisfies(configVersion, '>=3.1.0')) {\n    // restore editing focus\n    config.inspectionEditingViewIds.forEach((inspection) => {\n      if (inspection.inspectionId && inspection.editingViewId) {\n        dispatch(setEditingFocus(inspection.inspectionId, inspection.editingViewId));\n      }\n    });\n  }\n\n  if (semver.satisfies(configVersion, '>=5.0.0')) {\n    (config.inspectionListAliases || []).forEach((inspection) => {\n      if (inspection.inspectionId && Array.isArray(inspection.aliases)) {\n        const aliases = new Map();\n        inspection.aliases.forEach((alias) => aliases.set(alias.objectId, alias));\n        dispatch(setListViewAliases(inspection.inspectionId, aliases, inspection.showInList));\n      }\n    });\n    (config.inspectionImageViewSettings || []).forEach((inspection) => {\n      (inspection.imageViewSettings || []).forEach((setting) => {\n        dispatch(\n          saveImageSettings(\n            inspection.inspectionId,\n            setting.viewId,\n            setting.zoomFactor,\n            setting.imagePosition,\n          ),\n        );\n      });\n    });\n  }\n\n  //now the views are created with all configurations set before\n  dispatch(setClientChunk(config));\n};\n\nexport const resetChunk = (protobuf, actions) => async (dispatch) => {\n  const { setClientChunk } = actions;\n  const name = DEFAULT_VIEWSET_NAME;\n  const emptyViewset = viewSetFactory.buildEmptyViewSet(name);\n  const emptyViewSets = {\n    [name]: emptyViewset,\n  };\n\n  const emptyChunk = {\n    [WEBAPP_CHUNK_PARAMETERS.VERSION]: WEBAPP_CHUNK_VERSION,\n    [WEBAPP_CHUNK_PARAMETERS.SV_OBSERVER_VERSION]: 'UNDEFINED',\n    [WEBAPP_CHUNK_PARAMETERS.GATEWAY_VERSION]: 'UNDEFINED',\n    [WEBAPP_CHUNK_PARAMETERS.WEBAPP_VERSION]: 'UNDEFINED',\n    [WEBAPP_CHUNK_PARAMETERS.CREATED_VIEW_SETS]: emptyViewSets,\n    [WEBAPP_CHUNK_PARAMETERS.CURRENT_VIEW_SETS]: emptyViewset,\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_OVERLAYS]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_SELECTION]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_EDITING_VIEW_IDS]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_LIST_ALIASES]: [],\n    [WEBAPP_CHUNK_PARAMETERS.INSPECTION_IMAGE_VIEW_SETTINGS]: [],\n  };\n\n  dispatch(setClientChunk(emptyChunk));\n};\n\nconst updateConfigWithGuidToIntMapping = async (protobuf, config) => {\n  const { version } = semver.coerce(config.version);\n\n  // config is not using GUIDs any more already\n  if (semver.satisfies(version, '>=5.0.0') || semver.satisfies(version, '<4.0.0')) {\n    return config;\n  }\n\n  const sourcePath = WEBAPP_IDMAPPING_FILENAME;\n  const req = Protobuf.SvPb.GetFileRequest.create({ sourcePath });\n\n  let res;\n  try {\n    res = await protobuf.request(req);\n  } catch (err) {\n    logger.error({ err }, 'Error while loading id mapping');\n    throw new Error('Unable to load id mapping file');\n  }\n\n  if (res.hResult) {\n    logger.info(`The file \"${WEBAPP_IDMAPPING_FILENAME}\" does not exist.`);\n    throw new Error('Unable to load id mapping file');\n  }\n\n  let idMapping;\n  try {\n    const idMappingChunk = bufferToUtf8String(res.fileData);\n    idMapping = JSON.parse(idMappingChunk.toString());\n  } catch (err) {\n    logger.error({ err }, `Error while parsing content of ${WEBAPP_IDMAPPING_FILENAME}`);\n    return config;\n  }\n\n  const mapping = parseGuidToObjectIdMapping(idMapping.guidToObjectIdMapping);\n  const error = { hasError: false };\n  recursivlyUpdateConfigWithGuidToIntMapping(config, mapping, error);\n\n  // this is the first version with int ids\n  config.version = '5.0.0';\n  config.patchedIds = true;\n  if (error.hasError) {\n    throw new Error(\n      'Selected config is not compatible with the current Web App version (could not migrate all string GUIDs to int ObjectIds)',\n    );\n  } else {\n    logger.debug('Successfully migrated string GUIDs to int ObjectIds');\n  }\n\n  return config;\n};\n\nconst parseGuidToObjectIdMapping = (mapping) => {\n  const result = new Map();\n  Object.entries(mapping || {}).forEach(([key, value]) => {\n    const guid = key.toLowerCase().replace('{', '').replace('}', '');\n    result.set(guid, value);\n  });\n  return result;\n};\n\nconst lookUpKeyInMapping = (key, mapping) => {\n  if (mapping.has(key)) {\n    return mapping.get(key);\n  }\n  const lowerCaseKey = key.toLowerCase();\n  if (mapping.has(lowerCaseKey)) {\n    return mapping.get(lowerCaseKey);\n  }\n  return undefined;\n};\n\nconst recursivlyUpdateConfigWithGuidToIntMapping = (obj, mapping, error) => {\n  for (const key in obj) {\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      if (key === 'selection') {\n        obj[key] = obj[key]\n          .map((entry) => {\n            const value = lookUpKeyInMapping(entry, mapping);\n            if (value) {\n              return value;\n            } else {\n              error.hasError = true;\n              logger.error(\n                `There is a guid in the config which is not included in the mapping: ${entry}`,\n              );\n              return undefined;\n            }\n          })\n          .filter((entry) => !!entry); // remove undefined entries from selection\n      }\n      recursivlyUpdateConfigWithGuidToIntMapping(obj[key], mapping, error);\n    } else {\n      if (\n        key === 'inspectionId' ||\n        key === 'sourceImage' ||\n        key === 'xVariable' ||\n        key === 'offsetLeftVariable' ||\n        key === 'yVariable' ||\n        key === 'offsetTopVariable' ||\n        key === 'widthVariable' ||\n        key === 'heightVariable' ||\n        key === 'colorVariable'\n      ) {\n        const value = lookUpKeyInMapping(obj[key], mapping);\n        if (value) {\n          obj[key] = value;\n        } else {\n          obj[key] = undefined;\n          error.hasError = true;\n          logger.error(\n            `There is a guid in the config which is not included in the mapping: ${obj[key]}`,\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const loadDatabaseGatewayConfig = (protobuf, actions) => async (dispatch) => {\n  const { setDatabaseGatewayChunk } = actions;\n  const req = Protobuf.SvPb.GetFileRequest.create({\n    sourcePath: DATABASEGATEWAY_CHUNK_FILENAME,\n  });\n  let response = null;\n  try {\n    response = await protobuf.request(req);\n  } catch (err) {\n    logger.error({ err }, 'Error while loading client chunk');\n  }\n\n  if (response.hResult) {\n    logger.info('There is no database gateway configuration to restore');\n  }\n\n  const chunk = bufferToUtf8String(response.fileData);\n  let config = !response.hResult ? JSON.parse(chunk.toString()) : null;\n\n  dispatch(setDatabaseGatewayChunk(config));\n};\n\nexport const saveDatabaseGatewayConfig = (protobuf, chunk) => async () => {\n  const json = JSON.stringify(chunk, 0, 2);\n  try {\n    const req = Protobuf.SvPb.PutFileRequest.create({\n      destinationPath: DATABASEGATEWAY_CHUNK_FILENAME,\n      fileData: utf8StringToBuffer(json),\n      saveInConfig: true,\n    });\n    await protobuf.request(req);\n  } catch (err) {\n    logger.error({ err }, 'Error while saving client chunk');\n    return;\n  }\n};\n\nconst loadDataForCurrentViewSet = async (proxy, config) => {\n  let isToolsetViewSet = false;\n  let isImageViewSet = false;\n  let isListViewSet = false;\n  let isImageStripViewSet = false;\n\n  for (const view of Object.values(config.currentViewSet.viewSet)) {\n    switch (view.viewComponentClassId) {\n      case TOOLSET_VIEW:\n        if (!isToolsetViewSet && proxy.currentConfiguration.inspectionToolsetMappings.size === 0) {\n          await proxy.currentConfiguration.setInspectionIdToToolsetMappings(proxy.protobuf);\n          isToolsetViewSet = true;\n        }\n        break;\n      case IMAGE_VIEW:\n        if (!isImageViewSet) {\n          if (proxy.currentConfiguration.objectSelectorImages?.size === 0) {\n            await proxy.currentConfiguration.setObjectSelectorImages(proxy.protobuf);\n          }\n          if (proxy.currentConfiguration.idNameMappings.size === 0) {\n            await proxy.currentConfiguration.setIdNameMappings(proxy.protobuf);\n          }\n          isImageViewSet = true;\n        }\n        break;\n      case LIST_VIEW:\n        if (!isListViewSet) {\n          if (proxy.currentConfiguration.objectSelectorItems?.size === 0) {\n            await proxy.currentConfiguration.setObjectSelectorItems(proxy.protobuf);\n          }\n          if (proxy.currentConfiguration.idNameMappings.size === 0) {\n            await proxy.currentConfiguration.setIdNameMappings(proxy.protobuf);\n          }\n          isListViewSet = true;\n        }\n        break;\n      case IMAGE_STRIP_VIEW:\n        if (!isImageStripViewSet) {\n          if (proxy.currentConfiguration.objectSelectorImages?.size === 0) {\n            await proxy.currentConfiguration.setObjectSelectorImages(proxy.protobuf);\n          }\n          if (proxy.currentConfiguration.idNameMappings.size === 0) {\n            await proxy.currentConfiguration.setIdNameMappings(proxy.protobuf);\n          }\n          isImageStripViewSet = true;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  proxy.dispatchCurrentConfiguration(proxy.currentConfiguration);\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  authenticate as authenticateHelper,\n  logOut as logOutHelper,\n} from '../../utils/authentication';\nimport {\n  saveChunk,\n  loadChunk,\n  resetChunk,\n  loadDatabaseGatewayConfig,\n  saveDatabaseGatewayConfig,\n} from '../../utils/clientChunkManager';\n\nexport const setLocale = (locale) => ({\n  type: 'SET_LOCALE',\n  locale,\n});\n\nexport const setProtobufStaticInitialized = () => ({\n  type: 'SET_PROTOBUF_STATIC_INITIALIZED',\n});\n\nexport const setProtobuf = (newProtobuf, socket) => ({\n  type: 'SET_PROTOBUF',\n  protobuf: newProtobuf,\n  socket,\n});\n\nexport const setCurrentConfiguration = (configuration) => ({\n  type: 'SET_CONFIGURATION',\n  configuration,\n});\n\nexport const setConfigurationLock = (configurationLock) => ({\n  type: 'SET_CONFIGURATION_LOCK',\n  configurationLock,\n});\n\nexport const setInspectionToolsetMappings = (mappings) => ({\n  type: 'SET_INSPECTION_TOOLSET_MAPPINGS',\n  mappings,\n});\n\nexport const addNotification = (type, message) => ({\n  type: 'ADD_NOTIFICATION',\n  notification: {\n    type,\n    message,\n  },\n});\n\nexport const addImageNotAvailableNotification = () => {\n  return addNotification('warning', <FormattedMessage id=\"imageNotAvailable\" />);\n};\n\nexport const addConnectionEstablishedNotification = () => {\n  return addNotification(\n    'info',\n    <FormattedMessage id=\"notifications.websocket.connectionEstablished\" />,\n  );\n};\n\nexport const addConnectionLostNotification = () => {\n  return addNotification(\n    'warning',\n    <FormattedMessage id=\"notifications.websocket.connectionLost\" />,\n  );\n};\n\nexport const addModeSwitchNotification = (mode) => {\n  return addNotification(\n    'info',\n    <span>\n      <FormattedMessage id=\"notifications.modeSwitch.userSwitchedModeTo\" /> {mode}\n    </span>,\n  );\n};\n\nexport const addUserSwitchedLanguageNotification = (locale) => {\n  return addNotification(\n    'info',\n    <span>\n      <FormattedMessage id=\"notifications.userSwitchedLanguage\" />\n      {locale}\n    </span>,\n  );\n};\n\nexport const addProjectLoadedNotification = (configFile) => {\n  return addNotification('info', `A new project was loaded: \"${configFile}\"`);\n};\n\nexport const addProjectUnloadedNotification = (configFile) => {\n  return addNotification('info', `The project was unloaded: \"${configFile}\"`);\n};\n\nexport const addProjectModifiedNotification = () => {\n  return addNotification('info', `Project was modified. Updating UI.`);\n};\n\nexport const addServerMessageNotification = (messageText, errorNumber) => {\n  return addNotification('info', `Server reported: ${messageText} ${errorNumber}`);\n};\n\nexport const addRejectStreamPausedNotification = (pausedInspectionIds) => {\n  return addNotification(\n    'info',\n    Array.isArray(pausedInspectionIds) && pausedInspectionIds.length > 0 ? (\n      <FormattedMessage id=\"notifications.rejectStreamPaused\" />\n    ) : (\n      <FormattedMessage id=\"notifications.rejectStreamResumed\" />\n    ),\n  );\n};\n\nexport const addRunModePauseNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"runViewSet.runModePaused\" />);\n};\n\nexport const addRunModeContinueNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"runViewSet.runModeContinue\" />);\n};\n\nexport const addStartInspectingNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"runViewSet.runModeStoppedInspecting\" />);\n};\n\nexport const addVariableValueShouldBeInTheRangeNotification = (variableName, range) => {\n  return addNotification(\n    'warning',\n    <FormattedMessage\n      id=\"notifications.variableValueShouldBeInTheRange\"\n      values={{ variableName, range }}\n    />,\n  );\n};\n\nexport const addConfigAlreadyLockedBySameUser = () => {\n  return addNotification(\n    'warning',\n    <FormattedMessage id=\"notifications.configAlreadyLockedBySameUser\" />,\n  );\n};\n\nexport const addTakeoverCandidateNotFoundNotification = () => {\n  return addNotification(\n    'warning',\n    <FormattedMessage id=\"notifications.takeoverCandidateNotFound\" />,\n  );\n};\n\nexport const addLockTakeoverErrorNotification = (code) => {\n  return addNotification(\n    'warning',\n    <FormattedMessage id=\"notifications.lockTakeoverError\" values={{ code }} />,\n  );\n};\n\nexport const addLockAcquisitionErrorNotification = (code) => {\n  return addNotification(\n    'warning',\n    <FormattedMessage id=\"notifications.lockAcquisitionError\" values={{ code }} />,\n  );\n};\n\nexport const tokenExpired = () => ({\n  type: 'AUTH_TOKEN_EXPIRED',\n});\n\nexport const authenticate = (accessToken) => async (dispatch) => {\n  const { authToken, user } = await authenticateHelper(accessToken);\n  return dispatch({\n    type: 'LOG_IN',\n    authToken,\n    user,\n  });\n};\n\nexport const logOut =\n  (notifyGateway = true) =>\n  async (dispatch) => {\n    await logOutHelper(notifyGateway);\n    return dispatch({\n      type: 'LOG_OUT',\n    });\n  };\n\nexport const onNavigationHidden = () => ({\n  type: 'ON_NAVIGATION_HIDDEN',\n});\n\nexport const showGlobalMessageOverlay = ({ message }) => ({\n  type: 'SHOW_GLOBAL_MESSAGE_OVERLAY',\n  message,\n});\n\nexport const hideGlobalMessageOverlay = () => ({\n  type: 'HIDE_GLOBAL_MESSAGE_OVERLAY',\n});\n\nexport const setViewSet = (viewSet, viewSetId) => ({\n  type: 'SET_VIEWSET',\n  viewSet,\n  viewSetId,\n});\n\nexport const replaceViewInCurrentViewSet = (viewId, replacementComponentId, inspectionId) => ({\n  type: 'REPLACE_VIEW_IN_CURRENT_VIEWSET',\n  viewId,\n  replacementComponentId,\n  inspectionId,\n});\n\nexport const switchViewSet = (viewSet) => ({\n  type: 'SWITCH_VIEWSET',\n  viewSet,\n});\n\nexport const setParameter = (parameter) => ({\n  type: 'SET_PARAMETER',\n  parameter,\n});\n\nexport const enterFullscreenMode = (component) => ({\n  type: 'ENTER_FULLSCREEN_MODE',\n  componentDescriptor: {\n    componentId: component.props.id,\n    setFullscreen: component.setFullscreen,\n  },\n});\n\nexport const leaveFullscreenMode = (component) => ({\n  type: 'LEAVE_FULLSCREEN_MODE',\n  componentDescriptor: {\n    componentId: component.props.id,\n    setFullscreen: component.setFullscreen,\n  },\n});\n\nexport const toggleFullscreenMode = (component) => ({\n  type: 'TOGGLE_FULLSCREEN_MODE',\n  componentDescriptor: {\n    id: component.props.id,\n    setFullscreen: component.setFullscreen,\n  },\n});\n\nexport const increaseViewSizeChangeCounter = () => ({\n  type: 'INCREASE_VIEW_SIZE_CHANGE_COUNTER',\n});\n\nexport const setBottomNavHidden = (hidden) => ({\n  type: 'SET_BOTTOM_NAV_HIDDEN',\n  hidden: !!hidden,\n});\n\nexport const setTopNavHidden = (hidden) => ({\n  type: 'SET_TOP_NAV_HIDDEN',\n  hidden: !!hidden,\n});\n\nexport const setDefaultViewSetName = (name) => ({\n  type: 'SET_DEFAULT_VIEWSET_NAME',\n  name,\n});\n\nexport const newViewSet = (name, mode) => ({\n  type: 'NEW_VIEW_SET',\n  name,\n  mode,\n});\n\nexport const setSaveOperationInProcess = (inProcess) => ({\n  type: 'UPDATE_SAVE_OPERATION_IN_PROCESS',\n  inProcess,\n});\n\nexport const setSaveFlag = (hasChanges) => ({\n  type: 'SET_SAVE_FLAG',\n  hasChanges,\n});\n\nexport const saveClientChunk = (protobuf, currentState) => async (dispatch) => {\n  const actions = {\n    setSaveOperationInProcess,\n    setSaveFlag,\n  };\n  await dispatch(saveChunk(protobuf, currentState, actions));\n};\n\nexport const loadClientChunk = (proxy) => async (dispatch) => {\n  const actions = {\n    setSharedStateData,\n    setClientChunk,\n    setViewData,\n    setEditingFocus,\n    addIncompatibilityDetectedNotification,\n    setListViewAliases,\n    saveImageSettings,\n  };\n  await dispatch(loadChunk(proxy, actions));\n};\n\nexport const loadDatabaseGatewayConfiguration = (protobuf) => async (dispatch) => {\n  const actions = {\n    setDatabaseGatewayChunk,\n  };\n  await dispatch(loadDatabaseGatewayConfig(protobuf, actions));\n};\n\nexport const saveDatabaseGatewayConfiguration = (protobuf, chunk) => async (dispatch) => {\n  await dispatch(saveDatabaseGatewayConfig(protobuf, chunk));\n};\n\nexport const resetClientChunk = (protobuf) => async (dispatch) => {\n  const actions = {\n    setClientChunk,\n    setSVOConfigLoaded,\n  };\n  await dispatch(resetChunk(protobuf, actions));\n};\n\nexport const setClientChunk = (chunk) => ({\n  type: 'LOAD_CLIENT_CHUNK',\n  chunk,\n});\n\nexport const setDatabaseGatewayChunk = (chunk) => ({\n  type: 'SET_DATABASE_GATEWAY_CHUNK',\n  chunk,\n});\n\nexport const setSVOConfigLoaded = (isLoaded) => ({\n  type: 'SET_SVO_CONFIG_LOADED',\n  isLoaded,\n});\n\nexport const setViewSetForMode = (mode) => ({\n  type: 'SET_VIEWSET_FOR_MODE',\n  mode,\n});\n\nexport const removeViewSet = (name) => ({\n  type: 'REMOVE_VIEWSET',\n  name,\n});\n\nexport const clearCurrentView = () => ({\n  type: 'CLEAR_CURRENT_VIEW',\n});\n\nexport const renameViewSet = (oldName, newName) => ({\n  type: 'RENAME_VIEWSET',\n  oldName,\n  newName,\n});\n\nexport const changeViewSetAfterLoading = (name) => ({\n  type: 'CHANGE_VIEWSET_AFTER_LOADING',\n  name,\n});\n\nexport const setCurrentLayout = (layout) => ({\n  type: 'SET_CURRENT_LAYOUT',\n  layout,\n});\n\nexport const setCurrentMode = (mode) => ({\n  type: 'SET_CURRENT_MODE',\n  mode,\n});\n\nexport const setCurrentModeDone = (mode) => ({\n  type: 'SET_CURRENT_MODE_DONE',\n  mode,\n});\n\nexport const setPausedInspections = (pausedInspections) => ({\n  type: 'SET_PAUSED_INSPECTIONS',\n  pausedInspections,\n});\n\nexport const initViewState = (inspectionId, viewId, initState, initSharedState) => ({\n  type: 'INIT_VIEW_STATE',\n  inspectionId,\n  viewId,\n  initState,\n  initSharedState,\n});\n\nexport const setViewData = (inspectionId, viewId, key, data) => ({\n  type: 'SET_VIEW_DATA',\n  inspectionId,\n  viewId,\n  key,\n  data,\n});\n\nexport const saveImageSettings = (inspectionId, viewId, zoomFactor, imagePosition) => ({\n  type: 'SAVE_IMAGE_SETTINGS',\n  inspectionId,\n  viewId,\n  zoomFactor,\n  imagePosition,\n});\n\nexport const setSharedStateData = (inspectionId, key, data, viewId) => ({\n  type: 'SET_SHARED_STATE_DATA',\n  inspectionId,\n  key,\n  data,\n  viewId,\n});\n\nexport const setEditingFocus = (inspectionId, viewId) => ({\n  type: 'SET_EDITING_FOCUS',\n  inspectionId,\n  viewId,\n});\n\nexport const setListViewAliases = (inspectionId, aliases, showInList) => ({\n  type: 'SET_LIST_VIEW_ALIASES',\n  inspectionId,\n  aliases,\n  showInList,\n});\n\nexport const updateListViewShowAliases = (inspectionId, showInList) => ({\n  type: 'UPDATE_LIST_VIEW_SHOW_ALIASES',\n  inspectionId,\n  showInList,\n});\n\nexport const setFocusedViewType = (viewType) => ({\n  type: 'SET_FOCUSED_VIEW_TYPE',\n  viewType,\n});\n\nexport const purgeViewState = (inspectionId, viewId) => ({\n  type: 'PURGE_VIEW_STATE',\n  inspectionId,\n  viewId,\n});\n\nexport const openHelpView = () => ({\n  type: 'OPEN_HELP_VIEW',\n  isHelpViewOpen: true,\n});\n\nexport const closeHelpView = () => ({\n  type: 'CLOSE_HELP_VIEW',\n  isHelpViewOpen: false,\n});\n\nexport const addIncompatibilityDetectedNotification = () => {\n  return addNotification('info', <FormattedMessage id=\"incompatibilityNotification\" />);\n};\n\nexport const setGroupPermissions = (groupPermissions) => ({\n  type: 'SET_GROUP_PERMISSIONS',\n  groupPermissions,\n});\n\nexport const setMyPermissions = (myPermissions) => ({\n  type: 'SET_MY_PERMISSIONS',\n  myPermissions,\n});\n\nexport const setBrowserWindowVisibility = (visible) => ({\n  type: 'SET_BROWSER_WINDOW_VISIBILITY',\n  visible,\n});\n"],"sourceRoot":""}