//*****************************************************************************
/// \copyright (c) 2018,2018 by Seidenader Maschinenbau GmbH
/// \file GetObjectSelector.proto
/// All Rights Reserved 
//*****************************************************************************
/// Protobuf file GetObjectSelector which is used by both InspectionCommands
/// and SVRC-SVObserver and that is the reason it is in a separate file
//******************************************************************************

syntax = "proto3";
package SvPb;

option java_package = "de.sdm.svrc.proto.v1010";

import "SVO-Enum.proto";

///This is the recursive structure for the object selector tree
message TreeItem
{
	string name = 1;				//The name of the leaf or branch
	string location = 2;			//The location which is the dotted name of leaf or branch
	bool selected = 3;				//The flag which defines if the object is selected
	string type = 4;				//The object type
	string objectIDIndex = 5;		//The object ID including index for array values
	repeated TreeItem children = 6;	//The children of this node
}

message ExludeSameLineageData
{
	repeated uint32 excludeIds = 1;
}

///Get the required objects to be displayed for selection
message GetObjectSelectorItemsRequest
{
	repeated SearchArea areas = 1;	//The list of the search areas
	uint32 inspectionID = 2;		//The inspection ID to query for the items
	uint32 instanceID = 3;			//The object instance ID to query if required can be SvDef::InvalidObjectId
	ObjectAttributes attribute = 4;	//The object attribute to filter the toolset items
	bool wholeArray = 5;			//True to display whole array values (All values in the Array eg. Blob Analyzer.Box X Max[])
	ObjectSelectorType type = 6;	//item types required
	uint32 importantObjectForStopAtBorder = 10; //If this value set (!= SvDef::InvalidObjectId), than it look from this up to parent if any Border (e.g. Closed GroupTool) is available and set this than as starting position and also stop at a closed GroupTool.

	oneof filter
	{
		uint32 attributesAllowed = 7;		//Object selector filter for attributes allowed (value not used)
		uint32 attributesSet = 8;			//Object selector filter for attributes set (value not used)
		ExludeSameLineageData excludeSameLineage = 9;			//Object selector filter exclude all object from the same lineage (list of object which exclude)
	}
}

//@TODO This use the same response than the first version GetObjectSelectorItemsRequest. In a later version (maybe 10.30) it should be combined.
message GetObjectSelectorItems2Request
{
	uint32 objectID = 1;			//The object instance ID from a LinkedValue or Equation
}

message GetObjectSelectorItemsResponse
{
	TreeItem tree = 1;					//The object selector tree as recursive structure
}

