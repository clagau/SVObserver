//*****************************************************************************
/// \copyright (c) 2018,2018 by Körber Pharma Inspection GmbH. All Rights Reserved
/// \file SVO-Enum.proto
/// All Rights Reserved 
//*****************************************************************************
/// Protobuf file for the Enums used by SVObserver
//******************************************************************************

syntax = "proto3";
package SvPb;

option java_package = "de.sdm.svrc.proto.v1010";

enum SVObjectTypeEnum
{
	SVNotSetObjectType						= 0x00000000;

	SVSystemObjectType						= 0x00000001;
	SVDigitizerObjectType					= 0x00000002;
	SVImageProcessingObjectType				= 0x00000003;

	SVInspectionObjectType					= 0x00000004;

	SVFreezeSetObjectType					= 0x00000005;
	SVToolSetObjectType						= 0x00000006;

	SVToolObjectType						= 0x00000007;
	SVEquationObjectType					= 0x00000008;
	SVImageArithmeticObjectType				= 0x0000000a;
	SVMathContainerObjectType				= 0x0000000b;
	SVRotateReferenceObjectType				= 0x0000000c;

	SVImageObjectType						= 0x00000011;
	SVDataBufferClassObjectType				= 0x00000012;

	SVTriggerProcessingObjectType			= 0x00000013;
	SVDigitizerProcessingObjectType			= 0x00000014;
	SVRootObjectType						= 0x00000015;

	SVExternalToolTaskObjectType            = 0x00000020;

	SVTransformObjectType					= 0x00000040;
	SVPolarTransformObjectType				= 0x00000041;

	SVPPQObjectType							= 0x00000050;
	SVDisplayObjectType						= 0x00000051;
	SVInspectionProcessType					= 0x00000052;
	SVVirtualCameraType						= 0x00000053;
	SVTriggerObjectType						= 0x00000054;
	SVInputObjectListType					= 0x00000055;
	SVOutputObjectListType					= 0x00000056;
	SVIOControllerType                      = 0x00000057;
	SVIoObjectType							= 0x00000059;
	SVLinearEdgeProcessingObjectType        = 0x00000060;
	SVBasicValueObjectType			        = 0x00000061;

	SVValueObjectType						= 0x00000200;

	SVOperatorObjectType					= 0x00001000;
	BlobFeatureObjectType					= 0x00001100;
	BlobFeatureListObjectType				= 0x00001101;
	BlobDrawObjectType						= 0x00001102;
	SVUnaryOperatorObjectType				= 0x00003000;
	SVUnaryImageOperatorObjectType			= 0x00004000;
	SVFilterObjectType						= 0x00005000;
	SVUnaryImageOperatorListObjectType		= 0x00006000;
	TableObjectType							= 0x00007000;
	TableAnalyzerType						= 0x00007001;
	DrawTaskType							= 0x00007002;

	SVAnalyzerObjectType					= 0x00010000;

	SVAcquisitionObjectType					= 0x00020000;

	SVResultObjectType						= 0x00100000;
	SVRangeObjectType						= 0x00200000;
	SVToolSizeAdjustTaskType				= 0x00300000;

	ParameterTaskObjectType					= 0x00400000;

	InputConnectedType						= 0x00500000;
}

// place all sub types here
enum SVObjectSubTypeEnum
{
	SVNotSetSubObjectType						= 0x00000000;

	// Image Subtypes:
	SVImageMonoType								= 0x00000001;
	SVImageColorType							= 0x00000002;

	// System Subtypes:
	SVMatroxSystemObjectType					= 0x00000005;

	SVMatroxImageProcessingObjectType			= 0x00000007;
	SVFileAcquisitionImageProcessingObjectType	= 0x00000009;

	// Tool Subtypes:
	SVWindowToolObjectType						= 0x00000010;
	SVMathToolObjectType						= 0x00000012;
	SVToolImageObjectType						= 0x00000015;
	SVToolArchiveObjectType                     = 0x00000016;
	SVToolLoadImageObjectType					= 0x00000017;
	SVRoundWindowToolObjectType					= 0x00000018;
	SVStatisticsToolObjectType					= 0x00000019;
	SVToolAcquisitionObjectType					= 0x0000001a;
	SVToolFreezeObjectType						= 0x0000001b;
	SVTransformationToolObjectType				= 0x0000001c;
	SVPolarTransformationToolObjectType			= 0x0000001d; 
	SVColorToolObjectType						= 0x0000001e;
	SVToolCylindricalObjectType					= 0x0000001f;
	SVPerspectiveToolObjectType                 = 0x00000020;
	SVExternalToolObjectType                    = 0x00000025;
	SVLinearToolObjectType						= 0x00000026;
	SVShiftToolObjectType						= 0x00000028;
	SVResizeToolObjectType						= 0x00000029;
	SVRingBufferToolObjectType					= 0x0000002a;
	SVTableToolObjectType						= 0x0000002b;
	SVTableAnalyzerToolObjectType				= 0x0000002c;
	LoopToolObjectType							= 0x0000002d;
	GroupToolObjectType							= 0x0000002e;
	DrawToolObjectType							= 0x0000002f;
	ModuleToolObjectType							= 0x00000030;

	SVEnvironmentObjectType						= 0x00000062;
	SVCameraObjectType							= 0x00000063;
	SVGlobalConstantObjectType					= 0x00000064;

	// Analyzer Subtypes:	
	PixelAnalyzerObjectType				    = 0x00000100;
	SVBlobAnalyzerObjectType					= 0x00000101;
	SVLuminanceAnalyzerObjectType				= 0x00000102;
	SVOCVAnalyzerObjectType						= 0x00000105;
	HistogramAnalyzerObjectType				= 0x00000106;
	BlobAnalyzer2ObjectType						= 0x00000107;
	PixelAnalyzerResultObjectType		        = 0x00000200;
	SVPixelCountObjectType						= 0x00000201;

	SVLinePixelCountingAnalyzerObjectType		= 0x00000300;  //obsolete
	SVLineEdgeCountingAnalyzerObjectType		= 0x00000301;  //obsolete
	SVLineEdgePositionAnalyzerObjectType		= 0x00000302;  //obsolete
	SVLineLinearMeasurementAnalyzerObjectType	= 0x00000303;  //obsolete
	SVLineMaximumForegroundObjectAnalyzerObjectType = 0x00000304; //obsolete
	SVLineMaximumBackgroundObjectAnalyzerObjectType = 0x00000305;
	SVLineMaximumObjectAnalyzerObjectType		= 0x00000306; //obsolete

	SVLinearEdgeAProcessingObjectType			= 0x00000380;
	SVLinearEdgeBProcessingObjectType			= 0x00000381;

	SVLinearPixelCountingAnalyzerObjectType		= 0x00000397;
	SVLinearEdgeCountingAnalyzerObjectType		= 0x00000398;
	SVLinearEdgePositionAnalyzerObjectType		= 0x00000399;
	SVLinearMeasurementAnalyzerObjectType	    = 0x0000039a;
	SVLinearMaximumForegroundObjectAnalyzerObjectType = 0x0000039b;
	SVLinearMaximumBackgroundObjectAnalyzerObjectType = 0x0000039c;
	SVLinearMaximumObjectAnalyzerObjectType		= 0x0000039d;


	// Equation Subtypes:
	SVConditionalObjectType						= 0x00000400;
	SVMathEquationObjectType					= 0x00000401;
	SVUpperThresholdEquationObjectType			= 0x00000402;
	SVLowerThresholdEquationObjectType			= 0x00000403;
	SVAutoThresholdEquationObjectType			= 0x00000404;
	SVLUTEquationObjectType						= 0x00000405;

	//Equation Subtypes for VAriableSize 	
	EQSizeWidthType								= 0x00000406;
	EQSizeHeightType							= 0x00000407;
	EQSizePositionXType							= 0x00000408;
	EQSizePositionYType							= 0x00000409;

	TableColumnEquationObjectType				= 0x0000040a;
	IndexEquationObjectType						= 0x0000040b;

	// Math Container Subtypes:
	SVEvaluateXObjectType						= 0x00000480;
	SVEvaluateYObjectType						= 0x00000481;
	SVEvaluateBetaObjectType					= 0x00000482;
	SVEvaluateObjectType						= 0x00000483;
	SVEvaluateTranslationXObjectType			= 0x00000484;
	SVEvaluateTranslationYObjectType			= 0x00000485;
	SVEvaluateRotationXObjectType				= 0x00000486;
	SVEvaluateRotationYObjectType				= 0x00000487;
	SVEvaluateRotationAngleObjectType			= 0x00000488;
	SVEvaluateCenterXObjectType					= 0x00000489;
	SVEvaluateCenterYObjectType					= 0x0000048a;
	SVEvaluateStartRadiusObjectType				= 0x0000048b;
	SVEvaluateEndRadiusObjectType				= 0x0000048c;
	SVEvaluateStartAngleObjectType				= 0x0000048d;
	SVEvaluateEndAngleObjectType				= 0x0000048e;
			
	// IO Subtypes:
	SVDigitalInputObjectType					= 0x00000500;
	SVDigitalOutputObjectType					= 0x00000501;
	SVRemoteInputObjectType						= 0x00000502;
	SVCameraDataInputObjectType					= 0x00000504;
	PlcOutputObjectType							= 0x00000505;

	// Transform Subtypes:
	SVImageTransformObjectType					= 0x00000600;
	SVPointTransformObjectType					= 0x00000601;

	// Polar Transform Subtypes:
	SVImagePolarTransformObjectType				= 0x00000700;

	// Result Subtypes:
	SVResultPointXObjectType					= 0x00000800;
	SVResultPointYObjectType					= 0x00000801;
	SVResultLongObjectType						= 0x00000802;
	SVResultDoubleObjectType					= 0x00000803;
	SVResultDPointXObjectType					= 0x00000804;
	SVResultDPointYObjectType					= 0x00000805;
	SVResultVariantObjectType                   = 0x00000806;

	SVResultOCVObjectType						= 0x00000902;
	SVResultStringObjectType                    = 0x00000955;
	SVBarCodeAnalyzerObjectType					= 0x0000095a;
	SVResultBarCodeObjectType					= 0x0000095c;
	SVPatternAnalyzerObjectType					= 0x00000960;

	// Unary Image Operator List Subtypes:
	SVStdImageOperatorListObjectType			= 0x00001000;
	SVInPlaceImageOperatorListObjectType		= 0x00001001;
	SVLinearImageOperatorListObjectType			= 0x00001002;

	// Unary Image Operator Subtypes:
	SVThresholdObjectType						= 0x00002000;
	SVRoundMaskOperatorObjectType				= 0x00002001;
	SVUserMaskOperatorObjectType				= 0x00002002;
	SVClosingFilterObjectType					= 0x00002003;
	SVOpeningFilterObjectType					= 0x00002004;
	SVDilationFilterObjectType					= 0x00002005;
	SVErosionFilterObjectType					= 0x00002006;
	SVEdgeDetectFilterObjectType				= 0x00002007;
	SVEdgeDetect2FilterObjectType				= 0x00002008;
	SVLaplacianEdgeFilterObjectType				= 0x00002009;
	SVLaplacianEdge2FilterObjectType			= 0x0000200b;
	SVVertEdgeFilterObjectType					= 0x0000200c;
	SVHorzEdgeFilterObjectType					= 0x0000200d;
	SVSharpenFilterObjectType					= 0x0000200e;
	SVSharpen2FilterObjectType					= 0x0000200f;
	SVSmoothFilterObjectType					= 0x00002010;
	SVMaxMinusMinFilterObjectType				= 0x00002011;
	SVLUTOperatorObjectType						= 0x00002012;
	SVCustomFilterObjectType					= 0x00002013;
	SVRankingFilterObjectType					= 0x00002014;
	SVSkeletonFilterObjectType                  = 0x00002015;
	SVWatershedFilterObjectType                 = 0x00002016;
	SVThinningFilterObjectType                  = 0x00002017;
	SVThickeningFilterObjectType                = 0x00002018;
	SVShapeMaskHelperObjectType					= 0x00002019;
	SVCustom2FilterObjectType					= 0x0000201a;
	EraseBorderBlobsFilterObjectType			= 0x0000201b;
	ExtractHolesFilterObjectType				= 0x0000201c;
	FillHolesFilterObjectType					= 0x0000201d;
	ReconstructFilterObjectType					= 0x0000201e;
	Ranking2FilterObjectType					= 0x0000201f;

	// Operator SubTypes
	SVColorThresholdObjectType					= 0x00003000;
	ParameterInputObjectType					= 0x00003001;
	ParameterResultObjectType					= 0x00003002;

	//TableObject SubTypes
	TableFillObjectType						= 0x00004000;
	TableCopyObjectType						= 0x00004001;

	TableAnalyzerSortType					= 0x00004010;
	TableAnalyzerExcludeType				= 0x00004011;
	TableAnalyzerLimitType					= 0x00004012;
	TableAnalyzerAddColumnType				= 0x00004013;
	TableAnalyzerDeleteColumnType			= 0x00004014;

	//DrawTask Subtypes
	DrawRectangleTaskType					= 0x00004100;
	DrawOvalTaskType						= 0x00004101;
	DrawSegmentTaskType						= 0x00004102;
	DrawTriangleTaskType					= 0x00004103;
	DrawLineTaskType						= 0x00004104;
	DrawPolygonTaskType					    = 0x00004105;
	DrawBucketFillTaskType					= 0x00004106;
	DrawPointsTaskType					 	= 0x00004107;
	DrawTextTaskType						= 0x00004108;

	//ValueObject SubTypes
	SVDWordValueObjectType					= 0x00005000;
	SVLongValueObjectType					= 0x00005001;
	SVDoubleValueObjectType					= 0x00005002;
	SVBoolValueObjectType					= 0x00005003;
	SVPointValueObjectType					= 0x00005004;
	SVByteValueObjectType					= 0x00005005;
	SVStringValueObjectType					= 0x00005006;
	SVEnumValueObjectType					= 0x00005007;
	SVDPointValueObjectType					= 0x00005008;
	SVInt64ValueObjectType					= 0x00005009;
	SVCharValueObjectType					= 0x0000500A;
	SVVariantValueObjectType				= 0x0000500B;
	DoubleSortValueObjectType				= 0x0000500C;
	SVTimerValueObjectType					= 0x0000500D;
}

enum LUTModeEnum
{
	LUTIdentity = 0;
	LUTInversion = 1;
	LUTSign = 2;
	LUTClip = 3;
	LUTFormula = 4;
	LUTFreeForm = 5;
	LUTStretch = 6;
}

///SVObserver object attributes
enum ObjectAttributes
{
	noAttributes				= 0x00000000;	//None
	viewable					= 0x00000001;	//Object is viewable in object selector
	//publishable					= 0x00000002;	//obsolete (Object value can be published)
	//archivable					= 0x00000004;	//obsolete (Object value is displayed in the object selector when used for archiving)
	useable						= 0x00000008;	//Object can be used (displayed in the object selector when e.g. used for equations)
	//embedable					= 0x00000010;	//obsolete (Object is an embedded value)
	//selectableForStatistics		= 0x00000020;	//obselete (Object is displayed in the object selector when used for statistics tool)
	//archivableImage				= 0x00000040;	//obsolete (Object image is displayed in the object selector when used for archiving)
	audittrail					= 0x00000080;	//Object is printed in the configuration report
	remotelySetable				= 0x00000100;	//Object can be set remotely  //@TODO[Arvid]: this is a typo. 'remotelySettable' would be correct
	setableOnline				= 0x00000200;	//Object can be set when SVObserver is Online //@TODO[Arvid]: this is a typo. 'settableOnline' would be correct
	//extentObject				= 0x00000400;	//obsolete (Object is an extent value object)
	//taskObject					= 0x00000800;	//obsolete (Object is a task object)
	//publishResultImage			= 0x00001000;	//obsolete (Object result image can be published)
	//dataDefinitionValue			= 0x00010000;	//obsolete (Object is selected for the data definition list)
	//dataDefinitionImage			= 0x00020000;	//obselete (Object is selected for the data definition list)
}

///Object selector types
enum SearchArea
{
	toolsetItems = 0;				//Inspection toolset items
	globalConstantItems = 1;		//Global constant items
	ppqItems = 2;					//PPQ variable items
	cameraObject = 3;				//camera variable items
}

enum ObjectSelectorType
{
	allValueObjects = 0;			//All valueObjects
	allNumberValueObjects = 1;		//All ValueObjects which can be converted to a integer or double
	stringValueObjects = 3;
	tableObjects = 4;				//Inspection  table Objects 
	allImageObjects = 5;
	grayImageObjects = 6;
	colorImageObjects = 7;
	toolObjects = 8;
	boolValueObjects = 9;		//All ValueObjects which are of type bool
}

enum SVExtentPropertyEnum
{
	SVExtentPropertyNone					= 0;
	SVExtentPropertyPositionPointX          = 0x00000001;
	SVExtentPropertyPositionPointY          = 0x00000002;
	SVExtentPropertyPositionPoint           = 0x00000003;
	SVExtentPropertyPositionPointEndOfLineX = 0x00000004;
	SVExtentPropertyPositionPointEndOfLineY = 0x00000008;
	SVExtentPropertyPositionPointEndOfLine  = 0x0000000C;
	SVExtentPropertyRotationAngle           = 0x00000010;
	SVExtentPropertyTranslationOffsetX      = 0x00000040;
	SVExtentPropertyTranslationOffsetY      = 0x00000080;
	SVExtentPropertyTranslationOffset       = 0x000000C0;
	SVExtentPropertyOutputPositionPointX    = 0x00000100;
	SVExtentPropertyOutputPositionPointY    = 0x00000200;
	SVExtentPropertyOutputPositionPoint     = 0x00000300;

	SVExtentPropertyWidthFactorFormat		= 0x00010000; ///< Used by Resize Tool
	SVExtentPropertyHeightFactorFormat		= 0x00020000; ///< Used by Resize Tool and the Image Tool Height Doubling operation
	SVExtentPropertyWidthFactorContent		= 0x00080000; ///< Used by Resize Tool
	SVExtentPropertyHeightFactorContent		= 0x00040000; ///< Used by Resize Tool and the Image Tool Height Doubling operation

	SVExtentPropertyStartAngle              = 0x00100000;
	SVExtentPropertyEndAngle                = 0x00200000;
	SVExtentPropertyInnerRadius             = 0x00400000;
	SVExtentPropertyOuterRadius             = 0x00800000;
	SVExtentPropertyWidth                   = 0x01000000;
	SVExtentPropertyHeight                  = 0x02000000;
	SVExtentPropertyOutputWidth             = 0x04000000;
	SVExtentPropertyOutputHeight            = 0x08000000;

	//SVExtentPropertyPositionsInput = SVExtentPropertyPositionPointX | SVExtentPropertyPositionPointY | SVExtentPropertyPositionPointEndOfLineX | 
	//								SVExtentPropertyPositionPointEndOfLineY | SVExtentPropertyTranslationOffsetX | SVExtentPropertyTranslationOffsetY | SVExtentPropertyRotationAngle,
	SVExtentPropertyPositionsInput = 0x000000DF;

	//SVExtentPropertyDimensionsInput = SVExtentPropertyWidth | SVExtentPropertyHeight | SVExtentPropertyStartAngle | SVExtentPropertyEndAngle | SVExtentPropertyInnerRadius
	//                        | SVExtentPropertyOuterRadius | SVExtentPropertyHeightFactorContent | SVExtentPropertyWidthFactorContent,
	SVExtentPropertyDimensionsInput = 0x03FC0000;

	//SVExtentPropertyDimentionsOutput = SVExtentPropertyOutputWidth | SVExtentPropertyOutputHeight,
	SVExtentPropertyDimentionsOutput = 0x0C000000;

	//SVExtentPropertyRectangle = SVExtentPropertyWidth | SVExtentPropertyHeight | SVExtentPropertyDimentionsOutput,
	SVExtentPropertyRectangle = 0x0F000000;

	//SVExtentPropertyPie = SVExtentPropertyStartAngle | SVExtentPropertyEndAngle	| SVExtentPropertyInnerRadius | SVExtentPropertyOuterRadius	| SVExtentPropertyDimentionsOutput,
	SVExtentPropertyPie = 0x0CF00000;

	//SVExtentPropertyPositionsAll = SVExtentPropertyPositionsInput | SVExtentPropertyPositionsOutput,
	SVExtentPropertyPositionsAll = 0x000003DF;

	//SVExtentPropertyDimensionsAll = SVExtentPropertyDimensionsInput	| SVExtentPropertyDimentionsOutput,
	SVExtentPropertyDimensionsAll = 0x0FFC0000;

	//SVExtentPropertyAll = SVExtentPropertyPositionsAll | SVExtentPropertyDimensionsAll,
	SVExtentPropertyAll = 0x0FFC03DF;

	//SVExtentPropertyNoDecimalPlaces = SVExtentPropertyPositionPoint | SVExtentPropertyPositionPointEndOfLine | SVExtentPropertyTranslationOffset | SVExtentPropertyOutputPositionPoint
	//						| SVExtentPropertyWidth	| SVExtentPropertyHeight | SVExtentPropertyOutputWidth | SVExtentPropertyOutputHeight,
	SVExtentPropertyNoDecimalPlaces = 0x0F0003CF;
	
	//SVExtentProperty2DecimalPlaces = SVExtentPropertyRotationAngle | SVExtentPropertyStartAngle	| SVExtentPropertyEndAngle | SVExtentPropertyInnerRadius | SVExtentPropertyOuterRadius,
	SVExtentProperty2DecimalPlaces = 0x00F00010;
}

enum EAutoSize
{
	EnableNone = 0x0;
	EnableSize = 0x1;
	EnablePosition = 0x2;
	EnableSizeAndPosition = 0x3;
	EnableNegativePosition = 0x4;
	//EnableAll = EnableSizeAndPosition | EnableNegativePosition
	EnableAll = 0x7;
}

enum SVExtentLocationPropertyEnum
{
	SVExtentLocationPropertyUnknown     = 0;
	SVExtentLocationPropertyTopLeft     = 1;
	SVExtentLocationPropertyTopRight    = 2;
	SVExtentLocationPropertyBottomRight = 3;
	SVExtentLocationPropertyBottomLeft  = 4;
	SVExtentLocationPropertyLeft        = 5;
	SVExtentLocationPropertyRight       = 6;
	SVExtentLocationPropertyTop         = 7;
	SVExtentLocationPropertyBottom      = 8;
	SVExtentLocationPropertyCenter      = 9;
	SVExtentLocationPropertyRotate      = 10;
	SVExtentLocationPropertyDisabled	= 11;
	SVExtentLocationPropertySize		= 12;
}

enum SVExtentTranslationEnum
{
	SVExtentTranslationUnknown         = 0;
	SVExtentTranslationNone            = 10;
	SVExtentTranslationShift           = 20; //<default e.g WindowTool Shifttool
	SVExtentTranslationRotate          = 30; //< not used 
	SVExtentTranslationFlippedRotate   = 31; //SVImageExtentClass patternExtents
	SVExtentTranslationProfile         = 40; //<LinearTool with Rotation
	SVExtentTranslationProfileShift    = 41; //<LinearTool without Rotation
	SVExtentTranslationTransformShift  = 50; //SVImagetransform 
	SVExtentTranslationTransformRotate = 51; //SVImagetransform 
	SVExtentTranslationPolarUnwrap     = 60; //SVPolarTransformationToolClass
	SVExtentTranslationLine            = 80; //LinearAnalyzer

	/// SvDef::SVExtentTranslationResize - Does a position, height, and width, 
	///  translation that uses the scale factor values.
	///  Uses include the Resize Tool.
	SVExtentTranslationResize		   = 89; //ResizeTool

	/// SVExtentDoubleHeight - Does a position, and height translation 
	///  that uses the height scale factor value.
	///  Uses include the Image Tool, Double Height operation.
	SVExtentTranslationDoubleHeight    = 90; //imageTool

	SVExtentTranslationFlipVertical	   = 91;
	SVExtentTranslationFlipHorizontal  = 92;
	SVExtentTranslationFigureShift	   = 93; //SVLoadImageToolClass
	SVExtentTranslationLinear          = 100;
	SVExtentTranslationCylindricalWarpH			= 110;
	SVExtentTranslationCylindricalWarpV			= 111;
	SVExtentTranslationHorizontalPerspective	= 120;
	SVExtentTranslationVerticalPerspective		= 121;
}

enum SVExtentDirectionsEnum
{
	SVExtentDirectionBoth		= 0;
	SVExtentDirectionHorizontal	= 1;
	SVExtentDirectionVertical	= 2;
}

enum ShutdownOption
{
	shutdownSvObserver = 0;
	shutdownSvObserverAndWindows = 1;
	shutdownSvObserverAndRestartWindows = 2;
}


enum ClassIdEnum
{
	NoObjectClassId = 0;

	BoolValueClassId = 1;
	DWordValueClassId = 2;
	DoubleValueClassId = 3;
	DoubleSortValueClassId = 4;
	LongValueClassId = 5;
	PointValueClassId = 6;
	DPointValueClassId = 7;
	ByteValueClassId = 8;
	StringValueClassId = 9;
	FileNameValueClassId = 10;
	Int64ValueClassId = 11;
	CharValueClassId = 12;
	TimerValueClassId = 13;
	VariantValueClassId = 14;
	EnumerateValueClassId = 15;
	ImageClassId = 16;
	LinkedValueClassId = 17;

	InspectionProcessClassId = 20;

	RootClassId = 21;
	ToolSetClassId = 22;

	//Tool Class Ids
	WindowToolClassId = 23;
	MathToolClassId = 24;
	StatisticsToolClassId = 25;
	RingBufferToolClassId = 26;
	ArchiveToolClassId = 27;
	AcquisitionToolClassId = 28;
	TransformationToolClassId = 29;
	ShiftToolClassId = 30;
	CylindricalWarpToolClassId = 31;
	PerspectiveToolClassId = 32;
	ImageToolClassId = 33;
	LinearToolClassId = 34;
	ColorToolClassId = 35;
	ResizeToolId = 36;
	LoadImageToolClassId = 37;
	TableToolClassId = 38;
	TableAnalyzerToolClassId = 39;
	PolarTransformationToolClassId = 40;
	LoopToolClassId = 41;
	ExternalToolClassId = 42;
	GroupToolClassId = 43;
	DrawToolClassId = 44;
	ModuleToolClassId = 45;
	

	//Analyzer Class Ids
	BlobAnalyzerClassId = 100;
	PixelAnalyzerClassId = 101;
	LuminanceAnalyzerClassId = 102;
	HistogramAnalyzerClassId = 103;
	PatternAnalyzerClassId = 104;
	BarCodeAnalyzerClassId = 105;
	OCVAnalyzerClassId = 106;
	LinearPixelCountingLineAnalyzerClassId = 107;
	LinearEdgeCountingLineAnalyzerClassId = 108;
	LinearEdgePositionLineAnalyzerClassId = 109;
	LinearMeasurementAnalyzerClassId = 110;
	LinearMaximumBackgroundObjectLineAnalyzerClassId = 111;
	LinearMaximumForegroundObjectLineAnalyzerClassId = 112;
	LinearMaximumObjectLineAnalyzerClassId = 113;
	TableAnaylzerSortClassId = 114;
	TableAnaylzerExcludeClassId = 115;
	TableAnaylzerLimitClassId = 116;
	TableAnaylzerAddColumnClassId = 117;
	BlobAnalyzer2ClassId = 118;
	BlobFeatureTaskClassId = 119;
	BlobFeatureListClassId = 120;
	BlobDrawClassId = 121;
	TableAnaylzerDeleteColumnClassId = 122;

	//Result Class Ids
	PointXResultClassId = 200;
	PointYResultClassId = 201;
	DPointXResultClassId = 202;
	DPointYResultClassId = 203;
	LongResultClassId = 204;
	DoubleResultClassId = 205;
	VariantResultClassId = 206;
	StringResultClassId = 207;
	BarCodeResultClassId = 208;
	OCVAnalyzerResultClassId = 209;
	OCVCharacterResultClassId = 210;

	RangeClassId = 220;

	//Filter Class Ids
	SmoothFilterClassId = 300;
	SharpenFilterClassId = 301;
	Sharpen2FilterClassId = 302;
	HorizEdgeFilterClassId = 303;
	VertEdgeFilterClassId = 304;
	EdgeDetectFilterClassId = 305;
	EdgeDetect2FilterClassId = 306;	
	LaplacianEdgeFilterClassId = 307;
	LaplacianEdge2FilterClassId = 308;
	MaxMinusMinFilterClassId = 309;
	ErosionFilterClassId = 310;
	DilationFilterClassId = 311;
	OpeningFilterClassId = 312;
	ClosingFilterClassId = 313;
	CustomFilterClassId = 314;
	Custom2FilterClassId = 315;
	RankingFilterClassId = 316;
	Ranking2FilterClassId = 317;
	SkeletonFilterClassId = 318;
	ThinningFilterClassId = 319;
	ThickeningFilterClassId = 320;
	WatershedFilterClassId = 321;
	EraseBorderBlobsFilterClassId = 322;
	ExtractHolesFilterClassId = 323;
	FillHolesFilterClassId = 324;
	ReconstructFilterClassId = 325;

	ThresholdClassId = 400;
	UserMaskOperatorClassId = 401;
	StdImageOperatorListClassId = 402;
	InPlaceImageOperatorListClassId = 403;
	LinearImageOperatorListClassId = 404;
	EquationClassId = 405;
	ConditionalClassId = 406;
	MathEquationClassId = 407;
	LinearEdgeAProcessingClassId = 408;
	LinearEdgeBProcessingClassId = 409;
	DataBufferClassId = 410;
	ImageArithmeticClassId = 411;
	UpperThresholdEquationClassId = 412;
	LowerThresholdEquationClassId = 413;
	AutoThresholdEquationClassId = 414;
	ExternalToolTaskClassId = 415;
	ImageTransformClassId = 416;
	PolarTransformClassId = 417;
	ImagePolarTransformClassId = 418;
	EvaluateTranslationXClassId = 419;
	EvaluateTranslationYClassId = 420;
	EvaluateRotationXClassId = 421;
	EvaluateRotationYClassId = 422;
	EvaluateRotationAngleClassId = 423;
	EvaluateCenterXClassId = 424;
	EvaluateCenterYClassId = 425;
	EvaluateStartRadiusClassId = 426;
	EvaluateEndRadiusClassId = 427;
	EvaluateStartAngleClassId = 428;
	EvaluateEndAngleClassId = 429;
	LUTEquationClassId = 430;
	LUTOperatorClassId = 431;
	ColorThresholdClassId = 432;
	ToolSizeAdjustTaskId = 433;
	TableColumnEquationId = 434;
	IndexEquationId = 435;
	TableFillObjectId = 436;
	TableCopyObjectId = 437;
	EQAdjustSizeWidthClassId = 439;						
	EQAdjustSizeHeightClassId = 440;
	EQAdjustSizePositionXClassId = 441;
	EQAdjustSizePositionYClassId = 442;
	ShapeMaskHelperClassId = 443;
	TableClassId = 444;
	InputParameterTaskClassId = 448;
	ResultParameterTaskClassId = 449;
	InputConnectedClassId = 450;
	DrawRectangleClassId = 451;
	DrawOvalClassId = 452;
	DrawSegmentClassId = 453;
	DrawTriangleClassId = 454;
	DrawLineClassId = 455;
	DrawPolygonClassId = 456;
	DrawBucketFillClassId = 457;
	DrawPointsClassId = 458;
	DrawTextClassId = 459;
}

enum EmbeddedIdEnum
{
	NoEmbeddedId = 0;
	StringValueEId = 1;
	TaskObjectClassIsObjectValidEId = 2;
	RootEId = 3;
	ToolSetEnabledEId = 4;
	ToolEnabledEId = 5;
	ToolSelectedForOperatorMoveEId = 6; //obsolete, but needed for loading configs older than 10.20
	ToolPositionEId = 7;
	ToolTimeEId = 8;
	MinToolSetTimeEId = 9;
	MaxToolSetTimeEId = 10;
	ResetInspectionCountsEId = 11;
	TriggerCountEId = 12;
	PPQIndexEId = 13;
	TriggerDeltaEId = 14;
	TriggerToCompletionEId = 15;
	TriggerToStartEId = 16;
	TriggerToAcquisitionStartEId = 17;
	AcquisitionTimeEId = 18;
	EnableAuxiliaryExtentsEId = 21;
	ObjectIDEId = 22;
	TriggerIndexEId = 23;
	InspectedObjectIDEId = 24;
	InspectedObjectIDLinkEId = 25; //obsolete, but needed for loading configs older than 10.20
	LuminanceValueEId = 26;
	HistogramValueEId = 27;
	HistogramMeanEId = 28;
	HistogramStdDevEId = 29;
	HistogramRangeStartEId = 30;
	HistogramRangeEndEId = 31;
	HistogramRangeSizeEId = 32;
	HistogramMaxPixelEId = 33;
	HistogramScaleEId = 34;
	HistogramMinPixelEId = 35;
	HistogramPixelCountEId = 36;
	HistogramImageEId = 37;
	HistogramHighPeakEId = 38;
	HistogramLowPeakEId = 39;
	HistogramValleyEId = 40;
	HistogramPeakThresholdEId = 41;
	HistogramDefaultPeakEId = 42;
	HistogramAccumulateEId = 43;
	HistogramMinPeakHeightEId = 44;
	HistogramValleyLowerBoundEId = 45;
	HistogramValleyUpperBoundEId = 46;
	HistogramValleyDefaultEId = 47;
	HistogramFixedHeightValueEId = 48;
	HistogramDynamicHeightEId = 49;
	CalcStdDevEId = 50;
	PixelColorIndexEId = 51;
	PixelCountEId = 52;
	BlobEnabledFeaturesEId = 53;
	NbrOfBlobsEId = 54;
	MaxBlobDataArraySizeEId = 55;
	SortFeatureEId = 56;
	NbrOfBlobsFoundEId = 57;
	SortAscendingEId = 58;
	ExcludeFailedEId = 59;
	BlobColorEId = 60;
	BlobUseFillEId = 61;
	BlobFillColorEId = 62;
	BlobFillTypeEId = 63;
	StatMinEId = 64;
	StatMaxEId = 65;
	StatAverageEId = 66;
	StatStdDevEId = 67;
	StatVarianceEId = 68;
	StatTestValueEId = 69;
	StatNbrOfOccurancesEId = 70;
	StatPercentOfOccurancesEId = 71;
	StatEnabledFeaturesEId = 72;
	StatVariableNameToMonitorEId = 74;
	UpperThresholdEId = 76;
	LowerThresholdEId = 77;
	ThresholdActivateEId = 78;
	UpperThresholdActivateEId = 79;
	LowerThresholdActivateEId = 80;
	AutoThresholdEId = 81;
	BlackBackgroundEId = 82;
	AutoThresholdMultiplierEId = 83;	
	RingBuffer_FlagOfOutputImagesEId = 84;
	FilterKernelEId = 85;
	FilterKernelWidthEId = 86;
	FilterKernelHeightEId = 87;
	CustomFilterClippingEId = 88;
	CustomFilterAbsoluteEId = 89;
	CustomFilterTransformEId = 90;
	RankingFilterRankingRankEId = 93;
	RingBuffer_DepthEId = 94;
	RingBufferLink_DepthEId = 95; //obsolete, but needed for loading configs older than 10.20
	RangeClassFailHighEId = 96;
	RangeClassFailLowEId = 97;
	RangeClassWarnHighEId = 98;
	RangeClassWarnLowEId = 99;
	RangeClassFailHighIndirectEId = 100; //obsolete, but needed for loading configs older than 10.20
	RangeClassFailLowIndirectEId = 101; //obsolete, but needed for loading configs older than 10.20
	RangeClassWarnHighIndirectEId = 102; //obsolete, but needed for loading configs older than 10.20
	RangeClassWarnLowIndirectEId = 103; //obsolete, but needed for loading configs older than 10.20
	OCVPerformOCREId = 104;
	OCVMatchLineNumberEId = 105;
	OCVHighestMatchScoreEId = 106;
	OCVLowestMatchScoreEId = 107;
	OCVAverageMatchScoreEId = 108;
	OCVFontFileNameEId = 109;
	OCVMatchStringFileNameEId = 110;
	OCVConstraintsFileNameEId = 111;
	OCVControlsFileNameEId = 112;
	OCVUseMatchFileEId = 113;
	OCVMatchStringEId = 114;
	OCVFoundStringEId = 115;
	OCVCharacterValueEId = 116;
	OCVExtentLeftEId = 117;
	OCVExtentTopEId = 118;
	OCVExtentWidthEId = 119;
	OCVExtentHeightEId = 120;
	OCVMatchScoreEId = 121;
	ArchiveResultFilepathEId = 122;
	ArchiveImageGuids_OBSOLETE_EId = 123;
	ArchiveImageFileRootPart1EId = 124;
	ArchiveResultGuids_OBSOLETE_EId = 125;
	ArchiveAppendArchiveFileEId = 126;
	ArchiveStopAtMaxImagesEId = 127;
	ArchiveUseTriggerCountForImages_obsolete_EId = 128;
	ArchiveMaxImagesCountEId = 129;
	ArchiveMethodEId = 130;
	ArchiveUseHeadersEId = 131;
	ArchiveHeaderLabelEId = 132;
	ArchiveHeaderEId = 133;
	ArchiveResultNamesEId = 134;
	ArchiveImageNamesEId = 135;
	BaseDirectorynameEId = 136;
	BaseFilenameEId = 137;
	CenterFilenameEId = 138;
	FilenameIndex1EId = 139;
	FilenameIndex1LinkEId = 140; //obsolete, but needed for loading configs older than 10.20
	FilenameIndex2EId = 141;
	FilenameIndex2LinkEId = 142; //obsolete, but needed for loading configs older than 10.20
	UseAlternativeImagePathsEId = 143;
	SubfolderSelectionEId = 144;
	SubfolderSelectionLinkEId = 145; //obsolete, but needed for loading configs older than 10.20
	DirectorynameIndexEId = 146;
	DirectorynameIndexLinkEId = 147; //obsolete, but needed for loading configs older than 10.20
	EquationEnabledEId = 148;
	ConditionalResultEId = 149;
	MathEquationResultEId = 150;
	LinearEdgesEId = 151;
	ConditionalEditFreezeFlagEId = 152;
	DPEdgeAEId = 156;
	DPEdgeBEId = 157;
	DPCenterEId = 158;
	DWidthEId = 159;
	LinearDistanceEdgeAEId = 160;
	LinearDistanceEdgeBEId = 161;
	XEId = 162;
	DXEId = 163;
	YEId = 164;
	DYEId = 165;
	ValueEId = 166;
	FailedEId = 167;
	WarnedEId = 168;
	PassedEId = 169;
	ExplicitFailedEId = 170;
	PassedCountEId = 171;
	FailedCountEId = 172;
	WarnedCountEId = 173;
	EnabledCountEId = 174;
	ProcessedCountEId = 175;
	BlackPixelEId = 176;
	WhitePixelEId = 177;
	EdgeCountEId = 178;
	ColorEId = 179;
	StatusEId = 180;
	RotationAngleEId = 182;
	RotationPointXEId = 183;
	RotationPointYEId = 184;
	ProfileOrientationEId = 185;
	LinearToolUseRotationEId = 186;
	TranslationXOffsetEId = 187;
	TranslationYOffsetEId = 188;
	WarpTypeEId = 189;
	WarpAngleEId = 190;
	EnableOffsetAEId = 191;
	OffsetAPointEId = 192;
	EnableOffsetBEId = 193;
	OffsetBPointEId = 194;
	ArithmeticOperatorEId = 195;
	MaskEnabledEId = 196;
	MaskUseImageMaskEId = 197;
	MaskOperatorEId = 198;
	MaskFillAreaEId = 199;
	MaskFillColorEId = 200;
	ShapeMaskTypeEId = 201;
	ShapeMaskMaskAreaEId = 202;
	CenterXEId = 203;
	CenterYEId = 204;
	WidthEId = 205;
	HeightEId = 206;
	ShapeMaskPropertySideThicknessEId = 207;
	ShapeMaskPropertyTopBottomThicknessEId = 208;
	ShapeMaskPropertyOffsetEId = 209;
	ShapeMaskPropertySymmetryOrientationEId = 210;
	ShapeMaskAutoResizeEId = 211;
	PathNameEId = 212;
	ContinuousReloadEId = 213;
	BarCodeEId = 214;
	RegExpressionEId = 215;
	BCTypeEId = 216;
	BCOrientationEId = 217;
	BCSkewNegativeEId = 218;
	BCSkewPositiveEId = 219;
	BCCellMinSizeEId = 220;
	BCCellMaxSizeEId = 221;
	BCCellNumberXEId = 222;
	BCCellNumberYEId = 223;
	BCSpeedEId = 224;
	BCThresholdEId = 225;
	BCStringSizeEId = 226;
	BCErrorCorrectionEId = 227;
	BCEncodingEId = 228;
	BCForegroundColorEId = 229;
	BCSaveStringInFileEId = 230;
	BCStringFileNameEId = 231;
	BCWarnOnFailedReadEId = 232;
	WatershedFilterMinVariationEId = 233;
	WatershedFilterControlFlagEId = 234;
	WatershedFilterUseMarkerEId = 235;
	ThickeningFilterItterationsEId = 236;
	ThickeningFilterGrayOnEId = 237;
	ThinningFilterItterationsEId = 238;
	GrayOnEId = 239;
	BCUseSingleMatchStringEId = 240;
	BCUseMatchStringFileEId = 241;
	BCMatchStringFileNameEId = 242;
	BCMatchStringLineEId = 243;
	BCMatchScoreEId = 244;
	BCTimeoutEId = 245;
	BCUnevenGridEId = 246;
	UpperThresholdEquationResultEId = 247;
	LowerThresholdEquationResultEId = 248;
	AutoThresholdEquationResultEId = 249;
	UseExternalATMEId = 250;
	UseExternalLTEId = 251;
	UseExternalUTEId = 252;
	RegressionTestModeEId = 253;
	UseLowerThresholdSelectableEId = 254;
	UseLowerThresholdMaxMinusPercentDiffEId = 255;
	UseLowerThresholdMaxMinusOffsetEId = 256;
	UseLowerThresholdMinPlusOffsetEId = 257;
	LowerThresholdMaxMinusPercentDiffEId = 258;
	LowerThresholdMaxMinusOffsetEId = 259;
	LowerThresholdMinPlusOffsetEId = 260;
	UseUpperThresholdSelectableEId = 261;
	UseUpperThresholdMaxMinusPercentDiffEId = 262;
	UseUpperThresholdMaxMinusOffsetEId = 263;
	UseUpperThresholdMinPlusOffsetEId = 264;
	UpperThresholdMaxMinusPercentDiffEId = 265;
	UpperThresholdMaxMinusOffsetEId = 266;
	UpperThresholdMinPlusOffsetEId = 267;
	UseLowerThresholdSelectableBEId = 268;
	UseLowerThresholdMaxMinusPercentDiffBEId = 269;
	UseLowerThresholdMaxMinusOffsetBEId = 270;
	UseLowerThresholdMinPlusOffsetBEId = 271;
	LowerThresholdMaxMinusPercentDiffBEId = 272;
	LowerThresholdMaxMinusOffsetBEId = 273;
	LowerThresholdMinPlusOffsetBEId = 274;
	UseUpperThresholdSelectableBEId = 275;
	UseUpperThresholdMaxMinusPercentDiffBEId = 276;
	UseUpperThresholdMaxMinusOffsetBEId = 277;
	UseUpperThresholdMinPlusOffsetBEId = 278;
	UpperThresholdMaxMinusPercentDiffBEId = 279;
	UpperThresholdMaxMinusOffsetBEId = 280;
	UpperThresholdMinPlusOffsetBEId = 281;
	LinearThresholdMaxEId = 282;
	LinearThresholdMinEId = 283;
	LinearThresholdDeltaEId = 284;
	ShiftToolModeEId = 285;
	ShiftToolReferenceXEId = 286;
	ShiftToolReferenceYEId = 287;
	ContRecalcEId = 288;
	ImageTransformDisplacementXEId = 289;
	ImageTransformDisplacementYEId = 290;
	TopResultEId = 291;
	LeftResultEId = 292;
	ImageTransformSourceXEId = 293;
	ImageTransformSourceYEId = 294;
	OutputEvaluateTranslationXResultEId = 295;
	OutputEvaluateTranslationYResultEId = 296;
	OutputEvaluateRotationXResultEId = 297;
	OutputEvaluateRotationYResultEId = 298;
	OutputEvaluateRotationAngleResultEId = 299;
	PerformTranslationEId = 300;
	TranslationXEId = 301;
	TranslationYEId = 302;
	PerformRotationEId = 303;
	LearnedTranslationXEId = 304;
	LearnedTranslationYEId = 305;
	LearnedRotationXEId = 306;
	LearnedRotationYEId = 307;
	LearnedRotationAngleEId = 308;
	UseExtentsOnlyEId = 309;
	ConditionalToolSetDrawFlagEId = 310;
	ConditionalToolDrawFlagEId = 311;
	OutputCenterXEId = 312;
	OutputCenterYEId = 313;
	OutputStartRadiusEId = 314;
	OutputEndRadiusEId = 315;
	StartAngleEId = 316;
	EndAngleEId = 317;
	OutputInterpolationModeEId = 318;
	OutputUseFormulaEId = 319;
	OutputAngularMethodEId = 320;
	OutputEvaluateCenterXResultEId = 321;
	OutputEvaluateCenterYResultEId = 322;
	OutputEvaluateStartRadiusResultEId = 323;
	OutputEvaluateEndRadiusResultEId = 324;
	OutputEvaluateStartAngleResultEId = 325;
	OutputEvaluateEndAngleResultEId = 326;
	ExtentRelativeLeftPositionEId = 327;
	ExtentRelativeTopPositionEId = 328;
	ExtentRelativeRightPositionEId = 329;
	ExtentRelativeBottomPositionEId = 330;
	ExtentWidthEId = 331;
	ExtentHeightEId = 332;
	ExtentWidthFactorContentEId = 333;
	ExtentHeightFactorContentEId = 334;
	UpdateAuxiliaryExtentsEId = 335;
	AuxiliarySourceXEId = 336;
	AuxiliarySourceYEId = 337;
	AuxiliarySourceAngleEId = 338;
	AuxiliarySourceImageNameEId = 339;
	AuxiliaryDrawTypeEId = 340;
	//LUTIndexVariableEId = 341;
	LUTEquationResultEId = 342;
	LUTEquationClipFlagEId = 343;
	OutputLUTVectorEId = 344;
	UseLUTEId = 345;
	ContinuousRecalcLUTEId = 346;
	LUTModeEId = 347;
	LUTUpperClipEId = 348;
	LUTLowerClipEId = 349;
	LUTMinInputEId = 350;
	LUTMaxInputEId = 351;
	LUTMinOutputEId = 352;
	LUTMaxOutputEId = 353;
	PatAcceptThresholdEId = 354;
	PatCertainThresholdEId = 355;
	PatAccuracyEId = 356;
	PatMaxOccurancesEId = 357;
	PatSearchAngleModeEId = 358;
	PatSpeedEId = 359;
	PatModelImageFileEId = 360;
	PatSearchAngleEId = 361;
	PatAngleDeltaNegEId = 362;
	PatAngleDeltaPosEId = 363;
	PatAngleToleranceEId = 364;
	PatAngleAccuracyEId = 365;
	PatAngleInterpolationEId = 366;
	PatCircularOverscanEId = 367;
	PatDontCareEId = 368;
	PatDontCareImageFileEId = 369;
	PatPreliminaryAcceptanceThresholdEId = 370;
	PatFastFindEId = 371;
	PatModelStepEId = 372;
	PatModelWidthEId = 373;
	PatModelHeightEId = 374;
	PatModelCenterXEId = 375;
	PatModelCenterYEId = 376;
	PatDontCareWidthEId = 377;
	PatDontCareHeightEId = 378;
	PatBeginningResolutionLevelEId = 379;
	PatFinalResolutionLevelEId = 380;
	PatAdditionalCandidatesEId = 381;
	PatCandidateSpacingXMinEId = 382;
	PatCandidateSpacingYMinEId = 383;
	PatResultMatchScoreEId = 384;
	PatResultXEId = 385;
	PatResultYEId = 386;
	PatResultAngleEId = 387;
	PatResultNumFoundOccurancesEId = 388;
	LinearDataClassEId = 389;
	Band0ImageEId = 390;
	Band1ImageEId = 391;
	Band2ImageEId = 392;
	ConvertToHSIEId = 393;
	HasROIEId = 394;
	ColorThresholdEnabledEId = 395;
	Band0UpperThresholdEId = 396;
	Band0LowerThresholdEId = 397;
	Band0ThresholdExcludeEId = 398;
	Band0ThresholdEnabledEId = 399;
	Band1UpperThresholdEId = 400;
	Band1LowerThresholdEId = 401;
	Band1ThresholdExcludeEId = 402;
	Band1ThresholdEnabledEId = 403;
	Band2UpperThresholdEId = 404;
	Band2LowerThresholdEId = 405;
	Band2ThresholdExcludeEId = 406;
	Band2ThresholdEnabledEId = 407;
	EdgeAUpperThresholdSelectedValueEId = 408;
	EdgeADirectionEId = 409;
	EdgeAPolarisationEId = 410;
	EdgeAEdgeSelectEId = 411;
	EdgeAEdgeSelectThisValueEId = 412;
	EdgeAIsFixedEdgeMarkerEId = 413;
	EdgeAPositionEId = 414;
	EdgeAPositionOffsetEId = 415;
	EdgeALowerThresholdSelectedValueEId = 416;
	EdgeBDirectionEId = 418;
	EdgeBPolarisationEId = 419;
	EdgeBEdgeSelectEId = 420;
	EdgeBEdgeSelectThisValueEId = 421;
	EdgeBIsFixedEdgeMarkerEId = 422;
	EdgeBPositionEId = 423;
	EdgeBPositionOffsetEId = 424;
	EdgeBLowerThresholdSelectedValueEId = 425;
	EdgeBUpperThresholdSelectedValueEId = 426;
	DrawCriteriaEId = 427;
	ResizeInterpolationModeEId = 428;
	ResizeOverscanEId = 429;
	ResizePerformanceEId = 430;
	LogicalROIImageEId = 431;
	DllFileNameEId = 432;
	DllToolNameEId = 433;
	DllToolVersionEId = 434;
	ShowAllEdgeAOverlaysEId = 435;
	ShowAllEdgeBOverlaysEId = 436;
	SourceImageNamesEId = 437;
	BCRawDataEId = 438;
	BCStringFormatEId = 439;
	BCThresholdTypeEId = 440;
	ToolCommentTypeEId = 441; //obsolete since 10.30
	NotUsed1 = 442;
	NotUsed2 = 443;
	ToolSizeAdjustSizeWidthModeEId = 445;
	ToolSizeAdjustSizeHeightModeEId = 446;
	ToolSizeAdjustSizePositionXModeEId = 447;
	ToolSizeAdjustSizePositionYModeEId = 448;
	EQAdjustSizeWidthResultEId = 449;
	EQAdjustSizeHeightResultEId = 450;
	EQAdjustSizePositionXResultEId = 451;
	EQAdjustSizePositionYResultEId = 452;
	TableTool_MaxRowEId = 453;
	TableObject_NumberOfRowsEId = 454;
	RootUidEId = 456;
	GlobalUidEId = 457;
	EnvironmentUidEId = 458;
	EnvironmentModelNumberUidEId = 459;
	EnvironmentWinKeyUidEId = 460;
	EnvironmentImageUpdateUidEId = 461;
	EnvironmentResultUpdateUidEId = 462;
	EnvironmentModeIsRunUidEId = 463;
	EnvironmentModeIsStopUidEId = 464;
	EnvironmentModeIsRegressionTestUidEId = 465;
	EnvironmentModeIsTestUidEId = 466;
	EnvironmentModeIsEditUidEId = 467;
	EnvironmentModeValueUidEId = 468;
	EnvironmentModeUidEId = 469;
	EnvironmentAutoSaveUidEId = 470;
	TableAnaylzerSortIsASCEId = 474;
	TableAnaylzerExcludeHighEId = 475;
	TableAnaylzerExcludeHigh_LinkEId = 476; //obsolete, but needed for loading configs older than 10.20
	TableAnaylzerExcludeLowEId = 477;
	TableAnaylzerExcludeLow_LinkEId = 478; //obsolete, but needed for loading configs older than 10.20
	TableAnaylzerLimitValueEId = 479;
	TableAnaylzerLimitValue_LinkEId = 480; //obsolete, but needed for loading configs older than 10.20
	MaxLoopsEId = 481;
	LoopCounterEId = 482;
	LinkedLoopsEId = 483;
	LinkedLoops_LinkedEId = 484; //obsolete, but needed for loading configs older than 10.20
	LoopBreakEId = 485;
	LoopBreak_LinkedEId = 486; //obsolete, but needed for loading configs older than 10.20
	TriggerTimeEId = 487;
	SubfolderLocationEId = 488;
	SubfolderLocationLinkEId = 489; //obsolete, but needed for loading configs older than 10.20
	InspectionNameEId = 490;
	FormatArchiveToolResultsEId = 491;
	ArchiveResultsMinimumNumberOfCharactersEId = 492;
	ArchiveResultsNumberOfDecimalsEId = 493;
	ArchiveImageFileRootPart2EId = 494;
	ArchiveImageFileRootPart3EId = 495;
	ArchiveImageFileRootPart1LinkEId = 496; //obsolete, but needed for loading configs older than 10.20
	ArchiveImageFileRootPart2LinkEId = 497; //obsolete, but needed for loading configs older than 10.20
	ArchiveImageFileRootPart3LinkEId = 498; //obsolete, but needed for loading configs older than 10.20
	IsClosedEId = 499;
	TriggerPerObjectIDEId = 500;
	FeatureTypeEId = 501;
	SortEnumEId = 502;
	IsExcludeEId = 503;
	IsInnerExcludeEId = 504;
	ExcludeLowerBoundEId = 505;
	ExcludeLowerBoundIndirectEId = 506; //obsolete, but needed for loading configs older than 10.20
	ExcludeUpperBoundEId = 507;
	ExcludeUpperBoundIndirectEId = 508; //obsolete, but needed for loading configs older than 10.20
	ConnectivityBlobEId = 509;
	IsGrayImageEId = 510;
	IsRangeEId = 511;
	IsCustomFeatureEId = 512;
	NumberOfObjectsEId = 513;
	ExtentWidthFactorContentLinkEId = 514; //obsolete, but needed for loading configs older than 10.20
	ExtentHeightFactorContentLinkEId = 515;//obsolete, but needed for loading configs older than 10.20
	ExtentWidthFactorFormatEId = 516;
	ExtentWidthFactorFormatLinkEId = 517; //obsolete, but needed for loading configs older than 10.20
	ExtentHeightFactorFormatEId = 518;
	ExtentHeightFactorFormatLinkEId = 519; //obsolete, but needed for loading configs older than 10.20
	ShapeMaskPropertyCenterXLinkEId = 534; //obsolete, but needed for loading configs older than 10.20
	ShapeMaskPropertyCenterYLinkEId = 635; //obsolete, but needed for loading configs older than 10.20
	ShapeMaskPropertyWidthLinkEId = 536; //obsolete, but needed for loading configs older than 10.20
	ShapeMaskPropertyHeightLinkEId = 537; //obsolete, but needed for loading configs older than 10.20
	ShapeMaskPropertySideThicknessLinkEId = 538; //obsolete, but needed for loading configs older than 10.20
	ShapeMaskPropertyTopBottomThicknessLinkEId = 539; //obsolete, but needed for loading configs older than 10.20
	ShapeMaskPropertyOffsetLinkEId = 540; //obsolete, but needed for loading configs older than 10.20
	MaskImageEId = 541;
	ObjectTypeEId = 542;
	IsColorAdditionalImageEId = 543;
	BackgroundColor1EId = 544;
	BackgroundColor2EId = 545;
	BackgroundColor3EId = 546;
	DrawTypesEId = 547;
	BlobTypesEId = 548;
	Color1EId = 549;
	Color2EId = 550;
	Color3EId = 551;
	DrawAdditionalImageStepNamesEId = 552;
	UseAdditionalImageEId = 553;
	LinkedValueContentEId = 554;
	LinkedValueTypeEId = 555;
	IsColorImageEId = 556;
	UseBackgroundImageEId = 557;
	PositionXEId = 558;
	PositionYEId = 559;
	StatNumberOfValidSamplesEId = 560; //Statistics Tool: number of valid values considered in statistic
	ImageToolEnabledGainId = 561;
	ImageToolGainId = 562;
	ImageToolOffsetId = 563;
	ImageToolRecalculateOnceId = 566;
	AutoFitSizeEId = 567;
	DrawAreaEId = 568;
	LeftEId = 569;
	TopEId = 570;
	EdgeALowerThresholdValueEId = 571;
	EdgeAUpperThresholdValueEId = 572;
	EdgeBLowerThresholdValueEId = 573;
	EdgeBUpperThresholdValueEId = 574;
	UseUnitMappingEId = 575;
	X1EId = 576;
	Y1EId = 577;
	X2EId = 578;
	Y2EId = 579;
	X3EId = 580;
	Y3EId = 581;
	TextEId = 582;
	IsBackgroundTransparentEId = 583;
	FontSizeEId = 584;
	FontScaleXEId = 585;
	FontScaleYEId = 586;
	XAxisAngleEId = 587;
	IsColorImageCheckEId = 588;
	ArchiveResultFolderpathPart2EId = 589;
	ArchiveResultFilenameEId = 590;
	MaximumImageQueueLengthEId = 591;
	CurrentImageQueueLengthEId = 592;
  	ArchiveResultFolderpathPart1EId = 593;
	ArchiveImageFileFormatEId = 594;
	ArchiveImageFilepathRootSeparatorEId = 595;
	ModuleCommentEId = 596;
	ToolActiveEId = 597;
	ObjectIdIndexEId = 598;
	LoopModeEId = 599;
	RotationNumberEId = 600;
	MeasurementValueEId = 601;


	//The following Ids are the first of an array and must have 100 reserved Ids 
	OutputImageEId = 1000; //Output Images, e.g. External needs 4
	RingBufferIndexEId = 1100; //For ringBuffer index of output images (by now 2 indexes)
	RingBufferIndexLinkEId = 1150; //obsolete, but needed for loading configs older than 10.20
	FilterCellEId = 1200; //Cells of the custom and rank filter (49 cells)
	ExternalInputEId = 1300; //External Dll (50)
	ExternalInputLinkedEId = 1400; //obsolete, but needed for loading configs older than 10.20
	ExternalResultEId = 1500; //External Dll (50)
	DllDependencyFileNameEId = 1600; //External Dll (50)
	TableColumnValueEId = 1700; //Table Object Column (50)
	BlobFeatureEId = 1800; //Blob Feature (SvOi::SV_NUMBER_OF_BLOB_FEATURES)
	InputObjectTypeEId = 1900; //Type for Input Object
	ResultObjectValueEId = 2000; //Result value object (for e.g. Result in Group Tool)
	ResultObjectLinkedEId = 2100; //obsolete, but needed for loading configs older than 10.20
	ResultObjectTypeEId = 2200; //Type for Result Object (for e.g. Result in Group Tool)

	//IDs for Inputs
	LUTOperatorInputEId = 100000;
	GrayImageInputEId = 100001;
	NewColumnInputEId = 100002;
	ExcludeColumnInputEId = 100003;
	SortColumnInputEId = 100004;
	ProfileOrientationInputEId = 100005;
	UseRoationAngleInputEId = 100006;
	MarkerImageInputEId = 100007;
	SeedImageInputEId = 100008;
	MinThresholdInputEId = 100009;
	MaxThresholdInputEId = 100010;
	DeltaThresholdInputEId = 100011;
	LinearDataInputEId = 100012;
	ResultInputEId = 100013;
	UpperThresholdInputEId = 100014;
	LowerThresholdInputEId = 100015;
	AutoThresholdInputEId = 100016;
	TranslationXResultInputEId = 100017;
	TranslationYResultInputEId  = 100018;
	RotationXResultInputEId = 100019;
	RotationYResultInputEId = 100020;
	RotationAngleResultInputEId = 100021;
	CenterXResultInputEId = 100022;
	CenterYResultInputEId = 100023;
	StartRadiusResultInputEId = 100024;
	EndRadiusResultInputEId = 100025;
	StartAngleResultInputEId = 100026;
	EndAngleResultInputEId = 100027;
	ImageArithmeticAImageInputEId = 100028;
	ImageArithmeticAEnableOffsetInputEId = 100029;
	ImageArithmeticAOffsetPointInputEId = 100030;
	ImageArithmeticBImageInputEId = 100031;
	ImageArithmeticBEnableOffsetInputEId = 100032;
	ImageArithmeticBOffsetPointInputEId = 100033;
	ImageArithmeticOperatorInputEId = 100034;
	WidthInputEId = 100035;
	HeightInputEId = 100036;
	PositionXInputEId = 100037;
	PositionYInputEId = 100038;
	RangeValueInputEId = 100039;
	Band0ImageInputEId = 100040;
	Band1ImageInputEId = 100041;
	Band2ImageInputEId = 100042;
	UserMaskImageInputEId = 100043;
	ToolSetConditionalInputEId = 100044;
	SourceTableInputEId = 100045;
	TranslationXInputEId = 100046;
	TranslationYInputEId = 100047;
	AuxImageInputEId = 100048;
	ToolConditionalInputEId = 100049;
	OverlayColorInputEId = 100050;
	BarCodeResultEId = 100051;
	ImageArithmeticGainEnabledEId = 100052;
	ImageArithmeticGainEId = 100053;
	ImageArithmeticOffsetEId = 100054;
	ImageArithmeticUseLutEId = 100055;
	MissingImageCountEId = 100056;
	NotCompleteCountEId = 100057;
	DeleteColumnInputEId = 100058;

	//The following Ids are the first of an array and must have 100 reserved Ids 
	ImageInputEId = 150000;
}


/// Enum moved from Definitions, original comments kept.
enum SVImageTypeEnum // Used by SVImageClass
{
//--------- SVImageTypeUnknown - only for initialization at construction. 
//---------   Should be set to a different value by first 
//---------	  SVImageClass::Initialize() call.
//---------	  This image type does not create an image buffer pool?
	SVImageTypeUnknown     = 0;

//--------- SVImageTypeFixed - deprecated
//---------   Physical (Parent) buffer.
//---------   Does not set Tool Image within UpdateFromToolInformation().
//		SVImageTypeFixed       = 1;

//--------- SVImageTypeIndependent
//---------   Physical (Parent) buffer.
//---------   Does not set Tool Image within UpdateFromToolInformation().
	SVImageTypeIndependent = 2;

//--------- SVImageTypeDependent - Only used to define the 3 banded images of 
//---------   a Color Tool.
//---------
//---------   Logical buffer (similar to SVImageTypeLogical)
//---------   SVImageTypeLogicalAndPhysical, SVImageTypeLogical and SVImageTypeDependent are the 
//---------   image types that result in a Matrox "child" buffer
//---------   (as opposed to an SVO "child" buffer).
//---------   Dependent image types maintain a child->parent 
//---------   relationship at the SVImageClass level (nullptr != m_ParentImagePtr)
//---------
//---------	  Different between to SVImageTypeLogical is that this type have the same size as the parent and SVImageTypeLogical can be a part of the parent.
//---------   Also this type does not set Tool Image within UpdateFromToolInformation(), but SVImageTypeLogical do.
	SVImageTypeDependent   = 3;

//--------- SVImageTypePhysical - Normal buffer type for most output images. 
//---------   Originally Logical images were also allowed as output images; 
//---------   but problems forced us to simplify the use case logic and make 
//---------   them all physical.  This could be re-visited in the future.
	SVImageTypePhysical    = 4;

//--------- SVImageTypeLogicalAndPhysical (previously SVImageTypeLogical) -
//---------   SHOULD NOT BE USED FOR NEW IMPLEMENTATIONS.
//---------   SVImageTypeLogicalAndPhysical, SVImageTypeLogical and SVImageTypeDependent are the 
//---------   image types that result in a Matrox "child" buffer
//---------   (as opposed to an SVO "child" buffer).
//---------   SVImageTypeLogicalAndPhysical also results in allocation of 
//---------   physical buffers.  In general I would consider this a mistake or
//---------   bad design; but they are used (the physical buffers) by the 
//---------   SVLinearImageOperatorListClass and the 
//---------   SVStdImageOperatorListClass. 
//---------   @TODO someday the logical buffer 
//---------   portions should be replaced with the new SVImageTypeLogical
//---------   buffer, and the physical portions should be replaced with the 
//---------   SVImageTypePhysical buffer.  This type should be obsoleted and
//---------   removed.
//		SVImageTypeLogicalAndPhysical = 5, deprecated

//		SVImageTypeVirtual     = 6, - Not used.

//--------- SVImageTypeMain - only used for the MainImage.  Set by 
//---------   SVMainImageClass constructor. 
	SVImageTypeMain        = 7;

//--------- SVImageTypeRGBMain - deprecated
//		SVImageTypeRGBMain     = 8,

//--------- SVImageTypeLogical -
//---------   SVImageTypeLogicalAndPhysical, SVImageTypeLogical and SVImageTypeDependent are the 
//---------   image types that result in a Matrox "child" buffer
//---------   (as opposed to an SVO "child" buffer).
	SVImageTypeLogical = 9;
}

//This is a duplicate of SvOi::SVBlobFeatureEnum. It is duplicated here in order to remove the GUI dependencies to SvOi.
//In the next step, this could replace the SvOi::SVBlobFeatureEnum enum.
enum SVBlobFeatureEnum
{
	SV_AREA = 0;            
	SV_BOXX_MAX = 1;        
	SV_BOXX_MIN = 2;        
	SV_BOXY_MAX = 3;        
	SV_BOXY_MIN = 4;        
	SV_BREADTH = 5;         
	SV_CENTEROFGRAVITY_X = 6;   
	SV_CENTEROFGRAVITY_Y = 7;   
	SV_CONVEX_PERIMETER = 8;    
	SV_FERET_ELONGATION = 9;    
	SV_FERETMAX_ANGLE = 10;     
	SV_FERETMAX_DIAMETER = 11;  
	SV_FERETMEAN_DIAMETER = 12; 
	SV_FERETMIN_ANGLE = 13;     
	SV_FERETMIN_DIAMETER = 14;  
	SV_FERET_X = 15;            
	SV_FERET_Y = 16;            
	SV_FIRSTPOINT_X = 17;       
	SV_FIRSTPOINT_Y = 18;       
	SV_LABEL = 19;              
	SV_LENGTH = 20;             
	SV_NBROF_HOLES = 21;        
	SV_PERIMETER = 22;          
	SV_ROUGHNESS = 23;          
	SV_SUM_PIXEL = 24;          // Will not work with thresholded images i.e.
	SV_COMPACTNESS = 25;        
	SV_NBR_RUNS = 26;           
	SV_XMINAT_YMIN = 27;        
	SV_XMAXAT_YMAX = 28;
	SV_YMINAT_XMAX = 29;
	SV_YMAXAT_XMIN = 30;
	SV_ELONGATION = 31;
	SV_INTERCEPT_0 = 32;
	SV_INTERCEPT_45 = 33;
	SV_INTERCEPT_90 = 34;
	SV_INTERCEPT_135 = 35;
	SV_MOMENT_X0Y1 = 36;
	SV_MOMENT_X1Y0 = 37;
	SV_MOMENT_X1Y1 = 38;
	SV_MOMENT_X0Y2 = 39;
	SV_MOMENT_X2Y0 = 40;
	SV_CENTRAL_X0Y2 = 41;
	SV_CENTRAL_X2Y0 = 42;
	SV_CENTRAL_X1Y1 = 43;
	SV_AXISPRINCIPAL_ANGLE = 44;
	SV_AXISSECONDARY_ANGLE = 45;
	SV_EULER_NBR = 46;
	SV_CENTER_X_SOURCE = 47;
	SV_CENTER_Y_SOURCE = 48;
	SV_NUMBER_OF_BLOB_FEATURES = 49;
}

enum ExDllInterfaceType
{
	Scalar = 0;
	Array = 1;
	TableArray = 2;
	TableNames = 3;
	Invalid = 4;
}

enum LinkedValueTypeEnum
{
	TypeDecimal = 0;
	TypeText = 1;
	TypeTable = 2;
	TypeGrayImage = 3;
	TypeColorImage = 4;
	TypeImage = 5;
	TypeStates = 6;
};
enum StateDefaultType
{
	Passed =0;
	Failed =1;
	Warned =2;
}
enum ResetType
{
	RT_None =0 ;
	RT_FromObject =1;  //use resettype from embeddet variable only used in Request not in Response
	RT_OWNER = 2;
	RT_Tool = 3;
	RT_ToolAndDependent = 4;
	RT_IP  = 5;
};

enum ToolDependencyEnum
{
	NoDependency = 0;
	Client = 1;
	Supplier = 2;
	ClientAndSupplier = 3;
};

enum DependecyTypeEnum
{
	NoDependencyType = 0;
	Tool = 1;
	Object = 2;
}